Search.setIndex({"docnames": ["_api/curobo", "_api/curobo.cuda_robot_model", "_api/curobo.cuda_robot_model.cuda_robot_generator", "_api/curobo.cuda_robot_model.cuda_robot_model", "_api/curobo.cuda_robot_model.kinematics_parser", "_api/curobo.cuda_robot_model.types", "_api/curobo.cuda_robot_model.urdf_kinematics_parser", "_api/curobo.cuda_robot_model.usd_kinematics_parser", "_api/curobo.curobolib", "_api/curobo.curobolib.geom", "_api/curobo.curobolib.geom_cu", "_api/curobo.curobolib.kinematics", "_api/curobo.curobolib.kinematics_fused_cu", "_api/curobo.curobolib.lbfgs_step_cu", "_api/curobo.curobolib.line_search_cu", "_api/curobo.curobolib.ls", "_api/curobo.curobolib.opt", "_api/curobo.curobolib.tensor_step", "_api/curobo.curobolib.tensor_step_cu", "_api/curobo.curobolib.util_file", "_api/curobo.geom", "_api/curobo.geom.sdf", "_api/curobo.geom.sdf.sdf_grid", "_api/curobo.geom.sdf.utils", "_api/curobo.geom.sdf.warp_primitives", "_api/curobo.geom.sdf.world", "_api/curobo.geom.sdf.world_blox", "_api/curobo.geom.sdf.world_mesh", "_api/curobo.geom.sphere_fit", "_api/curobo.geom.transform", "_api/curobo.geom.types", "_api/curobo.graph", "_api/curobo.graph.graph_base", "_api/curobo.graph.graph_nx", "_api/curobo.graph.prm", "_api/curobo.opt", "_api/curobo.opt.newton", "_api/curobo.opt.newton.lbfgs", "_api/curobo.opt.newton.newton_base", "_api/curobo.opt.opt_base", "_api/curobo.opt.particle", "_api/curobo.opt.particle.parallel_es", "_api/curobo.opt.particle.parallel_mppi", "_api/curobo.opt.particle.particle_opt_base", "_api/curobo.opt.particle.particle_opt_utils", "_api/curobo.rollout", "_api/curobo.rollout.arm_base", "_api/curobo.rollout.arm_reacher", "_api/curobo.rollout.cost", "_api/curobo.rollout.cost.bound_cost", "_api/curobo.rollout.cost.cost_base", "_api/curobo.rollout.cost.dist_cost", "_api/curobo.rollout.cost.manipulability_cost", "_api/curobo.rollout.cost.pose_cost", "_api/curobo.rollout.cost.primitive_collision_cost", "_api/curobo.rollout.cost.projected_dist_cost", "_api/curobo.rollout.cost.self_collision_cost", "_api/curobo.rollout.cost.stop_cost", "_api/curobo.rollout.cost.straight_line_cost", "_api/curobo.rollout.cost.zero_cost", "_api/curobo.rollout.dynamics_model", "_api/curobo.rollout.dynamics_model.integration_utils", "_api/curobo.rollout.dynamics_model.kinematic_model", "_api/curobo.rollout.dynamics_model.model_base", "_api/curobo.rollout.dynamics_model.tensor_step", "_api/curobo.rollout.rollout_base", "_api/curobo.types", "_api/curobo.types.base", "_api/curobo.types.camera", "_api/curobo.types.enum", "_api/curobo.types.math", "_api/curobo.types.robot", "_api/curobo.types.state", "_api/curobo.types.tensor", "_api/curobo.util", "_api/curobo.util.error_metrics", "_api/curobo.util.helpers", "_api/curobo.util.logger", "_api/curobo.util.sample_lib", "_api/curobo.util.state_filter", "_api/curobo.util.tensor_util", "_api/curobo.util.torch_utils", "_api/curobo.util.trajectory", "_api/curobo.util.usd_helper", "_api/curobo.util.warp", "_api/curobo.util.warp_interpolation", "_api/curobo.util_file", "_api/curobo.wrap", "_api/curobo.wrap.model", "_api/curobo.wrap.model.curobo_robot_world", "_api/curobo.wrap.model.robot_world", "_api/curobo.wrap.reacher", "_api/curobo.wrap.reacher.evaluator", "_api/curobo.wrap.reacher.ik_solver", "_api/curobo.wrap.reacher.motion_gen", "_api/curobo.wrap.reacher.mpc", "_api/curobo.wrap.reacher.trajopt", "_api/curobo.wrap.reacher.types", "_api/curobo.wrap.wrap_base", "_api/curobo.wrap.wrap_mpc", "_api/modules", "api", "index", "news", "readme", "source/advanced_examples/2a_batch_env", "source/advanced_examples/2b_block_stacking_example", "source/api/motion_generation", "source/api/reacher", "source/getting_started/1_install_instructions", "source/getting_started/1a_quick_overview", "source/getting_started/2a_python_examples", "source/getting_started/2b_isaacsim_examples", "source/getting_started/2c_world_collision", "source/getting_started/2d_nvblox_demo", "source/getting_started/2e_torch_layer_example", "source/getting_started/4_benchmarks", "source/getting_started/5_docker_development", "source/getting_started/6_known_issues", "source/notes/01_robot_list", "source/notes/02_numerical_optimization", "source/notes/04_cuda_kernels", "source/notes/05_usd_api", "source/research/research", "source/research/research_using_curobo", "source/snippets/citation", "source/snippets/research_list", "source/tutorials/1_robot_configuration"], "filenames": ["_api/curobo.rst", "_api/curobo.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.cuda_robot_generator.rst", "_api/curobo.cuda_robot_model.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.kinematics_parser.rst", "_api/curobo.cuda_robot_model.types.rst", "_api/curobo.cuda_robot_model.urdf_kinematics_parser.rst", "_api/curobo.cuda_robot_model.usd_kinematics_parser.rst", "_api/curobo.curobolib.rst", "_api/curobo.curobolib.geom.rst", "_api/curobo.curobolib.geom_cu.rst", "_api/curobo.curobolib.kinematics.rst", "_api/curobo.curobolib.kinematics_fused_cu.rst", "_api/curobo.curobolib.lbfgs_step_cu.rst", "_api/curobo.curobolib.line_search_cu.rst", "_api/curobo.curobolib.ls.rst", "_api/curobo.curobolib.opt.rst", "_api/curobo.curobolib.tensor_step.rst", "_api/curobo.curobolib.tensor_step_cu.rst", "_api/curobo.curobolib.util_file.rst", "_api/curobo.geom.rst", "_api/curobo.geom.sdf.rst", "_api/curobo.geom.sdf.sdf_grid.rst", "_api/curobo.geom.sdf.utils.rst", "_api/curobo.geom.sdf.warp_primitives.rst", "_api/curobo.geom.sdf.world.rst", "_api/curobo.geom.sdf.world_blox.rst", "_api/curobo.geom.sdf.world_mesh.rst", "_api/curobo.geom.sphere_fit.rst", "_api/curobo.geom.transform.rst", "_api/curobo.geom.types.rst", "_api/curobo.graph.rst", "_api/curobo.graph.graph_base.rst", "_api/curobo.graph.graph_nx.rst", "_api/curobo.graph.prm.rst", "_api/curobo.opt.rst", "_api/curobo.opt.newton.rst", "_api/curobo.opt.newton.lbfgs.rst", "_api/curobo.opt.newton.newton_base.rst", "_api/curobo.opt.opt_base.rst", "_api/curobo.opt.particle.rst", "_api/curobo.opt.particle.parallel_es.rst", "_api/curobo.opt.particle.parallel_mppi.rst", "_api/curobo.opt.particle.particle_opt_base.rst", "_api/curobo.opt.particle.particle_opt_utils.rst", "_api/curobo.rollout.rst", "_api/curobo.rollout.arm_base.rst", "_api/curobo.rollout.arm_reacher.rst", "_api/curobo.rollout.cost.rst", "_api/curobo.rollout.cost.bound_cost.rst", "_api/curobo.rollout.cost.cost_base.rst", "_api/curobo.rollout.cost.dist_cost.rst", "_api/curobo.rollout.cost.manipulability_cost.rst", "_api/curobo.rollout.cost.pose_cost.rst", "_api/curobo.rollout.cost.primitive_collision_cost.rst", "_api/curobo.rollout.cost.projected_dist_cost.rst", "_api/curobo.rollout.cost.self_collision_cost.rst", "_api/curobo.rollout.cost.stop_cost.rst", "_api/curobo.rollout.cost.straight_line_cost.rst", "_api/curobo.rollout.cost.zero_cost.rst", "_api/curobo.rollout.dynamics_model.rst", "_api/curobo.rollout.dynamics_model.integration_utils.rst", "_api/curobo.rollout.dynamics_model.kinematic_model.rst", "_api/curobo.rollout.dynamics_model.model_base.rst", "_api/curobo.rollout.dynamics_model.tensor_step.rst", "_api/curobo.rollout.rollout_base.rst", "_api/curobo.types.rst", "_api/curobo.types.base.rst", "_api/curobo.types.camera.rst", "_api/curobo.types.enum.rst", "_api/curobo.types.math.rst", "_api/curobo.types.robot.rst", "_api/curobo.types.state.rst", "_api/curobo.types.tensor.rst", "_api/curobo.util.rst", "_api/curobo.util.error_metrics.rst", "_api/curobo.util.helpers.rst", "_api/curobo.util.logger.rst", "_api/curobo.util.sample_lib.rst", "_api/curobo.util.state_filter.rst", "_api/curobo.util.tensor_util.rst", "_api/curobo.util.torch_utils.rst", "_api/curobo.util.trajectory.rst", "_api/curobo.util.usd_helper.rst", "_api/curobo.util.warp.rst", "_api/curobo.util.warp_interpolation.rst", "_api/curobo.util_file.rst", "_api/curobo.wrap.rst", "_api/curobo.wrap.model.rst", "_api/curobo.wrap.model.curobo_robot_world.rst", "_api/curobo.wrap.model.robot_world.rst", "_api/curobo.wrap.reacher.rst", "_api/curobo.wrap.reacher.evaluator.rst", "_api/curobo.wrap.reacher.ik_solver.rst", "_api/curobo.wrap.reacher.motion_gen.rst", "_api/curobo.wrap.reacher.mpc.rst", "_api/curobo.wrap.reacher.trajopt.rst", "_api/curobo.wrap.reacher.types.rst", "_api/curobo.wrap.wrap_base.rst", "_api/curobo.wrap.wrap_mpc.rst", "_api/modules.rst", "api.rst", "index.rst", "news.rst", "readme.rst", "source/advanced_examples/2a_batch_env.rst", "source/advanced_examples/2b_block_stacking_example.rst", "source/api/motion_generation.rst", "source/api/reacher.rst", "source/getting_started/1_install_instructions.rst", "source/getting_started/1a_quick_overview.rst", "source/getting_started/2a_python_examples.rst", "source/getting_started/2b_isaacsim_examples.rst", "source/getting_started/2c_world_collision.rst", "source/getting_started/2d_nvblox_demo.rst", "source/getting_started/2e_torch_layer_example.rst", "source/getting_started/4_benchmarks.rst", "source/getting_started/5_docker_development.rst", "source/getting_started/6_known_issues.rst", "source/notes/01_robot_list.rst", "source/notes/02_numerical_optimization.rst", "source/notes/04_cuda_kernels.rst", "source/notes/05_usd_api.rst", "source/research/research.rst", "source/research/research_using_curobo.rst", "source/snippets/citation.rst", "source/snippets/research_list.rst", "source/tutorials/1_robot_configuration.rst"], "titles": ["curobo package", "curobo.cuda_robot_model package", "curobo.cuda_robot_model.cuda_robot_generator module", "curobo.cuda_robot_model.cuda_robot_model module", "curobo.cuda_robot_model.kinematics_parser module", "curobo.cuda_robot_model.types module", "curobo.cuda_robot_model.urdf_kinematics_parser module", "curobo.cuda_robot_model.usd_kinematics_parser module", "curobo.curobolib package", "curobo.curobolib.geom module", "curobo.curobolib.geom_cu module", "curobo.curobolib.kinematics module", "curobo.curobolib.kinematics_fused_cu module", "curobo.curobolib.lbfgs_step_cu module", "curobo.curobolib.line_search_cu module", "curobo.curobolib.ls module", "curobo.curobolib.opt module", "curobo.curobolib.tensor_step module", "curobo.curobolib.tensor_step_cu module", "curobo.curobolib.util_file module", "curobo.geom package", "curobo.geom.sdf package", "curobo.geom.sdf.sdf_grid module", "curobo.geom.sdf.utils module", "curobo.geom.sdf.warp_primitives module", "curobo.geom.sdf.world module", "curobo.geom.sdf.world_blox module", "curobo.geom.sdf.world_mesh module", "curobo.geom.sphere_fit module", "curobo.geom.transform module", "curobo.geom.types module", "curobo.graph package", "curobo.graph.graph_base module", "curobo.graph.graph_nx module", "curobo.graph.prm module", "curobo.opt package", "curobo.opt.newton package", "curobo.opt.newton.lbfgs module", "curobo.opt.newton.newton_base module", "curobo.opt.opt_base module", "curobo.opt.particle package", "curobo.opt.particle.parallel_es module", "curobo.opt.particle.parallel_mppi module", "curobo.opt.particle.particle_opt_base module", "curobo.opt.particle.particle_opt_utils module", "curobo.rollout package", "curobo.rollout.arm_base module", "curobo.rollout.arm_reacher module", "curobo.rollout.cost package", "curobo.rollout.cost.bound_cost module", "curobo.rollout.cost.cost_base module", "curobo.rollout.cost.dist_cost module", "curobo.rollout.cost.manipulability_cost module", "curobo.rollout.cost.pose_cost module", "curobo.rollout.cost.primitive_collision_cost module", "curobo.rollout.cost.projected_dist_cost module", "curobo.rollout.cost.self_collision_cost module", "curobo.rollout.cost.stop_cost module", "curobo.rollout.cost.straight_line_cost module", "curobo.rollout.cost.zero_cost module", "curobo.rollout.dynamics_model package", "curobo.rollout.dynamics_model.integration_utils module", "curobo.rollout.dynamics_model.kinematic_model module", "curobo.rollout.dynamics_model.model_base module", "curobo.rollout.dynamics_model.tensor_step module", "curobo.rollout.rollout_base module", "curobo.types package", "curobo.types.base module", "curobo.types.camera module", "curobo.types.enum module", "curobo.types.math module", "curobo.types.robot module", "curobo.types.state module", "curobo.types.tensor module", "curobo.util package", "curobo.util.error_metrics module", "curobo.util.helpers module", "curobo.util.logger module", "curobo.util.sample_lib module", "curobo.util.state_filter module", "curobo.util.tensor_util module", "curobo.util.torch_utils module", "curobo.util.trajectory module", "curobo.util.usd_helper module", "curobo.util.warp module", "curobo.util.warp_interpolation module", "curobo.util_file module", "curobo.wrap package", "curobo.wrap.model package", "curobo.wrap.model.curobo_robot_world module", "curobo.wrap.model.robot_world module", "curobo.wrap.reacher package", "curobo.wrap.reacher.evaluator module", "curobo.wrap.reacher.ik_solver module", "curobo.wrap.reacher.motion_gen module", "curobo.wrap.reacher.mpc module", "curobo.wrap.reacher.trajopt module", "curobo.wrap.reacher.types module", "curobo.wrap.wrap_base module", "curobo.wrap.wrap_mpc module", "curobo", "Python API", "CuRobo: CUDA Accelerated Robot Library", "Updates", "CuRobo: CUDA Accelerated Robot Library", "Batched Environments", "Block Stacking", "Motion Generation", "Reacher", "Installation", "Basics", "Using in Python", "Using with Isaac Sim", "Collision World Representation", "Using with Depth Camera", "Using in a Neural Network", "Benchmarks &amp; Profiling", "Docker Development", "Known Issues", "Supported Robots", "Numerical Optimization", "CUDA Notes", "USD for Robot and World Representation", "Technical Report", "Research using CuRobo", "&lt;no title&gt;", "&lt;no title&gt;", "Configuring a New Robot"], "terms": {"cuda_robot_model": [0, 49, 56, 89, 90, 100, 101, 111, 127], "cuda_robot_gener": [0, 1, 5, 101, 127], "modul": [0, 1, 8, 20, 21, 31, 35, 36, 40, 45, 48, 60, 66, 74, 87, 88, 91, 100, 101, 115, 124], "cudarobotgeneratorconfig": [0, 1, 2, 3, 5, 101, 127], "cudarobotgener": [0, 1, 2, 101], "cudarobotmodelconfig": [0, 1, 3, 5, 71, 101, 111], "cudarobotmodel": [0, 1, 3, 83, 89, 90, 93, 94, 96, 101, 111], "kinematics_pars": [0, 1, 2, 3, 101], "linkparam": [0, 1, 2, 4, 6, 7, 101], "kinematicspars": [0, 1, 3, 4, 6, 7, 101], "type": [0, 1, 2, 3, 4, 6, 7, 9, 11, 16, 20, 22, 24, 25, 26, 27, 28, 29, 32, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 64, 65, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 107, 110, 111, 112, 113, 114, 115, 121], "jointtyp": [0, 1, 4, 5, 101], "jointlimit": [0, 1, 5, 49, 101], "cspaceconfig": [0, 1, 2, 5, 46, 65, 71, 101], "kinematicstensorconfig": [0, 1, 3, 5, 101], "selfcollisionkinematicsconfig": [0, 1, 3, 5, 56, 101], "cudarobotmodelst": [0, 1, 3, 5, 90, 93, 96, 101, 111], "urdf_kinematics_pars": [0, 1, 101], "urdfkinematicspars": [0, 1, 6, 101], "usd_kinematics_pars": [0, 1, 101], "usdkinematicspars": [0, 1, 7, 101], "get_links_for_joint": [0, 1, 7, 101], "curobolib": [0, 100, 101], "geom": [0, 8, 46, 47, 89, 90, 93, 95, 96, 100, 101, 111, 112, 113, 114, 115], "get_self_collision_dist": [0, 8, 9, 88, 90, 101], "selfcollisiondist": [0, 8, 9, 101], "selfcollisiondistanceloss": [0, 8, 9, 101], "get_pose_dist": [0, 8, 9, 101], "get_pose_distance_backward": [0, 8, 9, 101], "sdfsphereobb": [0, 8, 9, 101], "sdfsweptsphereobb": [0, 8, 9, 101], "geom_cu": [0, 8, 101], "closest_point": [0, 8, 10, 101], "pose_dist": [0, 8, 10, 88, 90, 101, 115], "pose_distance_backward": [0, 8, 10, 101], "self_collision_dist": [0, 8, 10, 101], "swept_closest_point": [0, 8, 10, 101], "kinemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 36, 45, 46, 66, 71, 88, 89, 90, 91, 93, 94, 95, 96, 102, 104, 107, 110, 115, 119, 122, 127], "rotation_matrix_to_quaternion": [0, 8, 11, 101], "kinematicsfusedfunct": [0, 8, 11, 101], "kinematicsfusedglobalcumulfunct": [0, 8, 11, 101], "get_cuda_kinemat": [0, 8, 11, 101], "kinematics_fused_cu": [0, 8, 101], "backward": [0, 2, 8, 9, 10, 11, 12, 16, 20, 21, 22, 24, 29, 48, 49, 51, 53, 59, 60, 61, 62, 66, 70, 101, 115], "forward": [0, 1, 3, 8, 9, 11, 12, 13, 16, 20, 21, 22, 24, 29, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 70, 78, 101, 102, 104, 115], "matrix_to_quaternion": [0, 8, 12, 20, 29, 101], "lbfgs_step_cu": [0, 8, 101], "debug_reduc": [0, 8, 13, 101], "step": [0, 8, 13, 18, 61, 62, 78, 85, 91, 94, 95, 101, 109, 112, 114, 115, 120, 123, 127], "updat": [0, 5, 8, 13, 14, 25, 26, 27, 46, 47, 65, 101, 106, 112, 113, 114, 127], "line_search_cu": [0, 8, 101], "line_search": [0, 8, 14, 101], "update_best": [0, 8, 14, 15, 101], "l": [0, 8, 13, 44, 101, 102, 104, 123], "wolfe_line_search": [0, 8, 15, 101], "opt": [0, 8, 98, 100, 101, 120], "lbfgscu": [0, 8, 16, 101], "tensor_step": [0, 8, 45, 60, 62, 101], "tensor_step_pos_clique_idx_fwd": [0, 8, 17, 101], "tensor_step_pos_clique_fwd": [0, 8, 17, 101], "tensor_step_acc_fwd": [0, 8, 17, 101], "tensor_step_acc_idx_fwd": [0, 8, 17, 101], "tensor_step_pos_clique_bwd": [0, 8, 17, 101], "tensor_step_cu": [0, 8, 101], "step_acceler": [0, 8, 18, 101], "step_acceleration_idx": [0, 8, 18, 101], "step_idx_position2": [0, 8, 18, 101], "step_posit": [0, 8, 18, 101], "step_position2": [0, 8, 18, 101], "step_position_backward": [0, 8, 18, 101], "step_position_backward2": [0, 8, 18, 101], "util_fil": [0, 8, 100, 101, 111, 113, 115], "get_cpp_path": [0, 8, 19, 86, 100, 101], "join_path": [0, 8, 19, 86, 100, 101, 111, 113, 115], "add_cpp_path": [0, 8, 19, 86, 100, 101], "sdf": [0, 20, 46, 47, 89, 90, 93, 95, 96, 101, 111, 113, 114, 115], "sphere_fit": [0, 20, 101, 113], "spherefittyp": [0, 20, 26, 28, 30, 94, 101, 113], "sample_even_fit_mesh": [0, 20, 28, 101], "get_voxel_pitch": [0, 20, 28, 101], "voxel_fit_surface_mesh": [0, 20, 28, 101], "get_voxelgrid_from_mesh": [0, 20, 28, 101], "voxel_fit_mesh": [0, 20, 28, 101], "voxel_fit_volume_sample_surface_mesh": [0, 20, 28, 101], "voxel_fit_volume_inside_mesh": [0, 20, 28, 101], "fit_spheres_to_mesh": [0, 20, 28, 101], "transform": [0, 1, 2, 7, 20, 30, 83, 101, 112, 122], "transform_point": [0, 20, 29, 66, 70, 101], "batch_transform_point": [0, 20, 29, 66, 70, 101], "cuda_matrix_to_quaternion": [0, 20, 29, 101], "quaternion_to_matrix": [0, 20, 29, 101], "torch_quaternion_to_matrix": [0, 20, 29, 101], "pose_to_matrix": [0, 20, 29, 101], "pose_multipli": [0, 20, 29, 101], "pose_invers": [0, 20, 29, 101], "transformpoint": [0, 20, 29, 101], "batchtransformpoint": [0, 20, 29, 101], "batchtransformpos": [0, 20, 29, 101], "transformpos": [0, 20, 29, 101], "poseinvers": [0, 20, 29, 101], "quattomatrix": [0, 20, 29, 101], "matrixtoquaternion": [0, 20, 29, 101], "materi": [0, 20, 30, 83, 101], "obstacl": [0, 20, 25, 27, 30, 54, 83, 94, 101, 105, 112, 113, 114, 115, 116, 121, 122], "cuboid": [0, 20, 25, 26, 30, 83, 94, 101, 102, 104, 105, 110, 111, 112, 113, 122], "capsul": [0, 20, 30, 101, 113], "cylind": [0, 20, 30, 83, 101, 113], "sphere": [0, 1, 2, 3, 5, 20, 26, 28, 30, 54, 83, 94, 101, 105, 106, 110, 111, 112, 114, 115, 121, 127], "mesh": [0, 2, 3, 4, 20, 21, 25, 26, 27, 28, 30, 83, 90, 101, 102, 104, 105, 110, 111, 112, 113, 114, 115, 116, 121, 122, 127], "bloxmap": [0, 20, 30, 101], "worldconfig": [0, 20, 25, 26, 27, 30, 32, 46, 83, 90, 93, 94, 95, 96, 101, 111, 112, 113, 115], "tensor_spher": [0, 20, 25, 26, 27, 30, 101], "tensor_capsul": [0, 20, 30, 101], "tensor_cub": [0, 20, 30, 101], "batch_tensor_cub": [0, 20, 30, 101], "graph": [0, 46, 94, 100, 101, 105, 106, 110, 111, 112, 116, 118, 120], "graph_bas": [0, 31, 101], "graphresult": [0, 31, 32, 94, 101], "graphconfig": [0, 31, 32, 34, 101], "graphplanbas": [0, 31, 32, 34, 94, 101], "graph_nx": [0, 31, 101], "networkxgraph": [0, 31, 33, 101], "prm": [0, 31, 101], "prmstar": [0, 31, 34, 101], "newton": [0, 35, 101, 120], "particl": [0, 35, 101, 123], "opt_bas": [0, 35, 98, 101], "optimizerconfig": [0, 35, 38, 39, 43, 101], "optim": [0, 35, 38, 39, 40, 42, 43, 46, 54, 65, 82, 87, 94, 98, 102, 104, 105, 110, 112, 113, 115, 121, 123], "rollout": [0, 32, 37, 38, 39, 41, 42, 43, 89, 90, 93, 96, 98, 100, 112, 113, 120], "cost": [0, 15, 38, 42, 43, 44, 45, 46, 47, 65, 75, 89, 90, 101, 112, 113, 114, 120, 121], "dynamics_model": [0, 45, 46, 47, 57, 101], "arm_bas": [0, 45, 47, 85, 101, 120], "armcostconfig": [0, 45, 46, 47, 101], "armbaseconfig": [0, 45, 46, 47, 101], "armbas": [0, 45, 46, 47, 101, 120], "arm_reach": [0, 45, 93, 96, 101], "armreachermetr": [0, 45, 47, 101], "armreachercostconfig": [0, 45, 47, 101], "armreacherconfig": [0, 45, 47, 101], "armreach": [0, 45, 47, 93, 96, 101], "rollout_bas": [0, 32, 37, 38, 39, 41, 42, 43, 45, 47, 96, 98, 101], "rolloutmetr": [0, 32, 45, 46, 47, 65, 93, 94, 96, 98, 101], "trajectori": [0, 32, 42, 43, 45, 46, 54, 62, 65, 74, 85, 94, 96, 102, 104, 111, 112, 113, 120, 123], "goal": [0, 39, 45, 46, 47, 53, 65, 91, 93, 94, 95, 96, 97, 98, 99, 101, 106, 107, 108, 111, 112, 115, 121], "rolloutconfig": [0, 45, 46, 47, 65, 101], "rolloutbas": [0, 32, 37, 38, 39, 41, 42, 43, 45, 46, 47, 65, 93, 94, 96, 98, 101], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 79, 82, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 111, 112, 113, 114, 119, 122, 123, 124, 126, 127], "tensordevicetyp": [0, 2, 3, 5, 7, 25, 30, 32, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 70, 71, 72, 78, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 101, 111, 113], "camera": [0, 66, 101, 113, 116], "cameraobserv": [0, 26, 66, 68, 94, 101], "enum": [0, 5, 25, 28, 38, 42, 43, 44, 49, 51, 53, 55, 62, 64, 66, 79, 82, 97, 101], "statetyp": [0, 62, 66, 69, 79, 101], "math": [0, 66, 93, 101, 110, 111, 112, 113, 115], "pose": [0, 2, 3, 10, 20, 25, 26, 27, 30, 46, 53, 62, 65, 66, 68, 70, 83, 90, 93, 94, 97, 101, 106, 108, 110, 111, 112, 113, 114, 115, 121, 122, 127], "quat_multipli": [0, 66, 70, 101], "orientationerror": [0, 66, 70, 101], "robot": [0, 1, 2, 3, 5, 7, 20, 21, 46, 54, 62, 66, 82, 83, 86, 93, 94, 96, 101, 105, 110, 111, 112, 113, 114, 115, 116, 124, 125, 126], "nnconfig": [0, 66, 71, 101], "robotconfig": [0, 32, 46, 47, 62, 66, 71, 83, 90, 93, 94, 95, 96, 101, 111], "state": [0, 32, 42, 43, 45, 46, 47, 61, 62, 65, 66, 79, 93, 94, 96, 98, 99, 101, 108, 111, 112, 115, 123], "filtercoeff": [0, 66, 72, 79, 101], "jointstat": [0, 5, 32, 46, 49, 61, 62, 64, 65, 66, 72, 79, 82, 83, 85, 92, 93, 94, 95, 96, 97, 101, 111, 112, 115], "tensor": [0, 1, 3, 5, 9, 10, 11, 12, 13, 14, 16, 18, 22, 24, 25, 26, 27, 29, 30, 32, 34, 39, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 68, 70, 72, 75, 78, 79, 80, 82, 83, 85, 89, 90, 92, 93, 94, 96, 98, 101, 105, 110, 111, 113, 115, 118, 124, 126], "util": [0, 20, 21, 32, 41, 42, 44, 62, 89, 90, 96, 100, 101, 109, 112, 115, 127], "error_metr": [0, 74, 101], "rotation_error_quaternion": [0, 74, 75, 101], "rotation_error_matrix": [0, 74, 75, 101], "helper": [0, 74, 101, 113], "default_to_regular": [0, 74, 76, 101], "list_idx_if_not_non": [0, 74, 76, 101], "logger": [0, 74, 101], "setup_curobo_logg": [0, 74, 77, 101], "log_warn": [0, 74, 77, 101], "log_info": [0, 74, 77, 101], "log_error": [0, 74, 77, 101], "sample_lib": [0, 41, 42, 74, 89, 90, 101], "sampleconfig": [0, 41, 42, 74, 78, 101], "basesamplelib": [0, 74, 78, 101], "haltonsamplelib": [0, 74, 78, 101], "bspline": [0, 74, 78, 101], "knotsamplelib": [0, 74, 78, 101], "randomsamplelib": [0, 74, 78, 101], "sinesamplelib": [0, 74, 78, 101], "stompsamplelib": [0, 74, 78, 101], "samplelib": [0, 74, 78, 101], "get_ranged_halton_sampl": [0, 74, 78, 101], "haltongener": [0, 74, 78, 89, 90, 101], "generate_nois": [0, 40, 42, 74, 78, 101], "generate_noise_np": [0, 74, 78, 101], "generate_prime_numb": [0, 74, 78, 101], "generate_van_der_corput_sampl": [0, 74, 78, 101], "generate_van_der_corput_samples_batch": [0, 74, 78, 101], "generate_halton_sampl": [0, 74, 78, 101], "generate_gaussian_halton_sampl": [0, 74, 78, 101], "generate_gaussian_sobol_sampl": [0, 74, 78, 101], "state_filt": [0, 62, 74, 101], "filterconfig": [0, 62, 74, 79, 101], "jointstatefilt": [0, 74, 79, 101], "tensor_util": [0, 74, 101], "check_tensor_shap": [0, 74, 80, 101], "copy_tensor": [0, 74, 80, 101], "copy_if_not_non": [0, 74, 80, 101], "tensor_repeat_se": [0, 74, 80, 101], "torch_util": [0, 74, 101], "find_first_idx": [0, 74, 81, 101], "find_last_idx": [0, 74, 81, 101], "is_cuda_graph_avail": [0, 74, 81, 101], "interpolatetyp": [0, 32, 74, 82, 94, 96, 101], "get_linear_traj": [0, 74, 82, 101], "get_smooth_trajectori": [0, 74, 82, 101], "get_spline_interpolated_trajectori": [0, 74, 82, 101], "get_batch_interpolated_trajectori": [0, 74, 82, 101], "get_cpu_linear_interpol": [0, 74, 82, 101], "get_cpu_kunz_stilman_interpol": [0, 74, 82, 101], "get_interpolated_trajectori": [0, 31, 32, 74, 82, 91, 96, 101], "linear_smooth": [0, 74, 82, 101], "usd_help": [0, 74, 101, 112, 115], "set_prim_transl": [0, 74, 83, 101], "set_prim_transform": [0, 74, 83, 101], "get_prim_world_pos": [0, 74, 83, 101], "get_transform": [0, 74, 83, 101], "get_position_quat": [0, 74, 83, 101], "set_geom_mesh_attr": [0, 74, 83, 101], "set_geom_cube_attr": [0, 74, 83, 101], "set_geom_cylinder_attr": [0, 74, 83, 101], "set_geom_sphere_attr": [0, 74, 83, 101], "set_cylinder_attr": [0, 74, 83, 101], "get_cylinder_attr": [0, 74, 83, 101], "get_capsule_attr": [0, 74, 83, 101], "get_cube_attr": [0, 74, 83, 101], "get_sphere_attr": [0, 74, 83, 101], "get_mesh_attr": [0, 74, 83, 101], "create_stag": [0, 74, 83, 101], "usdhelp": [0, 74, 83, 101, 112, 115], "warp": [0, 27, 74, 82, 85, 101, 113, 121], "init_warp": [0, 74, 84, 101], "warp_interpol": [0, 74, 101], "get_cuda_linear_interpol": [0, 74, 82, 85, 101], "wrap": [0, 100, 101, 109, 111, 112, 115, 120], "model": [0, 2, 3, 47, 71, 87, 94, 95, 101, 106, 111, 113, 115, 124, 126, 127], "reacher": [0, 87, 101, 111, 120], "wrap_bas": [0, 87, 93, 96, 101], "wrapconfig": [0, 87, 98, 99, 101], "wrapresult": [0, 87, 93, 95, 98, 101], "wrapbas": [0, 87, 93, 96, 98, 99, 101], "wrap_mpc": [0, 87, 95, 101], "wrapmpc": [0, 87, 95, 99, 101], "get_module_path": [0, 86, 100, 101], "get_root_path": [0, 86, 100, 101], "get_content_path": [0, 86, 100, 101], "get_configs_path": [0, 86, 100, 101], "get_assets_path": [0, 86, 100, 101, 113, 115], "get_weights_path": [0, 86, 100, 101], "load_yaml": [0, 86, 100, 101, 111, 115], "write_yaml": [0, 86, 100, 101], "get_robot_path": [0, 86, 100, 101, 111], "get_task_configs_path": [0, 86, 100, 101], "get_robot_configs_path": [0, 86, 100, 101, 111], "get_world_configs_path": [0, 86, 100, 101, 111, 115], "get_debug_path": [0, 86, 100, 101], "copy_file_to_path": [0, 86, 100, 101], "get_filenam": [0, 86, 100, 101], "get_path_of_dir": [0, 86, 100, 101], "get_files_from_dir": [0, 86, 100, 101], "file_exist": [0, 86, 100, 101], "get_motion_gen_robot_list": [0, 86, 100, 101], "get_robot_list": [0, 86, 100, 101], "get_multi_arm_robot_list": [0, 86, 100, 101], "thi": [1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 21, 22, 24, 25, 26, 27, 29, 36, 39, 40, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 70, 80, 85, 89, 90, 93, 94, 102, 104, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 127], "contain": [1, 20, 21, 36, 40, 45, 86, 102, 104, 113, 117, 118, 121], "code": [1, 20, 21, 36, 102, 103, 104, 109, 112, 116], "cuda": [1, 2, 3, 5, 7, 12, 13, 14, 25, 30, 32, 36, 39, 42, 43, 44, 46, 47, 62, 67, 70, 71, 72, 78, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 109, 110, 111, 113, 114, 115, 117, 118], "acceler": [1, 3, 5, 18, 36, 46, 54, 60, 62, 64, 66, 69, 72, 79, 82, 101, 112, 113, 123, 124, 126], "current": [1, 2, 3, 5, 7, 9, 11, 16, 22, 24, 25, 27, 29, 42, 43, 46, 49, 51, 53, 59, 61, 62, 70, 94, 102, 104, 105, 106, 111, 112, 113], "support": [1, 2, 3, 5, 26, 28, 90, 105, 107, 110, 112, 114, 116], "singl": [1, 27, 53, 62, 91, 96, 97, 101, 105, 107, 112, 114, 119], "axi": [1, 2, 7], "actuat": 1, "joint": [1, 2, 7, 72, 94, 111, 112, 115, 127], "where": [1, 105, 109, 113, 114, 115, 120, 121, 127], "can": [1, 2, 9, 11, 16, 20, 21, 22, 24, 25, 29, 49, 51, 53, 59, 61, 65, 70, 106, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127], "prismat": 1, "revolut": 1, "continu": [1, 113, 115], "ar": [1, 3, 7, 9, 11, 16, 22, 24, 26, 28, 29, 46, 49, 51, 53, 59, 61, 70, 105, 106, 110, 111, 112, 113, 119, 122, 127], "approxim": [1, 28, 106, 110, 115], "limit": [1, 2, 111, 127], "6": [1, 64, 102, 104, 111, 113, 118], "radian": 1, "mimic": 1, "so": [1, 109, 111, 112, 113, 114, 120, 121, 127], "convert": [1, 2, 29, 39, 111, 112, 113, 127], "independ": 1, "load": [1, 2, 3, 25, 26, 27, 30, 71, 94, 109, 110, 111, 112, 113, 114, 116, 122, 127], "": [1, 26, 27, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 80, 89, 90, 94, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 124, 126, 127], "tree": [1, 2, 4, 6, 7, 110], "from": [1, 2, 3, 4, 5, 7, 25, 26, 27, 30, 42, 43, 44, 46, 54, 62, 65, 70, 72, 89, 90, 94, 106, 108, 109, 110, 111, 112, 113, 114, 115, 120, 121, 127], "config": [1, 2, 3, 23, 25, 26, 27, 32, 34, 37, 38, 39, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 89, 90, 92, 93, 94, 95, 96, 98, 99, 111, 115, 127], "i": [1, 2, 3, 5, 7, 9, 11, 16, 22, 24, 25, 26, 27, 29, 30, 33, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 70, 85, 90, 93, 94, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 127], "gener": [1, 2, 42, 78, 82, 86, 93, 94, 102, 104, 110, 113, 118, 119, 124, 125, 126, 127], "us": [1, 2, 4, 6, 7, 9, 11, 16, 20, 21, 22, 24, 25, 26, 27, 29, 30, 42, 46, 49, 51, 53, 54, 59, 61, 65, 70, 78, 82, 85, 89, 90, 94, 105, 110, 113, 116, 119, 120, 121, 122, 127], "A": [1, 7, 44, 106, 112, 113, 114, 124, 126], "parser": [1, 7], "class": [1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 78, 79, 82, 83, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 111, 113, 114, 115, 120], "kinematicspar": 1, "provid": [1, 26, 102, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 127], "help": 1, "pars": [1, 112], "standard": [1, 109, 115], "format": [1, 5, 30, 110], "urdf": [1, 2, 3, 7, 110, 111, 127], "implement": [1, 7, 30, 54, 94, 102, 104, 105, 106, 109, 112, 114, 120, 121, 123, 124, 126], "an": [1, 3, 5, 7, 9, 11, 16, 22, 24, 29, 38, 39, 42, 43, 44, 49, 51, 53, 54, 55, 59, 61, 62, 64, 69, 70, 82, 94, 97, 106, 109, 111, 112, 113, 115, 119, 120, 121, 122, 123, 127], "experiment": [1, 7, 110, 112, 122], "usd": [1, 2, 7, 83, 106, 110, 115, 127], "which": [1, 27, 54, 85, 105, 106, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 127], "miss": [1, 85, 109], "addit": [1, 2, 109, 112, 113, 114, 119, 127], "between": [1, 2, 20, 21, 44, 53, 54, 94, 102, 104, 106, 110, 111, 112, 113, 114, 115, 121], "origin": 1, "link": [1, 2, 3, 4, 5, 6, 7, 70, 94, 106, 110, 111, 112, 127], "might": [1, 26, 111, 127], "work": [1, 28, 93, 109, 111, 112, 113, 114, 117, 118, 121, 124, 126], "all": [1, 3, 7, 9, 11, 16, 22, 24, 25, 26, 28, 29, 30, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 93, 94, 106, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 127], "In": [1, 26, 111, 112, 113, 114, 119, 127], "data": [1, 5, 9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 65, 70, 72, 86, 110, 113], "file": [1, 3, 7, 30, 94, 109, 110, 111, 112, 113, 116, 117, 119], "also": [1, 9, 11, 16, 20, 21, 22, 24, 25, 29, 49, 51, 53, 59, 61, 70, 94, 105, 106, 111, 112, 113, 114, 115, 116, 121, 122, 123, 127], "need": [1, 3, 9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 109, 112, 113, 114, 116, 121, 127], "represent": [1, 25, 26, 30, 70, 110, 111, 112, 114], "volum": [1, 2, 28, 30, 113, 123], "sever": [1, 110, 113], "other": [1, 9, 11, 16, 22, 24, 26, 29, 49, 51, 53, 59, 61, 70, 112, 113, 121], "paramet": [1, 2, 3, 4, 5, 6, 7, 9, 11, 15, 23, 25, 26, 27, 28, 29, 30, 32, 34, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 113, 115], "repres": [1, 2, 9, 11, 16, 22, 24, 25, 29, 30, 49, 51, 53, 59, 61, 70, 102, 104, 106, 110, 112, 113, 116, 119, 122], "tutori": [1, 71, 112, 113], "set": [1, 2, 9, 11, 16, 22, 24, 29, 42, 43, 49, 51, 53, 54, 59, 61, 70, 93, 105, 107, 111, 112, 113, 121, 127], "up": [1, 7, 9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 127], "configur": [1, 2, 3, 7, 54, 71, 94, 110, 111, 112, 113, 115], "new": [1, 70, 71, 110, 111, 112, 113, 114, 115, 121], "onc": [1, 106, 109, 110, 111, 112, 114, 118, 127], "setup": [1, 25, 105, 112, 113], "you": [1, 3, 9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 109, 110, 111, 112, 113, 114, 116, 121, 127], "pass": [1, 5, 9, 11, 16, 22, 24, 27, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 109, 112, 113, 114, 115, 116, 121], "instanc": [1, 26, 30, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 94, 105, 111, 113, 115, 127], "configuraiton": 1, "take": [1, 39, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 109, 111, 113, 114, 115, 120], "access": [1, 109, 111, 112], "comput": [1, 2, 3, 9, 11, 16, 20, 21, 22, 24, 25, 26, 27, 29, 30, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 70, 93, 94, 102, 104, 106, 109, 110, 111, 112, 113, 115, 116, 121, 122, 124, 126], "creat": [1, 2, 3, 26, 30, 46, 54, 70, 83, 93, 94, 105, 111, 112, 113, 114, 115, 117, 121], "memori": [1, 2, 65, 70, 121], "kernel": [1, 5, 82, 109, 110, 111, 112, 113, 114], "while": [1, 7, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 65, 106, 112, 113, 114, 118, 121, 127], "onli": [1, 2, 3, 7, 26, 27, 93, 94, 96, 105, 111, 112, 113, 114, 116, 124, 126], "To": [1, 26, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 109, 111, 112, 113, 116, 121, 122, 123, 127], "reduc": [1, 113, 121], "overhead": 1, "one": [1, 26, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 106, 112, 113, 121], "mani": [1, 3, 9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 102, 104, 112, 113, 114, 123], "base_link": [1, 2, 3, 4, 5, 71, 101, 111, 127], "ee_link": [1, 2, 3, 4, 5, 65, 70, 71, 101, 111, 127], "tensor_arg": [1, 2, 3, 5, 7, 20, 21, 25, 30, 31, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 70, 71, 72, 74, 78, 79, 82, 83, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97, 101, 111, 113], "link_nam": [1, 2, 3, 4, 5, 6, 7, 53, 60, 62, 83, 93, 94, 96, 101, 127], "collision_link_nam": [1, 2, 101, 127], "collision_spher": [1, 2, 5, 101, 127], "collision_sphere_buff": [1, 2, 101, 127], "compute_jacobian": [1, 2, 3, 101], "self_collision_buff": [1, 2, 101, 127], "self_collision_ignor": [1, 2, 101, 127], "debug": [1, 2, 5, 13, 32, 45, 65, 87, 94, 98, 101], "use_global_cumul": [1, 2, 3, 11, 101, 127], "asset_root_path": [1, 2, 101, 127], "mesh_link_nam": [1, 2, 5, 101, 127], "load_link_names_with_mesh": [1, 2, 101], "urdf_path": [1, 2, 3, 6, 20, 30, 71, 101, 111, 127], "usd_path": [1, 2, 3, 7, 101, 127], "usd_robot_root": [1, 2, 3, 7, 101, 127], "isaac_usd_path": [1, 2, 101, 127], "use_usd_kinemat": [1, 2, 101, 127], "usd_flip_joint": [1, 2, 101, 127], "usd_flip_joint_limit": [1, 2, 101, 127], "lock_joint": [1, 2, 72, 101, 127], "extra_link": [1, 2, 4, 6, 7, 101, 127], "add_object_link": [1, 2, 101], "use_external_asset": [1, 2, 101], "extra_collision_spher": [1, 2, 101, 127], "cspace": [1, 2, 3, 5, 66, 71, 101, 127], "kinematics_config": [1, 2, 3, 101, 115], "self_collision_config": [1, 2, 3, 101], "initialize_tensor": [1, 2, 101], "add_link": [1, 2, 101], "add_fixed_link": [1, 2, 101], "get_joint_limit": [1, 2, 3, 101], "generator_config": [1, 3, 101], "from_basic_urdf": [1, 3, 101], "from_basic_usd": [1, 3, 101], "from_robot_yaml_fil": [1, 3, 101], "from_data_dict": [1, 3, 5, 101], "from_config": [1, 3, 101], "update_batch_s": [1, 3, 48, 49, 51, 53, 56, 60, 62, 64, 91, 94, 101], "get_stat": [1, 3, 101, 111], "get_robot_as_mesh": [1, 3, 101], "get_robot_as_spher": [1, 3, 101], "get_link_pos": [1, 3, 101], "all_articulated_joint_nam": [1, 3, 101], "get_self_collision_config": [1, 3, 101], "get_link_mesh": [1, 3, 4, 6, 101], "get_link_transform": [1, 3, 101], "get_all_link_transform": [1, 3, 101], "get_dof": [1, 3, 101, 111, 115], "joint_nam": [1, 2, 3, 4, 5, 45, 46, 66, 72, 83, 87, 91, 95, 98, 101, 127], "total_spher": [1, 3, 5, 101], "lock_jointst": [1, 3, 5, 101], "update_kinematics_config": [1, 3, 101], "joint_typ": [1, 4, 101, 127], "fixed_transform": [1, 4, 5, 11, 101, 127], "parent_link_nam": [1, 2, 4, 101, 127], "joint_limit": [1, 4, 5, 48, 49, 101], "joint_axi": [1, 4, 101], "joint_id": [1, 4, 101], "joint_velocity_limit": [1, 4, 101], "from_dict": [1, 4, 20, 30, 31, 32, 45, 46, 47, 60, 62, 66, 71, 74, 79, 101, 111, 115], "build_link_par": [1, 4, 6, 7, 101], "get_chain": [1, 4, 101], "get_link_paramet": [1, 4, 6, 7, 101], "add_absolute_path_to_link_mesh": [1, 4, 6, 101], "fix": [1, 2, 5, 101, 111, 112, 114, 127], "x_prism": [1, 5, 101], "y_prism": [1, 5, 101], "z_prism": [1, 5, 101], "x_rot": [1, 5, 101], "y_rot": [1, 5, 101], "z_rot": [1, 5, 101], "posit": [1, 2, 5, 18, 20, 25, 28, 29, 30, 48, 49, 60, 64, 65, 66, 69, 70, 72, 82, 94, 101, 111, 112, 113, 115], "veloc": [1, 5, 46, 54, 60, 64, 66, 69, 72, 82, 101], "jerk": [1, 5, 49, 60, 64, 66, 69, 72, 94, 101, 102, 104, 125], "effort": [1, 5, 101], "clone": [1, 5, 20, 21, 25, 30, 45, 47, 65, 66, 70, 72, 80, 87, 91, 94, 98, 101, 109, 115, 127], "retract_config": [1, 5, 49, 60, 62, 91, 93, 94, 96, 97, 101, 127], "cspace_distance_weight": [1, 5, 48, 49, 60, 62, 92, 101, 127], "null_space_weight": [1, 5, 48, 49, 60, 62, 101, 127], "max_acceler": [1, 5, 60, 62, 82, 101, 127], "max_jerk": [1, 5, 60, 62, 82, 91, 92, 96, 101, 127], "velocity_scal": [1, 5, 94, 101], "acceleration_scal": [1, 5, 94, 101], "jerk_scal": [1, 5, 94, 101], "inplace_reindex": [1, 5, 66, 72, 101], "scale_joint_limit": [1, 5, 101], "load_from_joint_limit": [1, 5, 101], "link_map": [1, 5, 11, 101], "joint_map": [1, 5, 11, 101], "joint_map_typ": [1, 5, 11, 101], "store_link_map": [1, 5, 11, 101], "link_chain_map": [1, 5, 11, 101], "non_fixed_joint_nam": [1, 5, 101], "n_dof": [1, 5, 61, 101], "link_spher": [1, 5, 83, 101, 115], "link_sphere_idx_map": [1, 5, 11, 101], "link_name_to_idx_map": [1, 5, 101], "ee_idx": [1, 5, 101], "load_cspace_cfg_from_kinemat": [1, 5, 101], "get_sphere_index_from_link_nam": [1, 5, 101], "update_link_spher": [1, 5, 101], "get_link_spher": [1, 5, 101], "attach_object": [1, 5, 101], "detach_object": [1, 5, 101], "get_number_of_spher": [1, 5, 101], "offset": [1, 5, 101], "distance_threshold": [1, 5, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "thread_loc": [1, 5, 9, 101], "thread_max": [1, 5, 101], "collision_matrix": [1, 5, 101], "experimental_kernel": [1, 5, 9, 101], "checks_per_thread": [1, 5, 9, 101], "ee_posit": [1, 5, 101, 111, 115], "ee_quaternion": [1, 5, 101, 111, 115], "lin_jacobian": [1, 5, 101], "ang_jacobian": [1, 5, 101], "links_posit": [1, 5, 101], "links_quaternion": [1, 5, 101], "link_spheres_tensor": [1, 5, 11, 101, 115], "ee_pos": [1, 5, 60, 62, 101, 115], "link_pos": [1, 5, 60, 62, 93, 94, 97, 101], "get_urdf_str": [1, 6, 101], "robot_prim_root": [1, 7, 101], "devic": [2, 3, 5, 7, 25, 30, 32, 39, 42, 43, 44, 46, 47, 61, 62, 66, 67, 68, 70, 71, 72, 75, 78, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 101, 111, 113, 121], "index": [2, 3, 5, 7, 25, 30, 32, 39, 42, 43, 44, 46, 47, 62, 67, 70, 71, 72, 78, 79, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 97, 109, 113, 121], "0": [2, 3, 5, 7, 9, 11, 15, 16, 22, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 75, 78, 79, 82, 83, 84, 85, 89, 90, 92, 93, 94, 95, 96, 97, 98, 109, 111, 112, 113, 115, 121, 122, 127], "dtype": [2, 3, 5, 7, 25, 30, 32, 39, 42, 43, 44, 46, 47, 61, 62, 66, 67, 70, 71, 72, 78, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97, 101, 111, 113], "torch": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 22, 24, 25, 27, 29, 30, 32, 39, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 67, 68, 70, 71, 72, 75, 78, 79, 80, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 97, 109, 111, 113, 115, 116], "float32": [2, 3, 5, 7, 25, 30, 32, 39, 42, 43, 44, 46, 47, 49, 61, 62, 67, 70, 71, 72, 78, 79, 82, 83, 84, 89, 90, 93, 94, 95, 96, 97], "none": [2, 3, 4, 5, 6, 7, 9, 11, 16, 22, 24, 25, 26, 27, 29, 30, 32, 34, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 68, 70, 71, 72, 78, 79, 80, 82, 83, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 111, 115], "fals": [2, 3, 4, 6, 7, 9, 16, 24, 25, 26, 27, 30, 32, 33, 34, 37, 38, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 70, 78, 79, 81, 83, 86, 92, 93, 94, 95, 96, 97, 98, 111, 113, 115, 127], "true": [2, 3, 5, 9, 11, 16, 17, 22, 24, 25, 26, 27, 29, 30, 32, 37, 46, 47, 49, 51, 53, 54, 59, 61, 65, 70, 77, 78, 79, 82, 83, 84, 90, 93, 94, 95, 96, 111, 127], "object": [2, 3, 4, 5, 9, 11, 16, 20, 22, 24, 25, 27, 29, 30, 32, 33, 39, 43, 46, 49, 50, 51, 53, 59, 61, 62, 64, 65, 67, 68, 70, 71, 72, 78, 79, 83, 90, 92, 93, 94, 95, 96, 97, 98, 101, 111, 112, 113, 114], "str": [2, 3, 4, 5, 6, 7, 25, 26, 27, 28, 30, 32, 46, 49, 53, 62, 65, 67, 68, 70, 72, 77, 78, 83, 86, 90, 93, 94, 95, 96, 97, 115, 127], "list": [2, 3, 4, 5, 7, 10, 12, 13, 14, 18, 25, 26, 27, 28, 30, 32, 37, 38, 39, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 65, 68, 70, 72, 76, 78, 82, 83, 86, 90, 93, 94, 96, 97, 98, 110, 113, 127], "dict": [2, 3, 4, 5, 6, 7, 25, 30, 32, 39, 42, 43, 46, 47, 62, 65, 78, 86, 90, 93, 94, 95, 96, 97, 127], "ani": [2, 3, 5, 9, 11, 16, 22, 24, 29, 30, 32, 37, 38, 39, 41, 42, 43, 49, 51, 53, 54, 59, 61, 70, 71, 93, 94, 96, 98, 110, 111, 112, 113, 118, 121], "float": [2, 4, 5, 13, 14, 15, 25, 26, 28, 30, 32, 37, 38, 39, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 68, 70, 72, 78, 79, 82, 83, 85, 89, 90, 92, 93, 94, 95, 96, 98, 127], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 25, 26, 27, 30, 32, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 70, 78, 79, 83, 86, 90, 92, 93, 94, 95, 96, 97, 98, 99], "int": [2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 18, 25, 26, 27, 28, 30, 32, 37, 38, 39, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 67, 68, 70, 72, 76, 78, 82, 83, 89, 90, 93, 94, 95, 96, 97, 98, 115], "name": [2, 3, 4, 5, 7, 20, 21, 25, 26, 27, 30, 45, 65, 66, 68, 70, 72, 83, 101, 113, 115, 117, 127], "end": [2, 3, 4, 5, 32, 96, 108, 111, 112, 113, 119, 127], "effector": [2, 3, 4, 5, 108, 111, 112, 119, 127], "collis": [2, 3, 5, 10, 20, 21, 25, 26, 27, 54, 90, 94, 102, 104, 106, 110, 115, 119, 121, 122, 124, 125, 126], "check": [2, 20, 21, 26, 43, 54, 102, 104, 119, 120, 121, 127], "fill": [2, 4, 6, 7, 127], "occupi": 2, "http": [2, 44, 109, 116, 121, 122, 127], "doc": [2, 109, 122], "omnivers": [2, 121, 122], "nvidia": [2, 26, 27, 102, 104, 109, 112, 113, 117, 121, 122, 127], "com": [2, 44, 109, 116, 121, 122, 127], "app_isaacsim": 2, "advanced_tutori": 2, "tutorial_motion_generation_robot_description_editor": 2, "html": [2, 109, 122], "radiu": [2, 20, 30, 83, 101, 111, 113, 127], "buffer": [2, 25, 70, 111, 113, 127], "add": [2, 3, 65, 109, 111, 112, 114, 117, 127], "pad": 2, "jacobian": [2, 5, 55], "self": [2, 4, 5, 6, 7, 10, 20, 21, 72, 111, 112, 115], "some": [2, 70, 111, 112, 113, 114, 116, 117, 121, 122, 127], "larg": [2, 112, 113], "avoid": [2, 112, 113, 114, 116, 121, 122, 127], "github": [2, 44, 109, 116, 121, 127], "ro": [2, 44, 127], "plan": [2, 31, 32, 91, 94, 102, 104, 114, 124, 126, 127], "panda_moveit_config": 2, "pull": 2, "35": [2, 70], "issuecom": 2, "671333863": 2, "ignor": [2, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 127], "enabl": [2, 25, 26, 27, 47, 48, 50, 54, 70, 74, 79, 94, 95, 101, 105, 106, 110, 111, 112, 113, 114, 117, 120, 121, 127], "flag": [2, 7, 54, 70, 113], "write": [2, 122], "out": [2, 42, 43, 83, 111, 113], "cumul": 2, "matrix": [2, 12, 25, 29, 30, 44, 70, 83], "global": [2, 102, 104, 111, 121, 123], "allow": [2, 46, 111, 114, 121, 122], "reus": 2, "dure": [2, 9, 11, 16, 22, 24, 29, 46, 49, 51, 53, 59, 61, 70, 109, 110, 113, 114, 117], "15": [2, 92, 96, 127], "speedup": 2, "over": [2, 111, 113, 115, 120, 123], "recomput": 2, "path": [2, 3, 32, 82, 86, 109, 111, 112, 117, 122, 127], "we": [2, 3, 25, 26, 27, 46, 65, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127], "geometri": [2, 3, 7, 28, 106, 110, 115, 127], "visual": [2, 30, 94, 112, 113, 114, 115], "export": [2, 109, 116, 121], "when": [2, 27, 30, 54, 70, 94, 106, 110, 111, 112, 113, 114, 118, 120, 121], "root": [2, 83], "prim": [2, 7, 83, 122], "isaac": [2, 106, 110, 113, 114, 127], "server": 2, "chain": [2, 3, 112, 120, 121, 122], "flip": 2, "lock": [2, 46], "activ": [2, 54, 113, 114], "angl": [2, 115], "given": [2, 7, 9, 11, 16, 22, 24, 29, 30, 44, 46, 47, 49, 51, 53, 59, 61, 70, 83, 93, 108, 111, 112, 113, 115, 121], "dictionari": [2, 46, 47, 111, 113, 127], "deprec": [2, 30], "n": [2, 5, 25, 26, 27, 30, 32, 44, 62, 65, 70, 78, 82, 90, 93, 107, 113], "properti": [2, 3, 5, 7, 30, 42, 46, 50, 62, 65, 68, 70, 71, 72, 93, 94, 95, 96, 98], "link_param": 2, "option": [3, 4, 5, 7, 25, 27, 30, 32, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 65, 68, 71, 72, 78, 85, 93, 94, 96, 97, 99, 113, 114, 115, 116], "static": [3, 4, 5, 9, 11, 16, 22, 24, 25, 29, 30, 32, 39, 42, 43, 46, 47, 49, 51, 53, 59, 61, 62, 67, 70, 71, 72, 79, 83, 90, 93, 94, 95, 96, 114], "doe": [3, 5, 7, 26, 46, 62, 90, 111, 112, 113], "queri": [3, 25, 53, 54, 94, 105, 110, 111, 112, 113, 114, 119, 121, 123], "default": [3, 5, 7, 27, 28, 30, 43, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 83, 85, 93, 94, 96, 113, 117, 122, 127], "return": [3, 4, 5, 6, 7, 9, 11, 16, 22, 24, 25, 26, 27, 28, 29, 30, 32, 39, 42, 43, 44, 46, 47, 49, 51, 53, 59, 61, 62, 64, 65, 70, 72, 75, 80, 82, 83, 85, 86, 90, 93, 94, 95, 96, 98, 99, 111, 112, 113, 114, 115], "file_path": [3, 20, 30, 71, 83, 86, 101, 111, 113, 115], "data_dict": [3, 30, 39, 42, 43, 46, 47], "note": [3, 4, 5, 6, 7, 30, 46, 54, 65, 85, 90, 94, 113], "dof": [3, 17, 31, 32, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 72, 78, 90, 91, 93, 94, 96, 101, 118, 120], "e": [3, 9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 94, 109, 112, 114, 115, 118, 121, 122, 127], "g": [3, 9, 11, 16, 22, 24, 29, 30, 49, 51, 53, 59, 61, 70, 94, 109, 112, 113, 114, 115, 118, 121, 122, 127], "serial": 3, "get": [3, 4, 5, 7, 30, 90, 94, 109, 112, 115, 121, 122], "correct": 3, "issu": [3, 121, 127], "cover": 3, "full": [3, 44, 112], "batch_siz": [3, 9, 17, 53, 60, 62, 64, 65, 91, 97, 101, 115], "force_upd": [3, 62, 64], "reset_buff": [3, 31, 32, 101], "q": [3, 15, 16, 44, 50, 52, 70, 75, 90, 93, 94, 96, 111, 115], "calculate_jacobian": 3, "filter_valid": 3, "new_kin_config": 3, "numpi": [4, 115], "ndarrai": [4, 28, 30, 42, 43, 44, 70, 72], "factori": [4, 30, 78], "dict_data": 4, "build": [4, 6, 7, 26, 109, 111, 114, 115, 127], "map": [4, 6, 7, 26, 110, 111, 112, 113, 121, 127], "parent": [4, 6, 7], "each": [4, 6, 7, 9, 11, 16, 22, 24, 29, 30, 42, 43, 44, 49, 51, 53, 59, 61, 70, 105, 106, 110, 113, 121, 122, 127], "function": [4, 6, 7, 9, 11, 16, 20, 21, 22, 24, 25, 26, 27, 29, 39, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 90, 109, 111, 113, 115, 121], "_parent_map": [4, 6, 7], "attach": [4, 94, 110, 113], "start": [4, 32, 94, 96, 106, 109, 111, 112, 113, 114, 117, 127], "mesh_dir": [4, 6], "valu": [5, 7, 9, 11, 16, 22, 24, 25, 28, 29, 32, 38, 42, 43, 44, 47, 49, 51, 53, 54, 55, 59, 61, 64, 69, 70, 81, 82, 93, 94, 96, 97, 111, 113, 127], "enumer": [5, 38, 42, 43, 44, 49, 51, 53, 55, 64, 69, 82, 97], "1": [5, 9, 11, 16, 17, 22, 24, 25, 26, 29, 30, 32, 34, 37, 41, 42, 43, 44, 46, 49, 51, 53, 54, 55, 57, 59, 61, 62, 64, 65, 69, 70, 75, 78, 82, 83, 90, 92, 93, 94, 95, 96, 97, 99, 102, 104, 107, 109, 111, 113, 115, 120, 121, 122, 127], "2": [5, 9, 11, 16, 22, 24, 29, 42, 43, 44, 49, 51, 53, 59, 61, 62, 64, 65, 69, 70, 78, 90, 93, 94, 96, 97, 102, 104, 109, 111, 113, 115, 118, 127], "3": [5, 25, 27, 29, 42, 44, 53, 64, 69, 70, 78, 85, 94, 97, 102, 104, 109, 111, 113, 115, 127], "4": [5, 25, 26, 27, 29, 30, 54, 64, 83, 90, 97, 102, 104, 111, 113, 120, 127], "5": [5, 32, 34, 62, 64, 82, 85, 97, 102, 104, 109, 111, 113, 115, 118, 127], "t_dof": [5, 72], "union": [5, 25, 30, 46, 51, 53, 55, 72, 94], "10": [5, 32, 34, 37, 61, 82, 89, 90, 94, 109, 111, 113, 115, 123], "500": [5, 92, 96, 113, 115, 127], "joint_position_upp": 5, "joint_position_low": 5, "sphere_position_radiu": 5, "start_sph_idx": 5, "distanc": [5, 10, 20, 21, 25, 26, 27, 31, 32, 53, 54, 55, 66, 70, 90, 94, 101, 110, 111, 112, 113, 114, 115, 121], "param": [5, 25, 29, 44, 47, 72], "_description_": [5, 25, 27, 28, 30, 46, 62, 65, 70, 72, 80, 83, 85, 86, 90, 93, 94, 95, 96, 115], "sphere_radiu": [5, 28, 93, 94, 96], "sphere_tensor": [5, 93, 94, 96], "attached_object": [5, 93, 94, 96, 127], "_summary_": 5, "rais": [5, 30, 46, 65, 96], "valueerror": [5, 46], "detach": [5, 66, 72, 101, 106], "number": [5, 9, 11, 16, 22, 24, 25, 29, 30, 49, 51, 53, 59, 61, 70, 94, 113, 118, 123], "32": [5, 9, 94], "dataclass": [5, 121], "store": [5, 9, 11, 16, 22, 24, 25, 26, 29, 49, 51, 53, 59, 61, 70, 94, 111, 113, 115, 121], "attribut": [5, 9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "inform": [5, 94, 110, 111, 119], "x": [5, 7, 25, 27, 30, 38, 39, 44, 59, 70, 80, 82, 119], "y": [5, 7, 25, 27, 30, 70, 82, 107, 109, 119, 127], "z": [5, 7, 25, 27, 30, 70, 119, 127], "meter": [5, 30, 70], "b": [5, 25, 26, 27, 30, 37, 70, 109], "defin": [5, 9, 11, 16, 22, 24, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 108], "linear": [5, 74, 82, 85, 94, 96, 101, 115, 119], "angular": [5, 70], "specifi": [5, 7, 111, 112, 113], "quaternion": [5, 12, 29, 65, 66, 70, 101, 110, 111, 115], "r": [5, 9, 11, 16, 22, 24, 29, 30, 49, 51, 53, 59, 61, 70, 75, 113], "load_mesh": 6, "mesh_root": 6, "flip_joint": 7, "flip_joint_limit": 7, "more": [7, 9, 11, 16, 22, 24, 26, 28, 29, 44, 49, 51, 53, 59, 61, 70, 110, 111, 112, 113, 127], "complet": [7, 106], "solut": [7, 85, 91, 93, 94, 96, 101, 102, 104, 105, 111, 112, 115, 120], "avail": [7, 27, 86, 111, 112, 113, 114, 121], "futur": [7, 112], "releas": [7, 102, 103, 104, 112, 113, 123], "account": [7, 25, 113, 114], "after": [7, 106, 112, 114], "stage": [7, 83, 106, 112], "specif": [7, 25, 72, 109, 112, 121, 127], "uniform": 7, "token": 7, "physic": 7, "match": [7, 127], "becaus": 7, "assum": [7, 25, 26, 27, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 112, 121, 122], "obtain": [7, 94, 102, 104, 105, 111, 112], "body0_rel_target": 7, "body1_rel_target": 7, "child": [7, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "tupl": [7, 9, 11, 16, 22, 24, 28, 29, 49, 51, 53, 59, 61, 70, 72, 90], "out_dist": [9, 53], "out_vec": 9, "sparse_index": 9, "robot_spher": [9, 11, 56, 60, 62, 101], "collision_offset": 9, "weight": [9, 24, 25, 26, 27, 33, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 101, 112, 113], "coll_matrix": 9, "thread_siz": 9, "b_size": 9, "nsphere": 9, "compute_grad": 9, "arg": [9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 51, 53, 59, 61, 62, 63, 70, 77, 115], "kwarg": [9, 11, 16, 22, 24, 29, 46, 49, 51, 53, 59, 61, 70, 77, 78], "ctx": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "sparse_idx": 9, "sphere_offset": 9, "max_thread": 9, "return_loss": [9, 24, 25, 26, 27, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "overridden": [9, 11, 16, 22, 24, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70], "subclass": [9, 11, 16, 22, 24, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 115], "There": [9, 11, 16, 22, 24, 26, 29, 49, 51, 53, 59, 61, 70, 85, 113], "two": [9, 11, 16, 22, 24, 26, 29, 49, 51, 53, 59, 61, 65, 70, 105, 112, 113, 114, 119, 121, 127], "wai": [9, 11, 16, 22, 24, 26, 29, 49, 51, 53, 59, 61, 65, 70, 113], "usag": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "combin": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 102, 104, 113, 123], "staticmethod": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "def": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 115], "It": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 111], "must": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "accept": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "context": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 121], "first": [9, 11, 16, 22, 24, 25, 29, 49, 51, 53, 59, 61, 70, 113, 114, 115], "argument": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 114, 121], "follow": [9, 11, 16, 22, 24, 29, 44, 49, 51, 53, 59, 61, 70, 82, 102, 104, 106, 109, 110, 111, 112, 114, 115, 116, 127], "see": [9, 11, 16, 22, 24, 28, 29, 49, 51, 53, 54, 59, 61, 70, 106, 111, 112, 114, 124, 127], "detail": [9, 11, 16, 22, 24, 28, 29, 32, 47, 49, 51, 53, 54, 59, 61, 70, 93, 96, 110, 111, 112, 127], "separ": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "setup_context": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "input": [9, 11, 16, 22, 24, 28, 29, 39, 44, 49, 51, 53, 59, 61, 70, 113, 114, 115, 120, 121], "output": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 94, 111, 113, 115, 120], "The": [9, 11, 16, 21, 22, 24, 29, 49, 51, 53, 54, 59, 61, 70, 94, 106, 109, 112, 113, 114, 115, 120, 127], "longer": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "instead": [9, 11, 16, 22, 24, 29, 30, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 70, 90, 112, 113, 121], "overrid": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "autograd": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "handl": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 127], "extend": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "arbitrari": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 111], "retriev": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "should": [9, 11, 16, 22, 24, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 113, 121, 127], "directli": [9, 11, 16, 22, 24, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 109, 111, 112, 127], "though": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "enforc": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "compat": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 109], "save": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 74, 83, 101, 113, 116], "either": [9, 11, 16, 22, 24, 29, 44, 49, 51, 53, 59, 61, 70, 122], "save_for_backward": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "thei": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "intend": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "equival": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "vjp": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "save_for_forward": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "jvp": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "grad_out_dist": [9, 53], "formula": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "differenti": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 89, 90, 115], "oper": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "mode": [9, 11, 16, 17, 22, 24, 26, 29, 49, 51, 53, 59, 61, 70, 105, 109, 112], "automat": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 106], "alia": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 109], "non": [9, 11, 16, 22, 24, 29, 49, 51, 53, 54, 59, 61, 70, 112], "were": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "gradient": [9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 51, 53, 59, 61, 70, 102, 104, 112, 114, 120], "w": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70, 113, 124, 126], "t": [9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 51, 53, 59, 61, 70, 75, 93, 113, 114, 115], "correspond": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "If": [9, 11, 16, 22, 24, 25, 26, 27, 29, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 70, 109, 110, 111, 113, 114, 121, 127], "requir": [9, 11, 16, 22, 24, 25, 27, 29, 30, 49, 51, 53, 59, 61, 70, 109, 113, 114, 116, 127], "grad": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "just": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "ha": [9, 11, 16, 22, 24, 25, 29, 43, 49, 51, 53, 59, 61, 70, 89, 90, 112, 113, 118, 119, 121], "needs_input_grad": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "boolean": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "whether": [9, 11, 16, 22, 24, 29, 49, 51, 53, 59, 61, 70], "have": [9, 11, 16, 22, 24, 29, 49, 51, 53, 54, 59, 61, 70, 105, 109, 111, 112, 113, 117, 121, 122, 124, 127], "out_position_dist": [9, 53], "out_rotation_dist": [9, 53], "out_p_vec": [9, 53], "out_q_vec": 9, "out_idx": [9, 53], "current_posit": [9, 53], "goal_posit": [9, 53], "current_quat": [9, 53, 70], "goal_quat": [9, 53, 70], "vec_weight": [9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "vec_converg": [9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "run_weight": [9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 101], "run_vec_weight": [9, 48, 53, 101], "batch_pose_idx": [9, 45, 53, 65, 101], "horizon": [9, 17, 32, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 57, 60, 61, 62, 64, 65, 74, 78, 85, 90, 101, 106, 111, 113, 120], "num_goal": [9, 53], "write_grad": 9, "write_dist": 9, "use_metr": [9, 48, 53, 101], "out_grad_p": 9, "out_grad_q": 9, "grad_dist": 9, "grad_p_dist": 9, "grad_q_dist": 9, "pose_weight": [9, 90, 115], "grad_p_vec": 9, "grad_q_vec": 9, "use_dist": 9, "query_spher": [9, 24, 25, 26, 27, 113, 121], "out_buff": [9, 70], "grad_out_buff": 9, "sparsity_idx": [9, 24], "activation_dist": [9, 24, 25, 26, 27, 48, 49, 54, 101], "box_accel": 9, "box_dim": 9, "box_pos": 9, "box_en": 9, "n_env_obb": 9, "env_query_idx": [9, 24, 25, 26, 27, 54, 90, 113], "max_nob": 9, "n_sphere": [9, 26, 28, 30, 90, 111, 113], "transform_back": 9, "compute_dist": 9, "use_batch_env": [9, 46, 93], "grad_output": [9, 16, 22, 24, 29], "speed_dt": [9, 24, 25, 26, 27, 48, 54, 101], "sweep_step": [9, 24, 25, 26, 27, 48, 54, 101], "enable_speed_metr": [9, 24, 25, 26, 27], "arg0": [10, 12, 13, 14, 18], "arg1": [10, 12, 13, 14, 18], "arg2": [10, 12, 13, 14, 18], "arg3": [10, 12, 13, 14, 18], "arg4": [10, 12, 13, 14, 18], "arg5": [10, 12, 13, 14, 18], "arg6": [10, 12, 13, 14, 18], "arg7": [10, 12, 13, 14, 18], "arg8": [10, 12, 13, 14, 18], "arg9": [10, 12, 13, 14, 18], "arg10": [10, 12, 13, 14, 18], "arg11": [10, 12, 13, 14, 18], "arg12": [10, 12, 13, 14, 18], "arg13": [10, 12, 14, 18], "arg14": [10, 12, 14], "arg15": [10, 12, 14], "arg16": [10, 12], "arg17": [10, 12], "arg18": 10, "closest": [10, 113], "point": [10, 29, 70, 112, 113], "obb": [10, 25, 30, 113], "arg19": 10, "arg20": 10, "arg21": 10, "arg22": 10, "swept": 10, "in_mat": [11, 29], "out_quat": [11, 29], "link_po": 11, "link_quat": 11, "b_robot_spher": 11, "global_cumul_mat": 11, "joint_seq": 11, "link_sphere_map": 11, "grad_out": [11, 70], "grad_out_link_po": 11, "grad_out_link_quat": 11, "grad_out_spher": 11, "link_pos_seq": [11, 60, 62, 101], "link_quat_seq": [11, 60, 62, 101], "batch_robot_spher": 11, "q_in": [11, 115], "grad_out_q": [11, 29], "fuse": 12, "rotat": [12, 25, 29, 65, 66, 70, 93, 94, 101, 119], "bfg": [13, 102, 104, 123], "line": [14, 109, 117, 120, 123], "search": [14, 120, 123], "best": [14, 28, 40, 43, 101, 120], "best_x": 15, "best_c": 15, "best_grad": 15, "g_x": 15, "x_set": [15, 32], "sv": 15, "c": [15, 109], "c_idx": 15, "c_1": 15, "c_2": 15, "al": 15, "sw": 15, "aw": 15, "best_cost": 15, "best_q": 15, "best_iter": 15, "current_iter": 15, "d_opt": 15, "iter": [15, 94, 110, 113, 114], "delta_threshold": 15, "1e": [15, 115], "05": [15, 24, 32, 82, 93, 94, 96, 111, 127], "relative_threshold": 15, "999": [15, 37, 38], "step_vec": 16, "rho_buff": 16, "y_buffer": 16, "s_buffer": 16, "grad_q": 16, "x_0": 16, "grad_0": 16, "epsilon": [16, 36, 37, 101], "stable_mod": [16, 36, 37, 101], "out_posit": [17, 29, 61], "out_veloc": [17, 61], "out_acceler": [17, 61], "out_jerk": [17, 61], "u_posit": 17, "start_posit": [17, 61], "start_veloc": [17, 61], "start_acceler": [17, 61], "start_idx": [17, 32, 61, 72], "traj_dt": [17, 61, 92, 94], "u_acc": 17, "use_rk2": 17, "out_grad_posit": [17, 61], "grad_posit": 17, "grad_veloc": 17, "grad_acceler": 17, "grad_jerk": 17, "path1": [19, 86], "path2": [19, 86], "sourc": [19, 27, 70, 86, 102, 103, 104, 109], "geometr": [20, 21, 102, 104, 107, 112, 123], "process": [20, 21, 30, 42, 78, 94, 113], "pointcloud": [20, 21, 30], "analyt": [20, 21, 25, 26, 27], "sign": [20, 21, 25, 26, 27, 111, 112, 113, 114, 115], "environ": [20, 21, 25, 26, 27, 65, 90, 93, 109, 114, 121, 127], "These": [20, 21, 105, 113], "sdf_grid": [20, 21, 101], "lookup_dist": [20, 21, 22, 101], "compute_sdf_gradi": [20, 21, 22, 101], "sdfgrid": [20, 21, 22, 101], "create_collision_check": [20, 21, 23, 101], "warp_primit": [20, 21, 101], "sdfmeshwarppi": [20, 21, 24, 101], "sweptsdfmeshwarppi": [20, 21, 24, 101], "world": [20, 21, 26, 27, 30, 46, 47, 83, 89, 90, 93, 94, 95, 96, 102, 104, 105, 106, 110, 111, 112, 114, 115, 121], "collisionbuff": [20, 21, 25, 101, 121], "collisionquerybuff": [20, 21, 25, 26, 27, 101, 113], "collisioncheckertyp": [20, 21, 25, 90, 93, 94, 95, 101, 111], "worldcollisionconfig": [20, 21, 23, 25, 26, 27, 101, 113], "worldcollis": [20, 21, 25, 32, 46, 47, 54, 89, 90, 93, 94, 95, 96, 101, 113], "worldprimitivecollis": [20, 21, 25, 27, 101, 113], "world_blox": [20, 21, 101, 113, 114], "worldbloxcollis": [20, 21, 26, 101, 113, 114], "world_mesh": [20, 21, 101, 113], "warpmeshdata": [20, 21, 27, 101], "worldmeshcollis": [20, 21, 26, 27, 101, 113], "sample_surfac": [20, 28, 101, 113], "voxel_surfac": [20, 28, 101, 113], "voxel_volum": [20, 28, 101, 113], "voxel_volume_insid": [20, 28, 101, 113], "voxel_volume_sample_surfac": [20, 26, 28, 30, 94, 101, 113], "metal": [20, 30, 83, 101], "rough": [20, 30, 83, 101, 121], "scale": [20, 30, 54, 66, 72, 83, 94, 101, 113, 120], "color": [20, 30, 83, 101, 105, 112, 113, 115], "texture_id": [20, 30, 101], "textur": [20, 30, 101], "get_trimesh_mesh": [20, 30, 101], "save_as_mesh": [20, 30, 101], "get_cuboid": [20, 30, 101], "get_mesh": [20, 30, 101], "get_transform_matrix": [20, 30, 101], "get_spher": [20, 30, 101], "get_bounding_spher": [20, 21, 26, 30, 101, 113], "dim": [20, 25, 27, 30, 70, 72, 83, 101, 111, 113, 115], "tip": [20, 30, 101, 113], "height": [20, 25, 30, 83, 101, 113], "file_str": [20, 30, 101], "vertic": [20, 21, 27, 30, 101], "face": [20, 21, 27, 30, 101], "vertex_color": [20, 30, 101], "vertex_norm": [20, 30, 101], "face_color": [20, 30, 101], "get_mesh_data": [20, 30, 101], "from_pointcloud": [20, 30, 101], "map_path": [20, 30, 101], "voxel_s": [20, 25, 30, 101], "integrator_typ": [20, 30, 101], "mesh_file_path": [20, 30, 101], "mapper_inst": [20, 30, 101], "blox": [20, 21, 25, 30, 94, 101], "create_obb_world": [20, 30, 101, 113], "create_mesh_world": [20, 30, 101], "create_collision_support_world": [20, 30, 101, 113], "get_scene_graph": [20, 30, 101], "create_merged_mesh_world": [20, 30, 101], "get_obb_world": [20, 30, 101], "get_mesh_world": [20, 30, 101], "get_collision_check_world": [20, 30, 101], "save_world_as_mesh": [20, 30, 101, 113], "get_cache_dict": [20, 30, 101], "add_obstacl": [20, 30, 101, 115], "randomize_color": [20, 30, 101, 113], "add_color": [20, 30, 101], "add_materi": [20, 30, 74, 83, 101], "get_obstacl": [20, 30, 101], "remove_obstacl": [20, 30, 101], "remove_absolute_path": [20, 30, 101], "neural": [21, 111], "network": [21, 102, 104, 111], "learn": [21, 111], "field": [21, 114], "distance_buff": [21, 25, 101], "grad_distance_buff": [21, 25, 101], "sparsity_index_buff": [21, 25, 101], "shape": [21, 25, 29, 39, 42, 66, 68, 70, 72, 75, 78, 101, 110, 111, 113, 115], "initialize_from_shap": [21, 25, 101, 113], "update_buffer_shap": [21, 25, 101], "primitive_collision_buff": [21, 25, 101], "mesh_collision_buff": [21, 25, 101], "blox_collision_buff": [21, 25, 101], "create_from_shap": [21, 25, 101], "get_gradient_buff": [21, 25, 48, 54, 101], "primit": [21, 25, 54, 93, 94, 95, 101, 112, 113, 114, 121], "world_model": [21, 25, 26, 27, 32, 83, 88, 89, 90, 91, 93, 94, 96, 101, 113, 115], "cach": [21, 25, 83, 101, 113], "n_env": [21, 25, 27, 35, 37, 38, 39, 41, 42, 43, 90, 91, 97, 98, 101, 121], "checker_typ": [21, 25, 101], "max_dist": [21, 24, 25, 101], "load_from_dict": [21, 25, 101], "load_collision_model": [21, 25, 26, 27, 101], "get_sphere_dist": [21, 25, 26, 27, 101, 113], "get_sphere_collis": [21, 25, 26, 27, 101], "get_swept_sphere_dist": [21, 25, 26, 27, 101], "get_swept_sphere_collis": [21, 25, 26, 27, 101], "get_sphere_trac": [21, 25, 101], "load_batch_collision_model": [21, 25, 27, 101], "add_obb_from_raw": [21, 25, 101], "add_obb": [21, 25, 101], "update_obb_dim": [21, 25, 101], "enable_obstacl": [21, 25, 26, 27, 101, 113], "enable_obb": [21, 25, 101], "update_obstacle_pos": [21, 25, 27, 101, 113], "update_obb_pos": [21, 25, 101], "get_obb_idx": [21, 25, 101], "clear_cach": [21, 25, 26, 27, 101], "get_voxels_in_bounding_box": [21, 25, 101], "get_mesh_in_bounding_box": [21, 25, 101], "clear_blox_lay": [21, 26, 101], "enable_blox": [21, 26, 101], "update_blox_pos": [21, 26, 101], "clear_bounding_box": [21, 26, 101], "add_camera_fram": [21, 26, 91, 94, 101], "process_camera_fram": [21, 26, 91, 94, 101], "update_blox_hash": [21, 26, 101], "update_blox_esdf": [21, 26, 101], "update_blox_mesh": [21, 26, 101], "get_mesh_from_blox_lay": [21, 26, 101], "decay_lay": [21, 26, 101], "m_id": [21, 27, 101], "add_mesh": [21, 27, 101, 113], "get_mesh_idx": [21, 27, 101], "create_collision_cach": [21, 27, 101, 113], "update_mesh_pos": [21, 27, 101], "update_all_mesh_pos": [21, 27, 101], "update_mesh_pose_env": [21, 27, 101], "update_mesh_from_warp": [21, 27, 101], "enable_mesh": [21, 27, 101], "pt": [22, 30, 32], "dist_matrix_flat": 22, "num_voxel": 22, "dist": 22, "out_cost": [24, 49, 51], "out_grad": 24, "mesh_idx": 24, "mesh_pose_invers": 24, "mesh_en": 24, "n_env_mesh": 24, "size": [25, 70, 72, 110, 111, 113, 114], "classmethod": [25, 46, 65, 70], "three": [25, 113, 119, 127], "main": [25, 113], "initi": [25, 42, 43, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 70, 94, 111, 113, 115, 123, 127], "collision_typ": [25, 113], "checker": [25, 94, 111, 112, 114, 121], "_type_": [25, 30, 46, 65, 72, 80, 85, 94], "nonetyp": [25, 49, 50, 51, 52, 53, 55, 56, 57], "01": [25, 28, 37, 54, 92, 94, 95, 96, 111, 127], "world_coll_checker_dict": [25, 46], "world_model_dict": [25, 46], "collision_query_buff": [25, 26, 27], "via": [25, 26, 27], "don": [25, 26, 27, 114], "orient": [25, 30, 70, 112, 113], "bound": [25, 30, 31, 32, 48, 49, 78, 82, 101, 106, 113], "box": [25, 30, 112, 113], "For": [25, 65, 112, 113, 114, 116, 124], "speed": [25, 54, 113, 127], "maximum": [25, 94], "instanti": 25, "read": [25, 106, 110, 112], "call": [25, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 70, 94, 105, 106, 107, 110, 111, 112, 118, 121], "world_config": [25, 83, 90, 111, 113], "env_idx": [25, 26, 27, 113], "world_config_list": [25, 27], "batch": [25, 26, 27, 32, 42, 43, 44, 45, 46, 47, 49, 51, 53, 65, 66, 70, 85, 90, 91, 93, 94, 96, 97, 101, 107, 111, 120, 121], "w_obj_pos": [25, 26, 27], "obj_w_pos": [25, 26, 27], "lenght": 25, "width": 25, "3x3": [25, 70], "obj_dim": [25, 27], "env_obj_idx": [25, 27], "dimens": [25, 27, 30, 118], "give": [25, 27, 111, 112], "obj_idx": [25, 27], "grid": [25, 112, 115], "02": [25, 30, 32, 82, 83, 94], "representaiton": 26, "nvblox": [26, 30, 105, 110, 111, 112, 113, 114, 116], "librari": [26, 27, 106, 112, 115, 118, 121, 123], "depend": [26, 109], "pytorch": [26, 89, 90, 109, 110, 114, 117, 118, 121], "wrapper": [26, 114, 115, 122], "addition": [26, 122], "disk": [26, 111, 114], "onlin": 26, "both": [26, 105, 127], "than": [26, 54, 102, 104, 105, 110, 111, 113, 114, 123, 127], "against": 26, "facilit": 26, "creation": 26, "api": [26, 107, 114, 122], "layer_nam": 26, "bounding_box": [26, 94], "obstacle_nam": [26, 94], "surface_sphere_radiu": [26, 28, 30, 94], "002": [26, 30, 127], "fit_typ": [26, 28, 30], "voxelize_method": [26, 28, 30, 94], "rai": [26, 28, 30, 94], "pre_transform_pos": [26, 30], "clear_region": 26, "camera_observ": [26, 94], "process_aux": [26, 94], "arrai": [27, 81, 82], "int64": [27, 32], "compil": [27, 109, 117, 121], "load_obb_ob": 27, "new_mesh": [27, 113], "mesh_cach": 27, "obb_cach": 27, "same": [27, 65, 70, 85], "warp_mesh_idx": 27, "env_mesh_idx": 27, "fit": [28, 30, 113], "here": [28, 44, 111, 113, 124], "sampl": [28, 40, 42, 43, 44, 78, 88, 90, 101, 111, 112, 113, 115], "surfac": [28, 113], "voxel": [28, 94, 113, 114], "intersect": [28, 113], "ocupio": [28, 113], "insid": [28, 113, 120], "along": [28, 62, 112, 113], "trimesh": [28, 30], "n_cube": 28, "out_point": 29, "out_gp": [29, 49, 51], "out_gq": 29, "out_gpt": 29, "adj_matrix": 29, "matric": 29, "real": [29, 112], "part": [29, 115], "qw": [29, 30], "qx": [29, 30], "qy": [29, 30], "qz": [29, 30], "out_mat": 29, "adj_quaternion": 29, "out_matrix": [29, 70], "position2": 29, "quaternion2": 29, "out_quaternion": 29, "adj_po": 29, "adj_quat": 29, "adj_pos2": 29, "adj_quat2": 29, "adj_posit": 29, "adj_point": 29, "adj_position2": 29, "adj_quaternion2": 29, "grad_out_posit": 29, "grad_out_quaternion": 29, "grad_out_mat": 29, "adj_mat": 29, "uniqu": 30, "appli": 30, "notimplementederror": [30, 65, 96], "deriv": [30, 46], "homogen": 30, "np": [30, 42, 43, 44, 72, 115], "x_length": 30, "y_length": 30, "z_length": 30, "pitch": 30, "world_pc": 30, "filter_close_point": 30, "tsdf": 30, "occup": [30, 114], "integr": [30, 62, 113, 114], "sequenc": [30, 44, 46, 62, 65, 70, 72, 93, 96, 106], "current_world": 30, "merge_mesh": 30, "mesh_process": 30, "save_as_scene_graph": 30, "random": [30, 40, 42, 101, 111, 113, 120], "within": [30, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 102, 104, 109, 113, 114, 123], "rang": [30, 70, 113, 115], "rgba": 30, "success": [31, 32, 91, 93, 94, 96, 101, 111, 116], "start_q": [31, 32, 101], "goal_q": [31, 32, 101], "path_length": [31, 32, 101], "solve_tim": [31, 32, 87, 91, 93, 94, 96, 98, 101], "interpolated_plan": [31, 32, 91, 94, 101], "metric": [31, 32, 46, 54, 70, 87, 91, 93, 96, 98, 101, 111, 116], "valid_queri": [31, 32, 91, 94, 101], "debug_info": [31, 32, 35, 37, 38, 39, 41, 42, 43, 91, 93, 94, 96, 101], "optimized_dt": [31, 32, 91, 94, 96, 101, 111], "path_buffer_last_tstep": [31, 32, 91, 94, 96, 101], "node": [31, 32, 101], "edg": [31, 32, 101], "connect": [31, 32, 101], "shortest_path_length": [31, 32, 101], "set_shortest_path_length": [31, 32, 101], "get_node_dist": [31, 32, 101], "max_nod": [31, 32, 101], "steer_delta_buff": [31, 32, 101], "sample_pt": [31, 32, 101], "node_similarity_dist": [31, 32, 101], "rejection_ratio": [31, 32, 88, 89, 90, 101], "k_nn": [31, 32, 34, 101], "c_max": [31, 32, 34, 101], "vertex_n": [31, 32, 101], "graph_max_attempt": [31, 32, 101], "graph_min_attempt": [31, 32, 101], "init_nod": [31, 32, 101], "use_bias_nod": [31, 32, 101], "rollout_fn": [31, 32, 35, 37, 38, 39, 41, 42, 43, 45, 46, 65, 87, 91, 93, 95, 96, 98, 101, 111], "safety_rollout_fn": [31, 32, 101], "max_buff": [31, 32, 101], "max_cg_buff": [31, 32, 101], "compute_metr": [31, 32, 87, 91, 95, 96, 98, 101], "interpolation_typ": [31, 32, 91, 94, 96, 101], "interpolation_step": [31, 32, 83, 91, 94, 96, 101], "seed": [31, 32, 40, 41, 42, 43, 74, 78, 91, 93, 94, 96, 98, 99, 101, 102, 104, 118, 120, 123], "use_cuda_graph_mask_sampl": [31, 32, 101], "distance_weight": [31, 32, 101], "bias_nod": [31, 32, 91, 96, 101], "interpolation_dt": [31, 32, 82, 91, 94, 96, 101, 111], "interpolation_devi": [31, 32, 101], "interpolation_acceleration_scal": [31, 32, 101], "load_from_robot_config": [31, 32, 91, 93, 94, 95, 96, 101, 111], "check_feas": [31, 32, 101], "get_feasible_sample_set": [31, 32, 101], "mask_sampl": [31, 32, 101], "get_sampl": [31, 32, 74, 78, 101], "get_biased_vertex_set": [31, 32, 101], "get_new_vertex_set": [31, 32, 101], "validate_graph": [31, 32, 101], "get_graph_edg": [31, 32, 101], "get_graph": [31, 32, 101], "batch_get_graph_shortest_path": [31, 32, 101], "batch_shortcut_path": [31, 32, 101], "get_node_idx": [31, 32, 101], "get_path_length": [31, 32, 33, 101], "get_graph_shortest_path_length": [31, 32, 101], "path_exist": [31, 32, 33, 101], "batch_path_exist": [31, 32, 101], "find_path": [31, 32, 101], "compute_path_length": [31, 32, 101], "reset_graph": [31, 32, 33, 101], "add_nodes_to_graph": [31, 32, 101], "connect_nod": [31, 32, 101], "get_path": [31, 32, 91, 94, 101], "get_metr": [31, 32, 45, 46, 65, 87, 98, 101], "reset_se": [31, 32, 35, 39, 40, 42, 45, 65, 87, 91, 93, 94, 96, 98, 101], "reset_cuda_graph": [31, 32, 35, 36, 38, 39, 45, 46, 65, 87, 91, 93, 95, 96, 98, 101], "get_all_rollout_inst": [31, 32, 35, 39, 87, 91, 93, 94, 96, 98, 101], "warmup": [31, 32, 34, 91, 94, 101, 111], "add_nod": [31, 33, 101], "add_edg": [31, 33, 101], "update_graph": [31, 33, 94, 101], "get_edg": [31, 33, 101], "get_shortest_path": [31, 33, 101], "build_graph": [31, 34, 101], "annot": [32, 47, 49, 93, 96], "__torchtyping__": [32, 47, 49, 93, 96], "cls_name": [32, 47, 49, 93, 96], "tensortyp": [32, 47, 49, 93, 96], "graph_dict": 32, "use_cuda_graph": [32, 35, 37, 38, 39, 41, 42, 43, 93, 94, 95, 96, 98, 101, 111], "robot_cfg": [32, 46, 47, 62, 91, 93, 94, 95, 96, 101, 111, 127], "world_coll_check": [32, 45, 46, 47, 48, 54, 91, 93, 94, 95, 96, 101], "base_cfg_fil": [32, 93, 94, 96], "base_cfg": [32, 93, 94, 95, 96], "yml": [32, 90, 93, 94, 96, 111, 112, 115, 116, 119, 127], "graph_fil": [32, 94], "self_collision_check": [32, 93, 94, 95, 96, 111], "x_sampl": 32, "n_sampl": 32, "x_start": [32, 34], "x_goal": [32, 34], "c_min": [32, 34], "lazi": [32, 34], "locat": [32, 106, 113, 114, 121, 127], "start_idx_list": 32, "goal_idx_list": 32, "return_length": [32, 33], "g_path": 32, "goal_idx": [32, 51], "goal_stat": [32, 45, 65, 94, 96, 97, 101], "exact": 32, "start_node_idx": [32, 33], "goal_node_idx": [32, 33], "all_path": 32, "x_init": 32, "batch_pt": 32, "norm": [32, 75, 115], "add_exact_nod": 32, "connect_mod": 32, "knn": 32, "edge_set": 32, "path_list": 32, "edge_list": 33, "node_list": 33, "start_i": 33, "end_i": 33, "attribu": 33, "number_of_nod": 34, "bias_sampl": 34, "lazy_nod": 34, "lbfg": [35, 36, 101, 120], "lbfgsoptconfig": [35, 36, 37, 101], "lbfgsopt": [35, 36, 37, 101], "newton_bas": [35, 36, 37, 101, 120], "linesearchtyp": [35, 36, 37, 38, 101], "newtonoptconfig": [35, 36, 37, 38, 101], "newtonoptbas": [35, 36, 37, 38, 98, 101, 120], "parallel_": [35, 40, 101], "parallelesconfig": [35, 40, 41, 101], "parallel": [35, 40, 41, 65, 101, 102, 104, 112, 113, 120, 125], "parallel_mppi": [35, 40, 41, 101], "baseactiontyp": [35, 40, 41, 42, 101], "covtyp": [35, 40, 41, 42, 101], "parallelmppiconfig": [35, 40, 41, 42, 101], "parallelmppi": [35, 40, 41, 42, 101], "particle_opt_bas": [35, 40, 41, 42, 101], "samplemod": [35, 40, 41, 42, 43, 101], "particleoptinfo": [35, 40, 43, 101], "particleoptconfig": [35, 40, 42, 43, 101], "particleoptbas": [35, 40, 42, 43, 98, 101], "particle_opt_util": [35, 40, 41, 42, 101], "squashtyp": [35, 40, 41, 42, 44, 101], "scale_ctrl": [35, 40, 44, 101], "get_stomp_cov": [35, 40, 44, 101], "gaussian_logprob": [35, 40, 44, 101], "gaussian_logprobgrad": [35, 40, 44, 101], "gaussian_entropi": [35, 40, 44, 101], "gaussian_kl": [35, 40, 44, 101], "cost_to_go": [35, 40, 44, 101], "cost_to_go_np": [35, 40, 44, 101], "matrix_choleski": [35, 40, 44, 101], "batch_choleski": [35, 40, 44, 101], "d_action": [35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 65, 74, 78, 101], "action_low": [35, 37, 38, 39, 41, 42, 43, 44, 101], "action_high": [35, 37, 38, 39, 41, 42, 43, 44, 101], "n_iter": [35, 37, 38, 39, 41, 42, 43, 101], "store_debug": [35, 37, 38, 39, 41, 42, 43, 93, 96, 101], "cold_start_n_it": [35, 37, 38, 39, 41, 42, 43, 101], "num_particl": [35, 37, 38, 39, 41, 42, 43, 46, 78, 101], "sync_cuda_tim": [35, 37, 38, 39, 41, 42, 43, 87, 91, 93, 94, 95, 96, 98, 101], "use_coo_spars": [35, 37, 38, 39, 41, 42, 43, 101], "create_data_dict": [35, 39, 40, 42, 43, 101], "update_param": [35, 39, 45, 46, 47, 65, 87, 98, 101], "reset": [35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 65, 74, 78, 79, 87, 91, 94, 95, 98, 99, 101, 118], "update_nenv": [35, 36, 37, 38, 39, 40, 43, 87, 98, 101], "get_nenv_tensor": [35, 39, 101], "histori": [36, 37, 101, 114], "use_cuda_kernel": [36, 37, 101], "init_hessian": [36, 37, 101], "greedi": [36, 38, 101], "armijo": [36, 38, 101], "wolf": [36, 38, 101], "strong_wolf": [36, 38, 101], "approx_wolf": [36, 38, 101], "line_search_scal": [36, 37, 38, 101], "cost_converg": [36, 37, 38, 101], "cost_delta_threshold": [36, 37, 38, 101], "fixed_it": [36, 37, 38, 96, 101], "inner_it": [36, 37, 38, 101], "line_search_typ": [36, 37, 38, 101], "use_cuda_line_search_kernel": [36, 37, 38, 101], "use_cuda_update_best_kernel": [36, 37, 38, 101], "min_it": [36, 37, 38, 101], "step_scal": [36, 37, 38, 101], "last_best": [36, 37, 38, 101], "use_temporal_smooth": [36, 37, 38, 101], "cost_relative_threshold": [36, 37, 38, 101], "clip_bound": [36, 38, 101], "scale_step_direct": [36, 38, 101], "project_bound": [36, 38, 101], "check_converg": [36, 38, 40, 43, 101], "control": [37, 38, 39, 42, 43, 95, 124, 126], "dx": 38, "child_dict": [39, 42, 43], "opt_tensor": 39, "shift_step": [39, 46, 62, 65, 95, 98, 99], "n_particl": 39, "solver": [40, 91, 93, 94, 95, 96, 101, 112, 120, 123], "learning_r": [40, 41, 101], "repeat": [40, 42, 66, 70, 101, 115, 121], "null": [40, 42, 55, 101, 127], "sigma_i": [40, 42, 101], "diag_a": [40, 42, 101], "full_a": [40, 42, 101], "full_ha": [40, 42, 101], "init_mean": [40, 41, 42, 101], "init_cov": [40, 41, 42, 101], "base_act": [40, 41, 42, 101], "step_size_mean": [40, 41, 42, 101], "step_size_cov": [40, 41, 42, 101], "null_act_frac": [40, 41, 42, 101], "squash_fn": [40, 41, 42, 44, 101], "cov_typ": [40, 41, 42, 44, 101], "sample_param": [40, 41, 42, 101], "update_cov": [40, 41, 42, 101], "random_mean": [40, 41, 42, 101], "beta": [40, 41, 42, 101], "alpha": [40, 41, 42, 101], "gamma": [40, 41, 42, 43, 101], "kappa": [40, 41, 42, 101], "sample_per_env": [40, 41, 42, 101], "get_rollout": [40, 42, 87, 99, 101], "reset_distribut": [40, 42, 101], "sample_act": [40, 42, 43, 101], "update_se": [40, 42, 43, 101], "update_init_mean": [40, 42, 101], "reset_mean": [40, 42, 101], "reset_covari": [40, 42, 101], "squashed_mean": [40, 42, 101], "full_cov": [40, 42, 101], "full_inv_cov": [40, 42, 101], "full_scale_tril": [40, 42, 101], "entropi": [40, 42, 44, 101], "update_sampl": [40, 42, 101], "generate_rollout": [40, 42, 43, 101], "mean": [40, 43, 44, 101, 111, 115], "info": [40, 43, 44, 77, 101, 109], "sample_mod": [40, 41, 42, 43, 101], "calculate_valu": [40, 41, 42, 43, 101], "store_rollout": [40, 41, 42, 43, 95, 101], "update_num_particles_per_env": [40, 43, 101], "clamp": [40, 44, 101], "clamp_rescal": [40, 44, 101], "tanh": [40, 44, 101, 115], "ident": [40, 44, 48, 55, 101], "distribut": [42, 43], "init_act": [42, 43], "action": [42, 43, 45, 46, 47, 62, 65, 87, 98, 101, 106, 112, 120], "base_se": [42, 78], "correl": [42, 78], "noisi": [42, 78, 123], "autoregress": [42, 78], "roll": [42, 43], "result": [42, 43, 83, 93, 94, 102, 104, 105, 111, 113, 116], "observ": [42, 43], "simul": [42, 43, 46, 112, 114], "env": [42, 43, 107], "abstract": [43, 46, 63, 64, 65, 113], "converg": 43, "num_particles_per_env": 43, "ctrl": 44, "cov_mod": [44, 74, 78, 101], "acc": [44, 49], "return_m": 44, "covari": 44, "stomp": 44, "motion": [44, 86, 94, 102, 104, 109, 113, 119, 124, 125, 126, 127], "planner": [44, 54, 94, 102, 104, 105, 107, 123], "coeffici": 44, "en": 44, "wikipedia": 44, "org": [44, 109, 127], "wiki": [44, 127], "finite_difference_coeffici": 44, "industri": [44, 127], "stomp_ro": 44, "blob": 44, "7fe40fbe6ad446459d8d4889916c64e276dbf882": 44, "stomp_cor": 44, "src": [44, 109, 127], "cpp": [44, 109], "l36": 44, "cov": [44, 78], "calcul": 44, "gaussian": [44, 78], "log": [44, 83, 115, 116], "prob": 44, "num_sampl": [44, 78], "log_prob": 44, "probabl": 44, "multivari": 44, "choleski": 44, "decomposit": 44, "mean0": 44, "cov0": 44, "mean1": 44, "cov1": 44, "kl": 44, "diverg": 44, "p": [44, 116], "e_": [44, 115], "cost_seq": 44, "gamma_seq": 44, "only_first": 44, "discount": 44, "go": [44, 111, 114, 115], "bound_cost": [45, 46, 47, 48, 88, 89, 90, 101], "boundcosttyp": [45, 48, 49, 101], "boundcostconfig": [45, 46, 47, 48, 49, 101], "boundcost": [45, 48, 49, 89, 90, 101], "warpboundsmoothfunct": [45, 48, 49, 101], "warpboundfunct": [45, 48, 49, 101], "warpboundposfunct": [45, 48, 49, 101], "warpboundposloss": [45, 48, 49, 101], "cost_bas": [45, 47, 48, 101], "costconfig": [45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 101], "costbas": [45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 101], "dist_cost": [45, 46, 47, 48, 55, 101], "disttyp": [45, 48, 51, 55, 101], "distcostconfig": [45, 46, 47, 48, 51, 55, 101], "l2distfunct": [45, 48, 51, 101], "distcost": [45, 47, 48, 51, 55, 101], "manipulability_cost": [45, 46, 47, 48, 101], "manipulabilitycostconfig": [45, 46, 47, 48, 52, 101], "manipulabilitycost": [45, 48, 52, 101], "pose_cost": [45, 47, 48, 88, 89, 90, 101], "poseerrortyp": [45, 48, 53, 101], "posecostconfig": [45, 47, 48, 53, 101], "poseerrordist": [45, 48, 53, 101], "poseloss": [45, 48, 53, 101], "poseerror": [45, 48, 53, 101], "posecost": [45, 47, 48, 53, 89, 90, 101], "primitive_collision_cost": [45, 46, 47, 48, 89, 90, 101, 113], "primitivecollisioncostconfig": [45, 46, 47, 48, 54, 101, 113], "primitivecollisioncost": [45, 48, 54, 89, 90, 101], "projected_dist_cost": [45, 48, 101], "projtyp": [45, 48, 55, 101], "projecteddistcostconfig": [45, 48, 55, 101], "projecteddistcost": [45, 48, 55, 101], "self_collision_cost": [45, 46, 47, 48, 88, 89, 90, 101, 115], "selfcollisioncostconfig": [45, 46, 47, 48, 56, 101], "selfcollisioncost": [45, 48, 56, 89, 90, 101], "stop_cost": [45, 46, 47, 48, 101], "stopcostconfig": [45, 46, 47, 48, 57, 101], "stopcost": [45, 48, 57, 101], "straight_line_cost": [45, 48, 101], "straightlinecost": [45, 48, 58, 101], "zero_cost": [45, 48, 101], "squaredsum": [45, 48, 59, 101], "runsquaredsum": [45, 48, 59, 101], "zerocost": [45, 48, 59, 101], "integration_util": [45, 60, 101], "build_clique_matrix": [45, 60, 61, 101], "build_fd_matrix": [45, 60, 61, 101], "build_int_matrix": [45, 60, 61, 101], "build_start_state_mask": [45, 60, 61, 101], "tensor_step_jerk": [45, 60, 61, 101], "euler_integr": [45, 60, 61, 101], "tensor_step_acc": [45, 60, 61, 101], "cliquetensorstep": [45, 60, 61, 101], "cliquetensorstepkernel": [45, 60, 61, 101], "cliquetensorstepidxkernel": [45, 60, 61, 101], "cliquetensorstepcentraldifferencekernel": [45, 60, 61, 101], "cliquetensorstepidxcentraldifferencekernel": [45, 60, 61, 101], "cliquetensorstepcoalescekernel": [45, 60, 61, 101], "accelerationtensorstepkernel": [45, 60, 61, 101], "accelerationtensorstepidxkernel": [45, 60, 61, 101], "tensor_step_pos_cliqu": [45, 60, 61, 101], "step_acc_semi_eul": [45, 60, 61, 101], "tensor_step_acc_semi_eul": [45, 60, 61, 101], "tensor_step_vel": [45, 60, 61, 101], "tensor_step_po": [45, 60, 61, 101], "tensor_step_pos_ik": [45, 60, 61, 101], "tensor_linspac": [45, 60, 61, 101], "sum_matrix": [45, 60, 61, 101], "interpolate_kernel": [45, 60, 61, 101], "action_interpolate_kernel": [45, 60, 61, 101], "kinematic_model": [45, 46, 47, 57, 60, 101], "timetrajconfig": [45, 57, 60, 62, 101], "kinematicmodelst": [45, 46, 47, 60, 62, 94, 101], "kinematicmodelconfig": [45, 46, 47, 60, 62, 101], "kinematicmodel": [45, 60, 62, 101], "model_bas": [45, 60, 101], "dynamicsmodelbas": [45, 60, 63, 101], "tensorsteptyp": [45, 60, 64, 101], "tensorstepbas": [45, 60, 64, 101], "tensorstepacceler": [45, 60, 64, 101], "tensorsteppositionteleport": [45, 60, 64, 101], "tensorstepposit": [45, 60, 64, 101], "tensorsteppositioncliqu": [45, 60, 64, 101], "tensorstepaccelerationkernel": [45, 60, 64, 101], "tensorsteppositioncliquekernel": [45, 60, 64, 101], "bound_cfg": [45, 46, 47, 101], "null_space_cfg": [45, 46, 47, 101], "manipulability_cfg": [45, 46, 47, 101], "stop_cfg": [45, 46, 47, 101], "self_collision_cfg": [45, 46, 47, 101], "primitive_collision_cfg": [45, 46, 47, 101], "model_cfg": [45, 46, 47, 101], "cost_cfg": [45, 46, 47, 101], "constraint_cfg": [45, 46, 47, 101], "convergence_cfg": [45, 46, 47, 101], "model_from_dict": [45, 46, 101], "cost_from_dict": [45, 46, 47, 101], "world_coll_checker_from_dict": [45, 46, 101], "cost_fn": [45, 46, 47, 65, 101], "constraint_fn": [45, 46, 65, 101], "get_metrics_cuda_graph": [45, 46, 65, 101], "convergence_fn": [45, 46, 47, 65, 101], "compute_kinemat": [45, 46, 91, 94, 101, 111], "rollout_constraint": [45, 46, 65, 101], "rollout_constraint_cuda_graph": [45, 46, 101], "get_ee_pos": [45, 46, 101], "current_cost": [45, 46, 65, 101], "filter_robot_st": [45, 46, 60, 62, 63, 65, 101], "get_robot_command": [45, 46, 60, 62, 63, 65, 101], "action_bound_low": [45, 46, 60, 62, 65, 101], "action_bound_high": [45, 46, 60, 62, 65, 101], "state_bound": [45, 46, 65, 101], "dt": [45, 46, 49, 50, 54, 61, 62, 63, 64, 65, 72, 74, 79, 82, 83, 94, 96, 101, 112, 115], "get_init_action_seq": [45, 46, 65, 101], "get_action_from_st": [45, 46, 60, 62, 65, 101], "get_state_from_act": [45, 46, 60, 62, 65, 101], "cspace_config": [45, 46, 65, 101], "get_full_dof_from_solut": [45, 46, 65, 101], "retract_st": [45, 46, 65, 101], "update_traj_dt": [45, 46, 60, 62, 101], "update_cost_dt": [45, 46, 101], "cspace_error": [45, 47, 91, 94, 96, 101], "position_error": [45, 47, 91, 93, 94, 96, 101], "rotation_error": [45, 47, 91, 93, 94, 96, 101], "pose_error": [45, 47, 101], "pose_cfg": [45, 47, 101], "cspace_cfg": [45, 47, 101], "straight_line_cfg": [45, 47, 101], "zero_acc_cfg": [45, 47, 101], "zero_vel_cfg": [45, 47, 101], "zero_jerk_cfg": [45, 47, 101], "enable_pose_cost": [45, 47, 91, 95, 101], "enable_cspace_cost": [45, 47, 91, 95, 101], "constraint": [45, 47, 65, 94, 101, 110, 112], "feasibl": [45, 47, 65, 101], "goal_pos": [45, 53, 65, 83, 91, 93, 94, 97, 101], "links_goal_pos": [45, 65, 101], "current_st": [45, 46, 62, 63, 65, 78, 95, 101], "batch_goal_state_idx": [45, 65, 101], "batch_retract_state_idx": [45, 65, 101], "batch_current_state_idx": [45, 65, 101], "batch_enable_idx": [45, 65, 101], "batch_world_idx": [45, 65, 101], "update_batch_idx_buff": [45, 65, 101], "n_goalset": [45, 65, 66, 70, 91, 97, 101], "repeat_se": [45, 65, 66, 70, 72, 101], "apply_kernel": [45, 65, 66, 70, 72, 101], "copy_": [45, 65, 66, 68, 70, 72, 101], "get_batch_goal_st": [45, 65, 101], "create_index_buff": [45, 65, 101], "create_idx": [45, 65, 101], "action_bound": [45, 65, 101], "update_start_st": [45, 65, 101], "sample_random_act": [45, 65, 101], "robot_config": [46, 60, 62, 90, 91, 93, 96, 101], "model_data_dict": 46, "cost_data_dict": [46, 47], "constraint_data_dict": 46, "convergence_data_dict": 46, "declar": 46, "reach": [46, 94, 108, 112, 114], "cartesian": [46, 94, 111, 127], "action_batch": [46, 47], "return_list": 46, "out_metr": [46, 47, 65], "todo": [46, 62, 80], "urdfmodelst": 46, "act_seq": [46, 62, 63, 65, 98], "encount": 46, "action_seq": 46, "d_act": 46, "target": [46, 51, 65, 94, 105, 109, 112, 114], "no_col": 46, "return_st": 46, "state_idx": [46, 62, 65], "start_stat": [46, 62, 63, 64, 65, 83, 94, 96, 111], "q_j": [46, 65], "q_sol": 46, "base_dt": [46, 60, 62, 96, 101], "max_dt": [46, 60, 62, 91, 92, 96, 101], "base_ratio": [46, 60, 62, 96, 101], "t_bvalue_float": [47, 65], "t_bvalue_bool": [47, 65], "clone_st": [47, 65], "term": [47, 112, 120], "dynam": [47, 114], "bounds_smooth": [48, 49, 101], "smooth_weight": [48, 49, 94, 96, 101], "run_weight_veloc": [48, 49, 101], "run_weight_acceler": [48, 49, 101], "run_weight_jerk": [48, 49, 101], "cost_typ": [48, 49, 53, 101], "state_finite_difference_mod": [48, 49, 60, 62, 94, 96, 101], "set_bound": [48, 49, 101], "update_dt": [48, 49, 50, 54, 60, 62, 64, 101], "classifi": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "termin": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101, 112], "max_valu": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "hinge_valu": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "threshold_valu": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 101], "update_vec_weight": [48, 50, 101], "disable_cost": [48, 50, 101], "enable_cost": [48, 50, 101], "update_weight": [48, 50, 101], "l1": [48, 51, 101], "l2": [48, 51, 55, 94, 101], "squared_l2": [48, 51, 101], "dist_typ": [48, 51, 55, 101], "use_null_spac": [48, 51, 55, 101], "forward_target": [48, 51, 101], "forward_target_idx": [48, 51, 101], "use_joint_limit": [48, 52, 101], "manipul": [48, 52, 101, 106, 113, 114, 123, 124, 126], "joint_limited_manipulability_delta": [48, 52, 101], "single_go": [48, 53, 101], "batch_goal": [48, 53, 101], "goalset": [48, 53, 70, 91, 97, 101], "batch_goalset": [48, 53, 91, 97, 101], "forward_out_dist": [48, 53, 101], "forward_pos": [48, 53, 101], "use_sweep": [48, 54, 101], "use_sweep_kernel": [48, 54, 101], "use_speed_metr": [48, 54, 101], "sum_dist": [48, 54, 101], "sweep_kernel_fn": [48, 54, 101], "sweep_fn": [48, 54, 101], "discrete_fn": [48, 54, 101], "pseudo_invers": [48, 55, 101], "ep": [48, 55, 78, 101], "proj_typ": [48, 55, 101], "get_pinv_null_disp": [48, 55, 101], "self_collision_kin_config": [48, 56, 101], "max_limit": [48, 57, 101], "max_nlimit": [48, 57, 101], "dt_traj_param": [48, 57, 60, 62, 101], "7": [49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 72, 109, 113, 115, 119], "teleport_mod": [49, 60, 62, 74, 79, 101], "state_batch": 49, "retract_idx": 49, "perform": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 85, 102, 104, 105, 112, 113, 123], "everi": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 112, 114, 121], "although": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "recip": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "afterward": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "sinc": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 106, 112, 113, 114], "former": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "care": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "run": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 94, 102, 104, 109, 110, 111, 112, 114, 115, 116, 120, 127], "regist": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "hook": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "latter": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "silent": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59], "them": [49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 109, 112, 113], "po": [49, 51], "vel": [49, 57, 78], "p_b": 49, "v_b": 49, "a_b": 49, "j_b": 49, "cspace_weight": 49, "run_weight_vel": 49, "run_weight_acc": 49, "out_gv": 49, "out_ga": 49, "out_gj": 49, "grad_out_cost": [49, 51, 59], "p_l": 49, "target_idx": 51, "out_cost_v": 51, "disp_vec": [51, 55], "return_goal_dist": 51, "goal_vec": 51, "current_vec": 51, "jac_batch": [52, 55], "qdot": 52, "pairwis": 53, "shortest": 53, "out_r_vec": 53, "out_p_grad": 53, "out_q_grad": 53, "grad_g_dist": 53, "grad_r_err": 53, "grad_out_idx": 53, "ee_pos_batch": [53, 58], "ee_rot_batch": 53, "query_pos": 53, "sweep": 54, "timestep": [54, 83, 85, 94, 118], "similar": [54, 112], "chomp": [54, 113], "icra": [54, 123, 124, 126], "09": [54, 118], "prevent": 54, "through": [54, 109, 112, 113, 114, 115], "minim": 54, "encourag": [54, 102, 104], "move": [54, 62, 105, 106, 109, 112, 114, 121, 127], "around": [54, 112, 114], "central": 54, "differ": [54, 65, 94, 109, 111, 113, 114, 121, 127], "less": [54, 113, 114, 127], "better": [54, 113], "lead": [54, 110, 123], "outsid": [54, 111, 113], "zero": [54, 59, 66, 72, 101, 111, 113], "slowli": 54, "our": [54, 85, 102, 104, 112, 113, 121, 123], "post": [54, 113], "interpol": [54, 82, 85, 94, 112], "hit": 54, "sum": [54, 94, 113, 114], "across": [54, 94, 102, 104, 105, 113, 114, 121], "formul": [54, 123], "robot_spheres_in": 54, "project": [55, 113, 124], "space": [55, 94, 115], "0001": 55, "cost_vec": 59, "goal_dist": 59, "get_dt_arrai": [60, 62, 101], "state_seq": [60, 61, 62, 101], "ee_pos_seq": [60, 62, 101, 111], "ee_quat_seq": [60, 62, 101, 111], "lin_jac_seq": [60, 62, 101], "ang_jac_seq": [60, 62, 101], "vel_scal": [60, 62, 101], "state_estimation_vari": [60, 62, 101], "control_spac": [60, 62, 74, 79, 101], "state_filter_cfg": [60, 62, 101], "return_full_act_buff": [60, 62, 101], "filter_robot_command": [60, 62, 94, 96, 101], "get_next_st": [60, 62, 63, 101], "robot_cmd_tensor_step": [60, 62, 101], "update_cmd_batch_s": [60, 62, 101], "integrate_act": [60, 62, 101], "integrate_action_step": [60, 62, 101], "init_action_mean": [60, 62, 101], "get_state_bound": [60, 62, 101], "position_teleport": [60, 64, 101], "position_clique_kernel": [60, 64, 101], "acceleration_kernel": [60, 64, 101], "position_cliqu": [60, 64, 101], "filter_sign": [60, 64, 101], "cpu": [61, 66, 67, 78, 82, 101], "order": [61, 72], "prev_stat": 61, "full_rank": 61, "shift": 61, "diagon": 61, "act": [61, 62, 63, 65], "dt_h": [61, 64], "integrate_matrix": 61, "fd_matrix": 61, "q_0": 61, "u": [61, 114], "diag_dt": 61, "u_act": [61, 64], "mask": 61, "n_mask": 61, "fd_1": 61, "fd_2": 61, "fd_3": 61, "grad_out_p": 61, "grad_out_v": 61, "grad_out_a": 61, "grad_out_j": 61, "mask_matrix": 61, "integrate_matrix_po": 61, "start_tensor": 61, "end_tensor": 61, "h": [61, 62], "int_step": 61, "num_point": 62, "all_dt": 62, "data_dict_in": [62, 71], "kinematic_model_config": 62, "curr_stat": 62, "time": [62, 82, 111, 112, 113, 116, 121], "next_stat": 62, "tensorstep": 62, "variabl": [62, 121, 124, 126], "start_state_idx": [62, 64], "abc": 63, "currend_st": 63, "out_state_seq": 64, "finite_difference_mod": 64, "filter_veloc": 64, "filter_acceler": 64, "filter_jerk": 64, "signal": 64, "t_bhdof_float": 65, "t_bhvalue_float": 65, "normalize_rot": [65, 66, 70, 101], "solv": [65, 85, 87, 91, 93, 94, 96, 98, 99, 101, 107, 112, 123], "pair": [65, 127], "case": [65, 112, 113], "find": [65, 94, 102, 104, 112, 113, 120], "address": 65, "keep": [65, 112, 113, 121, 124, 127], "num_se": [65, 70, 72, 80, 91, 93, 94, 95, 96, 97, 101, 111], "kernel_mat": [65, 70, 72], "update_idx_buff": 65, "copi": [65, 70, 72, 127], "anoth": [65, 70, 106, 120], "batch_env": [65, 91, 97, 101], "batch_retract": [65, 91, 97, 101], "pose_batch_s": 65, "from_bas": [66, 67, 71, 101, 111], "to_devic": [66, 67, 101, 113], "to_int8_devic": [66, 67, 101], "rgb_imag": [66, 68, 101], "depth_imag": [66, 68, 101], "image_segment": [66, 68, 101], "projection_matrix": [66, 68, 101], "resolut": [66, 68, 101, 114], "intrins": [66, 68, 101], "timestamp": [66, 68, 101], "from_matrix": [66, 70, 101], "get_rot": [66, 70, 101], "stack": [66, 70, 72, 101], "unsqueez": [66, 70, 72, 101, 115], "get_index": [66, 70, 101], "from_list": [66, 70, 72, 101, 113], "from_batch_list": [66, 70, 101], "to_list": [66, 70, 101], "tolist": [66, 70, 101, 115], "get_matrix": [66, 70, 101], "get_numpy_matrix": [66, 70, 101], "invers": [66, 70, 83, 102, 104, 107, 115], "get_pose_vector": [66, 70, 101], "cat": [66, 70, 101, 115], "angular_dist": [66, 70, 101], "linear_dist": [66, 70, 101], "multipli": [66, 70, 101], "geodesic_dist": [66, 70, 101], "ik_seed": [66, 71, 101], "write_config": [66, 71, 101], "blend": [66, 72, 101], "get_state_tensor": [66, 72, 101], "from_numpi": [66, 72, 101], "from_posit": [66, 72, 101, 111], "from_state_tensor": [66, 72, 101], "copy_at_index": [66, 72, 101], "copy_data": [66, 72, 101], "squeez": [66, 72, 101, 111], "calculate_fd_from_posit": [66, 72, 101], "get_ordered_joint_st": [66, 72, 101], "get_augmented_joint_st": [66, 72, 101], "append_joint": [66, 72, 101], "trim_trajectori": [66, 72, 101], "dev_id": 67, "data_tensor": 67, "camera_imag": 68, "new_data": 68, "normal": 70, "recommend": 70, "come": [70, 112], "extern": 70, "program": [70, 112], "do": [70, 111, 112, 113], "send": [70, 111, 112, 114, 120], "other_pos": 70, "descript": [70, 93, 127], "q_xyzw": 70, "pose_list": 70, "use_phi3": 70, "phi_3": 70, "huynh": 70, "du": 70, "3d": 70, "comparison": [70, 102, 104], "analysi": [70, 112], "journal": [70, 123, 125], "mathemat": 70, "imag": [70, 102, 104, 110, 113, 114, 116], "vision": [70, 124, 126], "2009": 70, "155": 70, "164": [70, 127], "gp_out": 70, "gq_out": 70, "gpt_out": 70, "q1": 70, "q2": 70, "q_re": 70, "quat_r": 70, "coeff": 72, "new_stat": 72, "ndarri": 72, "state_tensor": 72, "in_joint_st": 72, "idx": [72, 76, 78, 94], "ordered_joint_nam": 72, "j": [72, 83, 92, 94, 115], "end_idx": 72, "fixed_sampl": [74, 78, 101], "sample_ratio": [74, 78, 101], "filter_coeff": [74, 78, 79, 101], "n_knot": [74, 78, 101], "scale_tril": [74, 78, 101], "covariance_matrix": [74, 78, 101], "sample_method": [74, 78, 101], "sine_period": [74, 78, 101], "degre": [74, 78, 82, 101], "filter_sampl": [74, 78, 101], "filter_smooth": [74, 78, 101], "generate_sine_wav": [74, 78, 101], "fast_forward": [74, 78, 101], "get_gaussian_sampl": [74, 78, 101], "filter_joint_st": [74, 79, 101], "integrate_jerk": [74, 79, 101], "integrate_acc": [74, 79, 101], "integrate_vel": [74, 79, 101], "integrate_po": [74, 79, 101], "cubic": [74, 82, 101], "quintic": [74, 82, 101], "linear_cuda": [74, 82, 94, 96, 101], "kunz_stilman_optim": [74, 82, 101], "add_subroot": [74, 83, 101], "load_stage_from_fil": [74, 83, 101], "load_stag": [74, 83, 101], "get_pos": [74, 83, 101], "get_obstacles_from_stag": [74, 83, 101], "add_world_to_stag": [74, 83, 101], "get_prim_from_obstacl": [74, 83, 101], "add_cuboid_to_stag": [74, 83, 101], "add_cylinder_to_stag": [74, 83, 101], "add_sphere_to_stag": [74, 83, 101], "add_mesh_to_stag": [74, 83, 101], "get_obstacle_from_prim": [74, 83, 101], "write_stage_to_fil": [74, 83, 101], "create_anim": [74, 83, 101], "create_obstacle_anim": [74, 83, 101], "create_linkpose_robot_anim": [74, 83, 101], "write_trajectory_anim": [74, 83, 101], "load_robot": [74, 83, 101], "write_trajectory_animation_with_robot_usd": [74, 83, 101, 115], "create_grid_usd": [74, 83, 101, 115], "load_robot_usd": [74, 83, 101], "get_robot_prim": [74, 83, 101], "update_robot_joint_st": [74, 83, 101], "write_motion_gen_log": [74, 83, 101], "q_de": [75, 79, 93], "r_de": 75, "px": 75, "py": [75, 105, 109, 112, 114, 115, 116, 122, 127], "pz": 75, "print": [75, 109, 111, 112], "current_px": 75, "current_pi": 75, "current_pz": 75, "des_px": 75, "des_pi": 75, "des_pz": 75, "d": [76, 111, 113], "d_list": 76, "level": [77, 121], "txt": [77, 109], "exc_info": 77, "stack_info": 77, "built": [78, 89, 90, 109, 110, 111, 113], "method": [78, 112, 113, 123], "0x7f327a9322e0": 78, "halton": 78, "sample_config": [78, 91, 93, 101, 111], "sample_shap": 78, "c_arr": 78, "t_arr": 78, "100": [78, 93, 94, 113, 115], "up_bound": 78, "low_bound": 78, "123": 78, "ndim": 78, "store_buff": 78, "1000": [78, 96], "fast": [78, 113], "sampler": [78, 88, 89, 90, 101], "varianc": 78, "num": 78, "idx_batch": 78, "use_scipy_halton": 78, "coeff_dict": 79, "filter_config": 79, "raw_joint_st": 79, "qddd_de": 79, "cmd_joint_stat": 79, "qdd_de": 79, "qd_de": 79, "new_tensor": 80, "mem_tensor": 80, "renam": 80, "clone_if_not_non": 80, "equal": 81, "scipi": 82, "lang": 82, "custom": [82, 112, 113, 121], "meth": 82, "scienc": 82, "system": [82, 124, 126], "viii": 82, "2012": 82, "8": [82, 83, 113, 115, 121], "kunz": 82, "stillman": 82, "durat": 82, "20": [82, 109, 111], "max_traj_pt": 82, "compute_dynam": 82, "raw_traj": [82, 85], "des_horizon": 82, "max_vel": [82, 92], "max_acc": [82, 91, 92, 96, 101], "raw_dt": [82, 85, 92], "kind": 82, "out_traj_st": 82, "max_devi": 82, "min_dt": [82, 91, 92, 96, 101], "traj_step": 82, "opt_dt": [82, 85, 92], "max_veloc": 82, "last_step": 82, "translat": 83, "use_float": 83, "xformcach": 83, "mesh_geom": 83, "ob": 83, "cube_geom": 83, "cube": [83, 105, 106, 109, 112, 114, 127], "sphere_geom": 83, "curobo_stag": 83, "base_fram": [83, 115], "sub_root": 83, "prim_path": 83, "timecod": [83, 122], "only_path": 83, "ignore_path": 83, "only_substr": 83, "ignore_substr": 83, "reference_prim_path": 83, "obstacles_fram": 83, "base_t_obstacle_pos": 83, "enable_phys": 83, "flatten": 83, "robot_world_cfg": 83, "robot_fram": 83, "anim": [83, 115, 122], "prim_nam": 83, "n_mesh": [83, 90], "robot_bas": 83, "robot_usd_path": 83, "robot_base_fram": 83, "local_asset_path": [83, 115], "asset": [83, 112], "write_robot_usd_path": 83, "robot_asset_prim_path": 83, "panda": [83, 105, 110, 111, 112, 116, 119, 127], "material_nam": 83, "object_path": 83, "obj_prim": 83, "robot_model_fil": 83, "q_start": 83, "q_traj": [83, 115], "save_path": [83, 115, 116], "robot_color": 83, "robot_usd_local_refer": 83, "kin_model": [83, 111], "visualize_robot_spher": [83, 115], "usds_path": 83, "max_env": [83, 115], "max_timecod": [83, 115], "x_space": [83, 115], "y_space": [83, 115], "x_per_row": [83, 115], "prefix_str": 83, "write_asset_path": 83, "robot_base_path": 83, "joint_prim": 83, "robot_fil": [83, 111, 115], "save_prefix": 83, "write_ik": 83, "write_trajopt": 83, "write_graph": 83, "goal_object": 83, "overlay_ik": 83, "overlay_trajopt": 83, "grid_spac": 83, "motiongenresult": [83, 87, 91, 94, 101], "quiet": 84, "traj_tstep": [85, 91, 96, 101], "out_traj": 85, "gpu": [85, 112, 113, 121, 123], "bug": 85, "make": [85, 109, 111], "last": [85, 94], "affect": 85, "source_fil": 86, "destination_path": 86, "remove_extens": 86, "dir_path": 86, "extens": 86, "curobo_robot_world": [87, 88, 101], "curoborobotworldconfig": [87, 88, 89, 101], "curoborobotworld": [87, 88, 89, 101], "robot_world": [87, 88, 101, 111, 115], "robotworldconfig": [87, 88, 89, 90, 101, 111, 115], "robotworld": [87, 88, 89, 90, 101, 111, 115], "evalu": [87, 91, 96, 101, 116], "trajevaluatorconfig": [87, 91, 92, 94, 96, 101], "trajevalu": [87, 91, 92, 94, 96, 101], "ik_solv": [87, 91, 94, 101, 111, 112, 120], "iksolverconfig": [87, 91, 93, 101, 111], "ikresult": [87, 91, 93, 94, 101, 111], "iksolv": [87, 91, 93, 94, 101, 111, 112, 120], "motion_gen": [87, 91, 101, 111], "motiongenconfig": [87, 91, 94, 101, 111], "motiongenplanconfig": [87, 91, 94, 101, 111], "motiongen": [87, 91, 94, 101, 111], "mpc": [87, 91, 101, 112, 114], "mpcsolverconfig": [87, 91, 95, 101], "mpcsolver": [87, 91, 95, 101], "trajopt": [87, 91, 94, 101, 120], "trajoptsolverconfig": [87, 91, 96, 101], "trajresult": [87, 91, 96, 101], "trajoptsolv": [87, 91, 94, 96, 101, 120], "reachersolvetyp": [87, 91, 93, 96, 97, 101], "reachersolvest": [87, 91, 93, 95, 96, 97, 101], "motiongensolverst": [87, 91, 97, 101], "safety_rollout": [87, 98, 101], "use_cuda_graph_metr": [87, 91, 95, 96, 98, 101], "js_action": [87, 98, 101], "get_debug_data": [87, 98, 101], "get_debug_cost": [87, 98, 101], "get_init_act": [87, 98, 101], "newton_optim": [87, 98, 101], "particle_optim": [87, 98, 101], "update_init_se": [87, 99, 101], "bound_scal": [88, 89, 90, 101, 115], "collision_cost": [88, 89, 90, 101], "collision_constraint": [88, 89, 90, 101, 115], "contact_dist": [88, 89, 90, 101], "load_from_config": [88, 90, 101, 111, 115], "get_kinemat": [88, 90, 101, 111, 115], "update_world": [88, 90, 91, 93, 94, 95, 101], "get_collision_dist": [88, 90, 101, 111, 115], "get_collision_constraint": [88, 90, 101], "get_self_collis": [88, 90, 101], "get_collision_vector": [88, 90, 101], "get_world_self_collision_distance_from_joint": [88, 90, 101, 111], "get_world_self_collision_distance_from_joint_trajectori": [88, 90, 101], "get_bound": [88, 90, 101], "valid": [88, 90, 101, 115], "sample_trajectori": [88, 90, 101], "validate_trajectori": [88, 90, 101], "layer": [89, 90, 94, 114, 115], "core": [89, 90, 109, 111, 112], "featur": [89, 90, 106, 115], "franka": [90, 105, 110, 111, 112, 115, 119, 127], "n_cuboid": 90, "collision_activation_dist": [90, 93, 94, 95, 96, 111], "self_collision_activation_dist": 90, "max_collision_dist": 90, "collision_checker_typ": [90, 93, 94, 95], "world_collision_check": 90, "x_sph": [90, 113], "mask_valid": [90, 111], "x_de": [90, 115], "x_current": 90, "cost_weight": [91, 92, 96, 101], "evaluate_interpolated_smooth": [91, 92, 101], "evaluate_from_posit": [91, 92, 101], "calculate_dt": [91, 92, 101], "position_threshold": [91, 93, 94, 96, 101, 111], "rotation_threshold": [91, 93, 94, 96, 101, 111], "ik_nn_seed": [91, 93, 101], "sample_rejection_ratio": [91, 93, 101], "js_solut": [91, 93, 101], "error": [91, 93, 94, 101, 109, 111], "get_unique_solut": [91, 93, 101], "get_batch_unique_solut": [91, 93, 101], "update_goal_buff": [91, 93, 95, 96, 97, 101], "solve_ani": [91, 93, 96, 101], "solve_singl": [91, 93, 96, 101], "solve_goalset": [91, 93, 96, 101], "solve_batch": [91, 93, 96, 101, 111], "solve_batch_goalset": [91, 93, 96, 101], "solve_batch_env": [91, 93, 96, 101], "solve_batch_env_goalset": [91, 93, 96, 101], "solve_from_solve_st": [91, 93, 96, 101], "get_result": [91, 93, 101], "get_se": [91, 93, 96, 101], "batch_env_solv": [91, 93, 101, 107], "get_success": [91, 93, 101], "generate_se": [91, 93, 101], "check_constraint": [91, 93, 94, 101], "get_all_kinematics_inst": [91, 93, 94, 96, 101], "fk": [91, 93, 96, 101, 111, 115], "attach_object_to_robot": [91, 93, 96, 101], "detach_object_from_robot": [91, 93, 94, 96, 101], "get_retract_config": [91, 93, 94, 101, 111], "ik_se": [91, 94, 101], "graph_se": [91, 94, 101], "trajopt_se": [91, 94, 101], "noisy_trajopt_se": [91, 94, 101], "batch_ik_se": [91, 94, 101], "batch_trajopt_se": [91, 94, 101], "graph_plann": [91, 94, 101], "trajopt_solv": [91, 94, 101], "js_trajopt_solv": [91, 94, 101], "finetune_trajopt_solv": [91, 94, 101], "partial_ik_it": [91, 94, 101], "graph_trajopt_it": [91, 94, 101], "store_debug_in_result": [91, 94, 96, 101], "finetune_dt_scal": [91, 94, 101], "optimized_plan": [91, 94, 101, 111], "ik_tim": [91, 94, 101], "graph_tim": [91, 94, 101], "trajopt_tim": [91, 94, 101], "finetune_tim": [91, 94, 101], "total_tim": [91, 94, 101], "statu": [91, 94, 101], "attempt": [91, 94, 101], "trajopt_attempt": [91, 94, 101], "used_graph": [91, 94, 101], "graph_plan": [91, 94, 101], "copy_idx": [91, 94, 101], "get_successful_path": [91, 94, 101], "get_interpolated_plan": [91, 94, 101, 111], "motion_tim": [91, 94, 101], "enable_graph": [91, 94, 101, 111], "enable_opt": [91, 94, 101], "use_nn_ik_se": [91, 94, 101], "need_graph_success": [91, 94, 101], "max_attempt": [91, 94, 95, 101, 111], "timeout": [91, 94, 101], "enable_graph_attempt": [91, 94, 101], "disable_graph_attempt": [91, 94, 101], "ik_fail_return": [91, 94, 101], "partial_ik_opt": [91, 94, 101], "num_ik_se": [91, 94, 97, 101], "num_graph_se": [91, 94, 97, 101], "num_trajopt_se": [91, 94, 97, 101], "success_ratio": [91, 94, 101], "fail_on_invalid_queri": [91, 94, 101], "enable_finetune_trajopt": [91, 94, 101], "solve_ik": [91, 94, 101], "graph_search": [91, 94, 101], "plan_singl": [91, 94, 101, 111], "plan_goalset": [91, 94, 101], "plan_batch": [91, 94, 101], "plan_batch_goalset": [91, 94, 101], "plan_batch_env_goalset": [91, 94, 101], "plan_batch_env": [91, 94, 101], "clear_world_cach": [91, 94, 101], "plan_single_j": [91, 94, 101], "batch_plan": [91, 94, 101], "solve_trajopt": [91, 94, 101], "get_active_j": [91, 94, 95, 101], "attach_objects_to_robot": [91, 94, 101], "attach_bounding_box_from_blox_to_robot": [91, 94, 101], "attach_new_object_to_robot": [91, 94, 101], "attach_spheres_to_robot": [91, 94, 101], "detach_spheres_from_robot": [91, 94, 101], "get_full_j": [91, 94, 96, 101], "add_running_pose_constraint": [91, 94, 101], "remove_running_pose_constraint": [91, 94, 101], "run_finetune_trajopt": [91, 94, 101], "world_collis": [91, 94, 95, 101], "update_interpolation_typ": [91, 94, 101], "update_locked_st": [91, 94, 101], "use_cuda_graph_full_step": [91, 95, 101], "step_onc": [91, 95, 101], "setup_solve_singl": [91, 95, 101], "setup_solve_goalset": [91, 95, 101], "setup_solve_batch": [91, 95, 101], "setup_solve_batch_goalset": [91, 95, 101], "setup_solve_batch_env": [91, 95, 101], "setup_solve_batch_env_goalset": [91, 95, 101], "fn": [91, 95, 101], "update_go": [91, 95, 97, 101, 115], "get_visual_rollout": [91, 95, 101], "use_cspace_se": [91, 96, 101], "seed_ratio": [91, 96, 101], "traj_evaluator_config": [91, 94, 96, 101], "traj_evalu": [91, 94, 96, 101], "evaluate_interpolated_trajectori": [91, 94, 96, 101], "cspace_threshold": [91, 94, 96, 101], "interpolate_rollout": [91, 96, 101], "trim_step": [91, 94, 96, 101], "interpolated_solut": [91, 96, 101], "smooth_error": [91, 96, 101], "smooth_label": [91, 96, 101], "raw_solut": [91, 96, 101], "batch_solv": [91, 96, 101, 107], "get_linear_se": [91, 96, 101], "get_start_se": [91, 96, 101], "get_seed_set": [91, 96, 101], "get_bias_se": [91, 96, 101], "calculate_trajectory_dt": [91, 96, 101], "solver_dt": [91, 96, 101], "update_solver_dt": [91, 96, 101], "batch_env_goalset": [91, 97, 101], "solve_typ": [91, 93, 96, 97, 101], "batch_mod": [91, 96, 97, 101], "num_mpc_se": [91, 97, 101], "get_batch_s": [91, 97, 101], "get_ik_batch_s": [91, 97, 101], "create_goal_buff": [91, 97, 101], "ik_solve_st": [91, 97, 101], "trajopt_solve_st": [91, 97, 101], "001": [92, 94, 96, 127], "skip_last_tstep": 92, "50": [93, 113], "005": [93, 94, 96, 111, 127], "particle_fil": [93, 96], "particle_ik": [93, 94], "gradient_fil": [93, 96], "gradient_ik": [93, 94], "self_collision_opt": [93, 94, 96, 111], "grad_it": 93, "use_particle_opt": [93, 96], "use_gradient_desc": [93, 94, 96], "collision_cach": [93, 94, 95, 96], "n_collision_env": [93, 94, 95, 96], "ee_link_nam": [93, 94], "use_": [93, 95, 96], "es_learning_r": [93, 95, 96], "use_fixed_sampl": [93, 96], "regular": 93, "high_precis": 93, "sqrt": [93, 115], "roundoff_decim": 93, "solve_st": [93, 95, 96], "seed_config": [93, 94], "return_se": [93, 94], "use_nn_se": [93, 94, 96], "newton_it": [93, 94, 96], "ik": [93, 94, 111, 112, 115, 116, 123], "t_bdof": [93, 97], "random_restart": 93, "per": [94, 112, 113, 121], "problem": [94, 107, 110, 111, 113, 121, 123], "share": [94, 109], "final": [94, 127], "fine": 94, "tune": [94, 112], "dens": 94, "waypoint": 94, "finetun": [94, 105], "30": 94, "12": 94, "num_batch_ik_se": 94, "num_batch_trajopt_se": 94, "num_trajopt_noisy_se": 94, "particle_ik_fil": 94, "gradient_ik_fil": 94, "particle_trajopt_fil": 94, "particle_trajopt": [94, 96], "gradient_trajopt_fil": 94, "gradient_trajopt": [94, 96], "finetune_trajopt_fil": 94, "finetune_trajopt": 94, "trajopt_tstep": 94, "5000": [94, 111], "grad_trajopt_it": [94, 96], "trajopt_seed_ratio": 94, "bia": [94, 96], "ik_opt_it": 94, "ik_particle_opt": 94, "trajopt_particle_opt": 94, "minimize_jerk": [94, 96], "use_es_ik": 94, "use_es_trajopt": 94, "es_ik_learning_r": 94, "es_trajopt_learning_r": 94, "use_ik_fixed_sampl": 94, "use_trajopt_fixed_sampl": 94, "fixed_iters_trajopt": 94, "store_ik_debug": 94, "store_trajopt_debug": 94, "collision_max_outside_dist": 94, "trajopt_dt": [94, 96], "js_trajopt_dt": 94, "js_trajopt_tstep": 94, "finetune_trajopt_it": 94, "finetune_smooth_weight": 94, "maximum_trajectory_tim": 94, "maximum_trajectory_dt": 94, "refer": [94, 109, 113, 117, 120], "satisfi": [94, 112], "q_g": 94, "second": [94, 112, 113], "taken": 94, "includ": [94, 111, 112], "fail": 94, "befor": [94, 109, 112, 116, 120, 121, 127], "wa": [94, 113, 123], "source_result": 94, "60": [94, 114], "retim": 94, "low": 94, "start_config": 94, "goal_config": 94, "plan_config": 94, "warmup_js_trajopt": 94, "batch_env_mod": 94, "act_se": 94, "return_all_solut": [94, 96], "in_j": [94, 95], "joint_stat": 94, "object_nam": 94, "sphere_fit_typ": 94, "world_objects_pose_offset": 94, "remove_obstacles_from_world_config": 94, "blox_layer_nam": 94, "active_j": [94, 96], "lock_x": 94, "lock_i": 94, "lock_z": 94, "lock_rx": 94, "lock_ri": 94, "lock_rz": 94, "traj_solut": 94, "update_trajopt": 94, "world_cfg": [95, 111], "particle_opt_it": 95, "step_dt": 95, "use_lbfg": 95, "use_mppi": 95, "predict": [95, 124, 126], "arm": [95, 119, 124, 126], "task": [95, 102, 104, 106, 108, 112, 113], "seed_traj": [95, 96], "10000": [96, 115], "aux_rollout": 96, "seed_success": 96, "traj_stat": 96, "opt_trajectori": 96, "interpolated_trajectori": 96, "current_solve_st": 97, "current_goal_buff": 97, "packag": [100, 101, 109, 115, 116, 123, 127], "subpackag": [100, 101], "submodul": [100, 101], "_api": 101, "curobo": [101, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 122, 125, 126, 127], "research": [102, 104, 126], "arxiv": [102, 104, 123, 125], "pdf": [102, 104, 123], "preview": [102, 104], "highlight": [102, 104], "technic": [102, 103, 104, 113], "report": [102, 103, 104, 113], "oct": [102, 103, 104], "2023": [102, 103, 104, 109, 123, 124, 125, 126], "suit": [102, 104, 113], "algorithm": [102, 104, 113], "significantli": [102, 104, 121], "faster": [102, 104, 110, 113, 123], "exist": [102, 104, 117, 121], "leverag": [102, 104, 106, 110, 112, 113, 114, 122, 124, 126], "depth": [102, 104, 110, 111, 113, 116], "numer": [102, 104], "descent": [102, 104, 120], "mppi": [102, 104, 114, 120, 124, 126], "30m": [102, 104], "ur10": [102, 104, 112, 119], "100m": [102, 104], "jetson": [102, 104], "orin": [102, 104], "parall": [102, 104], "penal": [102, 104], "smoother": [102, 104], "shorter": [102, 104], "left": [102, 104, 113], "birrt": [102, 104], "pick": [102, 104, 106, 112, 113], "place": [102, 104, 106, 112, 113, 114], "exampl": [102, 104, 105, 106, 109, 111, 112, 113, 114, 115, 117, 120, 122, 127], "motionbenchmak": [102, 104], "polici": [102, 104], "dataset": [102, 104], "own": [105, 110], "launch": [105, 112, 114, 127], "omni_python": [105, 109, 112, 114, 127], "isaac_sim": [105, 109, 112, 127], "batch_collision_check": 105, "chang": [105, 109, 110, 111, 112, 114, 117, 118], "made": 105, "fashion": 105, "batch_motion_gen_reach": 105, "trigger": [105, 112], "being": [105, 106, 112, 114], "done": [105, 120], "yet": 105, "lower": [105, 112], "qualiti": [105, 112], "long": [106, 121], "9": [106, 127], "front": [106, 114], "tower": 106, "seen": [106, 120], "below": [106, 109, 111, 112, 113, 114, 115, 116, 120, 121, 123, 127], "kei": [106, 127], "componenet": 106, "design": [106, 114, 118], "shown": [106, 110, 112, 113, 114], "consist": 106, "grasp": [106, 113], "close": [106, 114, 127], "gripper": 106, "top": 106, "open": [106, 109, 114, 127], "delet": 106, "placement": 106, "its": [106, 123], "reprensent": 106, "sim": [106, 110, 113, 114, 127], "reason": 106, "about": [106, 112, 119], "similarli": 106, "disabl": [106, 121], "No": 107, "goalset_solv": 107, "batch_goalset_solv": 107, "batch_goalset_env_solv": 107, "python": [109, 110, 113, 116, 127], "compon": [109, 111], "instruct": [109, 114, 116, 127], "want": [109, 110, 111, 113, 116, 121, 127], "skip": [109, 110, 127], "docker": 109, "repositori": 109, "git": [109, 116], "nvlab": 109, "pip": [109, 114, 116, 127], "isol": [109, 127], "minut": 109, "python3": 109, "m": [109, 114, 127], "pytest": [109, 118], "verifi": 109, "unit": 109, "test": [109, 112], "look": [109, 112, 113, 121, 122, 127], "script": [109, 116, 127], "2022": [109, 124, 126], "isaac_sim_workstation_instal": 109, "11": 109, "cuda_instruct": 109, "your": [109, 110, 111, 112, 113, 114, 115, 121, 127], "usr": [109, 117], "local": [109, 112, 113], "bin": [109, 117], "bashrc": 109, "echo": 109, "ov": 109, "pkg": 109, "sh": [109, 117, 127], "accordingli": 109, "motion_gen_reach": [109, 112, 127], "click": [109, 112, 114, 127], "plai": [109, 112, 114, 127], "been": [109, 112], "mai": 109, "howev": [109, 111, 112, 113], "found": [109, 113, 121, 127], "tomli": 109, "wheel": 109, "abi": 109, "valtsbluki": 109, "sudo": 109, "apt": 109, "libgoogl": 109, "glog": 109, "dev": 109, "libgtest": 109, "libgflag": 109, "libsqlite3": 109, "cd": [109, 116], "googletest": 109, "cmake": 109, "mkdir": [109, 116, 127], "dpre_cxx11_abi_link": 109, "ON": 109, "j32": 109, "thrust": 109, "esdf_integr": 109, "cu": 109, "recompil": 109, "cmake_cxx_standard": 109, "nvblox_torch": [109, 114, 116], "cmakelist": 109, "upgrad": 109, "wget": 109, "v3": 109, "19": 109, "tar": 109, "gz": 109, "xvzf": 109, "essenti": 109, "checkinstal": 109, "zlib1g": 109, "libssl": 109, "bootstrap": 109, "j8": 109, "gflag": 109, "ccmake": 109, "googl": [109, 124], "unix": 109, "makefil": 109, "ln": 109, "lib": 109, "libglog": 109, "dcmake_cuda_flag": 109, "gencod": 109, "arch": 109, "compute_70": 109, "sm_70": 109, "dcmake_cuda_architectur": 109, "70": 109, "dstdgpu_cuda_architecture_flags_us": 109, "dbuild_for_all_arch": 109, "torch_cuda_arch_list": [109, 121], "ptx": [109, 121], "install_isaac_sim": 109, "import": [109, 111, 113, 115], "cmake_prefix_path": 109, "runtim": [109, 117], "ld_library_path": 109, "glu": 109, "freeglut3": 109, "sphinx": 109, "public": 109, "view": [109, 111, 113, 115], "discuss": 110, "next": [110, 112, 114, 115, 127], "how": [110, 111, 112, 113, 115], "pipelin": [110, 111, 115, 116], "wxyz": 110, "cudagraph": [110, 111, 112, 113, 118], "10x": [110, 111], "nativ": 110, "record": [110, 111], "subsequ": 110, "replai": 110, "referenc": 110, "aricl": 110, "blog": 110, "One": [110, 112], "caveat": 110, "cannot": [110, 111, 118], "henc": [110, 111, 113, 122], "tool": [110, 113], "crash": [110, 118], "captur": [110, 111], "snippet": 111, "third": [111, 115], "parti": [111, 115], "conveni": 111, "frame": [111, 112, 113, 122], "config_fil": 111, "urdf_fil": 111, "rand": 111, "var": [111, 113], "possibl": [111, 113, 114, 122], "explain": [111, 113], "page": [111, 113, 123, 124], "dive": [111, 113], "quick": 111, "tabl": 111, "cube_1": [111, 113], "scene": [111, 112, 113, 114, 124, 126], "080": 111, "043": [111, 113, 127], "471": [111, 113], "284": [111, 113], "834": [111, 113], "srl_ur10_bin": [111, 113], "obj": [111, 113], "world_fil": [111, 115], "curobo_fn": [111, 115], "q_sph": 111, "randn": 111, "q_": 111, "d_world": 111, "d_self": [111, 115], "penetr": 111, "safeti": [111, 112, 127], "greater": 111, "upto": 111, "ik_config": 111, "q_sampl": 111, "kin_stat": [111, 115], "q_solut": 111, "free": [111, 115, 116, 124, 125, 126, 127], "collision_cag": 111, "slower": 111, "collision_t": [111, 115], "motion_gen_config": 111, "retract_cfg": 111, "retract_pos": 111, "traj": 111, "item": [111, 115, 121], "abov": [111, 112, 116, 117], "yaml": [111, 127], "consum": 111, "programmat": 111, "meshe": 112, "leav": [112, 113], "develop": [112, 114, 123], "even": [112, 120], "ad": 112, "becom": 112, "awar": 112, "rate": 112, "1hz": 112, "track": [112, 121, 124], "interact": [112, 114], "marker": 112, "detect": [112, 118], "until": 112, "teleport": 112, "reactiv": [112, 114], "execut": [112, 116], "respect": [112, 113], "tf": 112, "window": [112, 114], "stop": 112, "user": [112, 116, 117], "button": 112, "red": [112, 114, 127], "drag": [112, 113, 114], "drop": [112, 113, 114], "browser": 112, "articul": [112, 127], "ycb": [112, 113], "under": [112, 122], "prop": 112, "dropdown": 112, "section": [112, 127], "tab": 112, "down": 112, "select": 112, "300": 112, "wait": 112, "command": [112, 116], "collision_checker_exampl": 112, "green": [112, 114, 120], "blue": [112, 114], "turn": [112, 114], "vector": [112, 114, 127], "indic": [112, 114, 120], "ui": 112, "request": 112, "gif": 112, "few": [112, 120], "Then": [112, 114], "determin": [112, 113], "With": 112, "xyz": 112, "ik_reach": 112, "demo": 112, "video": [112, 127], "framework": 112, "storm": 112, "advanc": 112, "500hz": 112, "rtx": 112, "4090": 112, "compar": 112, "125hz": 112, "applic": [112, 122], "mpc_exampl": 112, "try": [112, 114, 121], "trail": 112, "stuck": 112, "minima": 112, "behind": 112, "pitcher": 112, "explor": [112, 123], "guarante": 112, "put": 112, "advis": 112, "deploi": 112, "tri": [112, 113], "modular": 112, "dual": 112, "multi_arm_reach": 112, "dual_ur10": [112, 119], "univers": [112, 119], "describ": [113, 115], "later": 113, "overview": 113, "illustr": [113, 120], "obstacle_1": 113, "mesh_fil": 113, "obstacle_2": 113, "mesh_1": 113, "obstacle_3": 113, "obstacle_4": 113, "cylinder_1": 113, "obstacle_5": 113, "sphere_1": 113, "viewer": [113, 114], "meshlab": 113, "assign": 113, "debug_mesh": 113, "five": 113, "right": 113, "cuboid_world": 113, "debug_collision_cuboid": 113, "visula": 113, "bottom": 113, "row": 113, "altern": 113, "accur": 113, "collision_supported_world": 113, "collision_support_world": 113, "debug_collision_mesh": 113, "4x": 113, "bvh": 113, "travers": 113, "inherit": 113, "entiti": 113, "world_ccheck": 113, "test_mesh": 113, "collision_buff": 113, "act_dist": 113, "intern": [113, 120, 123], "know": 113, "without": [113, 123], "recreat": 113, "therebi": 113, "break": 113, "alreadi": [113, 117], "what": 113, "interfac": [113, 114], "world_collision_config": 113, "new_cuboid": 113, "add_cuboid": 113, "new_pos": 113, "toggl": 113, "short": 113, "thorough": 113, "world_config_1": 113, "cube_env_1": 113, "world_config_2": 113, "cube_env_2": 113, "world_coll_config": 113, "query_buff": 113, "assert": 113, "int32": 113, "live": 113, "abl": [113, 121], "acheiv": 113, "slow": 113, "veri": [113, 124, 127], "would": [113, 116], "flow": 113, "chart": 113, "hierarchi": 113, "contribut": [113, 123], "welcom": 113, "eta": 113, "far": [113, 121], "awai": 113, "motiv": 113, "equat": 113, "neg": 113, "text": 113, "begin": 113, "leq": 113, "frac": 113, "introduc": [113, 123], "discret": 113, "thin": 113, "show": [113, 114, 115, 123], "benefit": 113, "push": 113, "itself": 113, "wall": 113, "rush": 113, "overal": 113, "incur": 113, "often": 113, "reloc": 113, "techniqu": [113, 114, 123], "complex": 113, "rather": 113, "manual": 113, "obstacle_capsul": 113, "sph": 113, "bounding_spher": 113, "effect": [113, 123], "euclidean": 114, "esdf": 114, "segment": 114, "decai": 114, "ideal": 114, "high": 114, "expos": 114, "walk": 114, "pre": 114, "instal": [114, 116, 118, 121, 127], "collision_check": 114, "insert": 114, "now": [114, 121, 127], "basic": 114, "motion_gen_reacher_nvblox": 114, "mpc_nvblox_exampl": 114, "realsens": 114, "pyrealsense2": 114, "monitor": 114, "clip": 114, "rgb": [114, 124, 126], "stream": 114, "render": [114, 116, 122], "realsense_collis": 114, "collid": 114, "appear": 114, "realsense_reach": 114, "hq_voxel": 114, "machin": 114, "framer": 114, "realsense_mpc": 114, "stai": 114, "As": 115, "loss": 115, "train": 115, "friendli": 115, "world_config_fil": 115, "swap": 115, "200": 115, "curobo_wrapp": 115, "torch_layers_exampl": 115, "uuid": 115, "nn": 115, "tensorboard": 115, "summarywrit": 115, "tqdm": 115, "hold": 115, "curobotorch": 115, "__init__": 115, "simpl": [115, 123], "structur": 115, "q_current": 115, "q_out": 115, "super": 115, "feature_dim": 115, "q_feature_dim": 115, "final_feature_dim": 115, "output_dim": 115, "_robot_world": 115, "_feature_mlp": 115, "sequenti": 115, "512": 115, "relu6": 115, "_final_mlp": 115, "256": 115, "64": 115, "get_featur": 115, "q_sdf": 115, "q_self": 115, "append": 115, "in_featur": 115, "mlp": 115, "q_mid": 115, "q_scale": 115, "mid_featur": 115, "d_sdf": 115, "linalg": 115, "val_loss": 115, "validatin": 115, "__name__": 115, "__main__": 115, "write_usd": 115, "writer": 115, "uuid4": 115, "no_grad": 115, "q_train": 115, "q_val": 115, "2048": 115, "usd_list": 115, "adam": [115, 123, 125], "lr": 115, "weight_decai": 115, "batch_start": 115, "arang": 115, "x_des_train": 115, "x_des_val": 115, "q_debug": 115, "bar": 115, "x_train": 115, "x_des_batch": 115, "zero_grad": 115, "add_scalar": 115, "eval": 115, "q_pred": 115, "set_descript": 115, "len": 115, "gripper_mesh": 115, "target_gripp": 115, "franka_descript": [115, 127], "hand_ee_link": 115, "dae": 115, "save_nam": 115, "rand_perm": 115, "randperm": 115, "epoch_grid": 115, "robometr": 116, "csv": 116, "fishbot": 116, "measur": 116, "kinematics_benchmark": 116, "file_nam": 116, "ik_benchmark": 116, "curobo_benchmark": 116, "curobo_nvblox_benchmark": 116, "pyrend": 116, "robometrics_benchmark": 116, "who": 116, "understand": 116, "analyz": 116, "bottleneck": [116, 121], "dump": 116, "json": [116, 117], "chrome": 116, "trace": 116, "curobo_profil": 116, "curobo_nvblox_profil": 116, "curobo_python_profil": 116, "cprofil": 116, "most": 117, "dockerfil": 117, "edit": 117, "etc": 117, "daemon": 117, "runtimearg": 117, "bash": 117, "build_dev_dock": 117, "build_user_dock": 117, "start_docker_x86": 117, "conflict": 118, "typeguard": 118, "torchtyp": 118, "caus": 118, "repo": 118, "22": 118, "regener": 118, "ur5": 119, "tm12": 119, "techman": 119, "jaco7": 119, "kinova": 119, "jaco": 119, "kinova_gen3": 119, "gen3": 119, "iiwa": 119, "kuka": 119, "iiwa_allegro": 119, "allegro": 119, "hand": [119, 124, 126], "franka_mobil": 119, "mobil": 119, "multi": 119, "tri_ur10": 119, "quad_ur10": 119, "four": 119, "direct": [120, 123, 127], "togeth": [120, 127], "grei": 120, "block": 120, "mangl": 121, "templat": [121, 127], "75025": 121, "well": [121, 127], "blindli": 121, "capabl": 121, "increas": 121, "reccommend": 121, "replac": [121, 127], "written": 121, "batch_env_idx": 121, "n_batch": 121, "enable_obs_env": 121, "n_ob": 121, "duplic": [121, 127], "out_buffer_prim": 121, "out_buffer_mesh": 121, "usd_exampl": 122, "sub": 122, "substr": 122, "accident": 122, "coordin": 122, "xform": 122, "computelocaltoworldtransform": 122, "prod_kit": 122, "programmer_ref": 122, "w_t_o": 122, "w_t_r": 122, "rel": 122, "r_t_o": 122, "balakumar": [123, 124, 125, 126], "sundaralingam": [123, 124, 125, 126], "siva": [123, 124, 125, 126], "kumar": [123, 124, 125, 126], "sastri": [123, 124, 125, 126], "hari": [123, 124, 125, 126], "fishman": [123, 125], "caelan": [123, 125], "garrett": [123, 125], "karl": [123, 124, 125, 126], "van": [123, 124, 125, 126], "wyk": [123, 124, 125, 126], "valt": [123, 125], "bluki": [123, 125], "alexand": [123, 124, 125, 126], "millan": [123, 125], "helen": [123, 125], "oleynikova": [123, 125], "ankur": [123, 125], "handa": [123, 125], "fabio": [123, 125], "ramo": [123, 125], "nathan": [123, 125], "ratliff": [123, 125], "dieter": [123, 124, 125, 126], "fox": [123, 124, 125, 126], "paper": [123, 124], "demonstr": 123, "massiv": 123, "difficult": 123, "50m": 123, "averag": 123, "60x": 123, "art": 123, "sota": 123, "achiev": 123, "estim": 123, "novel": 123, "scheme": 123, "further": 123, "aid": 123, "101x": 123, "rrtconnect": 123, "7000": 123, "enrich": 123, "commun": 123, "articl": [123, 125], "curobo_report23": [123, 125], "titl": [123, 125], "author": [123, 125], "preprint": [123, 125], "year": [123, 125], "publish": 123, "inproceed": 123, "curobo_icra23": 123, "booktitl": 123, "ieee": 123, "confer": 123, "autom": 123, "8112": 123, "8119": 123, "doi": 123, "1109": 123, "icra48891": 123, "10160765": 123, "beyond": 124, "latest": 124, "scholar": 124, "studi": [124, 126], "aspect": [124, 126], "vapr": [124, 126], "precis": [124, 126], "yu": [124, 126], "shun": [124, 126], "hsiao": [124, 126], "jason": [124, 126], "yik": [124, 126], "thierri": [124, 126], "tamb": [124, 126], "charbel": [124, 126], "sakr": [124, 126], "stephen": [124, 126], "keckler": [124, 126], "vijai": [124, 126], "janapa": [124, 126], "reddi": [124, 126], "iro": [124, 126], "anyteleop": [124, 126], "dexter": [124, 126], "teleoper": [124, 126], "yuzh": [124, 126], "qin": [124, 126], "wei": [124, 126], "yang": [124, 126], "binghao": [124, 126], "huang": [124, 126], "hao": [124, 126], "su": [124, 126], "xiaolong": [124, 126], "wang": [124, 126], "chao": [124, 126], "rss": [124, 126], "reconstruct": [124, 126], "tabletop": [124, 126], "zhenggang": [124, 126], "tang": [124, 126], "jonathan": [124, 126], "tremblai": [124, 126], "bowen": [124, 126], "wen": [124, 126], "ye": [124, 126], "yuan": [124, 126], "tyre": [124, 126], "charl": [124, 126], "loop": [124, 126], "schwing": [124, 126], "stan": [124, 126], "birchfield": [124, 126], "minimum": 125, "content": 127, "displai": 127, "fill_thi": 127, "like": 127, "franka_panda_met": 127, "usda": 127, "panda_joint1": 127, "panda_joint2": 127, "panda_joint3": 127, "panda_joint4": 127, "panda_joint5": 127, "panda_joint6": 127, "panda_joint7": 127, "panda_finger_joint1": 127, "panda_finger_joint2": 127, "franka_panda": 127, "panda_hand": 127, "panda_link0": 127, "panda_link1": 127, "panda_link2": 127, "panda_link3": 127, "panda_link4": 127, "panda_link5": 127, "panda_link6": 127, "panda_link7": 127, "panda_leftfing": 127, "panda_rightfing": 127, "franka_mesh": 127, "003": 127, "panda_link8": 127, "04": 127, "attach_joint": 127, "ur_descript": 127, "folder": 127, "universal_robot": 127, "catkin": 127, "workspac": 127, "xacro": 127, "rosrun": 127, "o": 127, "cp": 127, "length": 127, "weigh": 127, "tool0": 127, "shoulder_pan_joint": 127, "shoulder_lift_joint": 127, "elbow_joint": 127, "wrist_1_joint": 127, "wrist_2_joint": 127, "wrist_3_joint": 127, "57": 127, "383": 127, "00": 127, "usual": 127, "isaac_sim_path": 127, "convert_urdf_to_usd": 127, "save_usd": 127, "lula": 127, "editor": 127, "remov": 127, "treat": 127, "shoulder_link": 127, "center": 127, "upper_arm_link": 127, "416": 127, "143": 127, "078": 127, "015": 127, "134": 127, "077": 127, "14": 127, "138": 127, "062": 127, "285": 127, "139": 127, "061": 127, "376": 127, "222": 127, "055": 127, "008": 127, "07": 127, "076": 127, "forearm_link": 127, "031": 127, "072": 127, "387": 127, "014": 127, "057": 127, "121": 127, "006": 127, "206": 127, "007": 127, "312": 127, "056": 127, "065": 127, "266": 127, "397": 127, "018": 127, "052": 127, "wrist_1_link": 127, "009": 127, "047": 127, "027": 127, "045": 127, "046": 127, "wrist_2_link": 127, "036": 127, "03": 127, "wrist_3_link": 127, "029": 127, "consecut": 127, "suffici": 127, "neccessari": 127, "conserv": 127, "frankaemika": 127, "franka_ro": 127, "39": 127, "visualize_spher": 127, "behavior": 127}, "objects": {"": [[0, 0, 0, "-", "curobo"]], "curobo": [[1, 0, 0, "-", "cuda_robot_model"], [8, 0, 0, "-", "curobolib"], [20, 0, 0, "-", "geom"], [31, 0, 0, "-", "graph"], [35, 0, 0, "-", "opt"], [45, 0, 0, "-", "rollout"], [66, 0, 0, "-", "types"], [74, 0, 0, "-", "util"], [86, 0, 0, "-", "util_file"], [87, 0, 0, "-", "wrap"]], "curobo.cuda_robot_model": [[2, 0, 0, "-", "cuda_robot_generator"], [3, 0, 0, "-", "cuda_robot_model"], [4, 0, 0, "-", "kinematics_parser"], [5, 0, 0, "-", "types"], [6, 0, 0, "-", "urdf_kinematics_parser"], [7, 0, 0, "-", "usd_kinematics_parser"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, 1, 1, "", "CudaRobotGenerator"], [2, 1, 1, "", "CudaRobotGeneratorConfig"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator": [[2, 2, 1, "", "add_fixed_link"], [2, 2, 1, "", "add_link"], [2, 3, 1, "", "get_joint_limits"], [2, 2, 1, "", "initialize_tensors"], [2, 3, 1, "", "kinematics_config"], [2, 3, 1, "", "kinematics_parser"], [2, 3, 1, "", "self_collision_config"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig": [[2, 4, 1, "", "add_object_link"], [2, 4, 1, "", "asset_root_path"], [2, 4, 1, "", "base_link"], [2, 4, 1, "", "collision_link_names"], [2, 4, 1, "", "collision_sphere_buffer"], [2, 4, 1, "", "collision_spheres"], [2, 4, 1, "", "compute_jacobian"], [2, 4, 1, "", "cspace"], [2, 4, 1, "", "debug"], [2, 4, 1, "", "ee_link"], [2, 4, 1, "", "extra_collision_spheres"], [2, 4, 1, "", "extra_links"], [2, 4, 1, "", "isaac_usd_path"], [2, 4, 1, "", "link_names"], [2, 4, 1, "", "load_link_names_with_mesh"], [2, 4, 1, "", "lock_joints"], [2, 4, 1, "", "mesh_link_names"], [2, 4, 1, "", "self_collision_buffer"], [2, 4, 1, "", "self_collision_ignore"], [2, 4, 1, "", "tensor_args"], [2, 4, 1, "", "urdf_path"], [2, 4, 1, "", "usd_flip_joint_limits"], [2, 4, 1, "", "usd_flip_joints"], [2, 4, 1, "", "usd_path"], [2, 4, 1, "", "usd_robot_root"], [2, 4, 1, "", "use_external_assets"], [2, 4, 1, "", "use_global_cumul"], [2, 4, 1, "", "use_usd_kinematics"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, 1, 1, "", "CudaRobotModel"], [3, 1, 1, "", "CudaRobotModelConfig"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel": [[3, 3, 1, "", "all_articulated_joint_names"], [3, 3, 1, "", "base_link"], [3, 3, 1, "", "ee_link"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_all_link_transforms"], [3, 2, 1, "", "get_dof"], [3, 2, 1, "", "get_link_mesh"], [3, 2, 1, "", "get_link_poses"], [3, 2, 1, "", "get_link_transform"], [3, 2, 1, "", "get_robot_as_mesh"], [3, 2, 1, "", "get_robot_as_spheres"], [3, 2, 1, "", "get_self_collision_config"], [3, 2, 1, "", "get_state"], [3, 3, 1, "", "joint_names"], [3, 3, 1, "", "lock_jointstate"], [3, 3, 1, "", "total_spheres"], [3, 2, 1, "", "update_batch_size"], [3, 2, 1, "", "update_kinematics_config"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig": [[3, 4, 1, "", "compute_jacobian"], [3, 3, 1, "", "cspace"], [3, 2, 1, "", "from_basic_urdf"], [3, 2, 1, "", "from_basic_usd"], [3, 2, 1, "", "from_config"], [3, 2, 1, "", "from_data_dict"], [3, 2, 1, "", "from_robot_yaml_file"], [3, 4, 1, "", "generator_config"], [3, 2, 1, "", "get_joint_limits"], [3, 4, 1, "", "kinematics_config"], [3, 4, 1, "", "kinematics_parser"], [3, 4, 1, "", "link_names"], [3, 4, 1, "", "self_collision_config"], [3, 4, 1, "", "tensor_args"], [3, 4, 1, "", "use_global_cumul"]], "curobo.cuda_robot_model.kinematics_parser": [[4, 1, 1, "", "KinematicsParser"], [4, 1, 1, "", "LinkParams"]], "curobo.cuda_robot_model.kinematics_parser.KinematicsParser": [[4, 2, 1, "", "add_absolute_path_to_link_meshes"], [4, 2, 1, "", "build_link_parent"], [4, 2, 1, "", "get_chain"], [4, 2, 1, "", "get_link_mesh"], [4, 2, 1, "", "get_link_parameters"]], "curobo.cuda_robot_model.kinematics_parser.LinkParams": [[4, 4, 1, "", "fixed_transform"], [4, 2, 1, "", "from_dict"], [4, 4, 1, "", "joint_axis"], [4, 4, 1, "", "joint_id"], [4, 4, 1, "", "joint_limits"], [4, 4, 1, "", "joint_name"], [4, 4, 1, "", "joint_type"], [4, 4, 1, "", "joint_velocity_limits"], [4, 4, 1, "", "link_name"], [4, 4, 1, "", "parent_link_name"]], "curobo.cuda_robot_model.types": [[5, 1, 1, "", "CSpaceConfig"], [5, 1, 1, "", "CudaRobotModelState"], [5, 1, 1, "", "JointLimits"], [5, 1, 1, "", "JointType"], [5, 1, 1, "", "KinematicsTensorConfig"], [5, 1, 1, "", "SelfCollisionKinematicsConfig"]], "curobo.cuda_robot_model.types.CSpaceConfig": [[5, 4, 1, "", "acceleration_scale"], [5, 2, 1, "", "clone"], [5, 4, 1, "", "cspace_distance_weight"], [5, 2, 1, "", "inplace_reindex"], [5, 4, 1, "", "jerk_scale"], [5, 4, 1, "", "joint_names"], [5, 2, 1, "", "load_from_joint_limits"], [5, 4, 1, "", "max_acceleration"], [5, 4, 1, "", "max_jerk"], [5, 4, 1, "", "null_space_weight"], [5, 4, 1, "", "retract_config"], [5, 2, 1, "", "scale_joint_limits"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity_scale"]], "curobo.cuda_robot_model.types.CudaRobotModelState": [[5, 4, 1, "", "ang_jacobian"], [5, 3, 1, "", "ee_pose"], [5, 4, 1, "", "ee_position"], [5, 4, 1, "", "ee_quaternion"], [5, 2, 1, "", "get_link_spheres"], [5, 4, 1, "", "lin_jacobian"], [5, 4, 1, "", "link_names"], [5, 3, 1, "", "link_pose"], [5, 4, 1, "", "link_spheres_tensor"], [5, 4, 1, "", "links_position"], [5, 4, 1, "", "links_quaternion"]], "curobo.cuda_robot_model.types.JointLimits": [[5, 4, 1, "", "acceleration"], [5, 2, 1, "", "clone"], [5, 4, 1, "", "effort"], [5, 2, 1, "", "from_data_dict"], [5, 4, 1, "", "jerk"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "position"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity"]], "curobo.cuda_robot_model.types.JointType": [[5, 4, 1, "", "FIXED"], [5, 4, 1, "", "X_PRISM"], [5, 4, 1, "", "X_ROT"], [5, 4, 1, "", "Y_PRISM"], [5, 4, 1, "", "Y_ROT"], [5, 4, 1, "", "Z_PRISM"], [5, 4, 1, "", "Z_ROT"]], "curobo.cuda_robot_model.types.KinematicsTensorConfig": [[5, 2, 1, "", "attach_object"], [5, 4, 1, "", "base_link"], [5, 4, 1, "", "cspace"], [5, 4, 1, "", "debug"], [5, 2, 1, "", "detach_object"], [5, 4, 1, "", "ee_idx"], [5, 4, 1, "", "ee_link"], [5, 4, 1, "", "fixed_transforms"], [5, 2, 1, "", "get_link_spheres"], [5, 2, 1, "", "get_number_of_spheres"], [5, 2, 1, "", "get_sphere_index_from_link_name"], [5, 4, 1, "", "joint_limits"], [5, 4, 1, "", "joint_map"], [5, 4, 1, "", "joint_map_type"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "link_chain_map"], [5, 4, 1, "", "link_map"], [5, 4, 1, "", "link_name_to_idx_map"], [5, 4, 1, "", "link_names"], [5, 4, 1, "", "link_sphere_idx_map"], [5, 4, 1, "", "link_spheres"], [5, 2, 1, "", "load_cspace_cfg_from_kinematics"], [5, 4, 1, "", "lock_jointstate"], [5, 4, 1, "", "mesh_link_names"], [5, 4, 1, "", "n_dof"], [5, 4, 1, "", "non_fixed_joint_names"], [5, 4, 1, "", "store_link_map"], [5, 4, 1, "", "total_spheres"], [5, 2, 1, "", "update_link_spheres"]], "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig": [[5, 4, 1, "", "checks_per_thread"], [5, 4, 1, "", "collision_matrix"], [5, 4, 1, "", "distance_threshold"], [5, 4, 1, "", "experimental_kernel"], [5, 4, 1, "", "offset"], [5, 4, 1, "", "thread_location"], [5, 4, 1, "", "thread_max"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, 1, 1, "", "UrdfKinematicsParser"]], "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser": [[6, 2, 1, "", "add_absolute_path_to_link_meshes"], [6, 2, 1, "", "build_link_parent"], [6, 2, 1, "", "get_link_mesh"], [6, 2, 1, "", "get_link_parameters"], [6, 2, 1, "", "get_urdf_string"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, 1, 1, "", "UsdKinematicsParser"], [7, 5, 1, "", "get_links_for_joint"]], "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser": [[7, 2, 1, "", "build_link_parent"], [7, 2, 1, "", "get_link_parameters"], [7, 3, 1, "", "robot_prim_root"]], "curobo.curobolib": [[9, 0, 0, "-", "geom"], [10, 0, 0, "-", "geom_cu"], [11, 0, 0, "-", "kinematics"], [12, 0, 0, "-", "kinematics_fused_cu"], [13, 0, 0, "-", "lbfgs_step_cu"], [14, 0, 0, "-", "line_search_cu"], [15, 0, 0, "-", "ls"], [16, 0, 0, "-", "opt"], [17, 0, 0, "-", "tensor_step"], [18, 0, 0, "-", "tensor_step_cu"], [19, 0, 0, "-", "util_file"]], "curobo.curobolib.geom": [[9, 1, 1, "", "SdfSphereOBB"], [9, 1, 1, "", "SdfSweptSphereOBB"], [9, 1, 1, "", "SelfCollisionDistance"], [9, 1, 1, "", "SelfCollisionDistanceLoss"], [9, 5, 1, "", "get_pose_distance"], [9, 5, 1, "", "get_pose_distance_backward"], [9, 5, 1, "", "get_self_collision_distance"]], "curobo.curobolib.geom.SdfSphereOBB": [[9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSweptSphereOBB": [[9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistance": [[9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistanceLoss": [[9, 2, 1, "", "backward"]], "curobo.curobolib.geom_cu": [[10, 5, 1, "", "closest_point"], [10, 5, 1, "", "pose_distance"], [10, 5, 1, "", "pose_distance_backward"], [10, 5, 1, "", "self_collision_distance"], [10, 5, 1, "", "swept_closest_point"]], "curobo.curobolib.kinematics": [[11, 1, 1, "", "KinematicsFusedFunction"], [11, 1, 1, "", "KinematicsFusedGlobalCumulFunction"], [11, 5, 1, "", "get_cuda_kinematics"], [11, 5, 1, "", "rotation_matrix_to_quaternion"]], "curobo.curobolib.kinematics.KinematicsFusedFunction": [[11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction": [[11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics_fused_cu": [[12, 5, 1, "", "backward"], [12, 5, 1, "", "forward"], [12, 5, 1, "", "matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, 5, 1, "", "debug_reduce"], [13, 5, 1, "", "forward"], [13, 5, 1, "", "step"], [13, 5, 1, "", "update"]], "curobo.curobolib.line_search_cu": [[14, 5, 1, "", "line_search"], [14, 5, 1, "", "update_best"]], "curobo.curobolib.ls": [[15, 5, 1, "", "update_best"], [15, 5, 1, "", "wolfe_line_search"]], "curobo.curobolib.opt": [[16, 1, 1, "", "LBFGScu"]], "curobo.curobolib.opt.LBFGScu": [[16, 2, 1, "", "backward"], [16, 2, 1, "", "forward"]], "curobo.curobolib.tensor_step": [[17, 5, 1, "", "tensor_step_acc_fwd"], [17, 5, 1, "", "tensor_step_acc_idx_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_bwd"], [17, 5, 1, "", "tensor_step_pos_clique_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, 5, 1, "", "step_acceleration"], [18, 5, 1, "", "step_acceleration_idx"], [18, 5, 1, "", "step_idx_position2"], [18, 5, 1, "", "step_position"], [18, 5, 1, "", "step_position2"], [18, 5, 1, "", "step_position_backward"], [18, 5, 1, "", "step_position_backward2"]], "curobo.curobolib.util_file": [[19, 5, 1, "", "add_cpp_path"], [19, 5, 1, "", "get_cpp_path"], [19, 5, 1, "", "join_path"]], "curobo.geom": [[21, 0, 0, "-", "sdf"], [28, 0, 0, "-", "sphere_fit"], [29, 0, 0, "-", "transform"], [30, 0, 0, "-", "types"]], "curobo.geom.sdf": [[22, 0, 0, "-", "sdf_grid"], [23, 0, 0, "-", "utils"], [24, 0, 0, "-", "warp_primitives"], [25, 0, 0, "-", "world"], [26, 0, 0, "-", "world_blox"], [27, 0, 0, "-", "world_mesh"]], "curobo.geom.sdf.sdf_grid": [[22, 1, 1, "", "SDFGrid"], [22, 5, 1, "", "compute_sdf_gradient"], [22, 5, 1, "", "lookup_distance"]], "curobo.geom.sdf.sdf_grid.SDFGrid": [[22, 2, 1, "", "backward"], [22, 2, 1, "", "forward"]], "curobo.geom.sdf.utils": [[23, 5, 1, "", "create_collision_checker"]], "curobo.geom.sdf.warp_primitives": [[24, 1, 1, "", "SdfMeshWarpPy"], [24, 1, 1, "", "SweptSdfMeshWarpPy"]], "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy": [[24, 2, 1, "", "backward"], [24, 2, 1, "", "forward"]], "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy": [[24, 2, 1, "", "backward"], [24, 2, 1, "", "forward"]], "curobo.geom.sdf.world": [[25, 1, 1, "", "CollisionBuffer"], [25, 1, 1, "", "CollisionCheckerType"], [25, 1, 1, "", "CollisionQueryBuffer"], [25, 1, 1, "", "WorldCollision"], [25, 1, 1, "", "WorldCollisionConfig"], [25, 1, 1, "", "WorldPrimitiveCollision"]], "curobo.geom.sdf.world.CollisionBuffer": [[25, 2, 1, "", "clone"], [25, 4, 1, "", "distance_buffer"], [25, 4, 1, "", "grad_distance_buffer"], [25, 2, 1, "", "initialize_from_shape"], [25, 4, 1, "", "shape"], [25, 4, 1, "", "sparsity_index_buffer"], [25, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.CollisionCheckerType": [[25, 4, 1, "", "BLOX"], [25, 4, 1, "", "MESH"], [25, 4, 1, "", "PRIMITIVE"]], "curobo.geom.sdf.world.CollisionQueryBuffer": [[25, 4, 1, "", "blox_collision_buffer"], [25, 2, 1, "", "clone"], [25, 2, 1, "", "create_from_shape"], [25, 2, 1, "", "get_gradient_buffer"], [25, 2, 1, "", "initialize_from_shape"], [25, 4, 1, "", "mesh_collision_buffer"], [25, 4, 1, "", "primitive_collision_buffer"], [25, 4, 1, "", "shape"], [25, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.WorldCollision": [[25, 2, 1, "", "get_sphere_collision"], [25, 2, 1, "", "get_sphere_distance"], [25, 2, 1, "", "get_sphere_trace"], [25, 2, 1, "", "get_swept_sphere_collision"], [25, 2, 1, "", "get_swept_sphere_distance"], [25, 2, 1, "", "load_collision_model"]], "curobo.geom.sdf.world.WorldCollisionConfig": [[25, 4, 1, "", "cache"], [25, 4, 1, "", "checker_type"], [25, 2, 1, "", "load_from_dict"], [25, 4, 1, "", "max_distance"], [25, 4, 1, "", "n_envs"], [25, 4, 1, "", "tensor_args"], [25, 4, 1, "", "world_model"]], "curobo.geom.sdf.world.WorldPrimitiveCollision": [[25, 2, 1, "", "add_obb"], [25, 2, 1, "", "add_obb_from_raw"], [25, 2, 1, "", "clear_cache"], [25, 2, 1, "", "enable_obb"], [25, 2, 1, "", "enable_obstacle"], [25, 2, 1, "", "get_mesh_in_bounding_box"], [25, 2, 1, "", "get_obb_idx"], [25, 2, 1, "", "get_sphere_collision"], [25, 2, 1, "", "get_sphere_distance"], [25, 2, 1, "", "get_swept_sphere_collision"], [25, 2, 1, "", "get_swept_sphere_distance"], [25, 2, 1, "", "get_voxels_in_bounding_box"], [25, 2, 1, "", "load_batch_collision_model"], [25, 2, 1, "", "load_collision_model"], [25, 2, 1, "", "update_obb_dims"], [25, 2, 1, "", "update_obb_pose"], [25, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sdf.world_blox": [[26, 1, 1, "", "WorldBloxCollision"]], "curobo.geom.sdf.world_blox.WorldBloxCollision": [[26, 2, 1, "", "add_camera_frame"], [26, 2, 1, "", "clear_blox_layer"], [26, 2, 1, "", "clear_bounding_box"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "decay_layer"], [26, 2, 1, "", "enable_blox"], [26, 2, 1, "", "enable_obstacle"], [26, 2, 1, "", "get_bounding_spheres"], [26, 2, 1, "", "get_mesh_from_blox_layer"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "process_camera_frames"], [26, 2, 1, "", "update_blox_esdf"], [26, 2, 1, "", "update_blox_hashes"], [26, 2, 1, "", "update_blox_mesh"], [26, 2, 1, "", "update_blox_pose"]], "curobo.geom.sdf.world_mesh": [[27, 1, 1, "", "WarpMeshData"], [27, 1, 1, "", "WorldMeshCollision"]], "curobo.geom.sdf.world_mesh.WarpMeshData": [[27, 4, 1, "", "faces"], [27, 4, 1, "", "m_id"], [27, 4, 1, "", "mesh"], [27, 4, 1, "", "name"], [27, 4, 1, "", "vertices"]], "curobo.geom.sdf.world_mesh.WorldMeshCollision": [[27, 2, 1, "", "add_mesh"], [27, 2, 1, "", "clear_cache"], [27, 2, 1, "", "create_collision_cache"], [27, 2, 1, "", "enable_mesh"], [27, 2, 1, "", "enable_obstacle"], [27, 2, 1, "", "get_mesh_idx"], [27, 2, 1, "", "get_sphere_collision"], [27, 2, 1, "", "get_sphere_distance"], [27, 2, 1, "", "get_swept_sphere_collision"], [27, 2, 1, "", "get_swept_sphere_distance"], [27, 2, 1, "", "load_batch_collision_model"], [27, 2, 1, "", "load_collision_model"], [27, 2, 1, "", "update_all_mesh_pose"], [27, 2, 1, "", "update_mesh_from_warp"], [27, 2, 1, "", "update_mesh_pose"], [27, 2, 1, "", "update_mesh_pose_env"], [27, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sphere_fit": [[28, 1, 1, "", "SphereFitType"], [28, 5, 1, "", "fit_spheres_to_mesh"], [28, 5, 1, "", "get_voxel_pitch"], [28, 5, 1, "", "get_voxelgrid_from_mesh"], [28, 5, 1, "", "sample_even_fit_mesh"], [28, 5, 1, "", "voxel_fit_mesh"], [28, 5, 1, "", "voxel_fit_surface_mesh"], [28, 5, 1, "", "voxel_fit_volume_inside_mesh"], [28, 5, 1, "", "voxel_fit_volume_sample_surface_mesh"]], "curobo.geom.sphere_fit.SphereFitType": [[28, 4, 1, "", "SAMPLE_SURFACE"], [28, 4, 1, "", "VOXEL_SURFACE"], [28, 4, 1, "", "VOXEL_VOLUME"], [28, 4, 1, "", "VOXEL_VOLUME_INSIDE"], [28, 4, 1, "", "VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.transform": [[29, 1, 1, "", "BatchTransformPoint"], [29, 1, 1, "", "BatchTransformPose"], [29, 1, 1, "", "MatrixToQuaternion"], [29, 1, 1, "", "PoseInverse"], [29, 1, 1, "", "QuatToMatrix"], [29, 1, 1, "", "TransformPoint"], [29, 1, 1, "", "TransformPose"], [29, 5, 1, "", "batch_transform_points"], [29, 5, 1, "", "cuda_matrix_to_quaternion"], [29, 5, 1, "", "matrix_to_quaternion"], [29, 5, 1, "", "pose_inverse"], [29, 5, 1, "", "pose_multiply"], [29, 5, 1, "", "pose_to_matrix"], [29, 5, 1, "", "quaternion_to_matrix"], [29, 5, 1, "", "torch_quaternion_to_matrix"], [29, 5, 1, "", "transform_points"]], "curobo.geom.transform.BatchTransformPoint": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.BatchTransformPose": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.MatrixToQuaternion": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.PoseInverse": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.QuatToMatrix": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPoint": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPose": [[29, 2, 1, "", "backward"], [29, 2, 1, "", "forward"]], "curobo.geom.types": [[30, 1, 1, "", "BloxMap"], [30, 1, 1, "", "Capsule"], [30, 1, 1, "", "Cuboid"], [30, 1, 1, "", "Cylinder"], [30, 1, 1, "", "Material"], [30, 1, 1, "", "Mesh"], [30, 1, 1, "", "Obstacle"], [30, 1, 1, "", "Sphere"], [30, 1, 1, "", "WorldConfig"], [30, 5, 1, "", "batch_tensor_cube"], [30, 5, 1, "", "tensor_capsule"], [30, 5, 1, "", "tensor_cube"], [30, 5, 1, "", "tensor_sphere"]], "curobo.geom.types.BloxMap": [[30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "integrator_type"], [30, 4, 1, "", "map_path"], [30, 4, 1, "", "mapper_instance"], [30, 4, 1, "", "mesh"], [30, 4, 1, "", "mesh_file_path"], [30, 4, 1, "", "voxel_size"]], "curobo.geom.types.Capsule": [[30, 4, 1, "", "base"], [30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "radius"], [30, 4, 1, "", "tip"]], "curobo.geom.types.Cuboid": [[30, 4, 1, "", "dims"], [30, 2, 1, "", "get_trimesh_mesh"]], "curobo.geom.types.Cylinder": [[30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "height"], [30, 4, 1, "", "radius"]], "curobo.geom.types.Material": [[30, 4, 1, "", "metallic"], [30, 4, 1, "", "roughness"]], "curobo.geom.types.Mesh": [[30, 4, 1, "", "face_colors"], [30, 4, 1, "", "faces"], [30, 4, 1, "", "file_path"], [30, 4, 1, "", "file_string"], [30, 2, 1, "", "from_pointcloud"], [30, 2, 1, "", "get_mesh_data"], [30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "urdf_path"], [30, 4, 1, "", "vertex_colors"], [30, 4, 1, "", "vertex_normals"], [30, 4, 1, "", "vertices"]], "curobo.geom.types.Obstacle": [[30, 4, 1, "", "color"], [30, 2, 1, "", "get_bounding_spheres"], [30, 2, 1, "", "get_cuboid"], [30, 2, 1, "", "get_mesh"], [30, 2, 1, "", "get_sphere"], [30, 2, 1, "", "get_transform_matrix"], [30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "material"], [30, 4, 1, "", "name"], [30, 4, 1, "", "pose"], [30, 2, 1, "", "save_as_mesh"], [30, 4, 1, "", "scale"], [30, 4, 1, "", "tensor_args"], [30, 4, 1, "", "texture"], [30, 4, 1, "", "texture_id"]], "curobo.geom.types.Sphere": [[30, 2, 1, "", "get_cuboid"], [30, 2, 1, "", "get_trimesh_mesh"], [30, 4, 1, "", "position"], [30, 4, 1, "", "radius"]], "curobo.geom.types.WorldConfig": [[30, 2, 1, "", "add_color"], [30, 2, 1, "", "add_material"], [30, 2, 1, "", "add_obstacle"], [30, 4, 1, "", "blox"], [30, 4, 1, "", "capsule"], [30, 2, 1, "", "clone"], [30, 2, 1, "", "create_collision_support_world"], [30, 2, 1, "", "create_merged_mesh_world"], [30, 2, 1, "", "create_mesh_world"], [30, 2, 1, "", "create_obb_world"], [30, 4, 1, "", "cuboid"], [30, 4, 1, "", "cylinder"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "get_cache_dict"], [30, 2, 1, "", "get_collision_check_world"], [30, 2, 1, "", "get_mesh_world"], [30, 2, 1, "", "get_obb_world"], [30, 2, 1, "", "get_obstacle"], [30, 2, 1, "", "get_scene_graph"], [30, 4, 1, "", "mesh"], [30, 4, 1, "", "objects"], [30, 2, 1, "", "randomize_color"], [30, 2, 1, "", "remove_absolute_paths"], [30, 2, 1, "", "remove_obstacle"], [30, 2, 1, "", "save_world_as_mesh"], [30, 4, 1, "", "sphere"]], "curobo.graph": [[32, 0, 0, "-", "graph_base"], [33, 0, 0, "-", "graph_nx"], [34, 0, 0, "-", "prm"]], "curobo.graph.graph_base": [[32, 1, 1, "", "Graph"], [32, 1, 1, "", "GraphConfig"], [32, 1, 1, "", "GraphPlanBase"], [32, 1, 1, "", "GraphResult"]], "curobo.graph.graph_base.Graph": [[32, 4, 1, "", "connectivity"], [32, 4, 1, "", "edges"], [32, 2, 1, "", "get_node_distance"], [32, 4, 1, "", "nodes"], [32, 2, 1, "", "set_shortest_path_lengths"], [32, 4, 1, "", "shortest_path_lengths"]], "curobo.graph.graph_base.GraphConfig": [[32, 4, 1, "", "bias_node"], [32, 4, 1, "", "bounds"], [32, 4, 1, "", "c_max"], [32, 4, 1, "", "compute_metrics"], [32, 4, 1, "", "distance_weight"], [32, 4, 1, "", "dof"], [32, 2, 1, "", "from_dict"], [32, 4, 1, "", "graph_max_attempts"], [32, 4, 1, "", "graph_min_attempts"], [32, 4, 1, "", "init_nodes"], [32, 4, 1, "", "interpolation_acceleration_scale"], [32, 4, 1, "", "interpolation_deviation"], [32, 4, 1, "", "interpolation_dt"], [32, 4, 1, "", "interpolation_steps"], [32, 4, 1, "", "interpolation_type"], [32, 4, 1, "", "k_nn"], [32, 2, 1, "", "load_from_robot_config"], [32, 4, 1, "", "max_buffer"], [32, 4, 1, "", "max_cg_buffer"], [32, 4, 1, "", "max_nodes"], [32, 4, 1, "", "node_similarity_distance"], [32, 4, 1, "", "rejection_ratio"], [32, 4, 1, "", "rollout_fn"], [32, 4, 1, "", "safety_rollout_fn"], [32, 4, 1, "", "sample_pts"], [32, 4, 1, "", "seed"], [32, 4, 1, "", "steer_delta_buffer"], [32, 4, 1, "", "tensor_args"], [32, 4, 1, "", "use_bias_node"], [32, 4, 1, "", "use_cuda_graph_mask_samples"], [32, 4, 1, "", "vertex_n"]], "curobo.graph.graph_base.GraphPlanBase": [[32, 2, 1, "", "add_nodes_to_graph"], [32, 2, 1, "", "batch_get_graph_shortest_path"], [32, 2, 1, "", "batch_path_exists"], [32, 2, 1, "", "batch_shortcut_path"], [32, 2, 1, "", "check_feasibility"], [32, 2, 1, "", "compute_path_length"], [32, 2, 1, "", "connect_nodes"], [32, 2, 1, "", "distance"], [32, 2, 1, "", "find_paths"], [32, 2, 1, "", "get_all_rollout_instances"], [32, 2, 1, "", "get_biased_vertex_set"], [32, 2, 1, "", "get_feasible_sample_set"], [32, 2, 1, "", "get_graph"], [32, 2, 1, "", "get_graph_edges"], [32, 2, 1, "", "get_graph_shortest_path_lengths"], [32, 2, 1, "", "get_interpolated_trajectory"], [32, 2, 1, "", "get_metrics"], [32, 2, 1, "", "get_new_vertex_set"], [32, 2, 1, "", "get_node_idx"], [32, 2, 1, "", "get_path_lengths"], [32, 2, 1, "", "get_paths"], [32, 2, 1, "", "get_samples"], [32, 2, 1, "", "mask_samples"], [32, 2, 1, "", "path_exists"], [32, 2, 1, "", "reset_buffer"], [32, 2, 1, "", "reset_cuda_graph"], [32, 2, 1, "", "reset_graph"], [32, 2, 1, "", "reset_seed"], [32, 2, 1, "", "validate_graph"], [32, 2, 1, "", "warmup"]], "curobo.graph.graph_base.GraphResult": [[32, 4, 1, "", "debug_info"], [32, 4, 1, "", "goal_q"], [32, 4, 1, "", "interpolated_plan"], [32, 4, 1, "", "metrics"], [32, 4, 1, "", "optimized_dt"], [32, 4, 1, "", "path_buffer_last_tstep"], [32, 4, 1, "", "path_length"], [32, 4, 1, "", "plan"], [32, 4, 1, "", "solve_time"], [32, 4, 1, "", "start_q"], [32, 4, 1, "", "success"], [32, 4, 1, "", "valid_query"]], "curobo.graph.graph_nx": [[33, 1, 1, "", "NetworkxGraph"]], "curobo.graph.graph_nx.NetworkxGraph": [[33, 2, 1, "", "add_edge"], [33, 2, 1, "", "add_edges"], [33, 2, 1, "", "add_node"], [33, 2, 1, "", "add_nodes"], [33, 2, 1, "", "get_edges"], [33, 2, 1, "", "get_path_lengths"], [33, 2, 1, "", "get_shortest_path"], [33, 2, 1, "", "path_exists"], [33, 2, 1, "", "reset_graph"], [33, 2, 1, "", "update_graph"]], "curobo.graph.prm": [[34, 1, 1, "", "PRMStar"]], "curobo.graph.prm.PRMStar": [[34, 2, 1, "", "build_graph"], [34, 2, 1, "", "warmup"]], "curobo.opt": [[36, 0, 0, "-", "newton"], [39, 0, 0, "-", "opt_base"], [40, 0, 0, "-", "particle"]], "curobo.opt.newton": [[37, 0, 0, "-", "lbfgs"], [38, 0, 0, "-", "newton_base"]], "curobo.opt.newton.lbfgs": [[37, 1, 1, "", "LBFGSOpt"], [37, 1, 1, "", "LBFGSOptConfig"]], "curobo.opt.newton.lbfgs.LBFGSOpt": [[37, 2, 1, "", "init_hessian"], [37, 2, 1, "", "reset"], [37, 2, 1, "", "update_nenvs"]], "curobo.opt.newton.lbfgs.LBFGSOptConfig": [[37, 4, 1, "", "epsilon"], [37, 4, 1, "", "history"], [37, 4, 1, "", "stable_mode"], [37, 4, 1, "", "use_cuda_kernel"]], "curobo.opt.newton.newton_base": [[38, 1, 1, "", "LineSearchType"], [38, 1, 1, "", "NewtonOptBase"], [38, 1, 1, "", "NewtonOptConfig"]], "curobo.opt.newton.newton_base.LineSearchType": [[38, 4, 1, "", "APPROX_WOLFE"], [38, 4, 1, "", "ARMIJO"], [38, 4, 1, "", "GREEDY"], [38, 4, 1, "", "STRONG_WOLFE"], [38, 4, 1, "", "WOLFE"]], "curobo.opt.newton.newton_base.NewtonOptBase": [[38, 2, 1, "", "check_convergence"], [38, 2, 1, "", "clip_bounds"], [38, 2, 1, "", "project_bounds"], [38, 2, 1, "", "reset"], [38, 2, 1, "", "reset_cuda_graph"], [38, 2, 1, "", "scale_step_direction"], [38, 2, 1, "", "update_nenvs"]], "curobo.opt.newton.newton_base.NewtonOptConfig": [[38, 4, 1, "", "cost_convergence"], [38, 4, 1, "", "cost_delta_threshold"], [38, 4, 1, "", "cost_relative_threshold"], [38, 4, 1, "", "fixed_iters"], [38, 4, 1, "", "inner_iters"], [38, 4, 1, "", "last_best"], [38, 4, 1, "", "line_search_scale"], [38, 4, 1, "", "line_search_type"], [38, 4, 1, "", "min_iters"], [38, 4, 1, "", "step_scale"], [38, 4, 1, "", "use_cuda_line_search_kernel"], [38, 4, 1, "", "use_cuda_update_best_kernel"], [38, 4, 1, "", "use_temporal_smooth"]], "curobo.opt.opt_base": [[39, 1, 1, "", "Optimizer"], [39, 1, 1, "", "OptimizerConfig"]], "curobo.opt.opt_base.Optimizer": [[39, 2, 1, "", "get_all_rollout_instances"], [39, 2, 1, "", "get_nenv_tensor"], [39, 2, 1, "", "optimize"], [39, 2, 1, "", "reset"], [39, 2, 1, "", "reset_cuda_graph"], [39, 2, 1, "", "reset_seed"], [39, 2, 1, "", "update_nenvs"], [39, 2, 1, "", "update_params"]], "curobo.opt.opt_base.OptimizerConfig": [[39, 4, 1, "", "action_highs"], [39, 4, 1, "", "action_lows"], [39, 4, 1, "", "cold_start_n_iters"], [39, 2, 1, "", "create_data_dict"], [39, 4, 1, "", "d_action"], [39, 4, 1, "", "debug_info"], [39, 4, 1, "", "horizon"], [39, 4, 1, "", "n_envs"], [39, 4, 1, "", "n_iters"], [39, 4, 1, "", "num_particles"], [39, 4, 1, "", "rollout_fn"], [39, 4, 1, "", "store_debug"], [39, 4, 1, "", "sync_cuda_time"], [39, 4, 1, "", "tensor_args"], [39, 4, 1, "", "use_coo_sparse"], [39, 4, 1, "", "use_cuda_graph"]], "curobo.opt.particle": [[41, 0, 0, "-", "parallel_es"], [42, 0, 0, "-", "parallel_mppi"], [43, 0, 0, "-", "particle_opt_base"], [44, 0, 0, "-", "particle_opt_utils"]], "curobo.opt.particle.parallel_es": [[41, 1, 1, "", "ParallelES"], [41, 1, 1, "", "ParallelESConfig"]], "curobo.opt.particle.parallel_es.ParallelESConfig": [[41, 4, 1, "", "learning_rate"]], "curobo.opt.particle.parallel_mppi": [[42, 1, 1, "", "BaseActionType"], [42, 1, 1, "", "CovType"], [42, 1, 1, "", "ParallelMPPI"], [42, 1, 1, "", "ParallelMPPIConfig"]], "curobo.opt.particle.parallel_mppi.BaseActionType": [[42, 4, 1, "", "NULL"], [42, 4, 1, "", "RANDOM"], [42, 4, 1, "", "REPEAT"]], "curobo.opt.particle.parallel_mppi.CovType": [[42, 4, 1, "", "DIAG_A"], [42, 4, 1, "", "FULL_A"], [42, 4, 1, "", "FULL_HA"], [42, 4, 1, "", "SIGMA_I"]], "curobo.opt.particle.parallel_mppi.ParallelMPPI": [[42, 3, 1, "", "entropy"], [42, 3, 1, "", "full_cov"], [42, 3, 1, "", "full_inv_cov"], [42, 3, 1, "", "full_scale_tril"], [42, 2, 1, "", "generate_noise"], [42, 2, 1, "", "generate_rollouts"], [42, 2, 1, "", "get_rollouts"], [42, 2, 1, "", "reset"], [42, 2, 1, "", "reset_covariance"], [42, 2, 1, "", "reset_distribution"], [42, 2, 1, "", "reset_mean"], [42, 2, 1, "", "reset_seed"], [42, 2, 1, "", "sample_actions"], [42, 3, 1, "", "squashed_mean"], [42, 2, 1, "", "update_init_mean"], [42, 2, 1, "", "update_samples"], [42, 2, 1, "", "update_seed"]], "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig": [[42, 4, 1, "", "alpha"], [42, 4, 1, "", "base_action"], [42, 4, 1, "", "beta"], [42, 4, 1, "", "cov_type"], [42, 2, 1, "", "create_data_dict"], [42, 4, 1, "", "gamma"], [42, 4, 1, "", "init_cov"], [42, 4, 1, "", "init_mean"], [42, 4, 1, "", "kappa"], [42, 4, 1, "", "null_act_frac"], [42, 4, 1, "", "random_mean"], [42, 4, 1, "", "sample_params"], [42, 4, 1, "", "sample_per_env"], [42, 4, 1, "", "squash_fn"], [42, 4, 1, "", "step_size_cov"], [42, 4, 1, "", "step_size_mean"], [42, 4, 1, "", "update_cov"]], "curobo.opt.particle.particle_opt_base": [[43, 1, 1, "", "ParticleOptBase"], [43, 1, 1, "", "ParticleOptConfig"], [43, 1, 1, "", "ParticleOptInfo"], [43, 1, 1, "", "SampleMode"]], "curobo.opt.particle.particle_opt_base.ParticleOptBase": [[43, 2, 1, "", "check_convergence"], [43, 2, 1, "", "generate_rollouts"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "sample_actions"], [43, 2, 1, "", "update_nenvs"], [43, 2, 1, "", "update_num_particles_per_env"], [43, 2, 1, "", "update_seed"]], "curobo.opt.particle.particle_opt_base.ParticleOptConfig": [[43, 4, 1, "", "calculate_value"], [43, 2, 1, "", "create_data_dict"], [43, 4, 1, "", "gamma"], [43, 4, 1, "", "sample_mode"], [43, 4, 1, "", "seed"], [43, 4, 1, "", "store_rollouts"]], "curobo.opt.particle.particle_opt_base.ParticleOptInfo": [[43, 4, 1, "", "info"]], "curobo.opt.particle.particle_opt_base.SampleMode": [[43, 4, 1, "", "BEST"], [43, 4, 1, "", "MEAN"], [43, 4, 1, "", "SAMPLE"]], "curobo.opt.particle.particle_opt_utils": [[44, 1, 1, "", "SquashType"], [44, 5, 1, "", "batch_cholesky"], [44, 5, 1, "", "cost_to_go"], [44, 5, 1, "", "cost_to_go_np"], [44, 5, 1, "", "gaussian_entropy"], [44, 5, 1, "", "gaussian_kl"], [44, 5, 1, "", "gaussian_logprob"], [44, 5, 1, "", "gaussian_logprobgrad"], [44, 5, 1, "", "get_stomp_cov"], [44, 5, 1, "", "matrix_cholesky"], [44, 5, 1, "", "scale_ctrl"]], "curobo.opt.particle.particle_opt_utils.SquashType": [[44, 4, 1, "", "CLAMP"], [44, 4, 1, "", "CLAMP_RESCALE"], [44, 4, 1, "", "IDENTITY"], [44, 4, 1, "", "TANH"]], "curobo.rollout": [[46, 0, 0, "-", "arm_base"], [47, 0, 0, "-", "arm_reacher"], [48, 0, 0, "-", "cost"], [60, 0, 0, "-", "dynamics_model"], [65, 0, 0, "-", "rollout_base"]], "curobo.rollout.arm_base": [[46, 1, 1, "", "ArmBase"], [46, 1, 1, "", "ArmBaseConfig"], [46, 1, 1, "", "ArmCostConfig"]], "curobo.rollout.arm_base.ArmBase": [[46, 3, 1, "", "action_bound_highs"], [46, 3, 1, "", "action_bound_lows"], [46, 2, 1, "", "compute_kinematics"], [46, 2, 1, "", "constraint_fn"], [46, 2, 1, "", "convergence_fn"], [46, 2, 1, "", "cost_fn"], [46, 3, 1, "", "cspace_config"], [46, 2, 1, "", "current_cost"], [46, 3, 1, "", "d_action"], [46, 3, 1, "", "dt"], [46, 2, 1, "", "filter_robot_state"], [46, 2, 1, "", "get_action_from_state"], [46, 2, 1, "", "get_ee_pose"], [46, 2, 1, "", "get_full_dof_from_solution"], [46, 2, 1, "", "get_init_action_seq"], [46, 2, 1, "", "get_metrics"], [46, 2, 1, "", "get_metrics_cuda_graph"], [46, 2, 1, "", "get_robot_command"], [46, 2, 1, "", "get_state_from_action"], [46, 3, 1, "", "horizon"], [46, 3, 1, "", "joint_names"], [46, 3, 1, "", "kinematics"], [46, 2, 1, "", "reset"], [46, 2, 1, "", "reset_cuda_graph"], [46, 3, 1, "", "retract_state"], [46, 2, 1, "", "rollout_constraint"], [46, 2, 1, "", "rollout_constraint_cuda_graph"], [46, 2, 1, "", "rollout_fn"], [46, 3, 1, "", "state_bounds"], [46, 2, 1, "", "update_cost_dt"], [46, 2, 1, "", "update_params"], [46, 2, 1, "", "update_traj_dt"]], "curobo.rollout.arm_base.ArmBaseConfig": [[46, 4, 1, "", "constraint_cfg"], [46, 4, 1, "", "convergence_cfg"], [46, 4, 1, "", "cost_cfg"], [46, 2, 1, "", "cost_from_dict"], [46, 2, 1, "", "from_dict"], [46, 4, 1, "", "model_cfg"], [46, 2, 1, "", "model_from_dict"], [46, 4, 1, "", "world_coll_checker"], [46, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_base.ArmCostConfig": [[46, 4, 1, "", "bound_cfg"], [46, 2, 1, "", "from_dict"], [46, 4, 1, "", "manipulability_cfg"], [46, 4, 1, "", "null_space_cfg"], [46, 4, 1, "", "primitive_collision_cfg"], [46, 4, 1, "", "self_collision_cfg"], [46, 4, 1, "", "stop_cfg"]], "curobo.rollout.arm_reacher": [[47, 1, 1, "", "ArmReacher"], [47, 1, 1, "", "ArmReacherConfig"], [47, 1, 1, "", "ArmReacherCostConfig"], [47, 1, 1, "", "ArmReacherMetrics"]], "curobo.rollout.arm_reacher.ArmReacher": [[47, 2, 1, "", "convergence_fn"], [47, 2, 1, "", "cost_fn"], [47, 2, 1, "", "enable_cspace_cost"], [47, 2, 1, "", "enable_pose_cost"], [47, 2, 1, "", "update_params"]], "curobo.rollout.arm_reacher.ArmReacherConfig": [[47, 4, 1, "", "constraint_cfg"], [47, 4, 1, "", "convergence_cfg"], [47, 4, 1, "", "cost_cfg"], [47, 2, 1, "", "cost_from_dict"]], "curobo.rollout.arm_reacher.ArmReacherCostConfig": [[47, 4, 1, "", "cspace_cfg"], [47, 2, 1, "", "from_dict"], [47, 4, 1, "", "pose_cfg"], [47, 4, 1, "", "straight_line_cfg"], [47, 4, 1, "", "zero_acc_cfg"], [47, 4, 1, "", "zero_jerk_cfg"], [47, 4, 1, "", "zero_vel_cfg"]], "curobo.rollout.arm_reacher.ArmReacherMetrics": [[47, 2, 1, "", "clone"], [47, 4, 1, "", "cspace_error"], [47, 4, 1, "", "pose_error"], [47, 4, 1, "", "position_error"], [47, 4, 1, "", "rotation_error"]], "curobo.rollout.cost": [[49, 0, 0, "-", "bound_cost"], [50, 0, 0, "-", "cost_base"], [51, 0, 0, "-", "dist_cost"], [52, 0, 0, "-", "manipulability_cost"], [53, 0, 0, "-", "pose_cost"], [54, 0, 0, "-", "primitive_collision_cost"], [55, 0, 0, "-", "projected_dist_cost"], [56, 0, 0, "-", "self_collision_cost"], [57, 0, 0, "-", "stop_cost"], [58, 0, 0, "-", "straight_line_cost"], [59, 0, 0, "-", "zero_cost"]], "curobo.rollout.cost.bound_cost": [[49, 1, 1, "", "BoundCost"], [49, 1, 1, "", "BoundCostConfig"], [49, 1, 1, "", "BoundCostType"], [49, 1, 1, "", "WarpBoundFunction"], [49, 1, 1, "", "WarpBoundPosFunction"], [49, 1, 1, "", "WarpBoundPosLoss"], [49, 1, 1, "", "WarpBoundSmoothFunction"]], "curobo.rollout.cost.bound_cost.BoundCost": [[49, 2, 1, "", "forward"], [49, 2, 1, "", "update_batch_size"], [49, 2, 1, "", "update_dt"]], "curobo.rollout.cost.bound_cost.BoundCostConfig": [[49, 4, 1, "", "activation_distance"], [49, 4, 1, "", "cost_type"], [49, 4, 1, "", "cspace_distance_weight"], [49, 4, 1, "", "joint_limits"], [49, 4, 1, "", "null_space_weight"], [49, 4, 1, "", "run_weight_acceleration"], [49, 4, 1, "", "run_weight_jerk"], [49, 4, 1, "", "run_weight_velocity"], [49, 2, 1, "", "set_bounds"], [49, 4, 1, "", "smooth_weight"], [49, 4, 1, "", "state_finite_difference_mode"]], "curobo.rollout.cost.bound_cost.BoundCostType": [[49, 4, 1, "", "BOUNDS"], [49, 4, 1, "", "BOUNDS_SMOOTH"], [49, 4, 1, "", "POSITION"]], "curobo.rollout.cost.bound_cost.WarpBoundFunction": [[49, 2, 1, "", "backward"], [49, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosFunction": [[49, 2, 1, "", "backward"], [49, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosLoss": [[49, 2, 1, "", "backward"]], "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction": [[49, 2, 1, "", "backward"], [49, 2, 1, "", "forward"]], "curobo.rollout.cost.cost_base": [[50, 1, 1, "", "CostBase"], [50, 1, 1, "", "CostConfig"]], "curobo.rollout.cost.cost_base.CostBase": [[50, 2, 1, "", "disable_cost"], [50, 2, 1, "", "enable_cost"], [50, 3, 1, "", "enabled"], [50, 2, 1, "", "forward"], [50, 2, 1, "", "update_dt"], [50, 2, 1, "", "update_weight"]], "curobo.rollout.cost.cost_base.CostConfig": [[50, 4, 1, "", "classify"], [50, 4, 1, "", "distance_threshold"], [50, 4, 1, "", "dof"], [50, 4, 1, "", "hinge_value"], [50, 4, 1, "", "max_value"], [50, 4, 1, "", "return_loss"], [50, 4, 1, "", "run_weight"], [50, 4, 1, "", "tensor_args"], [50, 4, 1, "", "terminal"], [50, 4, 1, "", "threshold_value"], [50, 2, 1, "", "update_vec_weight"], [50, 4, 1, "", "vec_convergence"], [50, 4, 1, "", "vec_weight"], [50, 4, 1, "", "weight"]], "curobo.rollout.cost.dist_cost": [[51, 1, 1, "", "DistCost"], [51, 1, 1, "", "DistCostConfig"], [51, 1, 1, "", "DistType"], [51, 1, 1, "", "L2DistFunction"]], "curobo.rollout.cost.dist_cost.DistCost": [[51, 2, 1, "", "forward"], [51, 2, 1, "", "forward_target"], [51, 2, 1, "", "forward_target_idx"], [51, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.dist_cost.DistCostConfig": [[51, 4, 1, "", "dist_type"], [51, 4, 1, "", "use_null_space"]], "curobo.rollout.cost.dist_cost.DistType": [[51, 4, 1, "", "L1"], [51, 4, 1, "", "L2"], [51, 4, 1, "", "SQUARED_L2"]], "curobo.rollout.cost.dist_cost.L2DistFunction": [[51, 2, 1, "", "backward"], [51, 2, 1, "", "forward"]], "curobo.rollout.cost.manipulability_cost": [[52, 1, 1, "", "ManipulabilityCost"], [52, 1, 1, "", "ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCost": [[52, 2, 1, "", "forward"], [52, 2, 1, "", "joint_limited_manipulability_delta"], [52, 2, 1, "", "manipulability"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig": [[52, 4, 1, "", "use_joint_limits"]], "curobo.rollout.cost.pose_cost": [[53, 1, 1, "", "PoseCost"], [53, 1, 1, "", "PoseCostConfig"], [53, 1, 1, "", "PoseError"], [53, 1, 1, "", "PoseErrorDistance"], [53, 1, 1, "", "PoseErrorType"], [53, 1, 1, "", "PoseLoss"]], "curobo.rollout.cost.pose_cost.PoseCost": [[53, 2, 1, "", "forward"], [53, 2, 1, "", "forward_out_distance"], [53, 2, 1, "", "forward_pose"], [53, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.pose_cost.PoseCostConfig": [[53, 4, 1, "", "cost_type"], [53, 4, 1, "", "run_vec_weight"], [53, 4, 1, "", "use_metric"]], "curobo.rollout.cost.pose_cost.PoseError": [[53, 2, 1, "", "backward"], [53, 2, 1, "", "forward"]], "curobo.rollout.cost.pose_cost.PoseErrorDistance": [[53, 2, 1, "", "backward"], [53, 2, 1, "", "forward"]], "curobo.rollout.cost.pose_cost.PoseErrorType": [[53, 4, 1, "", "BATCH_GOAL"], [53, 4, 1, "", "BATCH_GOALSET"], [53, 4, 1, "", "GOALSET"], [53, 4, 1, "", "SINGLE_GOAL"]], "curobo.rollout.cost.pose_cost.PoseLoss": [[53, 2, 1, "", "backward"], [53, 2, 1, "", "forward"]], "curobo.rollout.cost.primitive_collision_cost": [[54, 1, 1, "", "PrimitiveCollisionCost"], [54, 1, 1, "", "PrimitiveCollisionCostConfig"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost": [[54, 2, 1, "", "discrete_fn"], [54, 2, 1, "", "get_gradient_buffer"], [54, 2, 1, "", "sweep_fn"], [54, 2, 1, "", "sweep_kernel_fn"], [54, 2, 1, "", "update_dt"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig": [[54, 4, 1, "", "activation_distance"], [54, 4, 1, "", "speed_dt"], [54, 4, 1, "", "sum_distance"], [54, 4, 1, "", "sweep_steps"], [54, 4, 1, "", "use_speed_metric"], [54, 4, 1, "", "use_sweep"], [54, 4, 1, "", "use_sweep_kernel"], [54, 4, 1, "", "world_coll_checker"]], "curobo.rollout.cost.projected_dist_cost": [[55, 1, 1, "", "ProjType"], [55, 1, 1, "", "ProjectedDistCost"], [55, 1, 1, "", "ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost.ProjType": [[55, 4, 1, "", "IDENTITY"], [55, 4, 1, "", "PSEUDO_INVERSE"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost": [[55, 2, 1, "", "forward"], [55, 2, 1, "", "get_pinv_null_disp"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig": [[55, 4, 1, "", "eps"], [55, 4, 1, "", "proj_type"]], "curobo.rollout.cost.self_collision_cost": [[56, 1, 1, "", "SelfCollisionCost"], [56, 1, 1, "", "SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCost": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig": [[56, 4, 1, "", "self_collision_kin_config"]], "curobo.rollout.cost.stop_cost": [[57, 1, 1, "", "StopCost"], [57, 1, 1, "", "StopCostConfig"]], "curobo.rollout.cost.stop_cost.StopCost": [[57, 2, 1, "", "forward"]], "curobo.rollout.cost.stop_cost.StopCostConfig": [[57, 4, 1, "", "dt_traj_params"], [57, 4, 1, "", "horizon"], [57, 4, 1, "", "max_limit"], [57, 4, 1, "", "max_nlimit"]], "curobo.rollout.cost.straight_line_cost": [[58, 1, 1, "", "StraightLineCost"]], "curobo.rollout.cost.straight_line_cost.StraightLineCost": [[58, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost": [[59, 1, 1, "", "RunSquaredSum"], [59, 1, 1, "", "SquaredSum"], [59, 1, 1, "", "ZeroCost"]], "curobo.rollout.cost.zero_cost.RunSquaredSum": [[59, 2, 1, "", "backward"], [59, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.SquaredSum": [[59, 2, 1, "", "backward"], [59, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.ZeroCost": [[59, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model": [[61, 0, 0, "-", "integration_utils"], [62, 0, 0, "-", "kinematic_model"], [63, 0, 0, "-", "model_base"], [64, 0, 0, "-", "tensor_step"]], "curobo.rollout.dynamics_model.integration_utils": [[61, 1, 1, "", "AccelerationTensorStepIdxKernel"], [61, 1, 1, "", "AccelerationTensorStepKernel"], [61, 1, 1, "", "CliqueTensorStep"], [61, 1, 1, "", "CliqueTensorStepCentralDifferenceKernel"], [61, 1, 1, "", "CliqueTensorStepCoalesceKernel"], [61, 1, 1, "", "CliqueTensorStepIdxCentralDifferenceKernel"], [61, 1, 1, "", "CliqueTensorStepIdxKernel"], [61, 1, 1, "", "CliqueTensorStepKernel"], [61, 5, 1, "", "action_interpolate_kernel"], [61, 5, 1, "", "build_clique_matrix"], [61, 5, 1, "", "build_fd_matrix"], [61, 5, 1, "", "build_int_matrix"], [61, 5, 1, "", "build_start_state_mask"], [61, 5, 1, "", "euler_integrate"], [61, 5, 1, "", "interpolate_kernel"], [61, 5, 1, "", "step_acc_semi_euler"], [61, 5, 1, "", "sum_matrix"], [61, 5, 1, "", "tensor_linspace"], [61, 5, 1, "", "tensor_step_acc"], [61, 5, 1, "", "tensor_step_acc_semi_euler"], [61, 5, 1, "", "tensor_step_jerk"], [61, 5, 1, "", "tensor_step_pos"], [61, 5, 1, "", "tensor_step_pos_clique"], [61, 5, 1, "", "tensor_step_pos_ik"], [61, 5, 1, "", "tensor_step_vel"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel": [[61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.kinematic_model": [[62, 1, 1, "", "KinematicModel"], [62, 1, 1, "", "KinematicModelConfig"], [62, 1, 1, "", "KinematicModelState"], [62, 1, 1, "", "TimeTrajConfig"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModel": [[62, 3, 1, "", "action_bound_highs"], [62, 3, 1, "", "action_bound_lows"], [62, 3, 1, "", "cspace_distance_weight"], [62, 2, 1, "", "filter_robot_state"], [62, 2, 1, "", "forward"], [62, 2, 1, "", "get_action_from_state"], [62, 2, 1, "", "get_next_state"], [62, 2, 1, "", "get_robot_command"], [62, 2, 1, "", "get_state_bounds"], [62, 2, 1, "", "get_state_from_action"], [62, 3, 1, "", "init_action_mean"], [62, 2, 1, "", "integrate_action"], [62, 2, 1, "", "integrate_action_step"], [62, 3, 1, "", "max_acceleration"], [62, 3, 1, "", "max_jerk"], [62, 3, 1, "", "null_space_weight"], [62, 3, 1, "", "retract_config"], [62, 2, 1, "", "robot_cmd_tensor_step"], [62, 2, 1, "", "tensor_step"], [62, 2, 1, "", "update_batch_size"], [62, 2, 1, "", "update_cmd_batch_size"], [62, 2, 1, "", "update_traj_dt"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig": [[62, 4, 1, "", "batch_size"], [62, 4, 1, "", "control_space"], [62, 4, 1, "", "dt_traj_params"], [62, 4, 1, "", "filter_robot_command"], [62, 2, 1, "", "from_dict"], [62, 4, 1, "", "horizon"], [62, 4, 1, "", "return_full_act_buffer"], [62, 4, 1, "", "robot_config"], [62, 4, 1, "", "state_estimation_variance"], [62, 4, 1, "", "state_filter_cfg"], [62, 4, 1, "", "state_finite_difference_mode"], [62, 4, 1, "", "teleport_mode"], [62, 4, 1, "", "tensor_args"], [62, 4, 1, "", "vel_scale"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState": [[62, 4, 1, "", "ang_jac_seq"], [62, 4, 1, "", "ee_pos_seq"], [62, 3, 1, "", "ee_pose"], [62, 4, 1, "", "ee_quat_seq"], [62, 4, 1, "", "lin_jac_seq"], [62, 4, 1, "", "link_names"], [62, 4, 1, "", "link_pos_seq"], [62, 3, 1, "", "link_pose"], [62, 4, 1, "", "link_quat_seq"], [62, 4, 1, "", "robot_spheres"], [62, 4, 1, "", "state_seq"]], "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig": [[62, 4, 1, "", "base_dt"], [62, 4, 1, "", "base_ratio"], [62, 2, 1, "", "get_dt_array"], [62, 4, 1, "", "max_dt"], [62, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.model_base": [[63, 1, 1, "", "DynamicsModelBase"]], "curobo.rollout.dynamics_model.model_base.DynamicsModelBase": [[63, 2, 1, "", "filter_robot_state"], [63, 2, 1, "", "forward"], [63, 2, 1, "", "get_next_state"], [63, 2, 1, "", "get_robot_command"]], "curobo.rollout.dynamics_model.tensor_step": [[64, 1, 1, "", "TensorStepAcceleration"], [64, 1, 1, "", "TensorStepAccelerationKernel"], [64, 1, 1, "", "TensorStepBase"], [64, 1, 1, "", "TensorStepPosition"], [64, 1, 1, "", "TensorStepPositionClique"], [64, 1, 1, "", "TensorStepPositionCliqueKernel"], [64, 1, 1, "", "TensorStepPositionTeleport"], [64, 1, 1, "", "TensorStepType"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepBase": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"], [64, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"], [64, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique": [[64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"], [64, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel": [[64, 2, 1, "", "filter_signal"], [64, 2, 1, "", "forward"], [64, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport": [[64, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepType": [[64, 4, 1, "", "ACCELERATION"], [64, 4, 1, "", "ACCELERATION_KERNEL"], [64, 4, 1, "", "JERK"], [64, 4, 1, "", "POSITION"], [64, 4, 1, "", "POSITION_CLIQUE"], [64, 4, 1, "", "POSITION_CLIQUE_KERNEL"], [64, 4, 1, "", "POSITION_TELEPORT"], [64, 4, 1, "", "VELOCITY"]], "curobo.rollout.rollout_base": [[65, 1, 1, "", "Goal"], [65, 1, 1, "", "RolloutBase"], [65, 1, 1, "", "RolloutConfig"], [65, 1, 1, "", "RolloutMetrics"], [65, 1, 1, "", "Trajectory"]], "curobo.rollout.rollout_base.Goal": [[65, 2, 1, "", "apply_kernel"], [65, 4, 1, "", "batch"], [65, 4, 1, "", "batch_current_state_idx"], [65, 4, 1, "", "batch_enable_idx"], [65, 4, 1, "", "batch_goal_state_idx"], [65, 4, 1, "", "batch_pose_idx"], [65, 4, 1, "", "batch_retract_state_idx"], [65, 4, 1, "", "batch_world_idx"], [65, 2, 1, "", "copy_"], [65, 2, 1, "", "create_idx"], [65, 2, 1, "", "create_index_buffers"], [65, 4, 1, "", "current_state"], [65, 2, 1, "", "get_batch_goal_state"], [65, 4, 1, "", "goal_pose"], [65, 4, 1, "", "goal_state"], [65, 4, 1, "", "links_goal_pose"], [65, 4, 1, "", "n_goalset"], [65, 4, 1, "", "name"], [65, 2, 1, "", "repeat_seeds"], [65, 4, 1, "", "retract_state"], [65, 2, 1, "", "to"], [65, 4, 1, "", "update_batch_idx_buffers"]], "curobo.rollout.rollout_base.RolloutBase": [[65, 3, 1, "", "action_bound_highs"], [65, 3, 1, "", "action_bound_lows"], [65, 3, 1, "", "action_bounds"], [65, 2, 1, "", "constraint_fn"], [65, 2, 1, "", "convergence_fn"], [65, 2, 1, "", "cost_fn"], [65, 3, 1, "", "cspace_config"], [65, 2, 1, "", "current_cost"], [65, 3, 1, "", "d_action"], [65, 3, 1, "", "dt"], [65, 2, 1, "", "filter_robot_state"], [65, 2, 1, "", "get_action_from_state"], [65, 2, 1, "", "get_full_dof_from_solution"], [65, 2, 1, "", "get_init_action_seq"], [65, 2, 1, "", "get_metrics"], [65, 2, 1, "", "get_metrics_cuda_graph"], [65, 2, 1, "", "get_robot_command"], [65, 2, 1, "", "get_state_from_action"], [65, 3, 1, "", "horizon"], [65, 2, 1, "", "reset"], [65, 2, 1, "", "reset_cuda_graph"], [65, 2, 1, "", "reset_seed"], [65, 2, 1, "", "rollout_constraint"], [65, 2, 1, "", "rollout_fn"], [65, 2, 1, "", "sample_random_actions"], [65, 3, 1, "", "state_bounds"], [65, 2, 1, "", "update_params"], [65, 2, 1, "", "update_start_state"]], "curobo.rollout.rollout_base.RolloutConfig": [[65, 4, 1, "", "tensor_args"]], "curobo.rollout.rollout_base.RolloutMetrics": [[65, 2, 1, "", "clone"], [65, 4, 1, "", "constraint"], [65, 4, 1, "", "cost"], [65, 4, 1, "", "feasible"], [65, 4, 1, "", "state"]], "curobo.rollout.rollout_base.Trajectory": [[65, 4, 1, "", "actions"], [65, 4, 1, "", "costs"], [65, 4, 1, "", "debug"], [65, 4, 1, "", "state"]], "curobo.types": [[67, 0, 0, "-", "base"], [68, 0, 0, "-", "camera"], [69, 0, 0, "-", "enum"], [70, 0, 0, "-", "math"], [71, 0, 0, "-", "robot"], [72, 0, 0, "-", "state"], [73, 0, 0, "-", "tensor"]], "curobo.types.base": [[67, 1, 1, "", "TensorDeviceType"]], "curobo.types.base.TensorDeviceType": [[67, 2, 1, "", "cpu"], [67, 4, 1, "", "device"], [67, 4, 1, "", "dtype"], [67, 2, 1, "", "from_basic"], [67, 2, 1, "", "to_device"], [67, 2, 1, "", "to_int8_device"]], "curobo.types.camera": [[68, 1, 1, "", "CameraObservation"]], "curobo.types.camera.CameraObservation": [[68, 2, 1, "", "copy_"], [68, 4, 1, "", "depth_image"], [68, 4, 1, "", "image_segmentation"], [68, 4, 1, "", "intrinsics"], [68, 4, 1, "", "name"], [68, 4, 1, "", "pose"], [68, 4, 1, "", "projection_matrix"], [68, 4, 1, "", "resolution"], [68, 4, 1, "", "rgb_image"], [68, 3, 1, "", "shape"], [68, 4, 1, "", "timestamp"], [68, 2, 1, "", "to"]], "curobo.types.enum": [[69, 1, 1, "", "StateType"]], "curobo.types.enum.StateType": [[69, 4, 1, "", "ACCELERATION"], [69, 4, 1, "", "JERK"], [69, 4, 1, "", "POSITION"], [69, 4, 1, "", "VELOCITY"]], "curobo.types.math": [[70, 1, 1, "", "OrientationError"], [70, 1, 1, "", "Pose"], [70, 5, 1, "", "quat_multiply"]], "curobo.types.math.OrientationError": [[70, 2, 1, "", "backward"], [70, 2, 1, "", "forward"], [70, 2, 1, "", "geodesic_distance"]], "curobo.types.math.Pose": [[70, 2, 1, "", "angular_distance"], [70, 2, 1, "", "apply_kernel"], [70, 4, 1, "", "batch"], [70, 2, 1, "", "batch_transform_points"], [70, 2, 1, "", "cat"], [70, 2, 1, "", "clone"], [70, 2, 1, "", "copy_"], [70, 2, 1, "", "distance"], [70, 2, 1, "", "from_batch_list"], [70, 2, 1, "", "from_list"], [70, 2, 1, "", "from_matrix"], [70, 2, 1, "", "get_index"], [70, 2, 1, "", "get_matrix"], [70, 2, 1, "", "get_numpy_matrix"], [70, 2, 1, "", "get_pose_vector"], [70, 2, 1, "", "get_rotation"], [70, 2, 1, "", "inverse"], [70, 2, 1, "", "linear_distance"], [70, 2, 1, "", "multiply"], [70, 4, 1, "", "n_goalset"], [70, 4, 1, "", "name"], [70, 4, 1, "", "normalize_rotation"], [70, 4, 1, "", "position"], [70, 4, 1, "", "quaternion"], [70, 2, 1, "", "repeat"], [70, 2, 1, "", "repeat_seeds"], [70, 4, 1, "", "rotation"], [70, 3, 1, "", "shape"], [70, 2, 1, "", "stack"], [70, 2, 1, "", "to"], [70, 2, 1, "", "to_list"], [70, 2, 1, "", "tolist"], [70, 2, 1, "", "transform_point"], [70, 2, 1, "", "transform_points"], [70, 2, 1, "", "unsqueeze"]], "curobo.types.robot": [[71, 1, 1, "", "NNConfig"], [71, 1, 1, "", "RobotConfig"]], "curobo.types.robot.NNConfig": [[71, 4, 1, "", "ik_seeder"]], "curobo.types.robot.RobotConfig": [[71, 3, 1, "", "cspace"], [71, 2, 1, "", "from_basic"], [71, 2, 1, "", "from_dict"], [71, 4, 1, "", "kinematics"], [71, 4, 1, "", "tensor_args"], [71, 2, 1, "", "write_config"]], "curobo.types.state": [[72, 1, 1, "", "FilterCoeff"], [72, 1, 1, "", "JointState"], [72, 1, 1, "", "State"]], "curobo.types.state.FilterCoeff": [[72, 4, 1, "", "acceleration"], [72, 4, 1, "", "jerk"], [72, 4, 1, "", "position"], [72, 4, 1, "", "velocity"]], "curobo.types.state.JointState": [[72, 4, 1, "", "acceleration"], [72, 2, 1, "", "append_joints"], [72, 2, 1, "", "apply_kernel"], [72, 2, 1, "", "blend"], [72, 2, 1, "", "calculate_fd_from_position"], [72, 2, 1, "", "clone"], [72, 2, 1, "", "copy_"], [72, 2, 1, "", "copy_at_index"], [72, 2, 1, "", "copy_data"], [72, 2, 1, "", "detach"], [72, 2, 1, "", "from_list"], [72, 2, 1, "", "from_numpy"], [72, 2, 1, "", "from_position"], [72, 2, 1, "", "from_state_tensor"], [72, 2, 1, "", "get_augmented_joint_state"], [72, 2, 1, "", "get_ordered_joint_state"], [72, 2, 1, "", "get_state_tensor"], [72, 2, 1, "", "inplace_reindex"], [72, 4, 1, "", "jerk"], [72, 4, 1, "", "joint_names"], [72, 4, 1, "", "position"], [72, 2, 1, "", "repeat_seeds"], [72, 2, 1, "", "scale"], [72, 3, 1, "", "shape"], [72, 2, 1, "", "squeeze"], [72, 2, 1, "", "stack"], [72, 4, 1, "", "tensor_args"], [72, 2, 1, "", "to"], [72, 2, 1, "", "trim_trajectory"], [72, 2, 1, "", "unsqueeze"], [72, 4, 1, "", "velocity"], [72, 2, 1, "", "zeros"]], "curobo.types.state.State": [[72, 2, 1, "", "apply_kernel"], [72, 2, 1, "", "blend"], [72, 2, 1, "", "clone"], [72, 2, 1, "", "get_state_tensor"], [72, 2, 1, "", "to"]], "curobo.util": [[75, 0, 0, "-", "error_metrics"], [76, 0, 0, "-", "helpers"], [77, 0, 0, "-", "logger"], [78, 0, 0, "-", "sample_lib"], [79, 0, 0, "-", "state_filter"], [80, 0, 0, "-", "tensor_util"], [81, 0, 0, "-", "torch_utils"], [82, 0, 0, "-", "trajectory"], [83, 0, 0, "-", "usd_helper"], [84, 0, 0, "-", "warp"], [85, 0, 0, "-", "warp_interpolation"]], "curobo.util.error_metrics": [[75, 5, 1, "", "rotation_error_matrix"], [75, 5, 1, "", "rotation_error_quaternion"]], "curobo.util.helpers": [[76, 5, 1, "", "default_to_regular"], [76, 5, 1, "", "list_idx_if_not_none"]], "curobo.util.logger": [[77, 5, 1, "", "log_error"], [77, 5, 1, "", "log_info"], [77, 5, 1, "", "log_warn"], [77, 5, 1, "", "setup_curobo_logger"]], "curobo.util.sample_lib": [[78, 1, 1, "", "BaseSampleLib"], [78, 1, 1, "", "HaltonGenerator"], [78, 1, 1, "", "HaltonSampleLib"], [78, 1, 1, "", "KnotSampleLib"], [78, 1, 1, "", "RandomSampleLib"], [78, 1, 1, "", "SampleConfig"], [78, 1, 1, "", "SampleLib"], [78, 1, 1, "", "SineSampleLib"], [78, 1, 1, "", "StompSampleLib"], [78, 5, 1, "", "bspline"], [78, 5, 1, "", "generate_gaussian_halton_samples"], [78, 5, 1, "", "generate_gaussian_sobol_samples"], [78, 5, 1, "", "generate_halton_samples"], [78, 5, 1, "", "generate_noise"], [78, 5, 1, "", "generate_noise_np"], [78, 5, 1, "", "generate_prime_numbers"], [78, 5, 1, "", "generate_van_der_corput_sample"], [78, 5, 1, "", "generate_van_der_corput_samples_batch"], [78, 5, 1, "", "get_ranged_halton_samples"]], "curobo.util.sample_lib.BaseSampleLib": [[78, 2, 1, "", "filter_samples"], [78, 2, 1, "", "filter_smooth"], [78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.HaltonGenerator": [[78, 2, 1, "", "fast_forward"], [78, 2, 1, "", "get_gaussian_samples"], [78, 2, 1, "", "get_samples"], [78, 2, 1, "", "reset"]], "curobo.util.sample_lib.HaltonSampleLib": [[78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.KnotSampleLib": [[78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.RandomSampleLib": [[78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SampleConfig": [[78, 4, 1, "", "cov_mode"], [78, 4, 1, "", "covariance_matrix"], [78, 4, 1, "", "d_action"], [78, 4, 1, "", "degree"], [78, 4, 1, "", "filter_coeffs"], [78, 4, 1, "", "fixed_samples"], [78, 4, 1, "", "horizon"], [78, 4, 1, "", "n_knots"], [78, 4, 1, "", "sample_method"], [78, 4, 1, "", "sample_ratio"], [78, 4, 1, "", "scale_tril"], [78, 4, 1, "", "seed"], [78, 4, 1, "", "sine_period"], [78, 4, 1, "", "tensor_args"]], "curobo.util.sample_lib.SampleLib": [[78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SineSampleLib": [[78, 2, 1, "", "generate_sine_wave"], [78, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.StompSampleLib": [[78, 2, 1, "", "get_samples"]], "curobo.util.state_filter": [[79, 1, 1, "", "FilterConfig"], [79, 1, 1, "", "JointStateFilter"]], "curobo.util.state_filter.FilterConfig": [[79, 4, 1, "", "control_space"], [79, 4, 1, "", "dt"], [79, 4, 1, "", "enable"], [79, 4, 1, "", "filter_coeff"], [79, 2, 1, "", "from_dict"], [79, 4, 1, "", "teleport_mode"], [79, 4, 1, "", "tensor_args"]], "curobo.util.state_filter.JointStateFilter": [[79, 2, 1, "", "filter_joint_state"], [79, 2, 1, "", "integrate_acc"], [79, 2, 1, "", "integrate_jerk"], [79, 2, 1, "", "integrate_pos"], [79, 2, 1, "", "integrate_vel"], [79, 2, 1, "", "reset"]], "curobo.util.tensor_util": [[80, 5, 1, "", "check_tensor_shapes"], [80, 5, 1, "", "copy_if_not_none"], [80, 5, 1, "", "copy_tensor"], [80, 5, 1, "", "tensor_repeat_seeds"]], "curobo.util.torch_utils": [[81, 5, 1, "", "find_first_idx"], [81, 5, 1, "", "find_last_idx"], [81, 5, 1, "", "is_cuda_graph_available"]], "curobo.util.trajectory": [[82, 1, 1, "", "InterpolateType"], [82, 5, 1, "", "get_batch_interpolated_trajectory"], [82, 5, 1, "", "get_cpu_kunz_stilman_interpolation"], [82, 5, 1, "", "get_cpu_linear_interpolation"], [82, 5, 1, "", "get_interpolated_trajectory"], [82, 5, 1, "", "get_linear_traj"], [82, 5, 1, "", "get_smooth_trajectory"], [82, 5, 1, "", "get_spline_interpolated_trajectory"], [82, 5, 1, "", "linear_smooth"]], "curobo.util.trajectory.InterpolateType": [[82, 4, 1, "", "CUBIC"], [82, 4, 1, "", "KUNZ_STILMAN_OPTIMAL"], [82, 4, 1, "", "LINEAR"], [82, 4, 1, "", "LINEAR_CUDA"], [82, 4, 1, "", "QUINTIC"]], "curobo.util.usd_helper": [[83, 1, 1, "", "UsdHelper"], [83, 5, 1, "", "create_stage"], [83, 5, 1, "", "get_capsule_attrs"], [83, 5, 1, "", "get_cube_attrs"], [83, 5, 1, "", "get_cylinder_attrs"], [83, 5, 1, "", "get_mesh_attrs"], [83, 5, 1, "", "get_position_quat"], [83, 5, 1, "", "get_prim_world_pose"], [83, 5, 1, "", "get_sphere_attrs"], [83, 5, 1, "", "get_transform"], [83, 5, 1, "", "set_cylinder_attrs"], [83, 5, 1, "", "set_geom_cube_attrs"], [83, 5, 1, "", "set_geom_cylinder_attrs"], [83, 5, 1, "", "set_geom_mesh_attrs"], [83, 5, 1, "", "set_geom_sphere_attrs"], [83, 5, 1, "", "set_prim_transform"], [83, 5, 1, "", "set_prim_translate"]], "curobo.util.usd_helper.UsdHelper": [[83, 2, 1, "", "add_cuboid_to_stage"], [83, 2, 1, "", "add_cylinder_to_stage"], [83, 2, 1, "", "add_material"], [83, 2, 1, "", "add_mesh_to_stage"], [83, 2, 1, "", "add_sphere_to_stage"], [83, 2, 1, "", "add_subroot"], [83, 2, 1, "", "add_world_to_stage"], [83, 2, 1, "", "create_animation"], [83, 2, 1, "", "create_grid_usd"], [83, 2, 1, "", "create_linkpose_robot_animation"], [83, 2, 1, "", "create_obstacle_animation"], [83, 2, 1, "", "create_stage"], [83, 2, 1, "", "get_obstacle_from_prim"], [83, 2, 1, "", "get_obstacles_from_stage"], [83, 2, 1, "", "get_pose"], [83, 2, 1, "", "get_prim_from_obstacle"], [83, 2, 1, "", "get_robot_prims"], [83, 2, 1, "", "load_robot"], [83, 2, 1, "", "load_robot_usd"], [83, 2, 1, "", "load_stage"], [83, 2, 1, "", "load_stage_from_file"], [83, 2, 1, "", "save"], [83, 2, 1, "", "update_robot_joint_state"], [83, 2, 1, "", "write_motion_gen_log"], [83, 2, 1, "", "write_stage_to_file"], [83, 2, 1, "", "write_trajectory_animation"], [83, 2, 1, "", "write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[84, 5, 1, "", "init_warp"]], "curobo.util.warp_interpolation": [[85, 5, 1, "", "get_cuda_linear_interpolation"]], "curobo.util_file": [[86, 5, 1, "", "add_cpp_path"], [86, 5, 1, "", "copy_file_to_path"], [86, 5, 1, "", "file_exists"], [86, 5, 1, "", "get_assets_path"], [86, 5, 1, "", "get_configs_path"], [86, 5, 1, "", "get_content_path"], [86, 5, 1, "", "get_cpp_path"], [86, 5, 1, "", "get_debug_path"], [86, 5, 1, "", "get_filename"], [86, 5, 1, "", "get_files_from_dir"], [86, 5, 1, "", "get_module_path"], [86, 5, 1, "", "get_motion_gen_robot_list"], [86, 5, 1, "", "get_multi_arm_robot_list"], [86, 5, 1, "", "get_path_of_dir"], [86, 5, 1, "", "get_robot_configs_path"], [86, 5, 1, "", "get_robot_list"], [86, 5, 1, "", "get_robot_path"], [86, 5, 1, "", "get_root_path"], [86, 5, 1, "", "get_task_configs_path"], [86, 5, 1, "", "get_weights_path"], [86, 5, 1, "", "get_world_configs_path"], [86, 5, 1, "", "join_path"], [86, 5, 1, "", "load_yaml"], [86, 5, 1, "", "write_yaml"]], "curobo.wrap": [[88, 0, 0, "-", "model"], [91, 0, 0, "-", "reacher"], [98, 0, 0, "-", "wrap_base"], [99, 0, 0, "-", "wrap_mpc"]], "curobo.wrap.model": [[89, 0, 0, "-", "curobo_robot_world"], [90, 0, 0, "-", "robot_world"]], "curobo.wrap.model.curobo_robot_world": [[89, 1, 1, "", "CuroboRobotWorld"], [89, 1, 1, "", "CuroboRobotWorldConfig"]], "curobo.wrap.model.robot_world": [[90, 1, 1, "", "RobotWorld"], [90, 1, 1, "", "RobotWorldConfig"]], "curobo.wrap.model.robot_world.RobotWorld": [[90, 2, 1, "", "get_bound"], [90, 2, 1, "", "get_collision_constraint"], [90, 2, 1, "", "get_collision_distance"], [90, 2, 1, "", "get_collision_vector"], [90, 2, 1, "", "get_kinematics"], [90, 2, 1, "", "get_self_collision"], [90, 2, 1, "", "get_self_collision_distance"], [90, 2, 1, "", "get_world_self_collision_distance_from_joint_trajectory"], [90, 2, 1, "", "get_world_self_collision_distance_from_joints"], [90, 2, 1, "", "pose_distance"], [90, 2, 1, "", "sample"], [90, 2, 1, "", "sample_trajectory"], [90, 2, 1, "", "update_world"], [90, 2, 1, "", "validate"], [90, 2, 1, "", "validate_trajectory"]], "curobo.wrap.model.robot_world.RobotWorldConfig": [[90, 4, 1, "", "bound_cost"], [90, 4, 1, "", "bound_scale"], [90, 4, 1, "", "collision_constraint"], [90, 4, 1, "", "collision_cost"], [90, 4, 1, "", "contact_distance"], [90, 4, 1, "", "kinematics"], [90, 2, 1, "", "load_from_config"], [90, 4, 1, "", "pose_cost"], [90, 4, 1, "", "rejection_ratio"], [90, 4, 1, "", "sampler"], [90, 4, 1, "", "self_collision_cost"], [90, 4, 1, "", "tensor_args"], [90, 4, 1, "", "world_model"]], "curobo.wrap.reacher": [[92, 0, 0, "-", "evaluator"], [93, 0, 0, "-", "ik_solver"], [94, 0, 0, "-", "motion_gen"], [95, 0, 0, "-", "mpc"], [96, 0, 0, "-", "trajopt"], [97, 0, 0, "-", "types"]], "curobo.wrap.reacher.evaluator": [[92, 1, 1, "", "TrajEvaluator"], [92, 1, 1, "", "TrajEvaluatorConfig"]], "curobo.wrap.reacher.evaluator.TrajEvaluator": [[92, 2, 1, "", "calculate_dt"], [92, 2, 1, "", "evaluate"], [92, 2, 1, "", "evaluate_from_position"], [92, 2, 1, "", "evaluate_interpolated_smootheness"]], "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig": [[92, 4, 1, "", "cost_weight"], [92, 4, 1, "", "max_acc"], [92, 4, 1, "", "max_dt"], [92, 4, 1, "", "max_jerk"], [92, 4, 1, "", "min_dt"]], "curobo.wrap.reacher.ik_solver": [[93, 1, 1, "", "IKResult"], [93, 1, 1, "", "IKSolver"], [93, 1, 1, "", "IKSolverConfig"]], "curobo.wrap.reacher.ik_solver.IKResult": [[93, 4, 1, "", "debug_info"], [93, 4, 1, "", "error"], [93, 2, 1, "", "get_batch_unique_solution"], [93, 2, 1, "", "get_unique_solution"], [93, 4, 1, "", "goal_pose"], [93, 4, 1, "", "js_solution"], [93, 4, 1, "", "position_error"], [93, 4, 1, "", "rotation_error"], [93, 4, 1, "", "seed"], [93, 4, 1, "", "solution"], [93, 4, 1, "", "solve_time"], [93, 4, 1, "", "success"]], "curobo.wrap.reacher.ik_solver.IKSolver": [[93, 2, 1, "", "attach_object_to_robot"], [93, 2, 1, "", "batch_env_solve"], [93, 2, 1, "", "check_constraints"], [93, 2, 1, "", "detach_object_from_robot"], [93, 2, 1, "", "fk"], [93, 2, 1, "", "generate_seed"], [93, 2, 1, "", "get_all_kinematics_instances"], [93, 2, 1, "", "get_all_rollout_instances"], [93, 2, 1, "", "get_result"], [93, 2, 1, "", "get_retract_config"], [93, 2, 1, "", "get_seed"], [93, 2, 1, "", "get_success"], [93, 3, 1, "", "kinematics"], [93, 2, 1, "", "reset_cuda_graph"], [93, 2, 1, "", "reset_seed"], [93, 2, 1, "", "sample_configs"], [93, 2, 1, "", "solve"], [93, 2, 1, "", "solve_any"], [93, 2, 1, "", "solve_batch"], [93, 2, 1, "", "solve_batch_env"], [93, 2, 1, "", "solve_batch_env_goalset"], [93, 2, 1, "", "solve_batch_goalset"], [93, 2, 1, "", "solve_from_solve_state"], [93, 2, 1, "", "solve_goalset"], [93, 2, 1, "", "solve_single"], [93, 2, 1, "", "update_goal_buffer"], [93, 2, 1, "", "update_world"]], "curobo.wrap.reacher.ik_solver.IKSolverConfig": [[93, 4, 1, "", "ik_nn_seeder"], [93, 2, 1, "", "load_from_robot_config"], [93, 4, 1, "", "num_seeds"], [93, 4, 1, "", "position_threshold"], [93, 4, 1, "", "robot_config"], [93, 4, 1, "", "rollout_fn"], [93, 4, 1, "", "rotation_threshold"], [93, 4, 1, "", "sample_rejection_ratio"], [93, 4, 1, "", "solver"], [93, 4, 1, "", "tensor_args"], [93, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen": [[94, 1, 1, "", "MotionGen"], [94, 1, 1, "", "MotionGenConfig"], [94, 1, 1, "", "MotionGenPlanConfig"], [94, 1, 1, "", "MotionGenResult"]], "curobo.wrap.reacher.motion_gen.MotionGen": [[94, 2, 1, "", "add_camera_frame"], [94, 2, 1, "", "add_running_pose_constraint"], [94, 2, 1, "", "attach_bounding_box_from_blox_to_robot"], [94, 2, 1, "", "attach_new_object_to_robot"], [94, 2, 1, "", "attach_objects_to_robot"], [94, 2, 1, "", "attach_spheres_to_robot"], [94, 2, 1, "", "batch_plan"], [94, 2, 1, "", "check_constraints"], [94, 2, 1, "", "clear_world_cache"], [94, 2, 1, "", "compute_kinematics"], [94, 2, 1, "", "detach_object_from_robot"], [94, 2, 1, "", "detach_spheres_from_robot"], [94, 3, 1, "", "dof"], [94, 2, 1, "", "get_active_js"], [94, 2, 1, "", "get_all_kinematics_instances"], [94, 2, 1, "", "get_all_rollout_instances"], [94, 2, 1, "", "get_full_js"], [94, 2, 1, "", "get_retract_config"], [94, 2, 1, "", "graph_search"], [94, 3, 1, "", "kinematics"], [94, 2, 1, "", "plan"], [94, 2, 1, "", "plan_batch"], [94, 2, 1, "", "plan_batch_env"], [94, 2, 1, "", "plan_batch_env_goalset"], [94, 2, 1, "", "plan_batch_goalset"], [94, 2, 1, "", "plan_goalset"], [94, 2, 1, "", "plan_single"], [94, 2, 1, "", "plan_single_js"], [94, 2, 1, "", "process_camera_frames"], [94, 2, 1, "", "remove_running_pose_constraint"], [94, 2, 1, "", "reset"], [94, 2, 1, "", "reset_seed"], [94, 2, 1, "", "run_finetune_trajopt"], [94, 2, 1, "", "solve_ik"], [94, 2, 1, "", "solve_trajopt"], [94, 2, 1, "", "update_batch_size"], [94, 2, 1, "", "update_interpolation_type"], [94, 2, 1, "", "update_locked_state"], [94, 2, 1, "", "update_world"], [94, 2, 1, "", "warmup"], [94, 3, 1, "", "world_collision"], [94, 3, 1, "", "world_model"]], "curobo.wrap.reacher.motion_gen.MotionGenConfig": [[94, 4, 1, "", "batch_ik_seeds"], [94, 4, 1, "", "batch_trajopt_seeds"], [94, 4, 1, "", "finetune_dt_scale"], [94, 4, 1, "", "finetune_trajopt_solver"], [94, 4, 1, "", "graph_planner"], [94, 4, 1, "", "graph_seeds"], [94, 4, 1, "", "graph_trajopt_iters"], [94, 4, 1, "", "ik_seeds"], [94, 4, 1, "", "ik_solver"], [94, 4, 1, "", "interpolation_dt"], [94, 4, 1, "", "interpolation_steps"], [94, 4, 1, "", "interpolation_type"], [94, 4, 1, "", "js_trajopt_solver"], [94, 2, 1, "", "load_from_robot_config"], [94, 4, 1, "", "noisy_trajopt_seeds"], [94, 4, 1, "", "partial_ik_iters"], [94, 4, 1, "", "robot_cfg"], [94, 4, 1, "", "store_debug_in_result"], [94, 4, 1, "", "tensor_args"], [94, 4, 1, "", "trajopt_seeds"], [94, 4, 1, "", "trajopt_solver"], [94, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig": [[94, 2, 1, "", "clone"], [94, 4, 1, "", "disable_graph_attempt"], [94, 4, 1, "", "enable_finetune_trajopt"], [94, 4, 1, "", "enable_graph"], [94, 4, 1, "", "enable_graph_attempt"], [94, 4, 1, "", "enable_opt"], [94, 4, 1, "", "fail_on_invalid_query"], [94, 4, 1, "", "ik_fail_return"], [94, 4, 1, "", "max_attempts"], [94, 4, 1, "", "need_graph_success"], [94, 4, 1, "", "num_graph_seeds"], [94, 4, 1, "", "num_ik_seeds"], [94, 4, 1, "", "num_trajopt_seeds"], [94, 4, 1, "", "partial_ik_opt"], [94, 4, 1, "", "success_ratio"], [94, 4, 1, "", "timeout"], [94, 4, 1, "", "use_nn_ik_seed"]], "curobo.wrap.reacher.motion_gen.MotionGenResult": [[94, 4, 1, "", "attempts"], [94, 2, 1, "", "clone"], [94, 2, 1, "", "copy_idx"], [94, 4, 1, "", "cspace_error"], [94, 4, 1, "", "debug_info"], [94, 4, 1, "", "finetune_time"], [94, 2, 1, "", "get_interpolated_plan"], [94, 2, 1, "", "get_paths"], [94, 2, 1, "", "get_successful_paths"], [94, 4, 1, "", "graph_plan"], [94, 4, 1, "", "graph_time"], [94, 4, 1, "", "ik_time"], [94, 4, 1, "", "interpolated_plan"], [94, 4, 1, "", "interpolation_dt"], [94, 3, 1, "", "motion_time"], [94, 4, 1, "", "optimized_dt"], [94, 4, 1, "", "optimized_plan"], [94, 4, 1, "", "path_buffer_last_tstep"], [94, 4, 1, "", "position_error"], [94, 4, 1, "", "rotation_error"], [94, 4, 1, "", "solve_time"], [94, 4, 1, "", "status"], [94, 4, 1, "", "success"], [94, 4, 1, "", "total_time"], [94, 4, 1, "", "trajopt_attempts"], [94, 4, 1, "", "trajopt_time"], [94, 4, 1, "", "used_graph"], [94, 4, 1, "", "valid_query"]], "curobo.wrap.reacher.mpc": [[95, 1, 1, "", "MpcSolver"], [95, 1, 1, "", "MpcSolverConfig"]], "curobo.wrap.reacher.mpc.MpcSolver": [[95, 2, 1, "", "enable_cspace_cost"], [95, 2, 1, "", "enable_pose_cost"], [95, 2, 1, "", "fn"], [95, 2, 1, "", "get_active_js"], [95, 2, 1, "", "get_visual_rollouts"], [95, 3, 1, "", "joint_names"], [95, 3, 1, "", "kinematics"], [95, 2, 1, "", "reset"], [95, 2, 1, "", "reset_cuda_graph"], [95, 3, 1, "", "rollout_fn"], [95, 2, 1, "", "setup_solve_batch"], [95, 2, 1, "", "setup_solve_batch_env"], [95, 2, 1, "", "setup_solve_batch_env_goalset"], [95, 2, 1, "", "setup_solve_batch_goalset"], [95, 2, 1, "", "setup_solve_goalset"], [95, 2, 1, "", "setup_solve_single"], [95, 2, 1, "", "step"], [95, 2, 1, "", "step_once"], [95, 2, 1, "", "update_goal"], [95, 2, 1, "", "update_goal_buffer"], [95, 2, 1, "", "update_world"], [95, 3, 1, "", "world_collision"]], "curobo.wrap.reacher.mpc.MpcSolverConfig": [[95, 2, 1, "", "load_from_robot_config"], [95, 4, 1, "", "solver"], [95, 4, 1, "", "tensor_args"], [95, 4, 1, "", "use_cuda_graph_full_step"], [95, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt": [[96, 1, 1, "", "TrajOptSolver"], [96, 1, 1, "", "TrajOptSolverConfig"], [96, 1, 1, "", "TrajResult"]], "curobo.wrap.reacher.trajopt.TrajOptSolver": [[96, 2, 1, "", "attach_object_to_robot"], [96, 2, 1, "", "batch_solve"], [96, 2, 1, "", "calculate_trajectory_dt"], [96, 2, 1, "", "compute_metrics"], [96, 2, 1, "", "detach_object_from_robot"], [96, 2, 1, "", "fk"], [96, 2, 1, "", "get_all_kinematics_instances"], [96, 2, 1, "", "get_all_rollout_instances"], [96, 2, 1, "", "get_bias_seed"], [96, 2, 1, "", "get_full_js"], [96, 2, 1, "", "get_interpolated_trajectory"], [96, 2, 1, "", "get_linear_seed"], [96, 2, 1, "", "get_seed_set"], [96, 2, 1, "", "get_seeds"], [96, 2, 1, "", "get_start_seed"], [96, 3, 1, "", "kinematics"], [96, 2, 1, "", "reset_cuda_graph"], [96, 2, 1, "", "reset_seed"], [96, 3, 1, "", "retract_config"], [96, 2, 1, "", "solve"], [96, 2, 1, "", "solve_any"], [96, 2, 1, "", "solve_batch"], [96, 2, 1, "", "solve_batch_env"], [96, 2, 1, "", "solve_batch_env_goalset"], [96, 2, 1, "", "solve_batch_goalset"], [96, 2, 1, "", "solve_from_solve_state"], [96, 2, 1, "", "solve_goalset"], [96, 2, 1, "", "solve_single"], [96, 3, 1, "", "solver_dt"], [96, 2, 1, "", "update_goal_buffer"], [96, 2, 1, "", "update_solver_dt"]], "curobo.wrap.reacher.trajopt.TrajOptSolverConfig": [[96, 4, 1, "", "bias_node"], [96, 4, 1, "", "cspace_threshold"], [96, 4, 1, "", "evaluate_interpolated_trajectory"], [96, 4, 1, "", "interpolate_rollout"], [96, 4, 1, "", "interpolation_dt"], [96, 4, 1, "", "interpolation_steps"], [96, 4, 1, "", "interpolation_type"], [96, 2, 1, "", "load_from_robot_config"], [96, 4, 1, "", "num_seeds"], [96, 4, 1, "", "position_threshold"], [96, 4, 1, "", "robot_config"], [96, 4, 1, "", "rollout_fn"], [96, 4, 1, "", "rotation_threshold"], [96, 4, 1, "", "seed_ratio"], [96, 4, 1, "", "solver"], [96, 4, 1, "", "store_debug_in_result"], [96, 4, 1, "", "sync_cuda_time"], [96, 4, 1, "", "tensor_args"], [96, 4, 1, "", "traj_evaluator"], [96, 4, 1, "", "traj_evaluator_config"], [96, 4, 1, "", "traj_tsteps"], [96, 4, 1, "", "trim_steps"], [96, 4, 1, "", "use_cspace_seed"], [96, 4, 1, "", "use_cuda_graph_metrics"], [96, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt.TrajResult": [[96, 4, 1, "", "cspace_error"], [96, 4, 1, "", "debug_info"], [96, 4, 1, "", "goal"], [96, 4, 1, "", "interpolated_solution"], [96, 4, 1, "", "metrics"], [96, 4, 1, "", "optimized_dt"], [96, 4, 1, "", "path_buffer_last_tstep"], [96, 4, 1, "", "position_error"], [96, 4, 1, "", "raw_solution"], [96, 4, 1, "", "rotation_error"], [96, 4, 1, "", "seed"], [96, 4, 1, "", "smooth_error"], [96, 4, 1, "", "smooth_label"], [96, 4, 1, "", "solution"], [96, 4, 1, "", "solve_time"], [96, 4, 1, "", "success"]], "curobo.wrap.reacher.types": [[97, 1, 1, "", "MotionGenSolverState"], [97, 1, 1, "", "ReacherSolveState"], [97, 1, 1, "", "ReacherSolveType"]], "curobo.wrap.reacher.types.MotionGenSolverState": [[97, 4, 1, "", "ik_solve_state"], [97, 4, 1, "", "solve_type"], [97, 4, 1, "", "trajopt_solve_state"]], "curobo.wrap.reacher.types.ReacherSolveState": [[97, 4, 1, "", "batch_env"], [97, 4, 1, "", "batch_mode"], [97, 4, 1, "", "batch_retract"], [97, 4, 1, "", "batch_size"], [97, 2, 1, "", "create_goal_buffer"], [97, 2, 1, "", "get_batch_size"], [97, 2, 1, "", "get_ik_batch_size"], [97, 4, 1, "", "n_envs"], [97, 4, 1, "", "n_goalset"], [97, 4, 1, "", "num_graph_seeds"], [97, 4, 1, "", "num_ik_seeds"], [97, 4, 1, "", "num_mpc_seeds"], [97, 4, 1, "", "num_seeds"], [97, 4, 1, "", "num_trajopt_seeds"], [97, 4, 1, "", "solve_type"], [97, 2, 1, "", "update_goal"], [97, 2, 1, "", "update_goal_buffer"]], "curobo.wrap.reacher.types.ReacherSolveType": [[97, 4, 1, "", "BATCH"], [97, 4, 1, "", "BATCH_ENV"], [97, 4, 1, "", "BATCH_ENV_GOALSET"], [97, 4, 1, "", "BATCH_GOALSET"], [97, 4, 1, "", "GOALSET"], [97, 4, 1, "", "SINGLE"]], "curobo.wrap.wrap_base": [[98, 1, 1, "", "WrapBase"], [98, 1, 1, "", "WrapConfig"], [98, 1, 1, "", "WrapResult"]], "curobo.wrap.wrap_base.WrapBase": [[98, 2, 1, "", "get_all_rollout_instances"], [98, 2, 1, "", "get_debug_cost"], [98, 2, 1, "", "get_debug_data"], [98, 2, 1, "", "get_init_act"], [98, 2, 1, "", "get_metrics"], [98, 3, 1, "", "joint_names"], [98, 3, 1, "", "newton_optimizer"], [98, 2, 1, "", "optimize"], [98, 3, 1, "", "particle_optimizer"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "reset_cuda_graph"], [98, 2, 1, "", "reset_seed"], [98, 3, 1, "", "rollout_fn"], [98, 2, 1, "", "solve"], [98, 2, 1, "", "update_nenvs"], [98, 2, 1, "", "update_params"]], "curobo.wrap.wrap_base.WrapConfig": [[98, 4, 1, "", "compute_metrics"], [98, 4, 1, "", "optimizers"], [98, 4, 1, "", "safety_rollout"], [98, 4, 1, "", "sync_cuda_time"], [98, 4, 1, "", "use_cuda_graph_metrics"]], "curobo.wrap.wrap_base.WrapResult": [[98, 4, 1, "", "action"], [98, 2, 1, "", "clone"], [98, 4, 1, "", "debug"], [98, 4, 1, "", "js_action"], [98, 4, 1, "", "metrics"], [98, 4, 1, "", "solve_time"]], "curobo.wrap.wrap_mpc": [[99, 1, 1, "", "WrapMpc"]], "curobo.wrap.wrap_mpc.WrapMpc": [[99, 2, 1, "", "get_rollouts"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "solve"], [99, 2, 1, "", "update_init_seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"curobo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 117, 123, 124], "packag": [0, 1, 8, 20, 21, 31, 35, 36, 40, 45, 48, 60, 66, 74, 87, 88, 91], "subpackag": [0, 20, 35, 45, 87], "submodul": [0, 1, 8, 20, 21, 31, 35, 36, 40, 45, 48, 60, 66, 74, 87, 88, 91], "cuda_robot_model": [1, 2, 3, 4, 5, 6, 7], "cuda_robot_gener": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99], "kinematics_pars": 4, "type": [5, 30, 66, 67, 68, 69, 70, 71, 72, 73, 97], "urdf_kinematics_pars": 6, "usd_kinematics_pars": 7, "curobolib": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "geom": [9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "geom_cu": 10, "kinemat": [11, 101, 111, 112, 116], "kinematics_fused_cu": 12, "lbfgs_step_cu": 13, "line_search_cu": 14, "l": 15, "opt": [16, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "tensor_step": [17, 64], "tensor_step_cu": 18, "util_fil": [19, 86], "sdf": [21, 22, 23, 24, 25, 26, 27], "sdf_grid": 22, "util": [23, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "warp_primit": 24, "world": [25, 101, 113, 122], "world_blox": 26, "world_mesh": 27, "sphere_fit": 28, "transform": 29, "graph": [31, 32, 33, 34], "graph_bas": 32, "graph_nx": 33, "prm": 34, "newton": [36, 37, 38], "lbfg": 37, "newton_bas": 38, "opt_bas": 39, "particl": [40, 41, 42, 43, 44], "parallel_": 41, "parallel_mppi": 42, "particle_opt_bas": 43, "particle_opt_util": 44, "rollout": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 101], "arm_bas": 46, "arm_reach": 47, "cost": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "bound_cost": 49, "cost_bas": 50, "dist_cost": 51, "manipulability_cost": 52, "pose_cost": 53, "primitive_collision_cost": 54, "projected_dist_cost": 55, "self_collision_cost": 56, "stop_cost": 57, "straight_line_cost": 58, "zero_cost": 59, "dynamics_model": [60, 61, 62, 63, 64], "integration_util": 61, "kinematic_model": 62, "model_bas": 63, "rollout_bas": 65, "base": 67, "camera": [68, 114], "enum": 69, "math": 70, "robot": [71, 102, 104, 106, 119, 122, 123, 127], "state": 72, "tensor": [73, 121], "error_metr": 75, "helper": 76, "logger": 77, "sample_lib": 78, "state_filt": 79, "tensor_util": 80, "torch_util": 81, "trajectori": [82, 101], "usd_help": 83, "warp": 84, "warp_interpol": 85, "wrap": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "model": [88, 89, 90, 112, 114], "curobo_robot_world": 89, "robot_world": 90, "reacher": [91, 92, 93, 94, 95, 96, 97, 108, 112], "evalu": 92, "ik_solv": 93, "motion_gen": 94, "mpc": 95, "trajopt": 96, "wrap_bas": 98, "wrap_mpc": 99, "python": [101, 111], "api": 101, "geometri": [101, 113], "represent": [101, 113, 122, 127], "numer": [101, 120], "optim": [101, 120], "custom": 101, "cuda": [101, 102, 104, 121], "kernel": [101, 121], "invers": [101, 111, 112, 116], "geometr": [101, 116], "plan": [101, 107, 116], "motion": [101, 105, 107, 111, 112, 114, 116, 123], "gener": [101, 105, 107, 109, 111, 112, 114, 116, 123], "all": 101, "acceler": [102, 104], "librari": [102, 104, 109], "updat": [102, 103, 104], "overview": [102, 104], "batch": [105, 112, 113], "environ": [105, 113], "collis": [105, 111, 112, 113, 114, 116, 123, 127], "check": [105, 111, 112, 113, 114, 116], "block": 106, "stack": 106, "attach": 106, "object": 106, "mode": 107, "instal": 109, "us": [109, 111, 112, 114, 115, 124], "isaac": [109, 112], "sim": [109, 112], "nvblox": 109, "option": 109, "troubleshoot": 109, "document": 109, "basic": [110, 112], "forward": 111, "usd": [112, 122], "interfac": 112, "reachabl": 112, "free": [112, 123], "predict": [112, 114], "control": [112, 114], "mppi": 112, "multi": 112, "arm": 112, "checker": 113, "implement": 113, "metric": 113, "approxim": 113, "sphere": 113, "depth": 114, "demo": 114, "an": 114, "exist": 114, "map": 114, "onlin": 114, "neural": 115, "network": 115, "benchmark": 116, "profil": 116, "docker": 117, "develop": [117, 121], "build": 117, "your": 117, "own": 117, "imag": 117, "known": 118, "issu": 118, "support": 119, "note": 121, "io": 121, "buffer": 121, "read": 122, "from": 122, "technic": 123, "report": 123, "parallel": 123, "minimum": 123, "jerk": 123, "citat": 123, "research": 124, "configur": 127, "new": 127, "prequisit": 127, "file": 127, "tutori": 127, "ur5": 127, "prepar": 127, "asset": 127, "creat": 127, "self": 127, "test": 127}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"curobo package": [[0, "module-curobo"]], "Subpackages": [[0, "subpackages"], [20, "subpackages"], [35, "subpackages"], [45, "subpackages"], [87, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [8, "submodules"], [20, "submodules"], [21, "submodules"], [31, "submodules"], [35, "submodules"], [36, "submodules"], [40, "submodules"], [45, "submodules"], [48, "submodules"], [60, "submodules"], [66, "submodules"], [74, "submodules"], [87, "submodules"], [88, "submodules"], [91, "submodules"]], "curobo.cuda_robot_model package": [[1, "module-curobo.cuda_robot_model"]], "curobo.cuda_robot_model.cuda_robot_generator module": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "curobo.cuda_robot_model.cuda_robot_model module": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "curobo.cuda_robot_model.kinematics_parser module": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "curobo.cuda_robot_model.types module": [[5, "module-curobo.cuda_robot_model.types"]], "curobo.cuda_robot_model.urdf_kinematics_parser module": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "curobo.cuda_robot_model.usd_kinematics_parser module": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "curobo.curobolib package": [[8, "module-curobo.curobolib"]], "curobo.curobolib.geom module": [[9, "module-curobo.curobolib.geom"]], "curobo.curobolib.geom_cu module": [[10, "module-curobo.curobolib.geom_cu"]], "curobo.curobolib.kinematics module": [[11, "module-curobo.curobolib.kinematics"]], "curobo.curobolib.kinematics_fused_cu module": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "curobo.curobolib.lbfgs_step_cu module": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "curobo.curobolib.line_search_cu module": [[14, "module-curobo.curobolib.line_search_cu"]], "curobo.curobolib.ls module": [[15, "module-curobo.curobolib.ls"]], "curobo.curobolib.opt module": [[16, "module-curobo.curobolib.opt"]], "curobo.curobolib.tensor_step module": [[17, "module-curobo.curobolib.tensor_step"]], "curobo.curobolib.tensor_step_cu module": [[18, "module-curobo.curobolib.tensor_step_cu"]], "curobo.curobolib.util_file module": [[19, "module-curobo.curobolib.util_file"]], "curobo.geom package": [[20, "module-curobo.geom"]], "curobo.geom.sdf package": [[21, "module-curobo.geom.sdf"]], "curobo.geom.sdf.sdf_grid module": [[22, "module-curobo.geom.sdf.sdf_grid"]], "curobo.geom.sdf.utils module": [[23, "module-curobo.geom.sdf.utils"]], "curobo.geom.sdf.warp_primitives module": [[24, "module-curobo.geom.sdf.warp_primitives"]], "curobo.geom.sdf.world module": [[25, "module-curobo.geom.sdf.world"]], "curobo.geom.sdf.world_blox module": [[26, "module-curobo.geom.sdf.world_blox"]], "curobo.geom.sdf.world_mesh module": [[27, "module-curobo.geom.sdf.world_mesh"]], "curobo.geom.sphere_fit module": [[28, "module-curobo.geom.sphere_fit"]], "curobo.geom.transform module": [[29, "module-curobo.geom.transform"]], "curobo.geom.types module": [[30, "module-curobo.geom.types"]], "curobo.graph package": [[31, "module-curobo.graph"]], "curobo.graph.graph_base module": [[32, "module-curobo.graph.graph_base"]], "curobo.graph.graph_nx module": [[33, "module-curobo.graph.graph_nx"]], "curobo.graph.prm module": [[34, "module-curobo.graph.prm"]], "curobo.opt package": [[35, "module-curobo.opt"]], "curobo.opt.newton package": [[36, "module-curobo.opt.newton"]], "curobo.opt.newton.lbfgs module": [[37, "module-curobo.opt.newton.lbfgs"]], "curobo.opt.newton.newton_base module": [[38, "module-curobo.opt.newton.newton_base"]], "curobo.opt.opt_base module": [[39, "module-curobo.opt.opt_base"]], "curobo.opt.particle package": [[40, "module-curobo.opt.particle"]], "curobo.opt.particle.parallel_es module": [[41, "module-curobo.opt.particle.parallel_es"]], "curobo.opt.particle.parallel_mppi module": [[42, "module-curobo.opt.particle.parallel_mppi"]], "curobo.opt.particle.particle_opt_base module": [[43, "module-curobo.opt.particle.particle_opt_base"]], "curobo.opt.particle.particle_opt_utils module": [[44, "module-curobo.opt.particle.particle_opt_utils"]], "curobo.rollout package": [[45, "module-curobo.rollout"]], "curobo.rollout.arm_base module": [[46, "module-curobo.rollout.arm_base"]], "curobo.rollout.arm_reacher module": [[47, "module-curobo.rollout.arm_reacher"]], "curobo.rollout.cost package": [[48, "module-curobo.rollout.cost"]], "curobo.rollout.cost.bound_cost module": [[49, "module-curobo.rollout.cost.bound_cost"]], "curobo.rollout.cost.cost_base module": [[50, "module-curobo.rollout.cost.cost_base"]], "curobo.rollout.cost.dist_cost module": [[51, "module-curobo.rollout.cost.dist_cost"]], "curobo.rollout.cost.manipulability_cost module": [[52, "module-curobo.rollout.cost.manipulability_cost"]], "curobo.rollout.cost.pose_cost module": [[53, "module-curobo.rollout.cost.pose_cost"]], "curobo.rollout.cost.primitive_collision_cost module": [[54, "module-curobo.rollout.cost.primitive_collision_cost"]], "curobo.rollout.cost.projected_dist_cost module": [[55, "module-curobo.rollout.cost.projected_dist_cost"]], "curobo.rollout.cost.self_collision_cost module": [[56, "module-curobo.rollout.cost.self_collision_cost"]], "curobo.rollout.cost.stop_cost module": [[57, "module-curobo.rollout.cost.stop_cost"]], "curobo.rollout.cost.straight_line_cost module": [[58, "module-curobo.rollout.cost.straight_line_cost"]], "curobo.rollout.cost.zero_cost module": [[59, "module-curobo.rollout.cost.zero_cost"]], "curobo.rollout.dynamics_model package": [[60, "module-curobo.rollout.dynamics_model"]], "curobo.rollout.dynamics_model.integration_utils module": [[61, "module-curobo.rollout.dynamics_model.integration_utils"]], "curobo.rollout.dynamics_model.kinematic_model module": [[62, "module-curobo.rollout.dynamics_model.kinematic_model"]], "curobo.rollout.dynamics_model.model_base module": [[63, "module-curobo.rollout.dynamics_model.model_base"]], "curobo.rollout.dynamics_model.tensor_step module": [[64, "module-curobo.rollout.dynamics_model.tensor_step"]], "curobo.rollout.rollout_base module": [[65, "module-curobo.rollout.rollout_base"]], "curobo.types package": [[66, "module-curobo.types"]], "curobo.types.base module": [[67, "module-curobo.types.base"]], "curobo.types.camera module": [[68, "module-curobo.types.camera"]], "curobo.types.enum module": [[69, "module-curobo.types.enum"]], "curobo.types.math module": [[70, "module-curobo.types.math"]], "curobo.types.robot module": [[71, "module-curobo.types.robot"]], "curobo.types.state module": [[72, "module-curobo.types.state"]], "curobo.types.tensor module": [[73, "module-curobo.types.tensor"]], "curobo.util package": [[74, "module-curobo.util"]], "curobo.util.error_metrics module": [[75, "module-curobo.util.error_metrics"]], "curobo.util.helpers module": [[76, "module-curobo.util.helpers"]], "curobo.util.logger module": [[77, "module-curobo.util.logger"]], "curobo.util.sample_lib module": [[78, "module-curobo.util.sample_lib"]], "curobo.util.state_filter module": [[79, "module-curobo.util.state_filter"]], "curobo.util.tensor_util module": [[80, "module-curobo.util.tensor_util"]], "curobo.util.torch_utils module": [[81, "module-curobo.util.torch_utils"]], "curobo.util.trajectory module": [[82, "module-curobo.util.trajectory"]], "curobo.util.usd_helper module": [[83, "module-curobo.util.usd_helper"]], "curobo.util.warp module": [[84, "module-curobo.util.warp"]], "curobo.util.warp_interpolation module": [[85, "module-curobo.util.warp_interpolation"]], "curobo.util_file module": [[86, "module-curobo.util_file"]], "curobo.wrap package": [[87, "module-curobo.wrap"]], "curobo.wrap.model package": [[88, "module-curobo.wrap.model"]], "curobo.wrap.model.curobo_robot_world module": [[89, "module-curobo.wrap.model.curobo_robot_world"]], "curobo.wrap.model.robot_world module": [[90, "module-curobo.wrap.model.robot_world"]], "curobo.wrap.reacher package": [[91, "module-curobo.wrap.reacher"]], "curobo.wrap.reacher.evaluator module": [[92, "module-curobo.wrap.reacher.evaluator"]], "curobo.wrap.reacher.ik_solver module": [[93, "module-curobo.wrap.reacher.ik_solver"]], "curobo.wrap.reacher.motion_gen module": [[94, "module-curobo.wrap.reacher.motion_gen"]], "curobo.wrap.reacher.mpc module": [[95, "module-curobo.wrap.reacher.mpc"]], "curobo.wrap.reacher.trajopt module": [[96, "module-curobo.wrap.reacher.trajopt"]], "curobo.wrap.reacher.types module": [[97, "module-curobo.wrap.reacher.types"]], "curobo.wrap.wrap_base module": [[98, "module-curobo.wrap.wrap_base"]], "curobo.wrap.wrap_mpc module": [[99, "module-curobo.wrap.wrap_mpc"]], "curobo": [[100, "curobo"]], "Python API": [[101, "python-api"]], "Kinematics": [[101, null]], "Geometry & World Representation": [[101, null]], "Numerical Optimization": [[101, null], [120, "numerical-optimization"]], "Rollout": [[101, null]], "Custom CUDA Kernels": [[101, null]], "Inverse Kinematics": [[101, null], [111, "inverse-kinematics"], [116, "inverse-kinematics"]], "Geometric Planning": [[101, null]], "Trajectory optimization": [[101, null]], "Motion Generation": [[101, null], [105, "motion-generation"], [107, "motion-generation"], [111, "motion-generation"], [112, "motion-generation"], [114, "motion-generation"], [114, "id2"]], "All": [[101, null]], "CuRobo: CUDA Accelerated Robot Library": [[102, "curobo-cuda-accelerated-robot-library"], [104, "curobo-cuda-accelerated-robot-library"]], "Updates": [[102, "updates"], [103, "updates"], [104, "updates"]], "Overview": [[102, "overview"], [104, "overview"]], "Batched Environments": [[105, "batched-environments"], [113, "batched-environments"]], "Collision Checking": [[105, "collision-checking"], [111, "collision-checking"], [112, "collision-checking"], [114, "collision-checking"], [114, "id1"]], "Block Stacking": [[106, "block-stacking"]], "Attaching Object to Robot": [[106, "attaching-object-to-robot"]], "Planning Modes": [[107, "id1"]], "Reacher": [[108, "reacher"]], "Installation": [[109, "installation"]], "Library Installation": [[109, "library-installation"]], "Install for use in Isaac Sim": [[109, "install-for-use-in-isaac-sim"]], "Install nvblox (optional)": [[109, "install-nvblox-optional"]], "Installing as a Library": [[109, "installing-as-a-library"]], "Installing nvblox with Isaac Sim": [[109, "installing-nvblox-with-isaac-sim"]], "nvblox troubleshooting": [[109, "nvblox-troubleshooting"]], "Generate Documentation": [[109, "generate-documentation"]], "Basics": [[110, "basics"]], "Using in Python": [[111, "using-in-python"]], "Forward Kinematics": [[111, "forward-kinematics"]], "Using with Isaac Sim": [[112, "using-with-isaac-sim"]], "Usd Interface": [[112, "usd-interface"]], "Isaac Sim Basics": [[112, "isaac-sim-basics"]], "Reachability using Batched Collision-Free Inverse Kinematics": [[112, "reachability-using-batched-collision-free-inverse-kinematics"]], "Model Predictive Control with MPPI": [[112, "model-predictive-control-with-mppi"]], "Multi-Arm Reacher": [[112, "multi-arm-reacher"]], "Collision World Representation": [[113, "collision-world-representation"]], "World Representation": [[113, "world-representation"]], "World Collision Checkers": [[113, "world-collision-checkers"]], "Collision Checking Implementation": [[113, "collision-checking-implementation"]], "Collision Metric": [[113, "collision-metric"]], "Geometry Approximation to Spheres": [[113, "geometry-approximation-to-spheres"]], "Using with Depth Camera": [[114, "using-with-depth-camera"]], "Demos with an existing map": [[114, "demos-with-an-existing-map"]], "Model Predictive Control": [[114, "model-predictive-control"], [114, "id3"]], "Demos with online mapping": [[114, "demos-with-online-mapping"]], "Using in a Neural Network": [[115, "using-in-a-neural-network"]], "Benchmarks & Profiling": [[116, "benchmarks-profiling"]], "Benchmarks": [[116, "benchmarks"]], "Kinematics & Collision Checking": [[116, "kinematics-collision-checking"]], "Motion Generation & Geometric Planning": [[116, "motion-generation-geometric-planning"]], "Profiling": [[116, "profiling"]], "Docker Development": [[117, "docker-development"]], "Building your own docker image with CuRobo": [[117, "building-your-own-docker-image-with-curobo"]], "Known Issues": [[118, "known-issues"]], "Supported Robots": [[119, "supported-robots"]], "CUDA Notes": [[121, "cuda-notes"]], "Developing CUDA kernels": [[121, "developing-cuda-kernels"]], "Tensor IO Buffers": [[121, "tensor-io-buffers"]], "USD for Robot and World Representation": [[122, "usd-for-robot-and-world-representation"]], "Reading World from USD": [[122, "reading-world-from-usd"]], "Technical Report": [[123, "technical-report"]], "CuRobo: Parallelized Collision-Free Minimum-Jerk Robot Motion Generation": [[123, "curobo-parallelized-collision-free-minimum-jerk-robot-motion-generation"]], "Citation": [[123, "citation"]], "Research using CuRobo": [[124, "research-using-curobo"]], "Configuring a New Robot": [[127, "configuring-a-new-robot"]], "Prequisite": [[127, "prequisite"]], "Robot Configuration File": [[127, "robot-configuration-file"]], "Tutorial with a UR5e robot": [[127, "tutorial-with-a-ur5e-robot"]], "Prepare assets": [[127, "prepare-assets"]], "Create Configuration File": [[127, "create-configuration-file"]], "Robot Collision Representation": [[127, "robot-collision-representation"]], "Self Collision Configuration": [[127, "self-collision-configuration"]], "Test Robot Configuration": [[127, "test-robot-configuration"]]}, "indexentries": {"curobo": [[0, "module-curobo"]], "module": [[0, "module-curobo"], [1, "module-curobo.cuda_robot_model"], [2, "module-curobo.cuda_robot_model.cuda_robot_generator"], [3, "module-curobo.cuda_robot_model.cuda_robot_model"], [4, "module-curobo.cuda_robot_model.kinematics_parser"], [5, "module-curobo.cuda_robot_model.types"], [6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"], [7, "module-curobo.cuda_robot_model.usd_kinematics_parser"], [8, "module-curobo.curobolib"], [9, "module-curobo.curobolib.geom"], [10, "module-curobo.curobolib.geom_cu"], [11, "module-curobo.curobolib.kinematics"], [12, "module-curobo.curobolib.kinematics_fused_cu"], [13, "module-curobo.curobolib.lbfgs_step_cu"], [14, "module-curobo.curobolib.line_search_cu"], [15, "module-curobo.curobolib.ls"], [16, "module-curobo.curobolib.opt"], [17, "module-curobo.curobolib.tensor_step"], [18, "module-curobo.curobolib.tensor_step_cu"], [19, "module-curobo.curobolib.util_file"], [20, "module-curobo.geom"], [21, "module-curobo.geom.sdf"], [22, "module-curobo.geom.sdf.sdf_grid"], [23, "module-curobo.geom.sdf.utils"], [24, "module-curobo.geom.sdf.warp_primitives"], [25, "module-curobo.geom.sdf.world"], [26, "module-curobo.geom.sdf.world_blox"], [27, "module-curobo.geom.sdf.world_mesh"], [28, "module-curobo.geom.sphere_fit"], [29, "module-curobo.geom.transform"], [30, "module-curobo.geom.types"], [31, "module-curobo.graph"], [32, "module-curobo.graph.graph_base"], [33, "module-curobo.graph.graph_nx"], [34, "module-curobo.graph.prm"], [35, "module-curobo.opt"], [36, "module-curobo.opt.newton"], [37, "module-curobo.opt.newton.lbfgs"], [38, "module-curobo.opt.newton.newton_base"], [39, "module-curobo.opt.opt_base"], [40, "module-curobo.opt.particle"], [41, "module-curobo.opt.particle.parallel_es"], [42, "module-curobo.opt.particle.parallel_mppi"], [43, "module-curobo.opt.particle.particle_opt_base"], [44, "module-curobo.opt.particle.particle_opt_utils"], [45, "module-curobo.rollout"], [46, "module-curobo.rollout.arm_base"], [47, "module-curobo.rollout.arm_reacher"], [48, "module-curobo.rollout.cost"], [49, "module-curobo.rollout.cost.bound_cost"], [50, "module-curobo.rollout.cost.cost_base"], [51, "module-curobo.rollout.cost.dist_cost"], [52, "module-curobo.rollout.cost.manipulability_cost"], [53, "module-curobo.rollout.cost.pose_cost"], [54, "module-curobo.rollout.cost.primitive_collision_cost"], [55, "module-curobo.rollout.cost.projected_dist_cost"], [56, "module-curobo.rollout.cost.self_collision_cost"], [57, "module-curobo.rollout.cost.stop_cost"], [58, "module-curobo.rollout.cost.straight_line_cost"], [59, "module-curobo.rollout.cost.zero_cost"], [60, "module-curobo.rollout.dynamics_model"], [61, "module-curobo.rollout.dynamics_model.integration_utils"], [62, "module-curobo.rollout.dynamics_model.kinematic_model"], [63, "module-curobo.rollout.dynamics_model.model_base"], [64, "module-curobo.rollout.dynamics_model.tensor_step"], [65, "module-curobo.rollout.rollout_base"], [66, "module-curobo.types"], [67, "module-curobo.types.base"], [68, "module-curobo.types.camera"], [69, "module-curobo.types.enum"], [70, "module-curobo.types.math"], [71, "module-curobo.types.robot"], [72, "module-curobo.types.state"], [73, "module-curobo.types.tensor"], [74, "module-curobo.util"], [75, "module-curobo.util.error_metrics"], [76, "module-curobo.util.helpers"], [77, "module-curobo.util.logger"], [78, "module-curobo.util.sample_lib"], [79, "module-curobo.util.state_filter"], [80, "module-curobo.util.tensor_util"], [81, "module-curobo.util.torch_utils"], [82, "module-curobo.util.trajectory"], [83, "module-curobo.util.usd_helper"], [84, "module-curobo.util.warp"], [85, "module-curobo.util.warp_interpolation"], [86, "module-curobo.util_file"], [87, "module-curobo.wrap"], [88, "module-curobo.wrap.model"], [89, "module-curobo.wrap.model.curobo_robot_world"], [90, "module-curobo.wrap.model.robot_world"], [91, "module-curobo.wrap.reacher"], [92, "module-curobo.wrap.reacher.evaluator"], [93, "module-curobo.wrap.reacher.ik_solver"], [94, "module-curobo.wrap.reacher.motion_gen"], [95, "module-curobo.wrap.reacher.mpc"], [96, "module-curobo.wrap.reacher.trajopt"], [97, "module-curobo.wrap.reacher.types"], [98, "module-curobo.wrap.wrap_base"], [99, "module-curobo.wrap.wrap_mpc"]], "curobo.cuda_robot_model": [[1, "module-curobo.cuda_robot_model"]], "cudarobotgenerator (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator"]], "cudarobotgeneratorconfig (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig"]], "add_fixed_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_fixed_link"]], "add_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_link"]], "add_object_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.add_object_link"]], "asset_root_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.asset_root_path"]], "base_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.base_link"]], "collision_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_link_names"]], "collision_sphere_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_sphere_buffer"]], "collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_spheres"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "debug (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.debug"]], "ee_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.ee_link"]], "extra_collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_collision_spheres"]], "extra_links (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_links"]], "get_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.get_joint_limits"]], "initialize_tensors() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.initialize_tensors"]], "isaac_usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.isaac_usd_path"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.link_names"]], "load_link_names_with_mesh (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_link_names_with_mesh"]], "lock_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.lock_joints"]], "mesh_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.mesh_link_names"]], "self_collision_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_buffer"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_config"]], "self_collision_ignore (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_ignore"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.tensor_args"]], "urdf_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.urdf_path"]], "usd_flip_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joint_limits"]], "usd_flip_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joints"]], "usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_path"]], "usd_robot_root (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_robot_root"]], "use_external_assets (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_external_assets"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_global_cumul"]], "use_usd_kinematics (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_usd_kinematics"]], "cudarobotmodel (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel"]], "cudarobotmodelconfig (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig"]], "all_articulated_joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.all_articulated_joint_names"]], "base_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.base_link"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "ee_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.ee_link"]], "forward() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.forward"]], "from_basic_urdf() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_urdf"]], "from_basic_usd() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_usd"]], "from_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_config"]], "from_data_dict() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_data_dict"]], "from_robot_yaml_file() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_robot_yaml_file"]], "generator_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.generator_config"]], "get_all_link_transforms() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_all_link_transforms"]], "get_dof() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_dof"]], "get_joint_limits() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.get_joint_limits"]], "get_link_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_mesh"]], "get_link_poses() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_poses"]], "get_link_transform() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_transform"]], "get_robot_as_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_mesh"]], "get_robot_as_spheres() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_spheres"]], "get_self_collision_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_self_collision_config"]], "get_state() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_state"]], "joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.joint_names"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.link_names"]], "lock_jointstate (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.lock_jointstate"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.self_collision_config"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.tensor_args"]], "total_spheres (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.total_spheres"]], "update_batch_size() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_batch_size"]], "update_kinematics_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_kinematics_config"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.use_global_cumul"]], "kinematicsparser (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser"]], "linkparams (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.kinematics_parser": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "fixed_transform (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.fixed_transform"]], "from_dict() (curobo.cuda_robot_model.kinematics_parser.linkparams static method)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.from_dict"]], "get_chain() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_chain"]], "get_link_mesh() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_parameters"]], "joint_axis (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_axis"]], "joint_id (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_id"]], "joint_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_limits"]], "joint_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_name"]], "joint_type (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_type"]], "joint_velocity_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_velocity_limits"]], "link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.link_name"]], "parent_link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.parent_link_name"]], "cspaceconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig"]], "cudarobotmodelstate (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState"]], "fixed (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.FIXED"]], "jointlimits (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointLimits"]], "jointtype (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointType"]], "kinematicstensorconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig"]], "selfcollisionkinematicsconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig"]], "x_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM"]], "x_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT"]], "y_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM"]], "y_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT"]], "z_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM"]], "z_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT"]], "acceleration (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.acceleration"]], "acceleration_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.acceleration_scale"]], "ang_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ang_jacobian"]], "attach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.attach_object"]], "base_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.base_link"]], "checks_per_thread (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.checks_per_thread"]], "clone() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.clone"]], "clone() (curobo.cuda_robot_model.types.jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.clone"]], "collision_matrix (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.collision_matrix"]], "cspace (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.cspace"]], "cspace_distance_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.cspace_distance_weight"]], "curobo.cuda_robot_model.types": [[5, "module-curobo.cuda_robot_model.types"]], "debug (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.debug"]], "detach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.detach_object"]], "distance_threshold (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.distance_threshold"]], "ee_idx (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_idx"]], "ee_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_link"]], "ee_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_pose"]], "ee_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_position"]], "ee_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_quaternion"]], "effort (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.effort"]], "experimental_kernel (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.experimental_kernel"]], "fixed_transforms (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.fixed_transforms"]], "from_data_dict() (curobo.cuda_robot_model.types.jointlimits static method)": [[5, "curobo.cuda_robot_model.types.JointLimits.from_data_dict"]], "get_link_spheres() (curobo.cuda_robot_model.types.cudarobotmodelstate method)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.get_link_spheres"]], "get_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_link_spheres"]], "get_number_of_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_number_of_spheres"]], "get_sphere_index_from_link_name() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_sphere_index_from_link_name"]], "inplace_reindex() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.inplace_reindex"]], "jerk (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.jerk"]], "jerk_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.jerk_scale"]], "joint_limits (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_limits"]], "joint_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map"]], "joint_map_type (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map_type"]], "joint_names (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.joint_names"]], "joint_names (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.joint_names"]], "joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_names"]], "lin_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.lin_jacobian"]], "link_chain_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_chain_map"]], "link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_map"]], "link_name_to_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_name_to_idx_map"]], "link_names (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_names"]], "link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_names"]], "link_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_pose"]], "link_sphere_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_sphere_idx_map"]], "link_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_spheres"]], "link_spheres_tensor (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_spheres_tensor"]], "links_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_position"]], "links_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_quaternion"]], "load_cspace_cfg_from_kinematics() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.load_cspace_cfg_from_kinematics"]], "load_from_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig static method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.load_from_joint_limits"]], "lock_jointstate (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.lock_jointstate"]], "max_acceleration (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_acceleration"]], "max_jerk (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_jerk"]], "mesh_link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.mesh_link_names"]], "n_dof (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.n_dof"]], "non_fixed_joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.non_fixed_joint_names"]], "null_space_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.null_space_weight"]], "offset (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.offset"]], "position (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.position"]], "retract_config (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.retract_config"]], "scale_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.scale_joint_limits"]], "store_link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.store_link_map"]], "tensor_args (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.tensor_args"]], "tensor_args (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.tensor_args"]], "thread_location (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_location"]], "thread_max (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_max"]], "total_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.total_spheres"]], "update_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.update_link_spheres"]], "velocity (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.velocity"]], "velocity_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.velocity_scale"]], "urdfkinematicsparser (class in curobo.cuda_robot_model.urdf_kinematics_parser)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "get_link_mesh() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_parameters"]], "get_urdf_string() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_urdf_string"]], "usdkinematicsparser (class in curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser"]], "build_link_parent() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "get_link_parameters() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_link_parameters"]], "get_links_for_joint() (in module curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.get_links_for_joint"]], "robot_prim_root (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser property)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.robot_prim_root"]], "curobo.curobolib": [[8, "module-curobo.curobolib"]], "sdfsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereOBB"]], "sdfsweptsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB"]], "selfcollisiondistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistance"]], "selfcollisiondistanceloss (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss"]], "backward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.backward"]], "backward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.backward"]], "curobo.curobolib.geom": [[9, "module-curobo.curobolib.geom"]], "forward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.forward"]], "forward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.forward"]], "forward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.forward"]], "get_pose_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance"]], "get_pose_distance_backward() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance_backward"]], "get_self_collision_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_self_collision_distance"]], "closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point"]], "curobo.curobolib.geom_cu": [[10, "module-curobo.curobolib.geom_cu"]], "pose_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance"]], "pose_distance_backward() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance_backward"]], "self_collision_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.self_collision_distance"]], "swept_closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point"]], "kinematicsfusedfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction"]], "kinematicsfusedglobalcumulfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.backward"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.backward"]], "curobo.curobolib.kinematics": [[11, "module-curobo.curobolib.kinematics"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.forward"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.forward"]], "get_cuda_kinematics() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.get_cuda_kinematics"]], "rotation_matrix_to_quaternion() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.rotation_matrix_to_quaternion"]], "backward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.backward"]], "curobo.curobolib.kinematics_fused_cu": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "forward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.forward"]], "matrix_to_quaternion() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "debug_reduce() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.debug_reduce"]], "forward() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.forward"]], "step() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.step"]], "update() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.update"]], "curobo.curobolib.line_search_cu": [[14, "module-curobo.curobolib.line_search_cu"]], "line_search() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.line_search"]], "update_best() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.update_best"]], "curobo.curobolib.ls": [[15, "module-curobo.curobolib.ls"]], "update_best() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.update_best"]], "wolfe_line_search() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.wolfe_line_search"]], "lbfgscu (class in curobo.curobolib.opt)": [[16, "curobo.curobolib.opt.LBFGScu"]], "backward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.backward"]], "curobo.curobolib.opt": [[16, "module-curobo.curobolib.opt"]], "forward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.forward"]], "curobo.curobolib.tensor_step": [[17, "module-curobo.curobolib.tensor_step"]], "tensor_step_acc_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_fwd"]], "tensor_step_acc_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_idx_fwd"]], "tensor_step_pos_clique_bwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_bwd"]], "tensor_step_pos_clique_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_fwd"]], "tensor_step_pos_clique_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, "module-curobo.curobolib.tensor_step_cu"]], "step_acceleration() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration"]], "step_acceleration_idx() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration_idx"]], "step_idx_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_idx_position2"]], "step_position() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position"]], "step_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position2"]], "step_position_backward() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward"]], "step_position_backward2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward2"]], "add_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.add_cpp_path"]], "curobo.curobolib.util_file": [[19, "module-curobo.curobolib.util_file"]], "get_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.get_cpp_path"]], "join_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.join_path"]], "curobo.geom": [[20, "module-curobo.geom"]], "curobo.geom.sdf": [[21, "module-curobo.geom.sdf"]], "sdfgrid (class in curobo.geom.sdf.sdf_grid)": [[22, "curobo.geom.sdf.sdf_grid.SDFGrid"]], "backward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[22, "curobo.geom.sdf.sdf_grid.SDFGrid.backward"]], "compute_sdf_gradient() (in module curobo.geom.sdf.sdf_grid)": [[22, "curobo.geom.sdf.sdf_grid.compute_sdf_gradient"]], "curobo.geom.sdf.sdf_grid": [[22, "module-curobo.geom.sdf.sdf_grid"]], "forward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[22, "curobo.geom.sdf.sdf_grid.SDFGrid.forward"]], "lookup_distance() (in module curobo.geom.sdf.sdf_grid)": [[22, "curobo.geom.sdf.sdf_grid.lookup_distance"]], "create_collision_checker() (in module curobo.geom.sdf.utils)": [[23, "curobo.geom.sdf.utils.create_collision_checker"]], "curobo.geom.sdf.utils": [[23, "module-curobo.geom.sdf.utils"]], "sdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[24, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy"]], "sweptsdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[24, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy"]], "backward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[24, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.backward"]], "backward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[24, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.backward"]], "curobo.geom.sdf.warp_primitives": [[24, "module-curobo.geom.sdf.warp_primitives"]], "forward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[24, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.forward"]], "forward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[24, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.forward"]], "blox (curobo.geom.sdf.world.collisioncheckertype attribute)": [[25, "curobo.geom.sdf.world.CollisionCheckerType.BLOX"]], "collisionbuffer (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.CollisionBuffer"]], "collisioncheckertype (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.CollisionCheckerType"]], "collisionquerybuffer (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer"]], "mesh (curobo.geom.sdf.world.collisioncheckertype attribute)": [[25, "curobo.geom.sdf.world.CollisionCheckerType.MESH"]], "primitive (curobo.geom.sdf.world.collisioncheckertype attribute)": [[25, "curobo.geom.sdf.world.CollisionCheckerType.PRIMITIVE"]], "worldcollision (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.WorldCollision"]], "worldcollisionconfig (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig"]], "worldprimitivecollision (class in curobo.geom.sdf.world)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision"]], "add_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb"]], "add_obb_from_raw() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb_from_raw"]], "blox_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.blox_collision_buffer"]], "cache (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.cache"]], "checker_type (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.checker_type"]], "clear_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.clear_cache"]], "clone() (curobo.geom.sdf.world.collisionbuffer method)": [[25, "curobo.geom.sdf.world.CollisionBuffer.clone"]], "clone() (curobo.geom.sdf.world.collisionquerybuffer method)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.clone"]], "create_from_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.create_from_shape"]], "curobo.geom.sdf.world": [[25, "module-curobo.geom.sdf.world"]], "distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionBuffer.distance_buffer"]], "enable_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obb"]], "enable_obstacle() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obstacle"]], "get_gradient_buffer() (curobo.geom.sdf.world.collisionquerybuffer method)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.get_gradient_buffer"]], "get_mesh_in_bounding_box() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_obb_idx"]], "get_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.get_sphere_collision"]], "get_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.get_sphere_distance"]], "get_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_distance"]], "get_sphere_trace() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.get_sphere_trace"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_collision"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_distance"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_distance"]], "get_voxels_in_bounding_box() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_voxels_in_bounding_box"]], "grad_distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionBuffer.grad_distance_buffer"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionbuffer class method)": [[25, "curobo.geom.sdf.world.CollisionBuffer.initialize_from_shape"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionquerybuffer class method)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.initialize_from_shape"]], "load_batch_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldcollision method)": [[25, "curobo.geom.sdf.world.WorldCollision.load_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_collision_model"]], "load_from_dict() (curobo.geom.sdf.world.worldcollisionconfig static method)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.load_from_dict"]], "max_distance (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.max_distance"]], "mesh_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.mesh_collision_buffer"]], "n_envs (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.n_envs"]], "primitive_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.primitive_collision_buffer"]], "shape (curobo.geom.sdf.world.collisionbuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionBuffer.shape"]], "shape (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.shape"]], "sparsity_index_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[25, "curobo.geom.sdf.world.CollisionBuffer.sparsity_index_buffer"]], "tensor_args (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.tensor_args"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionbuffer method)": [[25, "curobo.geom.sdf.world.CollisionBuffer.update_buffer_shape"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[25, "curobo.geom.sdf.world.CollisionQueryBuffer.update_buffer_shape"]], "update_obb_dims() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_dims"]], "update_obb_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_pose"]], "update_obstacle_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[25, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obstacle_pose"]], "world_model (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[25, "curobo.geom.sdf.world.WorldCollisionConfig.world_model"]], "worldbloxcollision (class in curobo.geom.sdf.world_blox)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision"]], "add_camera_frame() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_camera_frame"]], "clear_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_blox_layer"]], "clear_bounding_box() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_bounding_box"]], "clear_cache() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_cache"]], "curobo.geom.sdf.world_blox": [[26, "module-curobo.geom.sdf.world_blox"]], "decay_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.decay_layer"]], "enable_blox() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_blox"]], "enable_obstacle() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_obstacle"]], "get_bounding_spheres() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_bounding_spheres"]], "get_mesh_from_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_from_blox_layer"]], "get_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_distance"]], "load_collision_model() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_collision_model"]], "process_camera_frames() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.process_camera_frames"]], "update_blox_esdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_esdf"]], "update_blox_hashes() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_hashes"]], "update_blox_mesh() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_mesh"]], "update_blox_pose() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[26, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_pose"]], "warpmeshdata (class in curobo.geom.sdf.world_mesh)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData"]], "worldmeshcollision (class in curobo.geom.sdf.world_mesh)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision"]], "add_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_mesh"]], "clear_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.clear_cache"]], "create_collision_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.create_collision_cache"]], "curobo.geom.sdf.world_mesh": [[27, "module-curobo.geom.sdf.world_mesh"]], "enable_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_mesh"]], "enable_obstacle() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_obstacle"]], "faces (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData.faces"]], "get_mesh_idx() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_mesh_idx"]], "get_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_distance"]], "load_batch_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_collision_model"]], "m_id (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData.m_id"]], "mesh (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData.mesh"]], "name (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData.name"]], "update_all_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_all_mesh_pose"]], "update_mesh_from_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_from_warp"]], "update_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose"]], "update_mesh_pose_env() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose_env"]], "update_obstacle_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[27, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obstacle_pose"]], "vertices (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[27, "curobo.geom.sdf.world_mesh.WarpMeshData.vertices"]], "sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[28, "curobo.geom.sphere_fit.SphereFitType.SAMPLE_SURFACE"]], "spherefittype (class in curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.SphereFitType"]], "voxel_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[28, "curobo.geom.sphere_fit.SphereFitType.VOXEL_SURFACE"]], "voxel_volume (curobo.geom.sphere_fit.spherefittype attribute)": [[28, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME"]], "voxel_volume_inside (curobo.geom.sphere_fit.spherefittype attribute)": [[28, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_INSIDE"]], "voxel_volume_sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[28, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.sphere_fit": [[28, "module-curobo.geom.sphere_fit"]], "fit_spheres_to_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.fit_spheres_to_mesh"]], "get_voxel_pitch() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.get_voxel_pitch"]], "get_voxelgrid_from_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.get_voxelgrid_from_mesh"]], "sample_even_fit_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.sample_even_fit_mesh"]], "voxel_fit_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.voxel_fit_mesh"]], "voxel_fit_surface_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.voxel_fit_surface_mesh"]], "voxel_fit_volume_inside_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.voxel_fit_volume_inside_mesh"]], "voxel_fit_volume_sample_surface_mesh() (in module curobo.geom.sphere_fit)": [[28, "curobo.geom.sphere_fit.voxel_fit_volume_sample_surface_mesh"]], "batchtransformpoint (class in curobo.geom.transform)": [[29, "curobo.geom.transform.BatchTransformPoint"]], "batchtransformpose (class in curobo.geom.transform)": [[29, "curobo.geom.transform.BatchTransformPose"]], "matrixtoquaternion (class in curobo.geom.transform)": [[29, "curobo.geom.transform.MatrixToQuaternion"]], "poseinverse (class in curobo.geom.transform)": [[29, "curobo.geom.transform.PoseInverse"]], "quattomatrix (class in curobo.geom.transform)": [[29, "curobo.geom.transform.QuatToMatrix"]], "transformpoint (class in curobo.geom.transform)": [[29, "curobo.geom.transform.TransformPoint"]], "transformpose (class in curobo.geom.transform)": [[29, "curobo.geom.transform.TransformPose"]], "backward() (curobo.geom.transform.batchtransformpoint static method)": [[29, "curobo.geom.transform.BatchTransformPoint.backward"]], "backward() (curobo.geom.transform.batchtransformpose static method)": [[29, "curobo.geom.transform.BatchTransformPose.backward"]], "backward() (curobo.geom.transform.matrixtoquaternion static method)": [[29, "curobo.geom.transform.MatrixToQuaternion.backward"]], "backward() (curobo.geom.transform.poseinverse static method)": [[29, "curobo.geom.transform.PoseInverse.backward"]], "backward() (curobo.geom.transform.quattomatrix static method)": [[29, "curobo.geom.transform.QuatToMatrix.backward"]], "backward() (curobo.geom.transform.transformpoint static method)": [[29, "curobo.geom.transform.TransformPoint.backward"]], "backward() (curobo.geom.transform.transformpose static method)": [[29, "curobo.geom.transform.TransformPose.backward"]], "batch_transform_points() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.batch_transform_points"]], "cuda_matrix_to_quaternion() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.cuda_matrix_to_quaternion"]], "curobo.geom.transform": [[29, "module-curobo.geom.transform"]], "forward() (curobo.geom.transform.batchtransformpoint static method)": [[29, "curobo.geom.transform.BatchTransformPoint.forward"]], "forward() (curobo.geom.transform.batchtransformpose static method)": [[29, "curobo.geom.transform.BatchTransformPose.forward"]], "forward() (curobo.geom.transform.matrixtoquaternion static method)": [[29, "curobo.geom.transform.MatrixToQuaternion.forward"]], "forward() (curobo.geom.transform.poseinverse static method)": [[29, "curobo.geom.transform.PoseInverse.forward"]], "forward() (curobo.geom.transform.quattomatrix static method)": [[29, "curobo.geom.transform.QuatToMatrix.forward"]], "forward() (curobo.geom.transform.transformpoint static method)": [[29, "curobo.geom.transform.TransformPoint.forward"]], "forward() (curobo.geom.transform.transformpose static method)": [[29, "curobo.geom.transform.TransformPose.forward"]], "matrix_to_quaternion() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.matrix_to_quaternion"]], "pose_inverse() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.pose_inverse"]], "pose_multiply() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.pose_multiply"]], "pose_to_matrix() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.pose_to_matrix"]], "quaternion_to_matrix() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.quaternion_to_matrix"]], "torch_quaternion_to_matrix() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.torch_quaternion_to_matrix"]], "transform_points() (in module curobo.geom.transform)": [[29, "curobo.geom.transform.transform_points"]], "bloxmap (class in curobo.geom.types)": [[30, "curobo.geom.types.BloxMap"]], "capsule (class in curobo.geom.types)": [[30, "curobo.geom.types.Capsule"]], "cuboid (class in curobo.geom.types)": [[30, "curobo.geom.types.Cuboid"]], "cylinder (class in curobo.geom.types)": [[30, "curobo.geom.types.Cylinder"]], "material (class in curobo.geom.types)": [[30, "curobo.geom.types.Material"]], "mesh (class in curobo.geom.types)": [[30, "curobo.geom.types.Mesh"]], "obstacle (class in curobo.geom.types)": [[30, "curobo.geom.types.Obstacle"]], "sphere (class in curobo.geom.types)": [[30, "curobo.geom.types.Sphere"]], "worldconfig (class in curobo.geom.types)": [[30, "curobo.geom.types.WorldConfig"]], "add_color() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.add_color"]], "add_material() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.add_material"]], "add_obstacle() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.add_obstacle"]], "base (curobo.geom.types.capsule attribute)": [[30, "curobo.geom.types.Capsule.base"]], "batch_tensor_cube() (in module curobo.geom.types)": [[30, "curobo.geom.types.batch_tensor_cube"]], "blox (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.blox"]], "capsule (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.capsule"]], "clone() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.clone"]], "color (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.color"]], "create_collision_support_world() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.create_collision_support_world"]], "create_merged_mesh_world() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.create_merged_mesh_world"]], "create_mesh_world() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.create_mesh_world"]], "create_obb_world() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.create_obb_world"]], "cuboid (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.cuboid"]], "curobo.geom.types": [[30, "module-curobo.geom.types"]], "cylinder (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.cylinder"]], "dims (curobo.geom.types.cuboid attribute)": [[30, "curobo.geom.types.Cuboid.dims"]], "face_colors (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.face_colors"]], "faces (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.faces"]], "file_path (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.file_path"]], "file_string (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.file_string"]], "from_dict() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.from_dict"]], "from_pointcloud() (curobo.geom.types.mesh static method)": [[30, "curobo.geom.types.Mesh.from_pointcloud"]], "get_bounding_spheres() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_bounding_spheres"]], "get_cache_dict() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.get_cache_dict"]], "get_collision_check_world() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.get_collision_check_world"]], "get_cuboid() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_cuboid"]], "get_cuboid() (curobo.geom.types.sphere method)": [[30, "curobo.geom.types.Sphere.get_cuboid"]], "get_mesh() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_mesh"]], "get_mesh_data() (curobo.geom.types.mesh method)": [[30, "curobo.geom.types.Mesh.get_mesh_data"]], "get_mesh_world() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.get_mesh_world"]], "get_obb_world() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.get_obb_world"]], "get_obstacle() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.get_obstacle"]], "get_scene_graph() (curobo.geom.types.worldconfig static method)": [[30, "curobo.geom.types.WorldConfig.get_scene_graph"]], "get_sphere() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_sphere"]], "get_transform_matrix() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_transform_matrix"]], "get_trimesh_mesh() (curobo.geom.types.bloxmap method)": [[30, "curobo.geom.types.BloxMap.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.capsule method)": [[30, "curobo.geom.types.Capsule.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cuboid method)": [[30, "curobo.geom.types.Cuboid.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cylinder method)": [[30, "curobo.geom.types.Cylinder.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.mesh method)": [[30, "curobo.geom.types.Mesh.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.sphere method)": [[30, "curobo.geom.types.Sphere.get_trimesh_mesh"]], "height (curobo.geom.types.cylinder attribute)": [[30, "curobo.geom.types.Cylinder.height"]], "integrator_type (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.integrator_type"]], "map_path (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.map_path"]], "mapper_instance (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.mapper_instance"]], "material (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.material"]], "mesh (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.mesh"]], "mesh (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.mesh"]], "mesh_file_path (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.mesh_file_path"]], "metallic (curobo.geom.types.material attribute)": [[30, "curobo.geom.types.Material.metallic"]], "name (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.name"]], "objects (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.objects"]], "pose (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.pose"]], "position (curobo.geom.types.sphere attribute)": [[30, "curobo.geom.types.Sphere.position"]], "radius (curobo.geom.types.capsule attribute)": [[30, "curobo.geom.types.Capsule.radius"]], "radius (curobo.geom.types.cylinder attribute)": [[30, "curobo.geom.types.Cylinder.radius"]], "radius (curobo.geom.types.sphere attribute)": [[30, "curobo.geom.types.Sphere.radius"]], "randomize_color() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.randomize_color"]], "remove_absolute_paths() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.remove_absolute_paths"]], "remove_obstacle() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.remove_obstacle"]], "roughness (curobo.geom.types.material attribute)": [[30, "curobo.geom.types.Material.roughness"]], "save_as_mesh() (curobo.geom.types.obstacle method)": [[30, "curobo.geom.types.Obstacle.save_as_mesh"]], "save_world_as_mesh() (curobo.geom.types.worldconfig method)": [[30, "curobo.geom.types.WorldConfig.save_world_as_mesh"]], "scale (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.scale"]], "sphere (curobo.geom.types.worldconfig attribute)": [[30, "curobo.geom.types.WorldConfig.sphere"]], "tensor_args (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.tensor_args"]], "tensor_capsule() (in module curobo.geom.types)": [[30, "curobo.geom.types.tensor_capsule"]], "tensor_cube() (in module curobo.geom.types)": [[30, "curobo.geom.types.tensor_cube"]], "tensor_sphere() (in module curobo.geom.types)": [[30, "curobo.geom.types.tensor_sphere"]], "texture (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.texture"]], "texture_id (curobo.geom.types.obstacle attribute)": [[30, "curobo.geom.types.Obstacle.texture_id"]], "tip (curobo.geom.types.capsule attribute)": [[30, "curobo.geom.types.Capsule.tip"]], "urdf_path (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.urdf_path"]], "vertex_colors (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.vertex_colors"]], "vertex_normals (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.vertex_normals"]], "vertices (curobo.geom.types.mesh attribute)": [[30, "curobo.geom.types.Mesh.vertices"]], "voxel_size (curobo.geom.types.bloxmap attribute)": [[30, "curobo.geom.types.BloxMap.voxel_size"]], "curobo.graph": [[31, "module-curobo.graph"]], "graph (class in curobo.graph.graph_base)": [[32, "curobo.graph.graph_base.Graph"]], "graphconfig (class in curobo.graph.graph_base)": [[32, "curobo.graph.graph_base.GraphConfig"]], "graphplanbase (class in curobo.graph.graph_base)": [[32, "curobo.graph.graph_base.GraphPlanBase"]], "graphresult (class in curobo.graph.graph_base)": [[32, "curobo.graph.graph_base.GraphResult"]], "add_nodes_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.add_nodes_to_graph"]], "batch_get_graph_shortest_path() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.batch_get_graph_shortest_path"]], "batch_path_exists() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.batch_path_exists"]], "batch_shortcut_path() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.batch_shortcut_path"]], "bias_node (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.bias_node"]], "bounds (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.bounds"]], "c_max (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.c_max"]], "check_feasibility() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.check_feasibility"]], "compute_metrics (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.compute_metrics"]], "compute_path_length() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.compute_path_length"]], "connect_nodes() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.connect_nodes"]], "connectivity (curobo.graph.graph_base.graph attribute)": [[32, "curobo.graph.graph_base.Graph.connectivity"]], "curobo.graph.graph_base": [[32, "module-curobo.graph.graph_base"]], "debug_info (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.debug_info"]], "distance() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.distance"]], "distance_weight (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.distance_weight"]], "dof (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.dof"]], "edges (curobo.graph.graph_base.graph attribute)": [[32, "curobo.graph.graph_base.Graph.edges"]], "find_paths() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.find_paths"]], "from_dict() (curobo.graph.graph_base.graphconfig static method)": [[32, "curobo.graph.graph_base.GraphConfig.from_dict"]], "get_all_rollout_instances() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_all_rollout_instances"]], "get_biased_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_biased_vertex_set"]], "get_feasible_sample_set() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_feasible_sample_set"]], "get_graph() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_graph"]], "get_graph_edges() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_graph_edges"]], "get_graph_shortest_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_graph_shortest_path_lengths"]], "get_interpolated_trajectory() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_interpolated_trajectory"]], "get_metrics() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_metrics"]], "get_new_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_new_vertex_set"]], "get_node_distance() (curobo.graph.graph_base.graph method)": [[32, "curobo.graph.graph_base.Graph.get_node_distance"]], "get_node_idx() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_node_idx"]], "get_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_path_lengths"]], "get_paths() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_paths"]], "get_samples() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.get_samples"]], "goal_q (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.goal_q"]], "graph_max_attempts (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.graph_max_attempts"]], "graph_min_attempts (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.graph_min_attempts"]], "init_nodes (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.init_nodes"]], "interpolated_plan (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.interpolated_plan"]], "interpolation_acceleration_scale (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.interpolation_acceleration_scale"]], "interpolation_deviation (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.interpolation_deviation"]], "interpolation_dt (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.interpolation_dt"]], "interpolation_steps (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.interpolation_steps"]], "interpolation_type (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.interpolation_type"]], "k_nn (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.k_nn"]], "load_from_robot_config() (curobo.graph.graph_base.graphconfig static method)": [[32, "curobo.graph.graph_base.GraphConfig.load_from_robot_config"]], "mask_samples() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.mask_samples"]], "max_buffer (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.max_buffer"]], "max_cg_buffer (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.max_cg_buffer"]], "max_nodes (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.max_nodes"]], "metrics (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.metrics"]], "node_similarity_distance (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.node_similarity_distance"]], "nodes (curobo.graph.graph_base.graph attribute)": [[32, "curobo.graph.graph_base.Graph.nodes"]], "optimized_dt (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.optimized_dt"]], "path_buffer_last_tstep (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.path_buffer_last_tstep"]], "path_exists() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.path_exists"]], "path_length (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.path_length"]], "plan (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.plan"]], "rejection_ratio (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.rejection_ratio"]], "reset_buffer() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.reset_buffer"]], "reset_cuda_graph() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.reset_cuda_graph"]], "reset_graph() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.reset_graph"]], "reset_seed() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.reset_seed"]], "rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.rollout_fn"]], "safety_rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.safety_rollout_fn"]], "sample_pts (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.sample_pts"]], "seed (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.seed"]], "set_shortest_path_lengths() (curobo.graph.graph_base.graph method)": [[32, "curobo.graph.graph_base.Graph.set_shortest_path_lengths"]], "shortest_path_lengths (curobo.graph.graph_base.graph attribute)": [[32, "curobo.graph.graph_base.Graph.shortest_path_lengths"]], "solve_time (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.solve_time"]], "start_q (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.start_q"]], "steer_delta_buffer (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.steer_delta_buffer"]], "success (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.success"]], "tensor_args (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.tensor_args"]], "use_bias_node (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.use_bias_node"]], "use_cuda_graph_mask_samples (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.use_cuda_graph_mask_samples"]], "valid_query (curobo.graph.graph_base.graphresult attribute)": [[32, "curobo.graph.graph_base.GraphResult.valid_query"]], "validate_graph() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.validate_graph"]], "vertex_n (curobo.graph.graph_base.graphconfig attribute)": [[32, "curobo.graph.graph_base.GraphConfig.vertex_n"]], "warmup() (curobo.graph.graph_base.graphplanbase method)": [[32, "curobo.graph.graph_base.GraphPlanBase.warmup"]], "networkxgraph (class in curobo.graph.graph_nx)": [[33, "curobo.graph.graph_nx.NetworkxGraph"]], "add_edge() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.add_edge"]], "add_edges() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.add_edges"]], "add_node() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.add_node"]], "add_nodes() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.add_nodes"]], "curobo.graph.graph_nx": [[33, "module-curobo.graph.graph_nx"]], "get_edges() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.get_edges"]], "get_path_lengths() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.get_path_lengths"]], "get_shortest_path() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.get_shortest_path"]], "path_exists() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.path_exists"]], "reset_graph() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.reset_graph"]], "update_graph() (curobo.graph.graph_nx.networkxgraph method)": [[33, "curobo.graph.graph_nx.NetworkxGraph.update_graph"]], "prmstar (class in curobo.graph.prm)": [[34, "curobo.graph.prm.PRMStar"]], "build_graph() (curobo.graph.prm.prmstar method)": [[34, "curobo.graph.prm.PRMStar.build_graph"]], "curobo.graph.prm": [[34, "module-curobo.graph.prm"]], "warmup() (curobo.graph.prm.prmstar method)": [[34, "curobo.graph.prm.PRMStar.warmup"]], "curobo.opt": [[35, "module-curobo.opt"]], "curobo.opt.newton": [[36, "module-curobo.opt.newton"]], "lbfgsopt (class in curobo.opt.newton.lbfgs)": [[37, "curobo.opt.newton.lbfgs.LBFGSOpt"]], "lbfgsoptconfig (class in curobo.opt.newton.lbfgs)": [[37, "curobo.opt.newton.lbfgs.LBFGSOptConfig"]], "curobo.opt.newton.lbfgs": [[37, "module-curobo.opt.newton.lbfgs"]], "epsilon (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[37, "curobo.opt.newton.lbfgs.LBFGSOptConfig.epsilon"]], "history (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[37, "curobo.opt.newton.lbfgs.LBFGSOptConfig.history"]], "init_hessian() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[37, "curobo.opt.newton.lbfgs.LBFGSOpt.init_hessian"]], "reset() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[37, "curobo.opt.newton.lbfgs.LBFGSOpt.reset"]], "stable_mode (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[37, "curobo.opt.newton.lbfgs.LBFGSOptConfig.stable_mode"]], "update_nenvs() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[37, "curobo.opt.newton.lbfgs.LBFGSOpt.update_nenvs"]], "use_cuda_kernel (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[37, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_kernel"]], "approx_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[38, "curobo.opt.newton.newton_base.LineSearchType.APPROX_WOLFE"]], "armijo (curobo.opt.newton.newton_base.linesearchtype attribute)": [[38, "curobo.opt.newton.newton_base.LineSearchType.ARMIJO"]], "greedy (curobo.opt.newton.newton_base.linesearchtype attribute)": [[38, "curobo.opt.newton.newton_base.LineSearchType.GREEDY"]], "linesearchtype (class in curobo.opt.newton.newton_base)": [[38, "curobo.opt.newton.newton_base.LineSearchType"]], "newtonoptbase (class in curobo.opt.newton.newton_base)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase"]], "newtonoptconfig (class in curobo.opt.newton.newton_base)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig"]], "strong_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[38, "curobo.opt.newton.newton_base.LineSearchType.STRONG_WOLFE"]], "wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[38, "curobo.opt.newton.newton_base.LineSearchType.WOLFE"]], "check_convergence() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.check_convergence"]], "clip_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.clip_bounds"]], "cost_convergence (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_convergence"]], "cost_delta_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_delta_threshold"]], "cost_relative_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_relative_threshold"]], "curobo.opt.newton.newton_base": [[38, "module-curobo.opt.newton.newton_base"]], "fixed_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.fixed_iters"]], "inner_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.inner_iters"]], "last_best (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.last_best"]], "line_search_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_scale"]], "line_search_type (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_type"]], "min_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.min_iters"]], "project_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.project_bounds"]], "reset() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.reset"]], "reset_cuda_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.reset_cuda_graph"]], "scale_step_direction() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.scale_step_direction"]], "step_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.step_scale"]], "update_nenvs() (curobo.opt.newton.newton_base.newtonoptbase method)": [[38, "curobo.opt.newton.newton_base.NewtonOptBase.update_nenvs"]], "use_cuda_line_search_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_line_search_kernel"]], "use_cuda_update_best_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_update_best_kernel"]], "use_temporal_smooth (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[38, "curobo.opt.newton.newton_base.NewtonOptConfig.use_temporal_smooth"]], "optimizer (class in curobo.opt.opt_base)": [[39, "curobo.opt.opt_base.Optimizer"]], "optimizerconfig (class in curobo.opt.opt_base)": [[39, "curobo.opt.opt_base.OptimizerConfig"]], "action_highs (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.action_highs"]], "action_lows (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.action_lows"]], "cold_start_n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.cold_start_n_iters"]], "create_data_dict() (curobo.opt.opt_base.optimizerconfig static method)": [[39, "curobo.opt.opt_base.OptimizerConfig.create_data_dict"]], "curobo.opt.opt_base": [[39, "module-curobo.opt.opt_base"]], "d_action (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.d_action"]], "debug_info (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.debug_info"]], "get_all_rollout_instances() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.get_all_rollout_instances"]], "get_nenv_tensor() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.get_nenv_tensor"]], "horizon (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.horizon"]], "n_envs (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.n_envs"]], "n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.n_iters"]], "num_particles (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.num_particles"]], "optimize() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.optimize"]], "reset() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.reset"]], "reset_cuda_graph() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.reset_cuda_graph"]], "reset_seed() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.reset_seed"]], "rollout_fn (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.rollout_fn"]], "store_debug (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.store_debug"]], "sync_cuda_time (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.sync_cuda_time"]], "tensor_args (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.tensor_args"]], "update_nenvs() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.update_nenvs"]], "update_params() (curobo.opt.opt_base.optimizer method)": [[39, "curobo.opt.opt_base.Optimizer.update_params"]], "use_coo_sparse (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.use_coo_sparse"]], "use_cuda_graph (curobo.opt.opt_base.optimizerconfig attribute)": [[39, "curobo.opt.opt_base.OptimizerConfig.use_cuda_graph"]], "curobo.opt.particle": [[40, "module-curobo.opt.particle"]], "paralleles (class in curobo.opt.particle.parallel_es)": [[41, "curobo.opt.particle.parallel_es.ParallelES"]], "parallelesconfig (class in curobo.opt.particle.parallel_es)": [[41, "curobo.opt.particle.parallel_es.ParallelESConfig"]], "curobo.opt.particle.parallel_es": [[41, "module-curobo.opt.particle.parallel_es"]], "learning_rate (curobo.opt.particle.parallel_es.parallelesconfig attribute)": [[41, "curobo.opt.particle.parallel_es.ParallelESConfig.learning_rate"]], "baseactiontype (class in curobo.opt.particle.parallel_mppi)": [[42, "curobo.opt.particle.parallel_mppi.BaseActionType"]], "covtype (class in curobo.opt.particle.parallel_mppi)": [[42, "curobo.opt.particle.parallel_mppi.CovType"]], "diag_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[42, "curobo.opt.particle.parallel_mppi.CovType.DIAG_A"]], "full_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[42, "curobo.opt.particle.parallel_mppi.CovType.FULL_A"]], "full_ha (curobo.opt.particle.parallel_mppi.covtype attribute)": [[42, "curobo.opt.particle.parallel_mppi.CovType.FULL_HA"]], "null (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[42, "curobo.opt.particle.parallel_mppi.BaseActionType.NULL"]], "parallelmppi (class in curobo.opt.particle.parallel_mppi)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI"]], "parallelmppiconfig (class in curobo.opt.particle.parallel_mppi)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig"]], "random (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[42, "curobo.opt.particle.parallel_mppi.BaseActionType.RANDOM"]], "repeat (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[42, "curobo.opt.particle.parallel_mppi.BaseActionType.REPEAT"]], "sigma_i (curobo.opt.particle.parallel_mppi.covtype attribute)": [[42, "curobo.opt.particle.parallel_mppi.CovType.SIGMA_I"]], "alpha (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.alpha"]], "base_action (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.base_action"]], "beta (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.beta"]], "cov_type (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.cov_type"]], "create_data_dict() (curobo.opt.particle.parallel_mppi.parallelmppiconfig static method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.create_data_dict"]], "curobo.opt.particle.parallel_mppi": [[42, "module-curobo.opt.particle.parallel_mppi"]], "entropy (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.entropy"]], "full_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_cov"]], "full_inv_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_inv_cov"]], "full_scale_tril (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_scale_tril"]], "gamma (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.gamma"]], "generate_noise() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_noise"]], "generate_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_rollouts"]], "get_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_rollouts"]], "init_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_cov"]], "init_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_mean"]], "kappa (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.kappa"]], "null_act_frac (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.null_act_frac"]], "random_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.random_mean"]], "reset() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset"]], "reset_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_covariance"]], "reset_distribution() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_distribution"]], "reset_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_mean"]], "reset_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_seed"]], "sample_actions() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_actions"]], "sample_params (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_params"]], "sample_per_env (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_per_env"]], "squash_fn (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.squash_fn"]], "squashed_mean (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.squashed_mean"]], "step_size_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_cov"]], "step_size_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_mean"]], "update_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.update_cov"]], "update_init_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_init_mean"]], "update_samples() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_samples"]], "update_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[42, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_seed"]], "best (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[43, "curobo.opt.particle.particle_opt_base.SampleMode.BEST"]], "mean (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[43, "curobo.opt.particle.particle_opt_base.SampleMode.MEAN"]], "particleoptbase (class in curobo.opt.particle.particle_opt_base)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase"]], "particleoptconfig (class in curobo.opt.particle.particle_opt_base)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig"]], "particleoptinfo (class in curobo.opt.particle.particle_opt_base)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptInfo"]], "sample (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[43, "curobo.opt.particle.particle_opt_base.SampleMode.SAMPLE"]], "samplemode (class in curobo.opt.particle.particle_opt_base)": [[43, "curobo.opt.particle.particle_opt_base.SampleMode"]], "calculate_value (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.calculate_value"]], "check_convergence() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.check_convergence"]], "create_data_dict() (curobo.opt.particle.particle_opt_base.particleoptconfig static method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.create_data_dict"]], "curobo.opt.particle.particle_opt_base": [[43, "module-curobo.opt.particle.particle_opt_base"]], "gamma (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.gamma"]], "generate_rollouts() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.generate_rollouts"]], "info (curobo.opt.particle.particle_opt_base.particleoptinfo attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptInfo.info"]], "reset() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset"]], "sample_actions() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sample_actions"]], "sample_mode (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.sample_mode"]], "seed (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.seed"]], "store_rollouts (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.store_rollouts"]], "update_nenvs() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_nenvs"]], "update_num_particles_per_env() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_num_particles_per_env"]], "update_seed() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[43, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_seed"]], "clamp (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[44, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP"]], "clamp_rescale (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[44, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP_RESCALE"]], "identity (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[44, "curobo.opt.particle.particle_opt_utils.SquashType.IDENTITY"]], "squashtype (class in curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.SquashType"]], "tanh (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[44, "curobo.opt.particle.particle_opt_utils.SquashType.TANH"]], "batch_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.batch_cholesky"]], "cost_to_go() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.cost_to_go"]], "cost_to_go_np() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.cost_to_go_np"]], "curobo.opt.particle.particle_opt_utils": [[44, "module-curobo.opt.particle.particle_opt_utils"]], "gaussian_entropy() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.gaussian_entropy"]], "gaussian_kl() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.gaussian_kl"]], "gaussian_logprob() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.gaussian_logprob"]], "gaussian_logprobgrad() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.gaussian_logprobgrad"]], "get_stomp_cov() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.get_stomp_cov"]], "matrix_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.matrix_cholesky"]], "scale_ctrl() (in module curobo.opt.particle.particle_opt_utils)": [[44, "curobo.opt.particle.particle_opt_utils.scale_ctrl"]], "curobo.rollout": [[45, "module-curobo.rollout"]], "armbase (class in curobo.rollout.arm_base)": [[46, "curobo.rollout.arm_base.ArmBase"]], "armbaseconfig (class in curobo.rollout.arm_base)": [[46, "curobo.rollout.arm_base.ArmBaseConfig"]], "armcostconfig (class in curobo.rollout.arm_base)": [[46, "curobo.rollout.arm_base.ArmCostConfig"]], "action_bound_highs (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.action_bound_lows"]], "bound_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.bound_cfg"]], "compute_kinematics() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.compute_kinematics"]], "constraint_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.constraint_cfg"]], "constraint_fn() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.constraint_fn"]], "convergence_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.convergence_cfg"]], "convergence_fn() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.convergence_fn"]], "cost_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.cost_cfg"]], "cost_fn() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.cost_from_dict"]], "cspace_config (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.cspace_config"]], "curobo.rollout.arm_base": [[46, "module-curobo.rollout.arm_base"]], "current_cost() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.current_cost"]], "d_action (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.d_action"]], "dt (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.dt"]], "filter_robot_state() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.filter_robot_state"]], "from_dict() (curobo.rollout.arm_base.armbaseconfig class method)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.from_dict"]], "from_dict() (curobo.rollout.arm_base.armcostconfig static method)": [[46, "curobo.rollout.arm_base.ArmCostConfig.from_dict"]], "get_action_from_state() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_action_from_state"]], "get_ee_pose() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_ee_pose"]], "get_full_dof_from_solution() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.get_state_from_action"]], "horizon (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.horizon"]], "joint_names (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.joint_names"]], "kinematics (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.kinematics"]], "manipulability_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.manipulability_cfg"]], "model_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.model_cfg"]], "model_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.model_from_dict"]], "null_space_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.null_space_cfg"]], "primitive_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.primitive_collision_cfg"]], "reset() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.reset"]], "reset_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.reset_cuda_graph"]], "retract_state (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.retract_state"]], "rollout_constraint() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.rollout_constraint"]], "rollout_constraint_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.rollout_constraint_cuda_graph"]], "rollout_fn() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.rollout_fn"]], "self_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.self_collision_cfg"]], "state_bounds (curobo.rollout.arm_base.armbase property)": [[46, "curobo.rollout.arm_base.ArmBase.state_bounds"]], "stop_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[46, "curobo.rollout.arm_base.ArmCostConfig.stop_cfg"]], "update_cost_dt() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.update_cost_dt"]], "update_params() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.update_params"]], "update_traj_dt() (curobo.rollout.arm_base.armbase method)": [[46, "curobo.rollout.arm_base.ArmBase.update_traj_dt"]], "world_coll_checker (curobo.rollout.arm_base.armbaseconfig attribute)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker"]], "world_coll_checker_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[46, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker_from_dict"]], "armreacher (class in curobo.rollout.arm_reacher)": [[47, "curobo.rollout.arm_reacher.ArmReacher"]], "armreacherconfig (class in curobo.rollout.arm_reacher)": [[47, "curobo.rollout.arm_reacher.ArmReacherConfig"]], "armreachercostconfig (class in curobo.rollout.arm_reacher)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig"]], "armreachermetrics (class in curobo.rollout.arm_reacher)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics"]], "clone() (curobo.rollout.arm_reacher.armreachermetrics method)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics.clone"]], "constraint_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherConfig.constraint_cfg"]], "convergence_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherConfig.convergence_cfg"]], "convergence_fn() (curobo.rollout.arm_reacher.armreacher method)": [[47, "curobo.rollout.arm_reacher.ArmReacher.convergence_fn"]], "cost_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_cfg"]], "cost_fn() (curobo.rollout.arm_reacher.armreacher method)": [[47, "curobo.rollout.arm_reacher.ArmReacher.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_reacher.armreacherconfig static method)": [[47, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_from_dict"]], "cspace_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.cspace_cfg"]], "cspace_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics.cspace_error"]], "curobo.rollout.arm_reacher": [[47, "module-curobo.rollout.arm_reacher"]], "enable_cspace_cost() (curobo.rollout.arm_reacher.armreacher method)": [[47, "curobo.rollout.arm_reacher.ArmReacher.enable_cspace_cost"]], "enable_pose_cost() (curobo.rollout.arm_reacher.armreacher method)": [[47, "curobo.rollout.arm_reacher.ArmReacher.enable_pose_cost"]], "from_dict() (curobo.rollout.arm_reacher.armreachercostconfig static method)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.from_dict"]], "pose_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.pose_cfg"]], "pose_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics.pose_error"]], "position_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics.position_error"]], "rotation_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherMetrics.rotation_error"]], "straight_line_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.straight_line_cfg"]], "update_params() (curobo.rollout.arm_reacher.armreacher method)": [[47, "curobo.rollout.arm_reacher.ArmReacher.update_params"]], "zero_acc_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_acc_cfg"]], "zero_jerk_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_jerk_cfg"]], "zero_vel_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[47, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_vel_cfg"]], "curobo.rollout.cost": [[48, "module-curobo.rollout.cost"]], "bounds (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS"]], "bounds_smooth (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS_SMOOTH"]], "boundcost (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.BoundCost"]], "boundcostconfig (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig"]], "boundcosttype (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.BoundCostType"]], "position (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostType.POSITION"]], "warpboundfunction (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundFunction"]], "warpboundposfunction (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction"]], "warpboundposloss (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss"]], "warpboundsmoothfunction (class in curobo.rollout.cost.bound_cost)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction"]], "activation_distance (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.activation_distance"]], "backward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposloss static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.backward"]], "cost_type (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.cost_type"]], "cspace_distance_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.cspace_distance_weight"]], "curobo.rollout.cost.bound_cost": [[49, "module-curobo.rollout.cost.bound_cost"]], "forward() (curobo.rollout.cost.bound_cost.boundcost method)": [[49, "curobo.rollout.cost.bound_cost.BoundCost.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[49, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.forward"]], "joint_limits (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.joint_limits"]], "null_space_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.null_space_weight"]], "run_weight_acceleration (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_acceleration"]], "run_weight_jerk (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_jerk"]], "run_weight_velocity (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_velocity"]], "set_bounds() (curobo.rollout.cost.bound_cost.boundcostconfig method)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.set_bounds"]], "smooth_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.smooth_weight"]], "state_finite_difference_mode (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[49, "curobo.rollout.cost.bound_cost.BoundCostConfig.state_finite_difference_mode"]], "update_batch_size() (curobo.rollout.cost.bound_cost.boundcost method)": [[49, "curobo.rollout.cost.bound_cost.BoundCost.update_batch_size"]], "update_dt() (curobo.rollout.cost.bound_cost.boundcost method)": [[49, "curobo.rollout.cost.bound_cost.BoundCost.update_dt"]], "costbase (class in curobo.rollout.cost.cost_base)": [[50, "curobo.rollout.cost.cost_base.CostBase"]], "costconfig (class in curobo.rollout.cost.cost_base)": [[50, "curobo.rollout.cost.cost_base.CostConfig"]], "classify (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.classify"]], "curobo.rollout.cost.cost_base": [[50, "module-curobo.rollout.cost.cost_base"]], "disable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[50, "curobo.rollout.cost.cost_base.CostBase.disable_cost"]], "distance_threshold (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.distance_threshold"]], "dof (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.dof"]], "enable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[50, "curobo.rollout.cost.cost_base.CostBase.enable_cost"]], "enabled (curobo.rollout.cost.cost_base.costbase property)": [[50, "curobo.rollout.cost.cost_base.CostBase.enabled"]], "forward() (curobo.rollout.cost.cost_base.costbase method)": [[50, "curobo.rollout.cost.cost_base.CostBase.forward"]], "hinge_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.hinge_value"]], "max_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.max_value"]], "return_loss (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.return_loss"]], "run_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.run_weight"]], "tensor_args (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.tensor_args"]], "terminal (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.terminal"]], "threshold_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.threshold_value"]], "update_dt() (curobo.rollout.cost.cost_base.costbase method)": [[50, "curobo.rollout.cost.cost_base.CostBase.update_dt"]], "update_vec_weight() (curobo.rollout.cost.cost_base.costconfig method)": [[50, "curobo.rollout.cost.cost_base.CostConfig.update_vec_weight"]], "update_weight() (curobo.rollout.cost.cost_base.costbase method)": [[50, "curobo.rollout.cost.cost_base.CostBase.update_weight"]], "vec_convergence (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.vec_convergence"]], "vec_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.vec_weight"]], "weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[50, "curobo.rollout.cost.cost_base.CostConfig.weight"]], "distcost (class in curobo.rollout.cost.dist_cost)": [[51, "curobo.rollout.cost.dist_cost.DistCost"]], "distcostconfig (class in curobo.rollout.cost.dist_cost)": [[51, "curobo.rollout.cost.dist_cost.DistCostConfig"]], "disttype (class in curobo.rollout.cost.dist_cost)": [[51, "curobo.rollout.cost.dist_cost.DistType"]], "l1 (curobo.rollout.cost.dist_cost.disttype attribute)": [[51, "curobo.rollout.cost.dist_cost.DistType.L1"]], "l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[51, "curobo.rollout.cost.dist_cost.DistType.L2"]], "l2distfunction (class in curobo.rollout.cost.dist_cost)": [[51, "curobo.rollout.cost.dist_cost.L2DistFunction"]], "squared_l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[51, "curobo.rollout.cost.dist_cost.DistType.SQUARED_L2"]], "backward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[51, "curobo.rollout.cost.dist_cost.L2DistFunction.backward"]], "curobo.rollout.cost.dist_cost": [[51, "module-curobo.rollout.cost.dist_cost"]], "dist_type (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[51, "curobo.rollout.cost.dist_cost.DistCostConfig.dist_type"]], "forward() (curobo.rollout.cost.dist_cost.distcost method)": [[51, "curobo.rollout.cost.dist_cost.DistCost.forward"]], "forward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[51, "curobo.rollout.cost.dist_cost.L2DistFunction.forward"]], "forward_target() (curobo.rollout.cost.dist_cost.distcost method)": [[51, "curobo.rollout.cost.dist_cost.DistCost.forward_target"]], "forward_target_idx() (curobo.rollout.cost.dist_cost.distcost method)": [[51, "curobo.rollout.cost.dist_cost.DistCost.forward_target_idx"]], "update_batch_size() (curobo.rollout.cost.dist_cost.distcost method)": [[51, "curobo.rollout.cost.dist_cost.DistCost.update_batch_size"]], "use_null_space (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[51, "curobo.rollout.cost.dist_cost.DistCostConfig.use_null_space"]], "manipulabilitycost (class in curobo.rollout.cost.manipulability_cost)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost"]], "manipulabilitycostconfig (class in curobo.rollout.cost.manipulability_cost)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost": [[52, "module-curobo.rollout.cost.manipulability_cost"]], "forward() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.forward"]], "joint_limited_manipulability_delta() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.joint_limited_manipulability_delta"]], "manipulability() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.manipulability"]], "use_joint_limits (curobo.rollout.cost.manipulability_cost.manipulabilitycostconfig attribute)": [[52, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.use_joint_limits"]], "batch_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOAL"]], "batch_goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOALSET"]], "goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorType.GOALSET"]], "posecost (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseCost"]], "posecostconfig (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseCostConfig"]], "poseerror (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseError"]], "poseerrordistance (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorDistance"]], "poseerrortype (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorType"]], "poseloss (class in curobo.rollout.cost.pose_cost)": [[53, "curobo.rollout.cost.pose_cost.PoseLoss"]], "single_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorType.SINGLE_GOAL"]], "backward() (curobo.rollout.cost.pose_cost.poseerror static method)": [[53, "curobo.rollout.cost.pose_cost.PoseError.backward"]], "backward() (curobo.rollout.cost.pose_cost.poseerrordistance static method)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorDistance.backward"]], "backward() (curobo.rollout.cost.pose_cost.poseloss static method)": [[53, "curobo.rollout.cost.pose_cost.PoseLoss.backward"]], "cost_type (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseCostConfig.cost_type"]], "curobo.rollout.cost.pose_cost": [[53, "module-curobo.rollout.cost.pose_cost"]], "forward() (curobo.rollout.cost.pose_cost.posecost method)": [[53, "curobo.rollout.cost.pose_cost.PoseCost.forward"]], "forward() (curobo.rollout.cost.pose_cost.poseerror static method)": [[53, "curobo.rollout.cost.pose_cost.PoseError.forward"]], "forward() (curobo.rollout.cost.pose_cost.poseerrordistance static method)": [[53, "curobo.rollout.cost.pose_cost.PoseErrorDistance.forward"]], "forward() (curobo.rollout.cost.pose_cost.poseloss static method)": [[53, "curobo.rollout.cost.pose_cost.PoseLoss.forward"]], "forward_out_distance() (curobo.rollout.cost.pose_cost.posecost method)": [[53, "curobo.rollout.cost.pose_cost.PoseCost.forward_out_distance"]], "forward_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[53, "curobo.rollout.cost.pose_cost.PoseCost.forward_pose"]], "run_vec_weight (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseCostConfig.run_vec_weight"]], "update_batch_size() (curobo.rollout.cost.pose_cost.posecost method)": [[53, "curobo.rollout.cost.pose_cost.PoseCost.update_batch_size"]], "use_metric (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[53, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_metric"]], "primitivecollisioncost (class in curobo.rollout.cost.primitive_collision_cost)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost"]], "primitivecollisioncostconfig (class in curobo.rollout.cost.primitive_collision_cost)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig"]], "activation_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.activation_distance"]], "curobo.rollout.cost.primitive_collision_cost": [[54, "module-curobo.rollout.cost.primitive_collision_cost"]], "discrete_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.discrete_fn"]], "get_gradient_buffer() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_gradient_buffer"]], "speed_dt (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.speed_dt"]], "sum_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_distance"]], "sweep_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_fn"]], "sweep_kernel_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_kernel_fn"]], "sweep_steps (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sweep_steps"]], "update_dt() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_dt"]], "use_speed_metric (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_speed_metric"]], "use_sweep (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep"]], "use_sweep_kernel (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep_kernel"]], "world_coll_checker (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[54, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.world_coll_checker"]], "identity (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjType.IDENTITY"]], "pseudo_inverse (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjType.PSEUDO_INVERSE"]], "projtype (class in curobo.rollout.cost.projected_dist_cost)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjType"]], "projecteddistcost (class in curobo.rollout.cost.projected_dist_cost)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost"]], "projecteddistcostconfig (class in curobo.rollout.cost.projected_dist_cost)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost": [[55, "module-curobo.rollout.cost.projected_dist_cost"]], "eps (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.eps"]], "forward() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward"]], "get_pinv_null_disp() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_pinv_null_disp"]], "proj_type (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[55, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.proj_type"]], "selfcollisioncost (class in curobo.rollout.cost.self_collision_cost)": [[56, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost"]], "selfcollisioncostconfig (class in curobo.rollout.cost.self_collision_cost)": [[56, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost": [[56, "module-curobo.rollout.cost.self_collision_cost"]], "forward() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[56, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.forward"]], "self_collision_kin_config (curobo.rollout.cost.self_collision_cost.selfcollisioncostconfig attribute)": [[56, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.self_collision_kin_config"]], "update_batch_size() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[56, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_batch_size"]], "stopcost (class in curobo.rollout.cost.stop_cost)": [[57, "curobo.rollout.cost.stop_cost.StopCost"]], "stopcostconfig (class in curobo.rollout.cost.stop_cost)": [[57, "curobo.rollout.cost.stop_cost.StopCostConfig"]], "curobo.rollout.cost.stop_cost": [[57, "module-curobo.rollout.cost.stop_cost"]], "dt_traj_params (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[57, "curobo.rollout.cost.stop_cost.StopCostConfig.dt_traj_params"]], "forward() (curobo.rollout.cost.stop_cost.stopcost method)": [[57, "curobo.rollout.cost.stop_cost.StopCost.forward"]], "horizon (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[57, "curobo.rollout.cost.stop_cost.StopCostConfig.horizon"]], "max_limit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[57, "curobo.rollout.cost.stop_cost.StopCostConfig.max_limit"]], "max_nlimit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[57, "curobo.rollout.cost.stop_cost.StopCostConfig.max_nlimit"]], "straightlinecost (class in curobo.rollout.cost.straight_line_cost)": [[58, "curobo.rollout.cost.straight_line_cost.StraightLineCost"]], "curobo.rollout.cost.straight_line_cost": [[58, "module-curobo.rollout.cost.straight_line_cost"]], "forward() (curobo.rollout.cost.straight_line_cost.straightlinecost method)": [[58, "curobo.rollout.cost.straight_line_cost.StraightLineCost.forward"]], "runsquaredsum (class in curobo.rollout.cost.zero_cost)": [[59, "curobo.rollout.cost.zero_cost.RunSquaredSum"]], "squaredsum (class in curobo.rollout.cost.zero_cost)": [[59, "curobo.rollout.cost.zero_cost.SquaredSum"]], "zerocost (class in curobo.rollout.cost.zero_cost)": [[59, "curobo.rollout.cost.zero_cost.ZeroCost"]], "backward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[59, "curobo.rollout.cost.zero_cost.RunSquaredSum.backward"]], "backward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[59, "curobo.rollout.cost.zero_cost.SquaredSum.backward"]], "curobo.rollout.cost.zero_cost": [[59, "module-curobo.rollout.cost.zero_cost"]], "forward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[59, "curobo.rollout.cost.zero_cost.RunSquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[59, "curobo.rollout.cost.zero_cost.SquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.zerocost method)": [[59, "curobo.rollout.cost.zero_cost.ZeroCost.forward"]], "curobo.rollout.dynamics_model": [[60, "module-curobo.rollout.dynamics_model"]], "accelerationtensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel"]], "accelerationtensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel"]], "cliquetensorstep (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep"]], "cliquetensorstepcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel"]], "cliquetensorstepcoalescekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel"]], "cliquetensorstepidxcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel"]], "cliquetensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel"]], "cliquetensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel"]], "action_interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.action_interpolate_kernel"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.backward"]], "build_clique_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.build_clique_matrix"]], "build_fd_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.build_fd_matrix"]], "build_int_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.build_int_matrix"]], "build_start_state_mask() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.build_start_state_mask"]], "curobo.rollout.dynamics_model.integration_utils": [[61, "module-curobo.rollout.dynamics_model.integration_utils"]], "euler_integrate() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.euler_integrate"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[61, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.forward"]], "interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.interpolate_kernel"]], "step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.step_acc_semi_euler"]], "sum_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.sum_matrix"]], "tensor_linspace() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_linspace"]], "tensor_step_acc() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc"]], "tensor_step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc_semi_euler"]], "tensor_step_jerk() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_jerk"]], "tensor_step_pos() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos"]], "tensor_step_pos_clique() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_clique"]], "tensor_step_pos_ik() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_ik"]], "tensor_step_vel() (in module curobo.rollout.dynamics_model.integration_utils)": [[61, "curobo.rollout.dynamics_model.integration_utils.tensor_step_vel"]], "kinematicmodel (class in curobo.rollout.dynamics_model.kinematic_model)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel"]], "kinematicmodelconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig"]], "kinematicmodelstate (class in curobo.rollout.dynamics_model.kinematic_model)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState"]], "timetrajconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig"]], "action_bound_highs (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_highs"]], "action_bound_lows (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_lows"]], "ang_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ang_jac_seq"]], "base_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_dt"]], "base_ratio (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_ratio"]], "batch_size (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.batch_size"]], "control_space (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.control_space"]], "cspace_distance_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.cspace_distance_weight"]], "curobo.rollout.dynamics_model.kinematic_model": [[62, "module-curobo.rollout.dynamics_model.kinematic_model"]], "dt_traj_params (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.dt_traj_params"]], "ee_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pos_seq"]], "ee_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pose"]], "ee_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_quat_seq"]], "filter_robot_command (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.filter_robot_command"]], "filter_robot_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.forward"]], "from_dict() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig static method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.from_dict"]], "get_action_from_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_action_from_state"]], "get_dt_array() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.get_dt_array"]], "get_next_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_robot_command"]], "get_state_bounds() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_bounds"]], "get_state_from_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_from_action"]], "horizon (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.horizon"]], "init_action_mean (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.init_action_mean"]], "integrate_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action"]], "integrate_action_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action_step"]], "lin_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.lin_jac_seq"]], "link_names (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_names"]], "link_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pos_seq"]], "link_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pose"]], "link_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_quat_seq"]], "max_acceleration (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_acceleration"]], "max_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.max_dt"]], "max_jerk (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_jerk"]], "null_space_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.null_space_weight"]], "retract_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.retract_config"]], "return_full_act_buffer (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.return_full_act_buffer"]], "robot_cmd_tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.robot_cmd_tensor_step"]], "robot_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.robot_config"]], "robot_spheres (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.robot_spheres"]], "state_estimation_variance (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_estimation_variance"]], "state_filter_cfg (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_filter_cfg"]], "state_finite_difference_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_finite_difference_mode"]], "state_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.state_seq"]], "teleport_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.teleport_mode"]], "tensor_args (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.tensor_args"]], "tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.tensor_step"]], "update_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_batch_size"]], "update_cmd_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_cmd_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.update_dt"]], "update_traj_dt() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_traj_dt"]], "vel_scale (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[62, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.vel_scale"]], "dynamicsmodelbase (class in curobo.rollout.dynamics_model.model_base)": [[63, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase"]], "curobo.rollout.dynamics_model.model_base": [[63, "module-curobo.rollout.dynamics_model.model_base"]], "filter_robot_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[63, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[63, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.forward"]], "get_next_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[63, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[63, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_robot_command"]], "acceleration (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION"]], "acceleration_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION_KERNEL"]], "jerk (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.JERK"]], "position (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION"]], "position_clique (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE"]], "position_clique_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE_KERNEL"]], "position_teleport (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_TELEPORT"]], "tensorstepacceleration (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration"]], "tensorstepaccelerationkernel (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel"]], "tensorstepbase (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase"]], "tensorstepposition (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition"]], "tensorsteppositionclique (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique"]], "tensorsteppositioncliquekernel (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel"]], "tensorsteppositionteleport (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport"]], "tensorsteptype (class in curobo.rollout.dynamics_model.tensor_step)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType"]], "velocity (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.VELOCITY"]], "curobo.rollout.dynamics_model.tensor_step": [[64, "module-curobo.rollout.dynamics_model.tensor_step"]], "filter_signal() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.filter_signal"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionteleport method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.forward"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.update_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[64, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_dt"]], "goal (class in curobo.rollout.rollout_base)": [[65, "curobo.rollout.rollout_base.Goal"]], "rolloutbase (class in curobo.rollout.rollout_base)": [[65, "curobo.rollout.rollout_base.RolloutBase"]], "rolloutconfig (class in curobo.rollout.rollout_base)": [[65, "curobo.rollout.rollout_base.RolloutConfig"]], "rolloutmetrics (class in curobo.rollout.rollout_base)": [[65, "curobo.rollout.rollout_base.RolloutMetrics"]], "trajectory (class in curobo.rollout.rollout_base)": [[65, "curobo.rollout.rollout_base.Trajectory"]], "action_bound_highs (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.action_bound_lows"]], "action_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.action_bounds"]], "actions (curobo.rollout.rollout_base.trajectory attribute)": [[65, "curobo.rollout.rollout_base.Trajectory.actions"]], "apply_kernel() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.apply_kernel"]], "batch (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch"]], "batch_current_state_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_current_state_idx"]], "batch_enable_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_enable_idx"]], "batch_goal_state_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_goal_state_idx"]], "batch_pose_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_pose_idx"]], "batch_retract_state_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_retract_state_idx"]], "batch_world_idx (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.batch_world_idx"]], "clone() (curobo.rollout.rollout_base.rolloutmetrics method)": [[65, "curobo.rollout.rollout_base.RolloutMetrics.clone"]], "constraint (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[65, "curobo.rollout.rollout_base.RolloutMetrics.constraint"]], "constraint_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.constraint_fn"]], "convergence_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.convergence_fn"]], "copy_() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.copy_"]], "cost (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[65, "curobo.rollout.rollout_base.RolloutMetrics.cost"]], "cost_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.cost_fn"]], "costs (curobo.rollout.rollout_base.trajectory attribute)": [[65, "curobo.rollout.rollout_base.Trajectory.costs"]], "create_idx() (curobo.rollout.rollout_base.goal class method)": [[65, "curobo.rollout.rollout_base.Goal.create_idx"]], "create_index_buffers() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.create_index_buffers"]], "cspace_config (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.cspace_config"]], "curobo.rollout.rollout_base": [[65, "module-curobo.rollout.rollout_base"]], "current_cost() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.current_cost"]], "current_state (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.current_state"]], "d_action (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.d_action"]], "debug (curobo.rollout.rollout_base.trajectory attribute)": [[65, "curobo.rollout.rollout_base.Trajectory.debug"]], "dt (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.dt"]], "feasible (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[65, "curobo.rollout.rollout_base.RolloutMetrics.feasible"]], "filter_robot_state() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.filter_robot_state"]], "get_action_from_state() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_action_from_state"]], "get_batch_goal_state() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.get_batch_goal_state"]], "get_full_dof_from_solution() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.get_state_from_action"]], "goal_pose (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.goal_pose"]], "goal_state (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.goal_state"]], "horizon (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.horizon"]], "links_goal_pose (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.links_goal_pose"]], "n_goalset (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.n_goalset"]], "name (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.name"]], "repeat_seeds() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.repeat_seeds"]], "reset() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.reset"]], "reset_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.reset_cuda_graph"]], "reset_seed() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.reset_seed"]], "retract_state (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.retract_state"]], "rollout_constraint() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.rollout_constraint"]], "rollout_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.rollout_fn"]], "sample_random_actions() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.sample_random_actions"]], "state (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[65, "curobo.rollout.rollout_base.RolloutMetrics.state"]], "state (curobo.rollout.rollout_base.trajectory attribute)": [[65, "curobo.rollout.rollout_base.Trajectory.state"]], "state_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[65, "curobo.rollout.rollout_base.RolloutBase.state_bounds"]], "tensor_args (curobo.rollout.rollout_base.rolloutconfig attribute)": [[65, "curobo.rollout.rollout_base.RolloutConfig.tensor_args"]], "to() (curobo.rollout.rollout_base.goal method)": [[65, "curobo.rollout.rollout_base.Goal.to"]], "update_batch_idx_buffers (curobo.rollout.rollout_base.goal attribute)": [[65, "curobo.rollout.rollout_base.Goal.update_batch_idx_buffers"]], "update_params() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.update_params"]], "update_start_state() (curobo.rollout.rollout_base.rolloutbase method)": [[65, "curobo.rollout.rollout_base.RolloutBase.update_start_state"]], "curobo.types": [[66, "module-curobo.types"]], "tensordevicetype (class in curobo.types.base)": [[67, "curobo.types.base.TensorDeviceType"]], "cpu() (curobo.types.base.tensordevicetype method)": [[67, "curobo.types.base.TensorDeviceType.cpu"]], "curobo.types.base": [[67, "module-curobo.types.base"]], "device (curobo.types.base.tensordevicetype attribute)": [[67, "curobo.types.base.TensorDeviceType.device"]], "dtype (curobo.types.base.tensordevicetype attribute)": [[67, "curobo.types.base.TensorDeviceType.dtype"]], "from_basic() (curobo.types.base.tensordevicetype static method)": [[67, "curobo.types.base.TensorDeviceType.from_basic"]], "to_device() (curobo.types.base.tensordevicetype method)": [[67, "curobo.types.base.TensorDeviceType.to_device"]], "to_int8_device() (curobo.types.base.tensordevicetype method)": [[67, "curobo.types.base.TensorDeviceType.to_int8_device"]], "cameraobservation (class in curobo.types.camera)": [[68, "curobo.types.camera.CameraObservation"]], "copy_() (curobo.types.camera.cameraobservation method)": [[68, "curobo.types.camera.CameraObservation.copy_"]], "curobo.types.camera": [[68, "module-curobo.types.camera"]], "depth_image (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.depth_image"]], "image_segmentation (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.image_segmentation"]], "intrinsics (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.intrinsics"]], "name (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.name"]], "pose (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.pose"]], "projection_matrix (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.projection_matrix"]], "resolution (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.resolution"]], "rgb_image (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.rgb_image"]], "shape (curobo.types.camera.cameraobservation property)": [[68, "curobo.types.camera.CameraObservation.shape"]], "timestamp (curobo.types.camera.cameraobservation attribute)": [[68, "curobo.types.camera.CameraObservation.timestamp"]], "to() (curobo.types.camera.cameraobservation method)": [[68, "curobo.types.camera.CameraObservation.to"]], "acceleration (curobo.types.enum.statetype attribute)": [[69, "curobo.types.enum.StateType.ACCELERATION"]], "jerk (curobo.types.enum.statetype attribute)": [[69, "curobo.types.enum.StateType.JERK"]], "position (curobo.types.enum.statetype attribute)": [[69, "curobo.types.enum.StateType.POSITION"]], "statetype (class in curobo.types.enum)": [[69, "curobo.types.enum.StateType"]], "velocity (curobo.types.enum.statetype attribute)": [[69, "curobo.types.enum.StateType.VELOCITY"]], "curobo.types.enum": [[69, "module-curobo.types.enum"]], "orientationerror (class in curobo.types.math)": [[70, "curobo.types.math.OrientationError"]], "pose (class in curobo.types.math)": [[70, "curobo.types.math.Pose"]], "angular_distance() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.angular_distance"]], "apply_kernel() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.apply_kernel"]], "backward() (curobo.types.math.orientationerror static method)": [[70, "curobo.types.math.OrientationError.backward"]], "batch (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.batch"]], "batch_transform_points() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.batch_transform_points"]], "cat() (curobo.types.math.pose static method)": [[70, "curobo.types.math.Pose.cat"]], "clone() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.clone"]], "copy_() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.copy_"]], "curobo.types.math": [[70, "module-curobo.types.math"]], "distance() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.distance"]], "forward() (curobo.types.math.orientationerror static method)": [[70, "curobo.types.math.OrientationError.forward"]], "from_batch_list() (curobo.types.math.pose class method)": [[70, "curobo.types.math.Pose.from_batch_list"]], "from_list() (curobo.types.math.pose class method)": [[70, "curobo.types.math.Pose.from_list"]], "from_matrix() (curobo.types.math.pose static method)": [[70, "curobo.types.math.Pose.from_matrix"]], "geodesic_distance() (curobo.types.math.orientationerror static method)": [[70, "curobo.types.math.OrientationError.geodesic_distance"]], "get_index() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.get_index"]], "get_matrix() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.get_matrix"]], "get_numpy_matrix() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.get_numpy_matrix"]], "get_pose_vector() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.get_pose_vector"]], "get_rotation() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.get_rotation"]], "inverse() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.inverse"]], "linear_distance() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.linear_distance"]], "multiply() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.multiply"]], "n_goalset (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.n_goalset"]], "name (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.name"]], "normalize_rotation (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.normalize_rotation"]], "position (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.position"]], "quat_multiply() (in module curobo.types.math)": [[70, "curobo.types.math.quat_multiply"]], "quaternion (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.quaternion"]], "repeat() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.repeat"]], "repeat_seeds() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.repeat_seeds"]], "rotation (curobo.types.math.pose attribute)": [[70, "curobo.types.math.Pose.rotation"]], "shape (curobo.types.math.pose property)": [[70, "curobo.types.math.Pose.shape"]], "stack() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.stack"]], "to() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.to"]], "to_list() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.to_list"]], "tolist() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.tolist"]], "transform_point() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.transform_point"]], "transform_points() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.transform_points"]], "unsqueeze() (curobo.types.math.pose method)": [[70, "curobo.types.math.Pose.unsqueeze"]], "nnconfig (class in curobo.types.robot)": [[71, "curobo.types.robot.NNConfig"]], "robotconfig (class in curobo.types.robot)": [[71, "curobo.types.robot.RobotConfig"]], "cspace (curobo.types.robot.robotconfig property)": [[71, "curobo.types.robot.RobotConfig.cspace"]], "curobo.types.robot": [[71, "module-curobo.types.robot"]], "from_basic() (curobo.types.robot.robotconfig static method)": [[71, "curobo.types.robot.RobotConfig.from_basic"]], "from_dict() (curobo.types.robot.robotconfig static method)": [[71, "curobo.types.robot.RobotConfig.from_dict"]], "ik_seeder (curobo.types.robot.nnconfig attribute)": [[71, "curobo.types.robot.NNConfig.ik_seeder"]], "kinematics (curobo.types.robot.robotconfig attribute)": [[71, "curobo.types.robot.RobotConfig.kinematics"]], "tensor_args (curobo.types.robot.robotconfig attribute)": [[71, "curobo.types.robot.RobotConfig.tensor_args"]], "write_config() (curobo.types.robot.robotconfig method)": [[71, "curobo.types.robot.RobotConfig.write_config"]], "filtercoeff (class in curobo.types.state)": [[72, "curobo.types.state.FilterCoeff"]], "jointstate (class in curobo.types.state)": [[72, "curobo.types.state.JointState"]], "state (class in curobo.types.state)": [[72, "curobo.types.state.State"]], "acceleration (curobo.types.state.filtercoeff attribute)": [[72, "curobo.types.state.FilterCoeff.acceleration"]], "acceleration (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.acceleration"]], "append_joints() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.append_joints"]], "apply_kernel() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.apply_kernel"]], "apply_kernel() (curobo.types.state.state method)": [[72, "curobo.types.state.State.apply_kernel"]], "blend() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.blend"]], "blend() (curobo.types.state.state method)": [[72, "curobo.types.state.State.blend"]], "calculate_fd_from_position() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.calculate_fd_from_position"]], "clone() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.clone"]], "clone() (curobo.types.state.state method)": [[72, "curobo.types.state.State.clone"]], "copy_() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.copy_"]], "copy_at_index() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.copy_at_index"]], "copy_data() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.copy_data"]], "curobo.types.state": [[72, "module-curobo.types.state"]], "detach() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.detach"]], "from_list() (curobo.types.state.jointstate static method)": [[72, "curobo.types.state.JointState.from_list"]], "from_numpy() (curobo.types.state.jointstate static method)": [[72, "curobo.types.state.JointState.from_numpy"]], "from_position() (curobo.types.state.jointstate static method)": [[72, "curobo.types.state.JointState.from_position"]], "from_state_tensor() (curobo.types.state.jointstate static method)": [[72, "curobo.types.state.JointState.from_state_tensor"]], "get_augmented_joint_state() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.get_augmented_joint_state"]], "get_ordered_joint_state() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.get_ordered_joint_state"]], "get_state_tensor() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.get_state_tensor"]], "get_state_tensor() (curobo.types.state.state method)": [[72, "curobo.types.state.State.get_state_tensor"]], "inplace_reindex() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.inplace_reindex"]], "jerk (curobo.types.state.filtercoeff attribute)": [[72, "curobo.types.state.FilterCoeff.jerk"]], "jerk (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.jerk"]], "joint_names (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.joint_names"]], "position (curobo.types.state.filtercoeff attribute)": [[72, "curobo.types.state.FilterCoeff.position"]], "position (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.position"]], "repeat_seeds() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.repeat_seeds"]], "scale() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.scale"]], "shape (curobo.types.state.jointstate property)": [[72, "curobo.types.state.JointState.shape"]], "squeeze() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.squeeze"]], "stack() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.stack"]], "tensor_args (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.tensor_args"]], "to() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.to"]], "to() (curobo.types.state.state method)": [[72, "curobo.types.state.State.to"]], "trim_trajectory() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.trim_trajectory"]], "unsqueeze() (curobo.types.state.jointstate method)": [[72, "curobo.types.state.JointState.unsqueeze"]], "velocity (curobo.types.state.filtercoeff attribute)": [[72, "curobo.types.state.FilterCoeff.velocity"]], "velocity (curobo.types.state.jointstate attribute)": [[72, "curobo.types.state.JointState.velocity"]], "zeros() (curobo.types.state.jointstate static method)": [[72, "curobo.types.state.JointState.zeros"]], "curobo.types.tensor": [[73, "module-curobo.types.tensor"]], "curobo.util": [[74, "module-curobo.util"]], "curobo.util.error_metrics": [[75, "module-curobo.util.error_metrics"]], "rotation_error_matrix() (in module curobo.util.error_metrics)": [[75, "curobo.util.error_metrics.rotation_error_matrix"]], "rotation_error_quaternion() (in module curobo.util.error_metrics)": [[75, "curobo.util.error_metrics.rotation_error_quaternion"]], "curobo.util.helpers": [[76, "module-curobo.util.helpers"]], "default_to_regular() (in module curobo.util.helpers)": [[76, "curobo.util.helpers.default_to_regular"]], "list_idx_if_not_none() (in module curobo.util.helpers)": [[76, "curobo.util.helpers.list_idx_if_not_none"]], "curobo.util.logger": [[77, "module-curobo.util.logger"]], "log_error() (in module curobo.util.logger)": [[77, "curobo.util.logger.log_error"]], "log_info() (in module curobo.util.logger)": [[77, "curobo.util.logger.log_info"]], "log_warn() (in module curobo.util.logger)": [[77, "curobo.util.logger.log_warn"]], "setup_curobo_logger() (in module curobo.util.logger)": [[77, "curobo.util.logger.setup_curobo_logger"]], "basesamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.BaseSampleLib"]], "haltongenerator (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.HaltonGenerator"]], "haltonsamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.HaltonSampleLib"]], "knotsamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.KnotSampleLib"]], "randomsamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.RandomSampleLib"]], "sampleconfig (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.SampleConfig"]], "samplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.SampleLib"]], "sinesamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.SineSampleLib"]], "stompsamplelib (class in curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.StompSampleLib"]], "bspline() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.bspline"]], "cov_mode (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.cov_mode"]], "covariance_matrix (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.covariance_matrix"]], "curobo.util.sample_lib": [[78, "module-curobo.util.sample_lib"]], "d_action (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.d_action"]], "degree (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.degree"]], "fast_forward() (curobo.util.sample_lib.haltongenerator method)": [[78, "curobo.util.sample_lib.HaltonGenerator.fast_forward"]], "filter_coeffs (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.filter_coeffs"]], "filter_samples() (curobo.util.sample_lib.basesamplelib method)": [[78, "curobo.util.sample_lib.BaseSampleLib.filter_samples"]], "filter_smooth() (curobo.util.sample_lib.basesamplelib method)": [[78, "curobo.util.sample_lib.BaseSampleLib.filter_smooth"]], "fixed_samples (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.fixed_samples"]], "generate_gaussian_halton_samples() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_gaussian_halton_samples"]], "generate_gaussian_sobol_samples() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_gaussian_sobol_samples"]], "generate_halton_samples() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_halton_samples"]], "generate_noise() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_noise"]], "generate_noise_np() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_noise_np"]], "generate_prime_numbers() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_prime_numbers"]], "generate_sine_wave() (curobo.util.sample_lib.sinesamplelib method)": [[78, "curobo.util.sample_lib.SineSampleLib.generate_sine_wave"]], "generate_van_der_corput_sample() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_van_der_corput_sample"]], "generate_van_der_corput_samples_batch() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.generate_van_der_corput_samples_batch"]], "get_gaussian_samples() (curobo.util.sample_lib.haltongenerator method)": [[78, "curobo.util.sample_lib.HaltonGenerator.get_gaussian_samples"]], "get_ranged_halton_samples() (in module curobo.util.sample_lib)": [[78, "curobo.util.sample_lib.get_ranged_halton_samples"]], "get_samples() (curobo.util.sample_lib.basesamplelib method)": [[78, "curobo.util.sample_lib.BaseSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.haltongenerator method)": [[78, "curobo.util.sample_lib.HaltonGenerator.get_samples"]], "get_samples() (curobo.util.sample_lib.haltonsamplelib method)": [[78, "curobo.util.sample_lib.HaltonSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.knotsamplelib method)": [[78, "curobo.util.sample_lib.KnotSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.randomsamplelib method)": [[78, "curobo.util.sample_lib.RandomSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.samplelib method)": [[78, "curobo.util.sample_lib.SampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.sinesamplelib method)": [[78, "curobo.util.sample_lib.SineSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.stompsamplelib method)": [[78, "curobo.util.sample_lib.StompSampleLib.get_samples"]], "horizon (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.horizon"]], "n_knots (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.n_knots"]], "reset() (curobo.util.sample_lib.haltongenerator method)": [[78, "curobo.util.sample_lib.HaltonGenerator.reset"]], "sample_method (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.sample_method"]], "sample_ratio (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.sample_ratio"]], "scale_tril (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.scale_tril"]], "seed (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.seed"]], "sine_period (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.sine_period"]], "tensor_args (curobo.util.sample_lib.sampleconfig attribute)": [[78, "curobo.util.sample_lib.SampleConfig.tensor_args"]], "filterconfig (class in curobo.util.state_filter)": [[79, "curobo.util.state_filter.FilterConfig"]], "jointstatefilter (class in curobo.util.state_filter)": [[79, "curobo.util.state_filter.JointStateFilter"]], "control_space (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.control_space"]], "curobo.util.state_filter": [[79, "module-curobo.util.state_filter"]], "dt (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.dt"]], "enable (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.enable"]], "filter_coeff (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.filter_coeff"]], "filter_joint_state() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.filter_joint_state"]], "from_dict() (curobo.util.state_filter.filterconfig static method)": [[79, "curobo.util.state_filter.FilterConfig.from_dict"]], "integrate_acc() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.integrate_acc"]], "integrate_jerk() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.integrate_jerk"]], "integrate_pos() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.integrate_pos"]], "integrate_vel() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.integrate_vel"]], "reset() (curobo.util.state_filter.jointstatefilter method)": [[79, "curobo.util.state_filter.JointStateFilter.reset"]], "teleport_mode (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.teleport_mode"]], "tensor_args (curobo.util.state_filter.filterconfig attribute)": [[79, "curobo.util.state_filter.FilterConfig.tensor_args"]], "check_tensor_shapes() (in module curobo.util.tensor_util)": [[80, "curobo.util.tensor_util.check_tensor_shapes"]], "copy_if_not_none() (in module curobo.util.tensor_util)": [[80, "curobo.util.tensor_util.copy_if_not_none"]], "copy_tensor() (in module curobo.util.tensor_util)": [[80, "curobo.util.tensor_util.copy_tensor"]], "curobo.util.tensor_util": [[80, "module-curobo.util.tensor_util"]], "tensor_repeat_seeds() (in module curobo.util.tensor_util)": [[80, "curobo.util.tensor_util.tensor_repeat_seeds"]], "curobo.util.torch_utils": [[81, "module-curobo.util.torch_utils"]], "find_first_idx() (in module curobo.util.torch_utils)": [[81, "curobo.util.torch_utils.find_first_idx"]], "find_last_idx() (in module curobo.util.torch_utils)": [[81, "curobo.util.torch_utils.find_last_idx"]], "is_cuda_graph_available() (in module curobo.util.torch_utils)": [[81, "curobo.util.torch_utils.is_cuda_graph_available"]], "cubic (curobo.util.trajectory.interpolatetype attribute)": [[82, "curobo.util.trajectory.InterpolateType.CUBIC"]], "interpolatetype (class in curobo.util.trajectory)": [[82, "curobo.util.trajectory.InterpolateType"]], "kunz_stilman_optimal (curobo.util.trajectory.interpolatetype attribute)": [[82, "curobo.util.trajectory.InterpolateType.KUNZ_STILMAN_OPTIMAL"]], "linear (curobo.util.trajectory.interpolatetype attribute)": [[82, "curobo.util.trajectory.InterpolateType.LINEAR"]], "linear_cuda (curobo.util.trajectory.interpolatetype attribute)": [[82, "curobo.util.trajectory.InterpolateType.LINEAR_CUDA"]], "quintic (curobo.util.trajectory.interpolatetype attribute)": [[82, "curobo.util.trajectory.InterpolateType.QUINTIC"]], "curobo.util.trajectory": [[82, "module-curobo.util.trajectory"]], "get_batch_interpolated_trajectory() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_batch_interpolated_trajectory"]], "get_cpu_kunz_stilman_interpolation() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_cpu_kunz_stilman_interpolation"]], "get_cpu_linear_interpolation() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_cpu_linear_interpolation"]], "get_interpolated_trajectory() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_interpolated_trajectory"]], "get_linear_traj() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_linear_traj"]], "get_smooth_trajectory() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_smooth_trajectory"]], "get_spline_interpolated_trajectory() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.get_spline_interpolated_trajectory"]], "linear_smooth() (in module curobo.util.trajectory)": [[82, "curobo.util.trajectory.linear_smooth"]], "usdhelper (class in curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.UsdHelper"]], "add_cuboid_to_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_cuboid_to_stage"]], "add_cylinder_to_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_cylinder_to_stage"]], "add_material() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_material"]], "add_mesh_to_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_mesh_to_stage"]], "add_sphere_to_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_sphere_to_stage"]], "add_subroot() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_subroot"]], "add_world_to_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.add_world_to_stage"]], "create_animation() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.create_animation"]], "create_grid_usd() (curobo.util.usd_helper.usdhelper static method)": [[83, "curobo.util.usd_helper.UsdHelper.create_grid_usd"]], "create_linkpose_robot_animation() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.create_linkpose_robot_animation"]], "create_obstacle_animation() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.create_obstacle_animation"]], "create_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.create_stage"]], "create_stage() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.create_stage"]], "curobo.util.usd_helper": [[83, "module-curobo.util.usd_helper"]], "get_capsule_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_capsule_attrs"]], "get_cube_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_cube_attrs"]], "get_cylinder_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_cylinder_attrs"]], "get_mesh_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_mesh_attrs"]], "get_obstacle_from_prim() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.get_obstacle_from_prim"]], "get_obstacles_from_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.get_obstacles_from_stage"]], "get_pose() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.get_pose"]], "get_position_quat() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_position_quat"]], "get_prim_from_obstacle() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.get_prim_from_obstacle"]], "get_prim_world_pose() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_prim_world_pose"]], "get_robot_prims() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.get_robot_prims"]], "get_sphere_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_sphere_attrs"]], "get_transform() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.get_transform"]], "load_robot() (curobo.util.usd_helper.usdhelper static method)": [[83, "curobo.util.usd_helper.UsdHelper.load_robot"]], "load_robot_usd() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.load_robot_usd"]], "load_stage() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.load_stage"]], "load_stage_from_file() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.load_stage_from_file"]], "save() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.save"]], "set_cylinder_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_cylinder_attrs"]], "set_geom_cube_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_geom_cube_attrs"]], "set_geom_cylinder_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_geom_cylinder_attrs"]], "set_geom_mesh_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_geom_mesh_attrs"]], "set_geom_sphere_attrs() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_geom_sphere_attrs"]], "set_prim_transform() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_prim_transform"]], "set_prim_translate() (in module curobo.util.usd_helper)": [[83, "curobo.util.usd_helper.set_prim_translate"]], "update_robot_joint_state() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.update_robot_joint_state"]], "write_motion_gen_log() (curobo.util.usd_helper.usdhelper static method)": [[83, "curobo.util.usd_helper.UsdHelper.write_motion_gen_log"]], "write_stage_to_file() (curobo.util.usd_helper.usdhelper method)": [[83, "curobo.util.usd_helper.UsdHelper.write_stage_to_file"]], "write_trajectory_animation() (curobo.util.usd_helper.usdhelper static method)": [[83, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation"]], "write_trajectory_animation_with_robot_usd() (curobo.util.usd_helper.usdhelper static method)": [[83, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[84, "module-curobo.util.warp"]], "init_warp() (in module curobo.util.warp)": [[84, "curobo.util.warp.init_warp"]], "curobo.util.warp_interpolation": [[85, "module-curobo.util.warp_interpolation"]], "get_cuda_linear_interpolation() (in module curobo.util.warp_interpolation)": [[85, "curobo.util.warp_interpolation.get_cuda_linear_interpolation"]], "add_cpp_path() (in module curobo.util_file)": [[86, "curobo.util_file.add_cpp_path"]], "copy_file_to_path() (in module curobo.util_file)": [[86, "curobo.util_file.copy_file_to_path"]], "curobo.util_file": [[86, "module-curobo.util_file"]], "file_exists() (in module curobo.util_file)": [[86, "curobo.util_file.file_exists"]], "get_assets_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_assets_path"]], "get_configs_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_configs_path"]], "get_content_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_content_path"]], "get_cpp_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_cpp_path"]], "get_debug_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_debug_path"]], "get_filename() (in module curobo.util_file)": [[86, "curobo.util_file.get_filename"]], "get_files_from_dir() (in module curobo.util_file)": [[86, "curobo.util_file.get_files_from_dir"]], "get_module_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_module_path"]], "get_motion_gen_robot_list() (in module curobo.util_file)": [[86, "curobo.util_file.get_motion_gen_robot_list"]], "get_multi_arm_robot_list() (in module curobo.util_file)": [[86, "curobo.util_file.get_multi_arm_robot_list"]], "get_path_of_dir() (in module curobo.util_file)": [[86, "curobo.util_file.get_path_of_dir"]], "get_robot_configs_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_robot_configs_path"]], "get_robot_list() (in module curobo.util_file)": [[86, "curobo.util_file.get_robot_list"]], "get_robot_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_robot_path"]], "get_root_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_root_path"]], "get_task_configs_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_task_configs_path"]], "get_weights_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_weights_path"]], "get_world_configs_path() (in module curobo.util_file)": [[86, "curobo.util_file.get_world_configs_path"]], "join_path() (in module curobo.util_file)": [[86, "curobo.util_file.join_path"]], "load_yaml() (in module curobo.util_file)": [[86, "curobo.util_file.load_yaml"]], "write_yaml() (in module curobo.util_file)": [[86, "curobo.util_file.write_yaml"]], "curobo.wrap": [[87, "module-curobo.wrap"]], "curobo.wrap.model": [[88, "module-curobo.wrap.model"]], "curoborobotworld (class in curobo.wrap.model.curobo_robot_world)": [[89, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld"]], "curoborobotworldconfig (class in curobo.wrap.model.curobo_robot_world)": [[89, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig"]], "curobo.wrap.model.curobo_robot_world": [[89, "module-curobo.wrap.model.curobo_robot_world"]], "robotworld (class in curobo.wrap.model.robot_world)": [[90, "curobo.wrap.model.robot_world.RobotWorld"]], "robotworldconfig (class in curobo.wrap.model.robot_world)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig"]], "bound_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_cost"]], "bound_scale (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_scale"]], "collision_constraint (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_constraint"]], "collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_cost"]], "contact_distance (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.contact_distance"]], "curobo.wrap.model.robot_world": [[90, "module-curobo.wrap.model.robot_world"]], "get_bound() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_bound"]], "get_collision_constraint() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_collision_constraint"]], "get_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_collision_distance"]], "get_collision_vector() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_collision_vector"]], "get_kinematics() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_kinematics"]], "get_self_collision() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision"]], "get_self_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision_distance"]], "get_world_self_collision_distance_from_joint_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joint_trajectory"]], "get_world_self_collision_distance_from_joints() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joints"]], "kinematics (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.kinematics"]], "load_from_config() (curobo.wrap.model.robot_world.robotworldconfig static method)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.load_from_config"]], "pose_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.pose_cost"]], "pose_distance() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.pose_distance"]], "rejection_ratio (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.rejection_ratio"]], "sample() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.sample"]], "sample_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.sample_trajectory"]], "sampler (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.sampler"]], "self_collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.self_collision_cost"]], "tensor_args (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.tensor_args"]], "update_world() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.update_world"]], "validate() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.validate"]], "validate_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[90, "curobo.wrap.model.robot_world.RobotWorld.validate_trajectory"]], "world_model (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[90, "curobo.wrap.model.robot_world.RobotWorldConfig.world_model"]], "curobo.wrap.reacher": [[91, "module-curobo.wrap.reacher"]], "trajevaluator (class in curobo.wrap.reacher.evaluator)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluator"]], "trajevaluatorconfig (class in curobo.wrap.reacher.evaluator)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig"]], "calculate_dt() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluator.calculate_dt"]], "cost_weight (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.cost_weight"]], "curobo.wrap.reacher.evaluator": [[92, "module-curobo.wrap.reacher.evaluator"]], "evaluate() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate"]], "evaluate_from_position() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_from_position"]], "evaluate_interpolated_smootheness() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_interpolated_smootheness"]], "max_acc (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_acc"]], "max_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_dt"]], "max_jerk (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_jerk"]], "min_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[92, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.min_dt"]], "ikresult (class in curobo.wrap.reacher.ik_solver)": [[93, "curobo.wrap.reacher.ik_solver.IKResult"]], "iksolver (class in curobo.wrap.reacher.ik_solver)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver"]], "iksolverconfig (class in curobo.wrap.reacher.ik_solver)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig"]], "attach_object_to_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.attach_object_to_robot"]], "batch_env_solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.batch_env_solve"]], "check_constraints() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.check_constraints"]], "curobo.wrap.reacher.ik_solver": [[93, "module-curobo.wrap.reacher.ik_solver"]], "debug_info (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.detach_object_from_robot"]], "error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.error"]], "fk() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.fk"]], "generate_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.generate_seed"]], "get_all_kinematics_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_rollout_instances"]], "get_batch_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.get_batch_unique_solution"]], "get_result() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_result"]], "get_retract_config() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_retract_config"]], "get_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_seed"]], "get_success() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.get_success"]], "get_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.get_unique_solution"]], "goal_pose (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.goal_pose"]], "ik_nn_seeder (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.ik_nn_seeder"]], "js_solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.js_solution"]], "kinematics (curobo.wrap.reacher.ik_solver.iksolver property)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.ik_solver.iksolverconfig static method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.load_from_robot_config"]], "num_seeds (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.num_seeds"]], "position_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.position_error"]], "position_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.position_threshold"]], "reset_cuda_graph() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.reset_seed"]], "robot_config (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rotation_threshold"]], "sample_configs() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.sample_configs"]], "sample_rejection_ratio (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.sample_rejection_ratio"]], "seed (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.seed"]], "solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.solution"]], "solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve"]], "solve_any() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.solve_single"]], "solve_time (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.solve_time"]], "solver (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.solver"]], "success (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKResult.success"]], "tensor_args (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.tensor_args"]], "update_goal_buffer() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.update_goal_buffer"]], "update_world() (curobo.wrap.reacher.ik_solver.iksolver method)": [[93, "curobo.wrap.reacher.ik_solver.IKSolver.update_world"]], "world_coll_checker (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[93, "curobo.wrap.reacher.ik_solver.IKSolverConfig.world_coll_checker"]], "motiongen (class in curobo.wrap.reacher.motion_gen)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen"]], "motiongenconfig (class in curobo.wrap.reacher.motion_gen)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig"]], "motiongenplanconfig (class in curobo.wrap.reacher.motion_gen)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig"]], "motiongenresult (class in curobo.wrap.reacher.motion_gen)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult"]], "add_camera_frame() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.add_camera_frame"]], "add_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.add_running_pose_constraint"]], "attach_bounding_box_from_blox_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.attach_bounding_box_from_blox_to_robot"]], "attach_new_object_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.attach_new_object_to_robot"]], "attach_objects_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.attach_objects_to_robot"]], "attach_spheres_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.attach_spheres_to_robot"]], "attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.attempts"]], "batch_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_ik_seeds"]], "batch_plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.batch_plan"]], "batch_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_trajopt_seeds"]], "check_constraints() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.check_constraints"]], "clear_world_cache() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.clear_world_cache"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenplanconfig method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.clone"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.clone"]], "compute_kinematics() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.compute_kinematics"]], "copy_idx() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.copy_idx"]], "cspace_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.cspace_error"]], "curobo.wrap.reacher.motion_gen": [[94, "module-curobo.wrap.reacher.motion_gen"]], "debug_info (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.detach_object_from_robot"]], "detach_spheres_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.detach_spheres_from_robot"]], "disable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.disable_graph_attempt"]], "dof (curobo.wrap.reacher.motion_gen.motiongen property)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.dof"]], "enable_finetune_trajopt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_finetune_trajopt"]], "enable_graph (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph"]], "enable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph_attempt"]], "enable_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_opt"]], "fail_on_invalid_query (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.fail_on_invalid_query"]], "finetune_dt_scale (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_dt_scale"]], "finetune_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.finetune_time"]], "finetune_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_trajopt_solver"]], "get_active_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.get_active_js"]], "get_all_kinematics_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_rollout_instances"]], "get_full_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.get_full_js"]], "get_interpolated_plan() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_interpolated_plan"]], "get_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_paths"]], "get_retract_config() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.get_retract_config"]], "get_successful_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_successful_paths"]], "graph_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_plan"]], "graph_planner (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_planner"]], "graph_search() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.graph_search"]], "graph_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_seeds"]], "graph_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_time"]], "graph_trajopt_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_trajopt_iters"]], "ik_fail_return (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.ik_fail_return"]], "ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_seeds"]], "ik_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_solver"]], "ik_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.ik_time"]], "interpolated_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolated_plan"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_dt"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_type"]], "js_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.js_trajopt_solver"]], "kinematics (curobo.wrap.reacher.motion_gen.motiongen property)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.motion_gen.motiongenconfig static method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.load_from_robot_config"]], "max_attempts (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.max_attempts"]], "motion_time (curobo.wrap.reacher.motion_gen.motiongenresult property)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.motion_time"]], "need_graph_success (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.need_graph_success"]], "noisy_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.noisy_trajopt_seeds"]], "num_graph_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_ik_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_trajopt_seeds"]], "optimized_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_dt"]], "optimized_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_plan"]], "partial_ik_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.partial_ik_iters"]], "partial_ik_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.partial_ik_opt"]], "path_buffer_last_tstep (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.path_buffer_last_tstep"]], "plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan"]], "plan_batch() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch"]], "plan_batch_env() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env"]], "plan_batch_env_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env_goalset"]], "plan_batch_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_goalset"]], "plan_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_goalset"]], "plan_single() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single"]], "plan_single_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single_js"]], "position_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.position_error"]], "process_camera_frames() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.process_camera_frames"]], "remove_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.remove_running_pose_constraint"]], "reset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.reset"]], "reset_seed() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.reset_seed"]], "robot_cfg (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.robot_cfg"]], "rotation_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.rotation_error"]], "run_finetune_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.run_finetune_trajopt"]], "solve_ik() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.solve_ik"]], "solve_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.solve_time"]], "solve_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.solve_trajopt"]], "status (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.status"]], "store_debug_in_result (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.success"]], "success_ratio (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.success_ratio"]], "tensor_args (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.tensor_args"]], "timeout (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.timeout"]], "total_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.total_time"]], "trajopt_attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_attempts"]], "trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_seeds"]], "trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_solver"]], "trajopt_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_time"]], "update_batch_size() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.update_batch_size"]], "update_interpolation_type() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.update_interpolation_type"]], "update_locked_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.update_locked_state"]], "update_world() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.update_world"]], "use_nn_ik_seed (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_nn_ik_seed"]], "used_graph (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.used_graph"]], "valid_query (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenResult.valid_query"]], "warmup() (curobo.wrap.reacher.motion_gen.motiongen method)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.warmup"]], "world_coll_checker (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[94, "curobo.wrap.reacher.motion_gen.MotionGenConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.motion_gen.motiongen property)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.world_collision"]], "world_model (curobo.wrap.reacher.motion_gen.motiongen property)": [[94, "curobo.wrap.reacher.motion_gen.MotionGen.world_model"]], "mpcsolver (class in curobo.wrap.reacher.mpc)": [[95, "curobo.wrap.reacher.mpc.MpcSolver"]], "mpcsolverconfig (class in curobo.wrap.reacher.mpc)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig"]], "curobo.wrap.reacher.mpc": [[95, "module-curobo.wrap.reacher.mpc"]], "enable_cspace_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.enable_cspace_cost"]], "enable_pose_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.enable_pose_cost"]], "fn() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.fn"]], "get_active_js() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.get_active_js"]], "get_visual_rollouts() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.get_visual_rollouts"]], "joint_names (curobo.wrap.reacher.mpc.mpcsolver property)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.joint_names"]], "kinematics (curobo.wrap.reacher.mpc.mpcsolver property)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.mpc.mpcsolverconfig static method)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig.load_from_robot_config"]], "reset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.reset"]], "reset_cuda_graph() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.reset_cuda_graph"]], "rollout_fn (curobo.wrap.reacher.mpc.mpcsolver property)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.rollout_fn"]], "setup_solve_batch() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch"]], "setup_solve_batch_env() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env"]], "setup_solve_batch_env_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env_goalset"]], "setup_solve_batch_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_goalset"]], "setup_solve_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_goalset"]], "setup_solve_single() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_single"]], "solver (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig.solver"]], "step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.step"]], "step_once() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.step_once"]], "tensor_args (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig.tensor_args"]], "update_goal() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.update_goal_buffer"]], "update_world() (curobo.wrap.reacher.mpc.mpcsolver method)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.update_world"]], "use_cuda_graph_full_step (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig.use_cuda_graph_full_step"]], "world_coll_checker (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[95, "curobo.wrap.reacher.mpc.MpcSolverConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.mpc.mpcsolver property)": [[95, "curobo.wrap.reacher.mpc.MpcSolver.world_collision"]], "trajoptsolver (class in curobo.wrap.reacher.trajopt)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver"]], "trajoptsolverconfig (class in curobo.wrap.reacher.trajopt)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig"]], "trajresult (class in curobo.wrap.reacher.trajopt)": [[96, "curobo.wrap.reacher.trajopt.TrajResult"]], "attach_object_to_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.attach_object_to_robot"]], "batch_solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.batch_solve"]], "bias_node (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.bias_node"]], "calculate_trajectory_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.calculate_trajectory_dt"]], "compute_metrics() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.compute_metrics"]], "cspace_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.cspace_error"]], "cspace_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.cspace_threshold"]], "curobo.wrap.reacher.trajopt": [[96, "module-curobo.wrap.reacher.trajopt"]], "debug_info (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.detach_object_from_robot"]], "evaluate_interpolated_trajectory (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.evaluate_interpolated_trajectory"]], "fk() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.fk"]], "get_all_kinematics_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_rollout_instances"]], "get_bias_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_bias_seed"]], "get_full_js() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_full_js"]], "get_interpolated_trajectory() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_interpolated_trajectory"]], "get_linear_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_linear_seed"]], "get_seed_set() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seed_set"]], "get_seeds() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seeds"]], "get_start_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_start_seed"]], "goal (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.goal"]], "interpolate_rollout (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolate_rollout"]], "interpolated_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.interpolated_solution"]], "interpolation_dt (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_type"]], "kinematics (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.trajopt.trajoptsolverconfig static method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.load_from_robot_config"]], "metrics (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.metrics"]], "num_seeds (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.num_seeds"]], "optimized_dt (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.optimized_dt"]], "path_buffer_last_tstep (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.path_buffer_last_tstep"]], "position_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.position_error"]], "position_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.position_threshold"]], "raw_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.raw_solution"]], "reset_cuda_graph() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_seed"]], "retract_config (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.retract_config"]], "robot_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rotation_threshold"]], "seed (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.seed"]], "seed_ratio (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.seed_ratio"]], "smooth_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.smooth_error"]], "smooth_label (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.smooth_label"]], "solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.solution"]], "solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve"]], "solve_any() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_single"]], "solve_time (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.solve_time"]], "solver (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.solver"]], "solver_dt (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt"]], "store_debug_in_result (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.trajopt.trajresult attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajResult.success"]], "sync_cuda_time (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.sync_cuda_time"]], "tensor_args (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.tensor_args"]], "traj_evaluator (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator"]], "traj_evaluator_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator_config"]], "traj_tsteps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_tsteps"]], "trim_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.trim_steps"]], "update_goal_buffer() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_goal_buffer"]], "update_solver_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_solver_dt"]], "use_cspace_seed (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cspace_seed"]], "use_cuda_graph_metrics (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph_metrics"]], "world_coll_checker (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[96, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.world_coll_checker"]], "batch (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.BATCH"]], "batch_env (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV"]], "batch_env_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV_GOALSET"]], "batch_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_GOALSET"]], "goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.GOALSET"]], "motiongensolverstate (class in curobo.wrap.reacher.types)": [[97, "curobo.wrap.reacher.types.MotionGenSolverState"]], "reachersolvestate (class in curobo.wrap.reacher.types)": [[97, "curobo.wrap.reacher.types.ReacherSolveState"]], "reachersolvetype (class in curobo.wrap.reacher.types)": [[97, "curobo.wrap.reacher.types.ReacherSolveType"]], "single (curobo.wrap.reacher.types.reachersolvetype attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveType.SINGLE"]], "batch_env (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.batch_env"]], "batch_mode (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.batch_mode"]], "batch_retract (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.batch_retract"]], "batch_size (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.batch_size"]], "create_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.create_goal_buffer"]], "curobo.wrap.reacher.types": [[97, "module-curobo.wrap.reacher.types"]], "get_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.get_batch_size"]], "get_ik_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.get_ik_batch_size"]], "ik_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[97, "curobo.wrap.reacher.types.MotionGenSolverState.ik_solve_state"]], "n_envs (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.n_envs"]], "n_goalset (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.n_goalset"]], "num_graph_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.num_ik_seeds"]], "num_mpc_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.num_mpc_seeds"]], "num_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.num_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.num_trajopt_seeds"]], "solve_type (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[97, "curobo.wrap.reacher.types.MotionGenSolverState.solve_type"]], "solve_type (curobo.wrap.reacher.types.reachersolvestate attribute)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.solve_type"]], "trajopt_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[97, "curobo.wrap.reacher.types.MotionGenSolverState.trajopt_solve_state"]], "update_goal() (curobo.wrap.reacher.types.reachersolvestate method)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[97, "curobo.wrap.reacher.types.ReacherSolveState.update_goal_buffer"]], "wrapbase (class in curobo.wrap.wrap_base)": [[98, "curobo.wrap.wrap_base.WrapBase"]], "wrapconfig (class in curobo.wrap.wrap_base)": [[98, "curobo.wrap.wrap_base.WrapConfig"]], "wrapresult (class in curobo.wrap.wrap_base)": [[98, "curobo.wrap.wrap_base.WrapResult"]], "action (curobo.wrap.wrap_base.wrapresult attribute)": [[98, "curobo.wrap.wrap_base.WrapResult.action"]], "clone() (curobo.wrap.wrap_base.wrapresult method)": [[98, "curobo.wrap.wrap_base.WrapResult.clone"]], "compute_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[98, "curobo.wrap.wrap_base.WrapConfig.compute_metrics"]], "curobo.wrap.wrap_base": [[98, "module-curobo.wrap.wrap_base"]], "debug (curobo.wrap.wrap_base.wrapresult attribute)": [[98, "curobo.wrap.wrap_base.WrapResult.debug"]], "get_all_rollout_instances() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.get_all_rollout_instances"]], "get_debug_cost() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.get_debug_cost"]], "get_debug_data() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.get_debug_data"]], "get_init_act() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.get_init_act"]], "get_metrics() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.get_metrics"]], "joint_names (curobo.wrap.wrap_base.wrapbase property)": [[98, "curobo.wrap.wrap_base.WrapBase.joint_names"]], "js_action (curobo.wrap.wrap_base.wrapresult attribute)": [[98, "curobo.wrap.wrap_base.WrapResult.js_action"]], "metrics (curobo.wrap.wrap_base.wrapresult attribute)": [[98, "curobo.wrap.wrap_base.WrapResult.metrics"]], "newton_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[98, "curobo.wrap.wrap_base.WrapBase.newton_optimizer"]], "optimize() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.optimize"]], "optimizers (curobo.wrap.wrap_base.wrapconfig attribute)": [[98, "curobo.wrap.wrap_base.WrapConfig.optimizers"]], "particle_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[98, "curobo.wrap.wrap_base.WrapBase.particle_optimizer"]], "reset() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.reset"]], "reset_cuda_graph() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.reset_cuda_graph"]], "reset_seed() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.reset_seed"]], "rollout_fn (curobo.wrap.wrap_base.wrapbase property)": [[98, "curobo.wrap.wrap_base.WrapBase.rollout_fn"]], "safety_rollout (curobo.wrap.wrap_base.wrapconfig attribute)": [[98, "curobo.wrap.wrap_base.WrapConfig.safety_rollout"]], "solve() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.solve"]], "solve_time (curobo.wrap.wrap_base.wrapresult attribute)": [[98, "curobo.wrap.wrap_base.WrapResult.solve_time"]], "sync_cuda_time (curobo.wrap.wrap_base.wrapconfig attribute)": [[98, "curobo.wrap.wrap_base.WrapConfig.sync_cuda_time"]], "update_nenvs() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.update_nenvs"]], "update_params() (curobo.wrap.wrap_base.wrapbase method)": [[98, "curobo.wrap.wrap_base.WrapBase.update_params"]], "use_cuda_graph_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[98, "curobo.wrap.wrap_base.WrapConfig.use_cuda_graph_metrics"]], "wrapmpc (class in curobo.wrap.wrap_mpc)": [[99, "curobo.wrap.wrap_mpc.WrapMpc"]], "curobo.wrap.wrap_mpc": [[99, "module-curobo.wrap.wrap_mpc"]], "get_rollouts() (curobo.wrap.wrap_mpc.wrapmpc method)": [[99, "curobo.wrap.wrap_mpc.WrapMpc.get_rollouts"]], "reset() (curobo.wrap.wrap_mpc.wrapmpc method)": [[99, "curobo.wrap.wrap_mpc.WrapMpc.reset"]], "solve() (curobo.wrap.wrap_mpc.wrapmpc method)": [[99, "curobo.wrap.wrap_mpc.WrapMpc.solve"]], "update_init_seed() (curobo.wrap.wrap_mpc.wrapmpc method)": [[99, "curobo.wrap.wrap_mpc.WrapMpc.update_init_seed"]]}})
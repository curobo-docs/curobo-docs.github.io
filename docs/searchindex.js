Search.setIndex({"docnames": ["_api/curobo", "_api/curobo.cuda_robot_model", "_api/curobo.cuda_robot_model.cuda_robot_generator", "_api/curobo.cuda_robot_model.cuda_robot_model", "_api/curobo.cuda_robot_model.kinematics_parser", "_api/curobo.cuda_robot_model.types", "_api/curobo.cuda_robot_model.urdf_kinematics_parser", "_api/curobo.cuda_robot_model.usd_kinematics_parser", "_api/curobo.curobolib", "_api/curobo.curobolib.geom", "_api/curobo.curobolib.geom_cu", "_api/curobo.curobolib.kinematics", "_api/curobo.curobolib.kinematics_fused_cu", "_api/curobo.curobolib.lbfgs_step_cu", "_api/curobo.curobolib.line_search_cu", "_api/curobo.curobolib.ls", "_api/curobo.curobolib.opt", "_api/curobo.curobolib.tensor_step", "_api/curobo.curobolib.tensor_step_cu", "_api/curobo.curobolib.util_file", "_api/curobo.geom", "_api/curobo.geom.cv", "_api/curobo.geom.sdf", "_api/curobo.geom.sdf.sdf_grid", "_api/curobo.geom.sdf.utils", "_api/curobo.geom.sdf.warp_primitives", "_api/curobo.geom.sdf.world", "_api/curobo.geom.sdf.world_blox", "_api/curobo.geom.sdf.world_mesh", "_api/curobo.geom.sdf.world_voxel", "_api/curobo.geom.sphere_fit", "_api/curobo.geom.transform", "_api/curobo.geom.types", "_api/curobo.graph", "_api/curobo.graph.graph_base", "_api/curobo.graph.graph_nx", "_api/curobo.graph.prm", "_api/curobo.opt", "_api/curobo.opt.newton", "_api/curobo.opt.newton.lbfgs", "_api/curobo.opt.newton.newton_base", "_api/curobo.opt.opt_base", "_api/curobo.opt.particle", "_api/curobo.opt.particle.parallel_es", "_api/curobo.opt.particle.parallel_mppi", "_api/curobo.opt.particle.particle_opt_base", "_api/curobo.opt.particle.particle_opt_utils", "_api/curobo.rollout", "_api/curobo.rollout.arm_base", "_api/curobo.rollout.arm_reacher", "_api/curobo.rollout.cost", "_api/curobo.rollout.cost.bound_cost", "_api/curobo.rollout.cost.cost_base", "_api/curobo.rollout.cost.dist_cost", "_api/curobo.rollout.cost.manipulability_cost", "_api/curobo.rollout.cost.pose_cost", "_api/curobo.rollout.cost.primitive_collision_cost", "_api/curobo.rollout.cost.projected_dist_cost", "_api/curobo.rollout.cost.self_collision_cost", "_api/curobo.rollout.cost.stop_cost", "_api/curobo.rollout.cost.straight_line_cost", "_api/curobo.rollout.cost.zero_cost", "_api/curobo.rollout.dynamics_model", "_api/curobo.rollout.dynamics_model.integration_utils", "_api/curobo.rollout.dynamics_model.kinematic_model", "_api/curobo.rollout.dynamics_model.model_base", "_api/curobo.rollout.dynamics_model.tensor_step", "_api/curobo.rollout.rollout_base", "_api/curobo.types", "_api/curobo.types.base", "_api/curobo.types.camera", "_api/curobo.types.enum", "_api/curobo.types.math", "_api/curobo.types.robot", "_api/curobo.types.state", "_api/curobo.types.tensor", "_api/curobo.util", "_api/curobo.util.error_metrics", "_api/curobo.util.helpers", "_api/curobo.util.logger", "_api/curobo.util.metrics", "_api/curobo.util.sample_lib", "_api/curobo.util.state_filter", "_api/curobo.util.tensor_util", "_api/curobo.util.torch_utils", "_api/curobo.util.trajectory", "_api/curobo.util.usd_helper", "_api/curobo.util.warp", "_api/curobo.util.warp_interpolation", "_api/curobo.util_file", "_api/curobo.wrap", "_api/curobo.wrap.model", "_api/curobo.wrap.model.curobo_robot_world", "_api/curobo.wrap.model.robot_segmenter", "_api/curobo.wrap.model.robot_world", "_api/curobo.wrap.reacher", "_api/curobo.wrap.reacher.evaluator", "_api/curobo.wrap.reacher.ik_solver", "_api/curobo.wrap.reacher.motion_gen", "_api/curobo.wrap.reacher.mpc", "_api/curobo.wrap.reacher.trajopt", "_api/curobo.wrap.reacher.types", "_api/curobo.wrap.wrap_base", "_api/curobo.wrap.wrap_mpc", "_api/modules", "index", "news", "readme", "source/advanced_examples/1_batch_env", "source/advanced_examples/2_block_stacking_example", "source/advanced_examples/3_constrained_planning", "source/advanced_examples/4_robot_segmentation", "source/api/motion_generation", "source/api/reacher", "source/getting_started/1_install_instructions", "source/getting_started/1a_quick_overview", "source/getting_started/2a_python_examples", "source/getting_started/2b_isaacsim_examples", "source/getting_started/2c_world_collision", "source/getting_started/2d_nvblox_demo", "source/getting_started/2e_torch_layer_example", "source/getting_started/4_benchmarks", "source/getting_started/5_docker_development", "source/getting_started/6_known_issues", "source/getting_started/7_api", "source/notes/01_robot_list", "source/notes/02_numerical_optimization", "source/notes/04_cuda_kernels", "source/notes/05_usd_api", "source/notes/07_environment_variables", "source/research/research", "source/research/research_using_curobo", "source/snippets/citation", "source/snippets/research_list", "source/tutorials/1_robot_configuration"], "filenames": ["_api/curobo.rst", "_api/curobo.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.cuda_robot_generator.rst", "_api/curobo.cuda_robot_model.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.kinematics_parser.rst", "_api/curobo.cuda_robot_model.types.rst", "_api/curobo.cuda_robot_model.urdf_kinematics_parser.rst", "_api/curobo.cuda_robot_model.usd_kinematics_parser.rst", "_api/curobo.curobolib.rst", "_api/curobo.curobolib.geom.rst", "_api/curobo.curobolib.geom_cu.rst", "_api/curobo.curobolib.kinematics.rst", "_api/curobo.curobolib.kinematics_fused_cu.rst", "_api/curobo.curobolib.lbfgs_step_cu.rst", "_api/curobo.curobolib.line_search_cu.rst", "_api/curobo.curobolib.ls.rst", "_api/curobo.curobolib.opt.rst", "_api/curobo.curobolib.tensor_step.rst", "_api/curobo.curobolib.tensor_step_cu.rst", "_api/curobo.curobolib.util_file.rst", "_api/curobo.geom.rst", "_api/curobo.geom.cv.rst", "_api/curobo.geom.sdf.rst", "_api/curobo.geom.sdf.sdf_grid.rst", "_api/curobo.geom.sdf.utils.rst", "_api/curobo.geom.sdf.warp_primitives.rst", "_api/curobo.geom.sdf.world.rst", "_api/curobo.geom.sdf.world_blox.rst", "_api/curobo.geom.sdf.world_mesh.rst", "_api/curobo.geom.sdf.world_voxel.rst", "_api/curobo.geom.sphere_fit.rst", "_api/curobo.geom.transform.rst", "_api/curobo.geom.types.rst", "_api/curobo.graph.rst", "_api/curobo.graph.graph_base.rst", "_api/curobo.graph.graph_nx.rst", "_api/curobo.graph.prm.rst", "_api/curobo.opt.rst", "_api/curobo.opt.newton.rst", "_api/curobo.opt.newton.lbfgs.rst", "_api/curobo.opt.newton.newton_base.rst", "_api/curobo.opt.opt_base.rst", "_api/curobo.opt.particle.rst", "_api/curobo.opt.particle.parallel_es.rst", "_api/curobo.opt.particle.parallel_mppi.rst", "_api/curobo.opt.particle.particle_opt_base.rst", "_api/curobo.opt.particle.particle_opt_utils.rst", "_api/curobo.rollout.rst", "_api/curobo.rollout.arm_base.rst", "_api/curobo.rollout.arm_reacher.rst", "_api/curobo.rollout.cost.rst", "_api/curobo.rollout.cost.bound_cost.rst", "_api/curobo.rollout.cost.cost_base.rst", "_api/curobo.rollout.cost.dist_cost.rst", "_api/curobo.rollout.cost.manipulability_cost.rst", "_api/curobo.rollout.cost.pose_cost.rst", "_api/curobo.rollout.cost.primitive_collision_cost.rst", "_api/curobo.rollout.cost.projected_dist_cost.rst", "_api/curobo.rollout.cost.self_collision_cost.rst", "_api/curobo.rollout.cost.stop_cost.rst", "_api/curobo.rollout.cost.straight_line_cost.rst", "_api/curobo.rollout.cost.zero_cost.rst", "_api/curobo.rollout.dynamics_model.rst", "_api/curobo.rollout.dynamics_model.integration_utils.rst", "_api/curobo.rollout.dynamics_model.kinematic_model.rst", "_api/curobo.rollout.dynamics_model.model_base.rst", "_api/curobo.rollout.dynamics_model.tensor_step.rst", "_api/curobo.rollout.rollout_base.rst", "_api/curobo.types.rst", "_api/curobo.types.base.rst", "_api/curobo.types.camera.rst", "_api/curobo.types.enum.rst", "_api/curobo.types.math.rst", "_api/curobo.types.robot.rst", "_api/curobo.types.state.rst", "_api/curobo.types.tensor.rst", "_api/curobo.util.rst", "_api/curobo.util.error_metrics.rst", "_api/curobo.util.helpers.rst", "_api/curobo.util.logger.rst", "_api/curobo.util.metrics.rst", "_api/curobo.util.sample_lib.rst", "_api/curobo.util.state_filter.rst", "_api/curobo.util.tensor_util.rst", "_api/curobo.util.torch_utils.rst", "_api/curobo.util.trajectory.rst", "_api/curobo.util.usd_helper.rst", "_api/curobo.util.warp.rst", "_api/curobo.util.warp_interpolation.rst", "_api/curobo.util_file.rst", "_api/curobo.wrap.rst", "_api/curobo.wrap.model.rst", "_api/curobo.wrap.model.curobo_robot_world.rst", "_api/curobo.wrap.model.robot_segmenter.rst", "_api/curobo.wrap.model.robot_world.rst", "_api/curobo.wrap.reacher.rst", "_api/curobo.wrap.reacher.evaluator.rst", "_api/curobo.wrap.reacher.ik_solver.rst", "_api/curobo.wrap.reacher.motion_gen.rst", "_api/curobo.wrap.reacher.mpc.rst", "_api/curobo.wrap.reacher.trajopt.rst", "_api/curobo.wrap.reacher.types.rst", "_api/curobo.wrap.wrap_base.rst", "_api/curobo.wrap.wrap_mpc.rst", "_api/modules.rst", "index.rst", "news.rst", "readme.rst", "source/advanced_examples/1_batch_env.rst", "source/advanced_examples/2_block_stacking_example.rst", "source/advanced_examples/3_constrained_planning.rst", "source/advanced_examples/4_robot_segmentation.rst", "source/api/motion_generation.rst", "source/api/reacher.rst", "source/getting_started/1_install_instructions.rst", "source/getting_started/1a_quick_overview.rst", "source/getting_started/2a_python_examples.rst", "source/getting_started/2b_isaacsim_examples.rst", "source/getting_started/2c_world_collision.rst", "source/getting_started/2d_nvblox_demo.rst", "source/getting_started/2e_torch_layer_example.rst", "source/getting_started/4_benchmarks.rst", "source/getting_started/5_docker_development.rst", "source/getting_started/6_known_issues.rst", "source/getting_started/7_api.rst", "source/notes/01_robot_list.rst", "source/notes/02_numerical_optimization.rst", "source/notes/04_cuda_kernels.rst", "source/notes/05_usd_api.rst", "source/notes/07_environment_variables.rst", "source/research/research.rst", "source/research/research_using_curobo.rst", "source/snippets/citation.rst", "source/snippets/research_list.rst", "source/tutorials/1_robot_configuration.rst"], "titles": ["curobo package", "curobo.cuda_robot_model package", "curobo.cuda_robot_model.cuda_robot_generator module", "curobo.cuda_robot_model.cuda_robot_model module", "curobo.cuda_robot_model.kinematics_parser module", "curobo.cuda_robot_model.types module", "curobo.cuda_robot_model.urdf_kinematics_parser module", "curobo.cuda_robot_model.usd_kinematics_parser module", "curobo.curobolib package", "curobo.curobolib.geom module", "curobo.curobolib.geom_cu module", "curobo.curobolib.kinematics module", "curobo.curobolib.kinematics_fused_cu module", "curobo.curobolib.lbfgs_step_cu module", "curobo.curobolib.line_search_cu module", "curobo.curobolib.ls module", "curobo.curobolib.opt module", "curobo.curobolib.tensor_step module", "curobo.curobolib.tensor_step_cu module", "curobo.curobolib.util_file module", "curobo.geom package", "curobo.geom.cv module", "curobo.geom.sdf package", "curobo.geom.sdf.sdf_grid module", "curobo.geom.sdf.utils module", "curobo.geom.sdf.warp_primitives module", "curobo.geom.sdf.world module", "curobo.geom.sdf.world_blox module", "curobo.geom.sdf.world_mesh module", "curobo.geom.sdf.world_voxel module", "curobo.geom.sphere_fit module", "curobo.geom.transform module", "curobo.geom.types module", "curobo.graph package", "curobo.graph.graph_base module", "curobo.graph.graph_nx module", "curobo.graph.prm module", "curobo.opt package", "curobo.opt.newton package", "curobo.opt.newton.lbfgs module", "curobo.opt.newton.newton_base module", "curobo.opt.opt_base module", "curobo.opt.particle package", "curobo.opt.particle.parallel_es module", "curobo.opt.particle.parallel_mppi module", "curobo.opt.particle.particle_opt_base module", "curobo.opt.particle.particle_opt_utils module", "curobo.rollout package", "curobo.rollout.arm_base module", "curobo.rollout.arm_reacher module", "curobo.rollout.cost package", "curobo.rollout.cost.bound_cost module", "curobo.rollout.cost.cost_base module", "curobo.rollout.cost.dist_cost module", "curobo.rollout.cost.manipulability_cost module", "curobo.rollout.cost.pose_cost module", "curobo.rollout.cost.primitive_collision_cost module", "curobo.rollout.cost.projected_dist_cost module", "curobo.rollout.cost.self_collision_cost module", "curobo.rollout.cost.stop_cost module", "curobo.rollout.cost.straight_line_cost module", "curobo.rollout.cost.zero_cost module", "curobo.rollout.dynamics_model package", "curobo.rollout.dynamics_model.integration_utils module", "curobo.rollout.dynamics_model.kinematic_model module", "curobo.rollout.dynamics_model.model_base module", "curobo.rollout.dynamics_model.tensor_step module", "curobo.rollout.rollout_base module", "curobo.types package", "curobo.types.base module", "curobo.types.camera module", "curobo.types.enum module", "curobo.types.math module", "curobo.types.robot module", "curobo.types.state module", "curobo.types.tensor module", "curobo.util package", "curobo.util.error_metrics module", "curobo.util.helpers module", "curobo.util.logger module", "curobo.util.metrics module", "curobo.util.sample_lib module", "curobo.util.state_filter module", "curobo.util.tensor_util module", "curobo.util.torch_utils module", "curobo.util.trajectory module", "curobo.util.usd_helper module", "curobo.util.warp module", "curobo.util.warp_interpolation module", "curobo.util_file module", "curobo.wrap package", "curobo.wrap.model package", "curobo.wrap.model.curobo_robot_world module", "curobo.wrap.model.robot_segmenter module", "curobo.wrap.model.robot_world module", "curobo.wrap.reacher package", "curobo.wrap.reacher.evaluator module", "curobo.wrap.reacher.ik_solver module", "curobo.wrap.reacher.motion_gen module", "curobo.wrap.reacher.mpc module", "curobo.wrap.reacher.trajopt module", "curobo.wrap.reacher.types module", "curobo.wrap.wrap_base module", "curobo.wrap.wrap_mpc module", "curobo", "cuRobo: CUDA Accelerated Robot Library", "Updates", "cuRobo: CUDA Accelerated Robot Library", "Batched Environments", "Block Stacking", "Constrained Planning", "Robot Segmentation", "Motion Generation", "Reacher", "Installation", "Basics", "Using in Python", "Using with Isaac Sim", "Collision World Representation", "Using with Depth Camera", "Using in a Neural Network", "Benchmarks &amp; Profiling", "Docker Development", "Known Issues", "Python API", "Supported Robots", "Numerical Optimization", "CUDA Notes", "USD for Robot and World Representation", "Environment Variables", "Technical Report", "Research using cuRobo", "&lt;no title&gt;", "&lt;no title&gt;", "Configuring a New Robot"], "terms": {"i": [0, 1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 27, 28, 31, 32, 35, 37, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 70, 72, 88, 94, 97, 98, 105, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 129, 130, 134], "split": [0, 124], "sever": [0, 1, 37, 115, 118, 124], "modul": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95, 104, 120, 124, 131], "opt": [0, 8, 102, 104, 124, 126], "contain": [0, 1, 20, 22, 29, 37, 38, 40, 41, 42, 43, 44, 45, 47, 75, 89, 105, 107, 114, 118, 122, 124, 127], "optim": [0, 37, 39, 40, 41, 42, 43, 44, 45, 48, 56, 67, 85, 90, 98, 102, 105, 107, 110, 115, 117, 118, 120, 124, 127, 130], "solver": [0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 95, 97, 98, 99, 100, 117, 124, 126, 130], "cuda_robot_model": [0, 51, 58, 92, 94, 104, 116, 124, 134], "robot": [0, 1, 2, 3, 5, 7, 20, 22, 48, 56, 64, 68, 85, 86, 89, 93, 94, 97, 98, 100, 106, 108, 110, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 131, 132, 133], "kinemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 47, 48, 68, 73, 91, 92, 93, 94, 95, 97, 98, 99, 100, 105, 107, 111, 112, 115, 120, 123, 124, 125, 128, 134], "curobolib": [0, 104, 124], "cuda": [0, 1, 2, 3, 5, 7, 12, 13, 14, 26, 32, 34, 40, 41, 44, 45, 46, 48, 49, 55, 64, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101, 111, 114, 115, 116, 118, 119, 120, 122, 123, 124], "kernel": [0, 1, 5, 85, 105, 106, 107, 114, 115, 116, 117, 118, 119, 121, 122, 124, 129], "python": [0, 111, 114, 115, 118, 121, 134], "bind": [0, 124], "them": [0, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 117, 118, 124, 134], "geom": [0, 8, 48, 49, 92, 94, 97, 99, 100, 104, 116, 117, 118, 119, 120, 124], "geometri": [0, 2, 3, 7, 30, 109, 111, 115, 120, 124, 134], "process": [0, 20, 22, 32, 44, 81, 98, 110, 118, 124], "collis": [0, 2, 3, 5, 10, 20, 22, 26, 27, 28, 56, 80, 94, 98, 105, 106, 107, 109, 115, 120, 123, 124, 125, 128, 131, 132, 133], "check": [0, 2, 20, 22, 27, 45, 56, 105, 107, 111, 114, 124, 125, 126, 129, 134], "frame": [0, 110, 111, 116, 117, 118, 124, 128], "transform": [0, 1, 2, 7, 20, 32, 86, 111, 117, 124, 128], "graph": [0, 40, 41, 48, 98, 104, 108, 109, 111, 115, 116, 117, 121, 123, 124, 126], "geometr": [0, 20, 22, 105, 107, 112, 117, 124, 130], "plan": [0, 2, 33, 34, 95, 98, 105, 106, 107, 119, 123, 124, 131, 133, 134], "search": [0, 14, 37, 41, 124, 126, 130], "method": [0, 81, 117, 118, 124, 130], "rollout": [0, 34, 41, 43, 44, 45, 92, 94, 97, 100, 102, 104, 110, 117, 118, 124, 126], "map": [0, 4, 6, 7, 27, 41, 114, 115, 116, 117, 118, 123, 124, 127, 134], "action": [0, 43, 44, 45, 47, 48, 49, 64, 67, 90, 102, 109, 117, 124, 126], "cost": [0, 15, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 67, 77, 92, 94, 100, 110, 117, 118, 119, 124, 126, 127], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 38, 39, 40, 41, 42, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 75, 83, 88, 92, 94, 97, 98, 105, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 80, 81, 82, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 116, 118, 119, 120, 124, 126], "wrap": [0, 104, 110, 111, 114, 116, 117, 120, 124, 126], "instanc": [0, 1, 27, 32, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 98, 108, 114, 116, 118, 120, 123, 124, 134], "comput": [0, 1, 2, 3, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 41, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 94, 97, 98, 105, 107, 109, 111, 114, 115, 116, 117, 118, 120, 121, 122, 124, 127, 128, 131, 133], "given": [0, 2, 7, 9, 11, 16, 23, 25, 31, 32, 41, 44, 45, 46, 48, 49, 51, 53, 61, 63, 72, 86, 97, 113, 116, 117, 118, 120, 124, 127], "trajectori": [0, 34, 43, 44, 45, 47, 48, 55, 56, 64, 67, 76, 88, 98, 100, 105, 107, 110, 116, 117, 118, 124, 126, 130], "util": [0, 20, 22, 34, 43, 44, 46, 64, 92, 94, 100, 104, 114, 117, 120, 124, 134], "add": [0, 2, 3, 67, 110, 114, 116, 117, 119, 122, 124, 134], "user": [0, 110, 114, 117, 121, 122, 124], "level": [0, 79, 124, 127], "api": [0, 27, 112, 119, 128], "task": [0, 99, 105, 107, 109, 110, 113, 117, 118, 124], "program": [0, 72, 117, 124], "includ": [0, 98, 116, 117, 124], "implement": [0, 1, 7, 32, 37, 39, 40, 41, 56, 98, 105, 107, 108, 109, 110, 111, 114, 117, 119, 124, 126, 127, 130, 131, 133], "free": [0, 116, 120, 121, 123, 124, 131, 132, 133, 134], "reacher": [0, 90, 110, 116, 124, 126], "batch": [0, 26, 27, 28, 29, 34, 36, 41, 44, 45, 46, 47, 48, 51, 53, 55, 67, 68, 72, 75, 88, 93, 94, 95, 97, 98, 100, 101, 112, 116, 124, 126], "world": [0, 20, 22, 27, 28, 29, 32, 48, 49, 86, 92, 94, 97, 98, 99, 100, 105, 107, 108, 109, 111, 115, 116, 117, 119, 120, 121, 123, 124, 127, 134], "type": [0, 1, 2, 3, 4, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 41, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 66, 67, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 111, 112, 115, 116, 117, 118, 119, 120, 124, 127], "custom": [0, 85, 117, 118, 124, 127], "dataclass": [0, 5, 39, 40, 41, 43, 44, 45, 98, 124, 127], "common": [0, 41, 124], "data": [0, 1, 5, 9, 11, 16, 23, 25, 31, 41, 51, 53, 61, 63, 67, 72, 74, 89, 115, 118, 124], "state": [0, 34, 41, 44, 45, 47, 48, 49, 63, 64, 67, 68, 82, 97, 98, 100, 102, 103, 111, 113, 116, 117, 120, 124, 130], "jointstat": [0, 5, 34, 48, 51, 63, 64, 66, 67, 68, 74, 82, 85, 86, 88, 93, 94, 96, 97, 98, 99, 100, 101, 105, 106, 107, 111, 116, 117, 120, 124], "camera": [0, 68, 105, 107, 111, 118, 121, 123, 124], "cameraobserv": [0, 27, 32, 68, 70, 93, 98, 111, 124], "math": [0, 68, 97, 115, 116, 117, 118, 120, 124], "pose": [0, 2, 3, 9, 10, 20, 26, 27, 28, 29, 32, 48, 55, 64, 67, 68, 70, 72, 86, 93, 94, 97, 98, 101, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 134], "cuda_robot_gener": [0, 1, 5, 134], "cudarobotgeneratorconfig": [0, 1, 2, 3, 5, 134], "cudarobotgener": [0, 1, 2], "cudarobotmodelconfig": [0, 1, 3, 5, 73, 116], "cudarobotmodel": [0, 1, 3, 86, 92, 93, 94, 97, 98, 100, 116], "kinematics_pars": [0, 1, 2, 3], "linkparam": [0, 1, 2, 4, 6, 7], "kinematicspars": [0, 1, 3, 4, 6, 7], "jointtyp": [0, 1, 4, 5], "jointlimit": [0, 1, 5, 51], "cspaceconfig": [0, 1, 2, 5, 48, 67, 73], "kinematicstensorconfig": [0, 1, 2, 3, 5], "selfcollisionkinematicsconfig": [0, 1, 3, 5, 58], "cudarobotmodelst": [0, 1, 3, 5, 94, 97, 100, 116], "urdf_kinematics_pars": [0, 1], "urdfkinematicspars": [0, 1, 6], "usd_kinematics_pars": [0, 1], "usdkinematicspars": [0, 1, 7], "get_links_for_joint": [0, 1, 7], "get_self_collision_dist": [0, 8, 9, 91, 94], "selfcollisiondist": [0, 8, 9], "selfcollisiondistanceloss": [0, 8, 9], "get_pose_dist": [0, 8, 9], "get_pose_distance_backward": [0, 8, 9], "poseerrordist": [0, 8, 9], "poseerror": [0, 8, 9], "sdfsphereobb": [0, 8, 9], "sdfsweptsphereobb": [0, 8, 9], "sdfspherevoxel": [0, 8, 9], "sdfsweptspherevoxel": [0, 8, 9], "geom_cu": [0, 8], "closest_point": [0, 8, 10], "closest_point_voxel": [0, 8, 10], "pose_dist": [0, 8, 10, 91, 94, 120], "pose_distance_backward": [0, 8, 10], "self_collision_dist": [0, 8, 10], "swept_closest_point": [0, 8, 10], "swept_closest_point_voxel": [0, 8, 10], "rotation_matrix_to_quaternion": [0, 8, 11], "kinematicsfusedfunct": [0, 8, 11], "kinematicsfusedglobalcumulfunct": [0, 8, 11], "get_cuda_kinemat": [0, 8, 11], "kinematics_fused_cu": [0, 8], "backward": [0, 2, 8, 9, 10, 11, 12, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 64, 68, 72, 120], "forward": [0, 1, 3, 8, 9, 11, 12, 13, 16, 20, 22, 23, 25, 31, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 81, 105, 107, 120], "matrix_to_quaternion": [0, 8, 12, 20, 31], "lbfgs_step_cu": [0, 8], "line_search_cu": [0, 8], "line_search": [0, 8, 14], "update_best": [0, 8, 14, 15], "l": [0, 8, 13, 46, 105, 107, 130], "wolfe_line_search": [0, 8, 15], "lbfgscu": [0, 8, 16], "tensor_step": [0, 8, 47, 62, 64], "tensor_step_pos_clique_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_fwd": [0, 8, 17], "tensor_step_acc_fwd": [0, 8, 17], "tensor_step_acc_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_bwd": [0, 8, 17], "tensor_step_cu": [0, 8], "step_acceler": [0, 8, 18], "step_acceleration_idx": [0, 8, 18], "step_idx_position2": [0, 8, 18], "step_posit": [0, 8, 18], "step_position2": [0, 8, 18], "step_position_backward": [0, 8, 18], "step_position_backward2": [0, 8, 18], "util_fil": [0, 8, 104, 116, 118, 120], "get_cpp_path": [0, 8, 19, 89, 104], "join_path": [0, 8, 19, 89, 104, 116, 118, 120], "add_cpp_path": [0, 8, 19, 89, 104], "sdf": [0, 20, 48, 49, 92, 94, 97, 99, 100, 116, 118, 119, 120], "cv": [0, 20], "sphere_fit": [0, 20, 118], "spherefittyp": [0, 20, 27, 30, 32, 98, 118], "sample_even_fit_mesh": [0, 20, 30], "get_voxel_pitch": [0, 20, 30], "voxel_fit_surface_mesh": [0, 20, 30], "get_voxelgrid_from_mesh": [0, 20, 30], "voxel_fit_mesh": [0, 20, 30], "voxel_fit_volume_sample_surface_mesh": [0, 20, 30], "voxel_fit_volume_inside_mesh": [0, 20, 30], "fit_spheres_to_mesh": [0, 20, 30], "transform_point": [0, 20, 31, 68, 72], "batch_transform_point": [0, 20, 31, 68, 72], "cuda_matrix_to_quaternion": [0, 20, 31], "quaternion_to_matrix": [0, 20, 31], "torch_quaternion_to_matrix": [0, 20, 31], "pose_to_matrix": [0, 20, 31], "pose_multipli": [0, 20, 31], "pose_invers": [0, 20, 31], "transformpoint": [0, 20, 31], "batchtransformpoint": [0, 20, 31], "batchtransformpos": [0, 20, 31], "transformpos": [0, 20, 31], "poseinvers": [0, 20, 31], "quattomatrix": [0, 20, 31], "matrixtoquaternion": [0, 20, 31], "materi": [0, 20, 26, 32, 86], "obstacl": [0, 20, 26, 28, 29, 32, 56, 86, 98, 105, 107, 108, 117, 118, 119, 120, 121, 123, 127, 128], "cuboid": [0, 20, 26, 27, 32, 86, 98, 105, 107, 108, 115, 116, 117, 118, 121, 128], "capsul": [0, 20, 32, 118], "cylind": [0, 20, 32, 86, 118], "sphere": [0, 1, 2, 3, 5, 20, 27, 30, 32, 56, 86, 98, 108, 109, 111, 115, 116, 117, 119, 120, 127, 134], "mesh": [0, 2, 3, 4, 20, 22, 26, 27, 28, 30, 32, 86, 94, 97, 98, 100, 105, 107, 108, 115, 116, 117, 118, 119, 120, 121, 127, 128, 134], "bloxmap": [0, 20, 32], "pointcloud": [0, 20, 22, 32, 70, 94, 111], "voxelgrid": [0, 20, 26, 29, 32], "worldconfig": [0, 20, 26, 27, 28, 29, 32, 34, 48, 86, 94, 97, 98, 99, 100, 116, 117, 118, 120], "tensor_spher": [0, 20, 26, 27, 28, 29, 32], "tensor_capsul": [0, 20, 32], "tensor_cub": [0, 20, 32], "batch_tensor_cub": [0, 20, 32], "graph_bas": [0, 33], "graphresult": [0, 33, 34, 98], "graphconfig": [0, 33, 34, 36], "graphplanbas": [0, 33, 34, 36, 98], "graph_nx": [0, 33], "networkxgraph": [0, 33, 35], "prm": [0, 33], "prmstar": [0, 33, 36], "newton": [0, 37, 41, 126], "particl": [0, 37, 41, 130], "opt_bas": [0, 37, 102], "optimizerconfig": [0, 37, 40, 41, 44, 45], "dynamics_model": [0, 47, 48, 49, 59], "arm_bas": [0, 47, 49, 88, 126], "armcostconfig": [0, 47, 48, 49], "armbaseconfig": [0, 47, 48, 49], "armbas": [0, 47, 48, 49, 126], "arm_reach": [0, 47, 97, 100], "armreachermetr": [0, 47, 49], "armreachercostconfig": [0, 47, 49], "armreacherconfig": [0, 47, 49], "armreach": [0, 47, 49, 97, 100], "rollout_bas": [0, 34, 41, 47, 49, 100, 102], "rolloutmetr": [0, 34, 47, 48, 49, 67, 97, 98, 100, 102], "goal": [0, 34, 36, 41, 47, 48, 49, 55, 67, 95, 97, 98, 99, 100, 101, 102, 103, 109, 110, 112, 113, 116, 117, 120, 127], "rolloutconfig": [0, 47, 48, 49, 67], "rolloutbas": [0, 34, 39, 40, 41, 43, 44, 45, 47, 48, 49, 67, 97, 98, 100, 102], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 80, 81, 82, 85, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 108, 110, 111, 114, 116, 117, 118, 119, 122, 125, 128, 130, 131, 133, 134], "tensordevicetyp": [0, 2, 3, 5, 7, 26, 32, 34, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101, 116, 118], "enum": [0, 5, 26, 30, 40, 44, 45, 46, 51, 53, 55, 57, 64, 66, 68, 82, 85, 101], "statetyp": [0, 64, 68, 71, 82], "quat_multipli": [0, 68, 72], "orientationerror": [0, 68, 72], "nnconfig": [0, 68, 73], "robotconfig": [0, 34, 48, 49, 64, 68, 73, 86, 94, 97, 98, 99, 100, 116], "filtercoeff": [0, 68, 74, 82], "fn_get_index": [0, 68, 74], "tensor": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 68, 70, 72, 74, 77, 81, 82, 83, 85, 86, 88, 92, 94, 96, 97, 98, 100, 102, 108, 115, 116, 118, 120, 123, 131, 133], "t_dof": [0, 5, 68, 74, 75], "t_bdof": [0, 68, 75, 97, 101], "t_bhdof_float": [0, 67, 68, 75], "t_hdof_float": [0, 68, 75], "t_bvalue_float": [0, 49, 67, 68, 75], "t_bhvalue_float": [0, 67, 68, 75], "t_bvalue_bool": [0, 49, 67, 68, 75], "t_bvalue_int": [0, 68, 75], "t_bposit": [0, 68, 75], "t_bquaternion": [0, 68, 75], "t_brotat": [0, 68, 75], "error_metr": [0, 76], "rotation_error_quaternion": [0, 76, 77], "rotation_error_matrix": [0, 76, 77], "helper": [0, 41, 44, 45, 76, 98, 118], "default_to_regular": [0, 76, 78], "list_idx_if_not_non": [0, 76, 78], "logger": [0, 76], "setup_curobo_logg": [0, 76, 79], "log_warn": [0, 76, 79], "log_info": [0, 76, 79], "log_error": [0, 76, 79], "metric": [0, 33, 34, 48, 49, 55, 56, 72, 76, 90, 95, 97, 98, 100, 102, 116, 121], "curobometr": [0, 76, 80], "curobogroupmetr": [0, 76, 80], "sample_lib": [0, 43, 44, 76, 92, 94], "sampleconfig": [0, 43, 44, 76, 81], "basesamplelib": [0, 76, 81], "haltonsamplelib": [0, 76, 81], "bspline": [0, 76, 81], "knotsamplelib": [0, 76, 81], "randomsamplelib": [0, 76, 81], "sinesamplelib": [0, 76, 81], "stompsamplelib": [0, 76, 81], "samplelib": [0, 76, 81], "get_ranged_halton_sampl": [0, 76, 81], "haltongener": [0, 76, 81, 92, 94], "generate_nois": [0, 42, 44, 76, 81], "generate_noise_np": [0, 76, 81], "generate_prime_numb": [0, 76, 81], "generate_van_der_corput_sampl": [0, 76, 81], "generate_van_der_corput_samples_batch": [0, 76, 81], "generate_halton_sampl": [0, 76, 81], "generate_gaussian_halton_sampl": [0, 76, 81], "generate_gaussian_sobol_sampl": [0, 76, 81], "state_filt": [0, 64, 76], "filterconfig": [0, 64, 76, 82], "jointstatefilt": [0, 76, 82], "tensor_util": [0, 76], "check_tensor_shap": [0, 76, 83], "copy_tensor": [0, 76, 83], "copy_if_not_non": [0, 76, 83], "clone_if_not_non": [0, 76, 83], "tensor_repeat_se": [0, 76, 83], "torch_util": [0, 76], "find_first_idx": [0, 76, 84], "find_last_idx": [0, 76, 84], "is_cuda_graph_avail": [0, 76, 84], "is_torch_compile_avail": [0, 76, 84], "get_torch_compile_opt": [0, 76, 84], "disable_torch_compile_glob": [0, 76, 84], "set_torch_compile_global_opt": [0, 76, 84], "get_torch_jit_decor": [0, 76, 84], "empty_decor": [0, 76, 84], "interpolatetyp": [0, 34, 76, 85, 98, 100], "get_linear_traj": [0, 76, 85], "get_smooth_trajectori": [0, 76, 85], "get_spline_interpolated_trajectori": [0, 76, 85], "get_batch_interpolated_trajectori": [0, 76, 85], "get_cpu_linear_interpol": [0, 76, 85], "get_cpu_kunz_stilman_interpol": [0, 76, 85], "get_interpolated_trajectori": [0, 33, 34, 76, 85, 95, 100], "linear_smooth": [0, 76, 85], "usd_help": [0, 76, 117, 120], "set_prim_transl": [0, 76, 86], "set_prim_transform": [0, 76, 86], "get_prim_world_pos": [0, 76, 86], "get_transform": [0, 76, 86], "get_position_quat": [0, 76, 86], "set_geom_mesh_attr": [0, 76, 86], "set_geom_cube_attr": [0, 76, 86], "set_geom_cylinder_attr": [0, 76, 86], "set_geom_sphere_attr": [0, 76, 86], "set_cylinder_attr": [0, 76, 86], "get_cylinder_attr": [0, 76, 86], "get_capsule_attr": [0, 76, 86], "get_cube_attr": [0, 76, 86], "get_sphere_attr": [0, 76, 86], "get_mesh_attr": [0, 76, 86], "create_stag": [0, 76, 86], "usdhelp": [0, 76, 86, 117, 120], "warp": [0, 28, 76, 85, 88, 118, 127], "init_warp": [0, 76, 87], "warp_interpol": [0, 76], "get_cuda_linear_interpol": [0, 76, 85, 88], "model": [0, 2, 3, 49, 73, 90, 98, 99, 109, 111, 116, 118, 120, 131, 133, 134], "wrap_bas": [0, 90, 97, 100], "wrapconfig": [0, 90, 102, 103], "wrapresult": [0, 90, 97, 99, 100, 102], "wrapbas": [0, 90, 97, 100, 102, 103], "wrap_mpc": [0, 90, 99], "wrapmpc": [0, 90, 99, 103], "get_module_path": [0, 89, 104], "get_root_path": [0, 89, 104], "get_content_path": [0, 89, 104], "get_configs_path": [0, 89, 104], "get_assets_path": [0, 89, 104, 118, 120], "get_weights_path": [0, 89, 104], "load_yaml": [0, 89, 104, 116, 120], "write_yaml": [0, 89, 104], "get_robot_path": [0, 89, 104, 116], "get_task_configs_path": [0, 89, 104], "get_robot_configs_path": [0, 89, 104, 116], "get_world_configs_path": [0, 89, 104, 116, 120], "get_debug_path": [0, 89, 104], "copy_file_to_path": [0, 89, 104], "get_filenam": [0, 89, 104], "get_path_of_dir": [0, 89, 104], "get_files_from_dir": [0, 89, 104], "file_exist": [0, 89, 104], "get_motion_gen_robot_list": [0, 89, 104], "get_robot_list": [0, 89, 104], "get_multi_arm_robot_list": [0, 89, 104], "code": [1, 20, 22, 105, 106, 107, 117, 121, 122], "acceler": [1, 3, 5, 18, 48, 56, 62, 64, 66, 68, 71, 74, 82, 85, 117, 118, 130, 131, 133], "current": [1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 28, 31, 43, 44, 45, 48, 51, 53, 61, 63, 64, 72, 94, 98, 105, 107, 108, 109, 110, 111, 116, 117, 118], "support": [1, 2, 3, 5, 27, 30, 41, 94, 105, 106, 107, 108, 110, 112, 114, 115, 117, 119, 121, 123], "singl": [1, 28, 41, 55, 64, 95, 100, 101, 108, 110, 112, 117, 119, 125], "axi": [1, 2, 7, 55, 110], "actuat": [1, 123], "joint": [1, 2, 7, 74, 94, 98, 111, 116, 117, 120, 123, 134], "where": [1, 34, 41, 44, 45, 108, 110, 114, 118, 119, 120, 122, 126, 127, 134], "can": [1, 2, 9, 11, 16, 20, 22, 23, 25, 26, 31, 41, 51, 53, 61, 63, 67, 72, 94, 105, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 134], "prismat": 1, "revolut": 1, "continu": [1, 118, 120], "ar": [1, 3, 7, 9, 11, 16, 23, 25, 27, 30, 31, 34, 37, 48, 51, 53, 61, 63, 72, 108, 109, 111, 114, 115, 116, 117, 118, 122, 125, 128, 134], "approxim": [1, 30, 37, 109, 115, 120], "limit": [1, 2, 116, 123, 134], "6": [1, 5, 55, 66, 105, 106, 107, 110, 114, 116, 118, 121], "radian": 1, "mimic": [1, 123], "so": [1, 116, 117, 118, 119, 122, 126, 127, 134], "convert": [1, 2, 31, 41, 111, 116, 117, 118, 123, 134], "independ": [1, 123], "load": [1, 2, 3, 26, 27, 28, 29, 32, 73, 98, 110, 114, 115, 116, 117, 118, 119, 121, 123, 128, 134], "": [1, 27, 28, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 83, 92, 94, 98, 105, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 133, 134], "tree": [1, 2, 4, 6, 7, 115], "from": [1, 2, 3, 4, 5, 7, 26, 27, 28, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 56, 64, 67, 72, 74, 92, 94, 98, 105, 107, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 134], "config": [1, 2, 3, 24, 26, 27, 28, 29, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 92, 94, 96, 97, 98, 99, 100, 102, 103, 116, 120, 134], "gener": [1, 2, 44, 81, 85, 89, 97, 98, 105, 107, 110, 111, 114, 115, 118, 123, 125, 131, 132, 133, 134], "us": [1, 2, 4, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 37, 40, 41, 43, 44, 45, 48, 51, 53, 56, 61, 63, 67, 72, 81, 85, 88, 92, 94, 98, 108, 110, 111, 115, 118, 121, 122, 123, 125, 126, 127, 128, 134], "A": [1, 7, 46, 109, 110, 117, 118, 119, 131, 133], "parser": [1, 2, 7], "kinematicspar": 1, "provid": [1, 27, 37, 105, 107, 108, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134], "help": 1, "pars": [1, 117], "standard": [1, 41, 120, 123], "format": [1, 5, 32, 70, 115], "urdf": [1, 2, 3, 7, 115, 116, 123, 134], "an": [1, 3, 5, 7, 9, 11, 16, 23, 25, 31, 37, 40, 41, 44, 45, 46, 51, 53, 55, 56, 57, 61, 63, 64, 66, 71, 72, 85, 98, 101, 109, 110, 114, 116, 117, 118, 120, 123, 125, 126, 127, 128, 130, 134], "experiment": [1, 7, 115, 117, 128], "usd": [1, 2, 7, 86, 109, 115, 120, 134], "which": [1, 28, 56, 88, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 125, 127, 128, 134], "miss": [1, 88], "addit": [1, 2, 41, 114, 117, 118, 119, 125], "between": [1, 2, 20, 22, 46, 55, 56, 98, 105, 107, 109, 110, 111, 115, 116, 117, 118, 119, 120, 123, 127], "origin": 1, "link": [1, 2, 3, 4, 5, 6, 7, 72, 98, 109, 115, 116, 117, 123, 134], "might": [1, 27, 114, 116, 134], "work": [1, 30, 40, 41, 97, 114, 116, 117, 118, 119, 122, 123, 127, 131, 133], "all": [1, 3, 7, 9, 11, 16, 23, 25, 26, 27, 30, 31, 32, 41, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 97, 98, 109, 114, 115, 116, 117, 118, 119, 121, 126, 127, 128, 134], "In": [1, 27, 41, 114, 116, 117, 118, 119, 125, 134], "file": [1, 3, 7, 32, 111, 114, 115, 116, 117, 118, 121, 122, 125], "also": [1, 9, 11, 16, 20, 22, 23, 25, 26, 29, 31, 51, 53, 61, 63, 72, 98, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 134], "need": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 117, 118, 119, 121, 122, 127, 134], "represent": [1, 26, 27, 29, 32, 72, 115, 116, 117, 119], "volum": [1, 2, 30, 32, 118, 130], "other": [1, 9, 11, 16, 23, 25, 27, 31, 51, 53, 61, 63, 72, 114, 117, 118, 127], "paramet": [1, 2, 3, 4, 5, 6, 7, 9, 11, 15, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 118, 120], "repres": [1, 2, 9, 11, 16, 23, 25, 26, 31, 32, 51, 53, 61, 63, 72, 105, 107, 109, 111, 115, 117, 118, 121, 123, 125, 128], "tutori": [1, 73, 117, 118], "set": [1, 2, 9, 11, 16, 23, 25, 31, 40, 41, 44, 45, 51, 53, 55, 56, 61, 63, 72, 97, 108, 110, 112, 116, 117, 118, 122, 123, 127, 129, 134], "up": [1, 7, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 134], "configur": [1, 2, 3, 7, 41, 56, 73, 94, 98, 110, 111, 114, 115, 116, 117, 118, 120], "new": [1, 40, 41, 44, 45, 72, 73, 105, 106, 107, 115, 116, 117, 118, 119, 120, 122, 127], "onc": [1, 109, 110, 111, 114, 115, 116, 117, 119, 123, 134], "setup": [1, 26, 108, 117, 118, 122], "you": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 110, 111, 114, 115, 116, 117, 118, 119, 121, 122, 127, 134], "pass": [1, 5, 9, 11, 16, 23, 25, 28, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 110, 111, 114, 117, 118, 119, 120, 121, 127], "configuraiton": [1, 134], "take": [1, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 110, 114, 116, 118, 119, 120, 121, 126], "access": [1, 114, 116, 117], "creat": [1, 2, 3, 27, 32, 40, 41, 44, 45, 48, 56, 72, 86, 97, 98, 108, 114, 116, 117, 118, 119, 120, 122, 127], "memori": [1, 2, 41, 67, 72, 123, 127], "while": [1, 7, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 67, 109, 110, 114, 117, 118, 119, 121, 123, 127, 134], "onli": [1, 2, 3, 7, 27, 28, 41, 56, 97, 98, 100, 108, 116, 117, 118, 119, 121, 122, 131, 133], "To": [1, 27, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 110, 114, 116, 117, 118, 121, 127, 128, 130, 134], "reduc": [1, 111, 118, 127, 134], "overhead": [1, 111], "one": [1, 27, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 109, 117, 118, 123, 127, 134], "mani": [1, 3, 9, 11, 16, 23, 25, 31, 41, 51, 53, 61, 63, 72, 105, 107, 117, 118, 119, 123, 130], "base_link": [1, 2, 3, 4, 5, 73, 91, 93, 116, 134], "ee_link": [1, 2, 3, 4, 5, 67, 72, 73, 116, 134], "tensor_arg": [1, 2, 3, 5, 7, 20, 22, 26, 32, 33, 34, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 76, 81, 82, 85, 86, 87, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 116, 118], "link_nam": [1, 2, 3, 4, 5, 6, 7, 55, 62, 64, 86, 97, 98, 100, 134], "collision_link_nam": [1, 2, 134], "collision_spher": [1, 2, 5, 134], "collision_sphere_buff": [1, 2, 93, 134], "compute_jacobian": [1, 2, 3], "self_collision_buff": [1, 2, 134], "self_collision_ignor": [1, 2, 134], "debug": [1, 2, 5, 34, 41, 47, 67, 90, 98, 102], "use_global_cumul": [1, 2, 3, 11, 134], "asset_root_path": [1, 2, 134], "mesh_link_nam": [1, 2, 5, 134], "load_link_names_with_mesh": [1, 2], "urdf_path": [1, 2, 3, 6, 20, 32, 73, 116, 134], "usd_path": [1, 2, 3, 7, 134], "usd_robot_root": [1, 2, 3, 7, 134], "isaac_usd_path": [1, 2, 134], "use_usd_kinemat": [1, 2, 134], "usd_flip_joint": [1, 2, 134], "usd_flip_joint_limit": [1, 2, 134], "lock_joint": [1, 2, 74, 98, 134], "extra_link": [1, 2, 4, 6, 7, 134], "add_object_link": [1, 2], "use_external_asset": [1, 2], "external_asset_path": [1, 2], "external_robot_configs_path": [1, 2], "extra_collision_spher": [1, 2, 134], "cspace": [1, 2, 3, 5, 68, 73, 134], "load_mesh": [1, 2, 6], "kinematics_config": [1, 2, 3, 120], "self_collision_config": [1, 2, 3], "initialize_tensor": [1, 2], "add_link": [1, 2], "add_fixed_link": [1, 2], "_build_chain": [1, 2], "_build_kinematics_tensor": [1, 2], "_build_kinemat": [1, 2], "_build_kinematics_with_lock_joint": [1, 2], "_build_collision_model": [1, 2], "_create_self_collision_thread_data": [1, 2], "_add_body_to_tre": [1, 2], "_get_joint_link": [1, 2], "_get_link_pos": [1, 2], "get_joint_limit": [1, 2, 3], "_get_joint_position_velocity_limit": [1, 2], "_update_joint_limit": [1, 2], "generator_config": [1, 3], "from_basic_urdf": [1, 3], "from_basic_usd": [1, 3], "from_robot_yaml_fil": [1, 3], "from_data_dict": [1, 3, 5], "from_config": [1, 3], "update_batch_s": [1, 3, 50, 51, 53, 55, 58, 62, 64, 66, 95, 98], "get_stat": [1, 3, 116], "get_robot_link_mesh": [1, 3], "get_robot_as_mesh": [1, 3], "get_robot_as_spher": [1, 3], "get_link_pos": [1, 3], "_cuda_forward": [1, 3], "all_articulated_joint_nam": [1, 3], "get_self_collision_config": [1, 3], "get_link_mesh": [1, 3, 4, 6], "get_link_transform": [1, 3], "get_all_link_transform": [1, 3], "get_dof": [1, 3, 116, 120], "joint_nam": [1, 2, 3, 4, 5, 47, 48, 68, 74, 86, 90, 95, 99, 102, 134], "total_spher": [1, 3, 5], "lock_jointst": [1, 3, 5], "update_kinematics_config": [1, 3], "retract_config": [1, 3, 5, 51, 62, 64, 95, 97, 98, 100, 101, 134], "joint_typ": [1, 4, 134], "fixed_transform": [1, 4, 5, 11, 134], "parent_link_nam": [1, 2, 4, 134], "joint_limit": [1, 4, 5, 50, 51], "joint_axi": [1, 4], "joint_id": [1, 4], "joint_velocity_limit": [1, 4], "from_dict": [1, 4, 20, 32, 33, 34, 47, 48, 49, 62, 64, 68, 73, 76, 82, 116, 120], "build_link_par": [1, 4, 6, 7], "get_chain": [1, 4], "_get_from_extra_link": [1, 4], "get_link_paramet": [1, 4, 6, 7], "add_absolute_path_to_link_mesh": [1, 4, 6], "fix": [1, 2, 5, 116, 117, 119, 123, 134], "x_prism": [1, 5], "y_prism": [1, 5], "z_prism": [1, 5], "x_rot": [1, 5], "y_rot": [1, 5], "z_rot": [1, 5], "x_prism_neg": [1, 5], "y_prism_neg": [1, 5], "z_prism_neg": [1, 5], "x_rot_neg": [1, 5], "y_rot_neg": [1, 5], "z_rot_neg": [1, 5], "posit": [1, 2, 5, 18, 20, 26, 30, 31, 32, 50, 51, 62, 66, 67, 68, 71, 72, 74, 85, 94, 98, 111, 116, 117, 118, 120, 121], "veloc": [1, 5, 48, 56, 62, 66, 68, 71, 74, 85], "jerk": [1, 5, 51, 62, 66, 68, 71, 74, 76, 80, 98, 105, 107, 121, 132], "effort": [1, 5], "clone": [1, 5, 20, 22, 26, 32, 47, 49, 50, 55, 67, 68, 70, 72, 74, 83, 90, 95, 98, 101, 102, 114, 120, 122, 134], "copy_": [1, 5, 47, 67, 68, 70, 72, 74], "cspace_distance_weight": [1, 5, 50, 51, 62, 64, 96, 134], "null_space_weight": [1, 5, 50, 51, 62, 64, 134], "max_acceler": [1, 5, 62, 64, 85, 134], "max_jerk": [1, 5, 62, 64, 85, 95, 96, 100, 134], "velocity_scal": [1, 5, 98], "acceleration_scal": [1, 5, 98], "jerk_scal": [1, 5, 98], "position_limit_clip": [1, 5], "inplace_reindex": [1, 5, 68, 74], "scale_joint_limit": [1, 5], "load_from_joint_limit": [1, 5], "link_map": [1, 5, 11], "joint_map": [1, 5, 11], "joint_map_typ": [1, 5, 11], "store_link_map": [1, 5, 11], "link_chain_map": [1, 5, 11], "non_fixed_joint_nam": [1, 5], "n_dof": [1, 5, 63], "link_spher": [1, 5, 86, 120], "link_sphere_idx_map": [1, 5, 11], "link_name_to_idx_map": [1, 5], "ee_idx": [1, 5], "reference_link_spher": [1, 5], "load_cspace_cfg_from_kinemat": [1, 5], "get_sphere_index_from_link_nam": [1, 5], "update_link_spher": [1, 5], "get_link_spher": [1, 5], "get_reference_link_spher": [1, 5], "attach_object": [1, 5], "detach_object": [1, 5], "get_number_of_spher": [1, 5], "disable_link_spher": [1, 5], "enable_link_spher": [1, 5], "offset": [1, 5, 55, 63, 72, 110, 134], "distance_threshold": [1, 5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 93], "thread_loc": [1, 5, 9], "thread_max": [1, 5], "collision_matrix": [1, 5], "experimental_kernel": [1, 5, 9], "checks_per_thread": [1, 5, 9], "ee_posit": [1, 5, 116, 120], "ee_quaternion": [1, 5, 116, 120], "lin_jacobian": [1, 5], "ang_jacobian": [1, 5], "links_posit": [1, 5], "links_quaternion": [1, 5], "link_spheres_tensor": [1, 5, 11, 120], "ee_pos": [1, 5, 62, 64, 120], "link_pos": [1, 5, 62, 64, 86, 97, 98, 101], "_find_parent_joint_of_link": [1, 6], "_get_joint_nam": [1, 6], "get_urdf_str": [1, 6], "robot_prim_root": [1, 7], "_get_joint_transform": [1, 7], "devic": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 63, 64, 68, 69, 70, 72, 73, 74, 77, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101, 116, 118, 127], "index": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 64, 69, 72, 73, 74, 81, 82, 85, 86, 87, 88, 92, 93, 94, 97, 98, 99, 100, 101, 127], "0": [2, 3, 5, 7, 9, 11, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 77, 80, 81, 82, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 110, 114, 116, 117, 118, 120, 121, 122, 123, 127, 128, 129, 134], "dtype": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 63, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101, 116, 118], "torch": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 28, 29, 31, 32, 34, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 69, 70, 72, 73, 74, 77, 81, 82, 83, 85, 86, 87, 88, 92, 93, 94, 97, 98, 99, 100, 101, 102, 114, 116, 118, 120, 121, 129], "float32": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 63, 64, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101], "collision_geometry_dtyp": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101], "collision_gradient_dtyp": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101], "collision_distance_dtyp": [2, 3, 5, 7, 26, 32, 34, 41, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 101], "none": [2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 70, 72, 73, 74, 80, 81, 82, 83, 85, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 116, 120], "fals": [2, 3, 4, 6, 7, 9, 16, 25, 26, 27, 28, 29, 32, 34, 35, 36, 39, 40, 41, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 72, 80, 81, 82, 84, 86, 89, 96, 97, 98, 99, 100, 101, 102, 110, 114, 116, 118, 120, 134], "true": [2, 3, 5, 9, 11, 16, 17, 23, 25, 26, 27, 28, 29, 31, 32, 34, 39, 45, 48, 49, 51, 53, 55, 56, 61, 63, 67, 72, 79, 80, 81, 82, 84, 85, 86, 87, 93, 94, 97, 98, 99, 100, 114, 116, 134], "object": [2, 3, 4, 5, 9, 11, 16, 20, 23, 25, 26, 28, 29, 31, 32, 34, 35, 41, 45, 48, 49, 51, 52, 53, 55, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 81, 82, 86, 93, 94, 96, 97, 98, 99, 100, 101, 102, 116, 117, 119], "str": [2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 30, 32, 34, 48, 51, 55, 64, 67, 69, 70, 72, 74, 79, 81, 86, 89, 93, 94, 97, 98, 99, 100, 101, 120, 134], "list": [2, 3, 4, 5, 7, 10, 12, 13, 14, 18, 26, 27, 28, 29, 30, 32, 34, 39, 40, 41, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 67, 70, 72, 74, 78, 80, 81, 85, 86, 89, 94, 97, 98, 100, 101, 102, 115, 118, 134], "dict": [2, 3, 4, 5, 6, 7, 26, 29, 32, 34, 41, 43, 44, 45, 48, 49, 64, 67, 81, 84, 86, 89, 93, 94, 97, 98, 99, 100, 101, 134], "ani": [2, 3, 5, 9, 11, 16, 23, 25, 29, 31, 32, 34, 39, 40, 41, 43, 44, 45, 51, 53, 56, 61, 63, 72, 73, 97, 98, 100, 102, 111, 115, 116, 117, 118, 123, 127, 129], "float": [2, 4, 5, 13, 14, 15, 26, 27, 29, 30, 32, 34, 39, 40, 41, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 66, 67, 70, 72, 74, 75, 80, 81, 82, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 102, 134], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 66, 67, 72, 75, 80, 81, 82, 84, 85, 86, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "int": [2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 18, 26, 27, 28, 29, 30, 32, 34, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 69, 70, 72, 74, 75, 78, 80, 81, 85, 86, 92, 94, 97, 98, 99, 100, 101, 102, 120], "name": [2, 3, 4, 5, 7, 20, 22, 26, 27, 28, 29, 32, 47, 67, 68, 70, 72, 74, 86, 118, 120, 122, 134], "end": [2, 3, 4, 5, 34, 100, 113, 116, 117, 118, 125, 134], "effector": [2, 3, 4, 5, 113, 116, 117, 125, 134], "fill": [2, 4, 6, 7, 134], "occupi": 2, "http": [2, 46, 114, 119, 121, 122, 127, 128, 134], "doc": [2, 128], "omnivers": [2, 123, 127, 128], "nvidia": [2, 27, 28, 105, 107, 117, 118, 127, 128, 134], "com": [2, 46, 114, 119, 121, 122, 127, 128, 134], "app_isaacsim": 2, "advanced_tutori": 2, "tutorial_motion_generation_robot_description_editor": 2, "html": [2, 128], "radiu": [2, 20, 32, 34, 86, 116, 118, 134], "buffer": [2, 26, 39, 67, 72, 116, 118, 134], "pad": 2, "jacobian": [2, 5, 57], "self": [2, 4, 5, 6, 7, 10, 20, 22, 74, 116, 117, 120], "some": [2, 41, 72, 110, 114, 116, 117, 118, 119, 121, 122, 123, 127, 128, 134], "larg": [2, 117, 118], "avoid": [2, 105, 107, 117, 118, 119, 121, 127, 128, 134], "github": [2, 46, 114, 119, 121, 122, 127, 134], "ro": [2, 46, 130, 132, 134], "panda_moveit_config": 2, "pull": 2, "35": [2, 72], "issuecom": 2, "671333863": 2, "ignor": [2, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 134], "enabl": [2, 26, 27, 28, 29, 41, 49, 50, 52, 55, 56, 72, 76, 82, 98, 99, 108, 109, 110, 115, 116, 117, 118, 119, 122, 126, 127, 129, 134], "flag": [2, 7, 41, 56, 72, 118, 123], "write": [2, 128], "out": [2, 41, 44, 45, 86, 111, 116, 118], "cumul": 2, "matrix": [2, 12, 26, 31, 32, 41, 46, 72, 86], "global": [2, 105, 107, 116, 123, 127, 130], "allow": [2, 41, 48, 105, 107, 116, 119, 127, 128], "reus": 2, "dure": [2, 9, 11, 16, 23, 25, 31, 41, 48, 51, 53, 61, 63, 72, 110, 115, 118, 119, 122, 134], "15": [2, 96, 100, 134], "speedup": 2, "over": [2, 116, 118, 120, 126, 130], "recomput": 2, "path": [2, 3, 34, 36, 55, 85, 89, 98, 110, 114, 116, 117, 121, 122, 128, 134], "we": [2, 3, 26, 27, 28, 29, 41, 48, 67, 88, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 128, 130, 131, 134], "visual": [2, 32, 98, 117, 118, 119, 120], "export": [2, 114, 121, 122, 127], "when": [2, 28, 32, 56, 72, 98, 109, 115, 116, 117, 118, 119, 122, 123, 126, 127, 134], "root": [2, 86], "prim": [2, 7, 86, 128], "isaac": [2, 105, 106, 107, 109, 115, 118, 119, 122, 134], "server": 2, "chain": [2, 3, 117, 123, 126, 127, 128], "flip": 2, "lock": [2, 48, 55, 105, 106, 107, 110], "activ": [2, 55, 56, 110, 118, 119], "angl": [2, 11, 120], "dictionari": [2, 41, 44, 45, 48, 49, 116, 118, 134], "deprec": [2, 32], "n": [2, 5, 26, 27, 28, 29, 32, 34, 40, 46, 64, 67, 72, 81, 85, 94, 97, 112, 118], "properti": [2, 3, 5, 7, 32, 44, 48, 52, 55, 64, 67, 70, 72, 73, 74, 93, 97, 98, 99, 100, 102], "link_param": 2, "other_link": 2, "chain_link_nam": 2, "_type_": [2, 26, 32, 40, 48, 67, 74, 83, 88], "_description_": [2, 5, 9, 26, 28, 29, 30, 32, 39, 48, 64, 67, 72, 74, 83, 86, 88, 89, 94, 97, 98, 99, 100, 120], "option": [2, 3, 4, 5, 7, 26, 28, 32, 36, 39, 41, 48, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 67, 70, 73, 74, 81, 88, 97, 98, 100, 101, 103, 118, 119, 120, 121], "default": [2, 3, 5, 7, 28, 30, 32, 36, 39, 45, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 86, 88, 97, 98, 100, 110, 118, 122, 128, 134], "collision_threshold": 2, "q": [2, 3, 15, 16, 39, 40, 46, 52, 54, 72, 77, 93, 94, 97, 98, 100, 116, 120], "return": [2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 40, 41, 44, 45, 46, 48, 49, 51, 53, 55, 61, 63, 64, 66, 67, 72, 74, 77, 83, 84, 85, 86, 88, 89, 94, 97, 98, 99, 100, 101, 102, 103, 111, 116, 117, 118, 119, 120], "static": [3, 4, 5, 9, 11, 16, 23, 25, 26, 31, 32, 34, 41, 44, 45, 48, 49, 51, 53, 61, 63, 64, 69, 72, 73, 74, 82, 86, 93, 94, 97, 98, 99, 100, 117, 119], "doe": [3, 5, 7, 27, 40, 41, 48, 64, 94, 110, 116, 117, 118, 123, 134], "queri": [3, 26, 55, 56, 98, 108, 111, 115, 116, 117, 118, 119, 123, 125, 127, 130], "file_path": [3, 20, 32, 73, 86, 89, 116, 118, 120], "data_dict": [3, 32, 41, 44, 45, 48, 49], "note": [3, 4, 5, 6, 7, 32, 37, 48, 56, 67, 88, 94, 98, 118], "dof": [3, 17, 33, 34, 36, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 74, 81, 94, 95, 98, 123, 126], "e": [3, 9, 11, 16, 23, 25, 31, 41, 51, 53, 61, 63, 72, 94, 98, 110, 114, 117, 119, 120, 123, 127, 128, 134], "g": [3, 9, 11, 16, 23, 25, 31, 32, 41, 51, 53, 61, 63, 72, 94, 98, 110, 117, 118, 119, 120, 123, 127, 128, 134], "serial": 3, "get": [3, 4, 5, 7, 32, 41, 44, 45, 94, 98, 114, 117, 120, 122, 127, 128], "correct": 3, "issu": [3, 127, 134], "cover": 3, "full": [3, 46, 117], "batch_siz": [3, 9, 17, 55, 62, 64, 66, 67, 95, 99, 101, 120], "force_upd": [3, 64, 66], "reset_buff": [3, 33, 34], "calculate_jacobian": 3, "filter_valid": 3, "new_kin_config": 3, "numpi": [4, 120], "ndarrai": [4, 30, 32, 44, 45, 46, 72, 74], "factori": [4, 32, 81], "dict_data": 4, "build": [4, 6, 7, 27, 114, 116, 119, 120, 134], "parent": [4, 6, 7], "each": [4, 6, 7, 9, 11, 16, 23, 25, 29, 31, 32, 41, 44, 45, 46, 51, 53, 61, 63, 72, 108, 109, 115, 118, 127, 128, 134], "function": [4, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 44, 45, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 84, 94, 98, 111, 114, 116, 118, 120, 127], "_parent_map": [4, 6, 7], "attach": [4, 98, 115, 118, 134], "start": [4, 34, 36, 40, 41, 55, 98, 100, 109, 110, 114, 116, 117, 118, 119, 122, 134], "mesh_dir": [4, 6], "valu": [5, 7, 9, 11, 16, 23, 25, 26, 30, 31, 40, 41, 44, 45, 46, 51, 53, 55, 56, 57, 61, 63, 66, 71, 72, 84, 85, 98, 101, 114, 116, 118, 121, 134], "enumer": [5, 40, 44, 45, 46, 51, 53, 55, 57, 66, 71, 85, 101], "1": [5, 9, 11, 16, 17, 23, 25, 26, 27, 31, 32, 34, 36, 37, 39, 40, 43, 44, 45, 46, 48, 51, 53, 55, 56, 57, 59, 61, 63, 64, 66, 67, 71, 72, 75, 77, 80, 81, 85, 86, 93, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 112, 114, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 134], "2": [5, 9, 11, 16, 23, 25, 31, 37, 44, 45, 46, 51, 53, 55, 61, 63, 64, 66, 67, 71, 72, 81, 94, 97, 98, 100, 101, 105, 106, 107, 110, 114, 116, 118, 120, 121, 122, 134], "3": [5, 26, 28, 29, 31, 44, 46, 55, 66, 71, 72, 75, 81, 88, 94, 98, 101, 105, 106, 107, 114, 116, 118, 120, 121, 134], "4": [5, 26, 27, 28, 29, 31, 32, 56, 63, 66, 75, 86, 94, 101, 105, 107, 114, 116, 118, 121, 122, 126, 134], "5": [5, 34, 36, 55, 64, 66, 85, 88, 101, 105, 107, 116, 118, 120, 121, 122, 134], "7": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 74, 105, 106, 107, 114, 118, 120, 121, 125], "8": [5, 85, 118, 120, 122, 127], "9": [5, 98, 109, 134], "10": [5, 34, 36, 39, 63, 85, 92, 94, 98, 114, 116, 118, 120, 130], "11": [5, 114, 122], "new_jl": 5, "union": [5, 26, 32, 39, 40, 43, 44, 45, 48, 53, 55, 57, 74, 98], "500": [5, 96, 100, 118, 120, 134], "new_config": 5, "joint_position_upp": 5, "joint_position_low": 5, "sphere_position_radiu": 5, "start_sph_idx": 5, "updat": [5, 13, 14, 26, 27, 28, 29, 39, 40, 41, 43, 44, 45, 48, 49, 67, 109, 114, 117, 118, 119, 122, 134], "distanc": [5, 10, 20, 22, 26, 27, 28, 29, 33, 34, 55, 56, 57, 68, 70, 72, 94, 98, 111, 115, 116, 117, 118, 119, 120, 121, 127], "param": [5, 26, 31, 46, 49, 74], "sphere_radiu": [5, 30, 97, 98, 100], "sphere_tensor": [5, 97, 98, 100], "attached_object": [5, 97, 98, 100, 134], "_summary_": 5, "rais": [5, 32, 48, 67, 100], "valueerror": [5, 48], "detach": [5, 68, 74, 109], "number": [5, 9, 11, 16, 23, 25, 26, 31, 32, 39, 40, 41, 45, 51, 53, 61, 63, 72, 98, 118, 123, 130], "32": [5, 9, 98], "store": [5, 9, 11, 16, 23, 25, 26, 27, 31, 41, 44, 45, 51, 53, 61, 63, 72, 98, 114, 116, 118, 120, 127], "attribut": [5, 9, 11, 16, 23, 25, 31, 41, 51, 53, 61, 63, 72], "inform": [5, 45, 98, 115, 116, 125, 129], "x": [5, 7, 26, 28, 29, 32, 40, 41, 46, 55, 61, 72, 83, 85, 110, 125], "y": [5, 7, 26, 28, 29, 32, 55, 72, 85, 110, 112, 114, 122, 125, 134], "z": [5, 7, 26, 28, 29, 32, 55, 72, 110, 125, 134], "meter": [5, 32, 55, 72, 110], "b": [5, 26, 27, 28, 29, 32, 36, 39, 72, 94, 114], "defin": [5, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 113], "linear": [5, 76, 85, 88, 98, 100, 110, 120, 125], "angular": [5, 72, 110], "specifi": [5, 7, 55, 110, 116, 117, 118], "quaternion": [5, 12, 31, 67, 68, 72, 115, 116, 120], "r": [5, 9, 11, 16, 23, 25, 31, 32, 51, 53, 61, 63, 72, 77, 111, 118], "mesh_root": 6, "idx": [6, 74, 78, 81, 98], "flip_joint": 7, "flip_joint_limit": 7, "more": [7, 9, 11, 16, 23, 25, 27, 30, 31, 46, 51, 53, 61, 63, 72, 115, 116, 117, 118, 134], "complet": [7, 109], "solut": [7, 41, 88, 95, 97, 98, 100, 105, 107, 116, 117, 120, 121, 126], "avail": [7, 28, 89, 111, 114, 116, 117, 118, 119, 122, 127], "futur": [7, 117], "releas": [7, 105, 106, 107, 117, 118, 130], "account": [7, 26, 29, 118, 119, 122], "after": [7, 109, 117, 119], "stage": [7, 86, 109, 117], "specif": [7, 26, 29, 41, 74, 114, 117, 127, 134], "uniform": 7, "token": 7, "physic": 7, "match": [7, 134], "becaus": 7, "assum": [7, 26, 27, 28, 29, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 93, 117, 127, 128], "obtain": [7, 98, 105, 107, 111, 116, 117, 121], "body0_rel_target": 7, "body1_rel_target": 7, "child": [7, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "tupl": [7, 9, 11, 16, 23, 25, 30, 31, 51, 53, 61, 63, 72, 74, 94], "_backward_cl": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_call_cuda": [8, 11], "_call_backward_cuda": [8, 11], "out_dist": 9, "out_vec": 9, "sparse_index": 9, "robot_spher": [9, 11, 58, 62, 64], "collision_offset": 9, "weight": [9, 25, 26, 27, 28, 29, 35, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 117, 118], "coll_matrix": 9, "thread_siz": 9, "b_size": 9, "nsphere": 9, "compute_grad": 9, "arg": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 53, 61, 63, 64, 65, 72, 79, 120], "kwarg": [9, 11, 16, 23, 25, 26, 28, 29, 31, 48, 51, 53, 61, 63, 72, 79, 81], "ctx": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "sparse_idx": 9, "sphere_offset": 9, "max_thread": 9, "return_loss": [9, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "overridden": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72], "subclass": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 120], "There": [9, 11, 16, 23, 25, 27, 31, 51, 53, 61, 63, 72, 88, 118], "two": [9, 11, 16, 23, 25, 27, 31, 37, 51, 53, 61, 63, 67, 72, 108, 110, 117, 118, 119, 125, 127, 134], "wai": [9, 11, 16, 23, 25, 27, 31, 37, 51, 53, 61, 63, 67, 72, 118], "usag": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "combin": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 105, 107, 118, 130], "staticmethod": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "def": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 120], "It": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 116], "must": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "accept": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "context": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 127], "first": [9, 11, 16, 23, 25, 26, 31, 41, 51, 53, 61, 63, 72, 110, 111, 118, 119, 120], "argument": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 119, 127], "follow": [9, 11, 16, 23, 25, 31, 43, 44, 45, 46, 51, 53, 61, 63, 72, 85, 105, 107, 109, 111, 114, 115, 116, 117, 119, 120, 121, 122, 134], "see": [9, 11, 16, 23, 25, 30, 31, 51, 53, 56, 61, 63, 72, 105, 106, 107, 109, 110, 116, 117, 119, 131, 134], "detail": [9, 11, 16, 23, 25, 30, 31, 51, 53, 56, 61, 63, 72, 105, 106, 107, 115, 116, 117, 122, 134], "separ": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "setup_context": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "input": [9, 11, 16, 23, 25, 30, 31, 41, 46, 51, 53, 61, 63, 72, 111, 118, 119, 120, 126, 127], "output": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 116, 118, 120, 126], "The": [9, 11, 16, 22, 23, 25, 31, 51, 53, 56, 61, 63, 72, 98, 109, 110, 111, 117, 118, 119, 120, 122, 126, 134], "longer": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 121], "instead": [9, 11, 16, 23, 25, 31, 32, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 94, 110, 117, 118, 123, 127], "overrid": [9, 11, 16, 23, 25, 31, 40, 41, 51, 53, 61, 63, 72], "autograd": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "handl": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 134], "extend": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "arbitrari": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 116], "retriev": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "should": [9, 11, 16, 23, 25, 31, 40, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 118, 127, 134], "directli": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 114, 116, 117, 134], "though": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "enforc": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "compat": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "save": [9, 11, 16, 23, 25, 31, 41, 51, 53, 61, 63, 72, 76, 86, 118, 121], "either": [9, 11, 16, 23, 25, 31, 46, 51, 53, 61, 63, 72, 114, 128], "save_for_backward": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "thei": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "intend": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "equival": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "vjp": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "save_for_forward": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "jvp": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "grad_out_dist": 9, "formula": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "differenti": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 92, 94, 120], "oper": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 111], "mode": [9, 11, 16, 17, 23, 25, 27, 31, 44, 45, 51, 53, 55, 61, 63, 72, 98, 108, 117, 123], "automat": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 109, 110], "alia": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 114], "non": [9, 11, 16, 23, 25, 31, 51, 53, 56, 61, 63, 72, 117], "were": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 121], "gradient": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 51, 53, 61, 63, 72, 105, 107, 117, 119, 126], "w": [9, 11, 16, 23, 25, 31, 43, 44, 51, 53, 61, 63, 72, 111, 118, 131, 133], "t": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 53, 61, 63, 72, 77, 97, 111, 118, 119, 120], "correspond": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "If": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 114, 115, 116, 118, 119, 122, 127, 129, 134], "requir": [9, 11, 16, 23, 25, 26, 28, 31, 32, 51, 53, 61, 63, 72, 118, 119, 122, 134], "grad": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "just": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 134], "ha": [9, 11, 16, 23, 25, 26, 31, 45, 51, 53, 61, 63, 72, 92, 94, 114, 117, 118, 121, 125, 127, 134], "needs_input_grad": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "boolean": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "whether": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "have": [9, 11, 16, 23, 25, 31, 40, 51, 53, 56, 61, 63, 72, 108, 110, 114, 116, 117, 118, 122, 123, 127, 128, 131, 134], "selfcollisiondistancebackward": 9, "selfcollisiondistancelossbackward": 9, "out_position_dist": 9, "out_rotation_dist": 9, "out_p_vec": 9, "out_q_vec": 9, "out_idx": 9, "current_posit": 9, "goal_posit": 9, "current_quat": [9, 72], "goal_quat": [9, 72], "vec_weight": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "vec_converg": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "run_weight": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61], "run_vec_weight": [9, 50, 55], "offset_waypoint": [9, 50, 55], "offset_tstep_fract": [9, 50, 55], "batch_pose_idx": [9, 47, 55, 67], "horizon": [9, 17, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 55, 59, 62, 63, 64, 66, 67, 75, 76, 81, 88, 94, 109, 116, 118, 126], "num_goal": [9, 55], "write_grad": 9, "write_dist": 9, "use_metr": [9, 50, 55], "project_dist": [9, 50, 55], "out_grad_p": 9, "out_grad_q": 9, "grad_dist": 9, "grad_p_dist": 9, "grad_q_dist": 9, "pose_weight": [9, 94, 120], "grad_p_vec": 9, "grad_q_vec": 9, "use_dist": 9, "out_r_vec": 9, "out_p_grad": 9, "out_q_grad": 9, "grad_g_dist": 9, "grad_r_err": 9, "grad_out_idx": 9, "poseerrordistancebackward": 9, "error": [9, 95, 97, 98, 114, 116, 121, 123], "_extended_summary_": [9, 29], "poseerrorbackward": 9, "query_spher": [9, 25, 26, 27, 28, 29, 118, 127], "out_buff": [9, 72], "grad_out_buff": 9, "sparsity_idx": [9, 25], "activation_dist": [9, 25, 26, 27, 28, 29, 50, 51, 56], "max_dist": [9, 22, 25, 26], "box_accel": 9, "box_dim": 9, "box_pos": 9, "box_en": 9, "n_env_obb": 9, "env_query_idx": [9, 25, 26, 27, 28, 29, 56, 94, 118], "max_nob": 9, "n_sphere": [9, 27, 30, 32, 94, 116, 118], "transform_back": 9, "compute_dist": 9, "use_batch_env": [9, 34, 48, 97], "sum_collis": [9, 26, 27, 28, 29, 50, 56], "compute_esdf": [9, 25, 26, 27, 28, 29], "grad_output": [9, 16, 23, 25, 31], "sdfsphereobbbackward": 9, "speed_dt": [9, 25, 26, 27, 28, 29, 50, 56], "sweep_step": [9, 25, 26, 27, 28, 29, 50, 56], "enable_speed_metr": [9, 25, 26, 27, 28, 29], "sdfsweptsphereobbbackward": 9, "grid_featur": 9, "grid_param": 9, "grid_pos": 9, "grid_en": 9, "n_env_grid": 9, "sdfspherevoxelbackward": 9, "sdfsweptspherevoxelbackward": 9, "arg0": [10, 12, 13, 14, 18], "arg1": [10, 12, 13, 14, 18], "arg2": [10, 12, 13, 14, 18], "arg3": [10, 12, 13, 14, 18], "arg4": [10, 12, 13, 14, 18], "arg5": [10, 12, 13, 14, 18], "arg6": [10, 12, 13, 14, 18], "arg7": [10, 12, 13, 14, 18], "arg8": [10, 12, 13, 14, 18], "arg9": [10, 12, 13, 14, 18], "arg10": [10, 12, 13, 14, 18], "arg11": [10, 12, 13, 14, 18], "arg12": [10, 12, 13, 14, 18], "arg13": [10, 12, 13, 14, 18], "arg14": [10, 12, 14], "arg15": [10, 12, 14], "arg16": [10, 12], "arg17": [10, 12], "arg18": 10, "arg19": 10, "arg20": 10, "arg21": 10, "closest": [10, 118, 123], "point": [10, 20, 31, 32, 72, 94, 111, 117, 118, 123], "obb": [10, 26, 32, 118], "voxel": [10, 20, 22, 26, 29, 30, 32, 98, 105, 106, 107, 118, 119, 123], "arg22": 10, "arg23": 10, "arg24": 10, "arg25": 10, "swept": 10, "swpet": 10, "in_mat": [11, 31], "out_quat": [11, 31], "link_pos_out": 11, "link_quat_out": 11, "robot_sphere_out": 11, "global_cumul_mat": 11, "link_sphere_map": 11, "grad_out": [11, 72], "sparsity_opt": 11, "link_po": 11, "link_quat": 11, "b_robot_spher": 11, "joint_seq": 11, "grad_out_link_po": 11, "grad_out_link_quat": 11, "grad_out_spher": 11, "kinematicsfusedfunctionbackward": 11, "kinematicsfusedglobalcumulfunctionbackward": 11, "link_pos_seq": [11, 62, 64], "link_quat_seq": [11, 62, 64], "batch_robot_spher": 11, "q_in": [11, 120], "grad_out_q": [11, 31], "fuse": 12, "rotat": [12, 26, 31, 67, 68, 72, 97, 98, 125], "bfg": [13, 105, 107, 130], "step": [13, 18, 43, 44, 45, 63, 64, 81, 88, 95, 98, 99, 110, 111, 117, 119, 120, 122, 126, 130, 134], "line": [14, 37, 41, 110, 122, 126, 130], "best": [14, 30, 42, 45, 126], "best_x": 15, "best_c": 15, "best_grad": 15, "g_x": 15, "x_set": [15, 34], "sv": 15, "c": [15, 114, 130, 132], "c_idx": 15, "c_1": 15, "c_2": 15, "al": 15, "sw": 15, "aw": 15, "best_cost": 15, "best_q": 15, "best_iter": 15, "current_iter": 15, "d_opt": [15, 39], "iter": [15, 40, 41, 98, 115, 118, 119], "delta_threshold": 15, "1e": [15, 120], "05": [15, 34, 85, 93, 97, 98, 100, 116, 134], "relative_threshold": 15, "999": [15, 39, 40], "step_vec": 16, "rho_buff": [16, 39], "y_buffer": [16, 39], "s_buffer": [16, 39], "grad_q": [16, 39, 40], "x_0": 16, "grad_0": 16, "epsilon": [16, 38, 39], "stable_mod": [16, 38, 39], "use_shared_buff": 16, "lbfgscubackward": 16, "out_posit": [17, 31, 63], "out_veloc": [17, 63], "out_acceler": [17, 63], "out_jerk": [17, 63], "u_posit": 17, "start_posit": [17, 63], "start_veloc": [17, 63], "start_acceler": [17, 63], "start_idx": [17, 34, 63, 74], "traj_dt": [17, 63, 96, 98], "u_acc": 17, "use_rk2": 17, "out_grad_posit": [17, 63], "grad_posit": 17, "grad_veloc": 17, "grad_acceler": 17, "grad_jerk": 17, "path1": [19, 89], "path2": [19, 89], "sourc": [19, 28, 72, 89, 105, 106, 107, 114], "analyt": [20, 22, 26, 27, 28, 29], "sign": [20, 22, 26, 27, 28, 29, 116, 117, 118, 119, 120, 121], "environ": [20, 22, 26, 27, 28, 29, 67, 94, 97, 114, 119, 123, 134], "These": [20, 22, 108, 118, 121], "sdf_grid": [20, 22], "lookup_dist": [20, 22, 23], "compute_sdf_gradi": [20, 22, 23], "sdfgrid": [20, 22, 23], "create_collision_check": [20, 22, 24], "warp_primit": [20, 22], "sdfmeshwarppi": [20, 22, 25], "sweptsdfmeshwarppi": [20, 22, 25], "collisionbuff": [20, 22, 26, 127], "collisionquerybuff": [20, 22, 26, 27, 28, 29, 118], "collisioncheckertyp": [20, 22, 26, 94, 97, 98, 99, 100, 116], "worldcollisionconfig": [20, 22, 24, 26, 27, 28, 29, 118], "worldcollis": [20, 22, 26, 34, 48, 49, 56, 92, 94, 97, 98, 99, 100, 118], "worldprimitivecollis": [20, 22, 26, 28, 118], "world_blox": [20, 22, 118, 119], "worldbloxcollis": [20, 22, 27, 118, 119], "world_mesh": [20, 22, 118], "warpmeshdata": [20, 22, 28], "worldmeshcollis": [20, 22, 27, 28, 29, 118], "world_voxel": [20, 22], "worldvoxelcollis": [20, 22, 29], "sample_surfac": [20, 30, 118], "voxel_surfac": [20, 30, 118], "voxel_volum": [20, 30, 118], "voxel_volume_insid": [20, 30, 118], "voxel_volume_sample_surfac": [20, 27, 30, 32, 98, 118], "metal": [20, 26, 32, 86], "rough": [20, 26, 32, 86, 127], "scale": [20, 26, 32, 56, 68, 74, 86, 98, 118, 126], "color": [20, 26, 32, 86, 108, 117, 118, 120], "texture_id": [20, 26, 32], "textur": [20, 26, 32], "get_trimesh_mesh": [20, 32], "save_as_mesh": [20, 32], "get_cuboid": [20, 32], "get_mesh": [20, 32], "get_transform_matrix": [20, 32], "get_spher": [20, 32], "get_bounding_spher": [20, 22, 27, 32, 118], "dim": [20, 26, 28, 29, 32, 70, 72, 74, 86, 116, 118, 120], "tip": [20, 32, 118], "height": [20, 26, 32, 86, 118], "file_str": [20, 32], "vertic": [20, 22, 28, 32], "face": [20, 22, 28, 32], "vertex_color": [20, 32], "vertex_norm": [20, 32], "face_color": [20, 32], "update_materi": [20, 32], "get_mesh_data": [20, 32], "from_pointcloud": [20, 32], "map_path": [20, 32], "voxel_s": [20, 26, 29, 32], "integrator_typ": [20, 32], "mesh_file_path": [20, 32], "mapper_inst": [20, 32], "points_featur": [20, 32], "from_camera_observ": [20, 32], "feature_tensor": [20, 32], "xyzr_tensor": [20, 32], "feature_dtyp": [20, 32], "create_xyzr_tensor": [20, 32], "get_occupied_voxel": [20, 32], "blox": [20, 22, 26, 32, 98], "create_obb_world": [20, 32, 118], "create_mesh_world": [20, 32], "create_collision_support_world": [20, 32, 118], "get_scene_graph": [20, 32], "create_merged_mesh_world": [20, 32], "get_obb_world": [20, 32], "get_mesh_world": [20, 32], "get_collision_check_world": [20, 32], "save_world_as_mesh": [20, 32, 118], "get_cache_dict": [20, 32], "add_obstacl": [20, 32, 120], "randomize_color": [20, 32, 118], "add_color": [20, 32], "add_materi": [20, 32, 76, 86], "get_obstacl": [20, 32], "remove_obstacl": [20, 32], "remove_absolute_path": [20, 32], "_abc_impl": [20, 32, 47, 49, 62, 64, 65, 67, 68, 72, 74, 95, 97, 100], "neural": [22, 116], "network": [22, 105, 107, 116, 121], "learn": [22, 116], "field": [22, 43, 44, 45, 119], "distance_buff": [22, 26], "grad_distance_buff": [22, 26], "sparsity_index_buff": [22, 26], "shape": [22, 26, 31, 40, 41, 44, 68, 70, 72, 74, 75, 77, 81, 115, 116, 118, 120], "initialize_from_shap": [22, 26, 118], "_update_from_shap": [22, 26], "update_buffer_shap": [22, 26], "primitive_collision_buff": [22, 26], "mesh_collision_buff": [22, 26], "blox_collision_buff": [22, 26], "voxel_collision_buff": [22, 26], "create_from_shap": [22, 26], "get_gradient_buff": [22, 26, 50, 56], "primit": [22, 26, 56, 99, 117, 118, 119, 127], "world_model": [22, 26, 27, 28, 29, 34, 86, 91, 92, 94, 95, 97, 98, 100, 118, 120], "cach": [22, 26, 86, 118], "n_env": [22, 26, 28, 94, 95, 101, 127], "checker_typ": [22, 26], "load_from_dict": [22, 26], "load_collision_model": [22, 26, 27, 28, 29], "get_sphere_dist": [22, 26, 27, 28, 29, 118], "get_sphere_collis": [22, 26, 27, 28, 29], "get_swept_sphere_dist": [22, 26, 27, 28, 29], "get_swept_sphere_collis": [22, 26, 27, 28, 29], "get_sphere_trac": [22, 26], "get_voxels_in_bounding_box": [22, 26], "clear_voxelization_cach": [22, 26], "update_cache_voxel": [22, 26], "get_occupancy_in_bounding_box": [22, 26], "get_esdf_in_bounding_box": [22, 26], "get_mesh_in_bounding_box": [22, 26], "_init_cach": [22, 26, 28, 29], "load_batch_collision_model": [22, 26, 28, 29], "_load_collision_model_in_cach": [22, 26, 29], "_create_obb_cach": [22, 26], "add_obb_from_raw": [22, 26], "add_obb": [22, 26], "update_obb_dim": [22, 26], "enable_obstacl": [22, 26, 27, 28, 29, 118], "enable_obb": [22, 26], "update_obstacle_pos": [22, 26, 28, 29, 118], "update_obb_pos": [22, 26], "_get_obstacle_pos": [22, 26], "get_obb_idx": [22, 26], "clear_cach": [22, 26, 27, 28, 29], "clear_blox_lay": [22, 27], "_get_blox_sdf": [22, 27], "_get_blox_swept_sdf": [22, 27], "enable_blox": [22, 27], "update_blox_pos": [22, 27], "clear_bounding_box": [22, 27], "add_camera_fram": [22, 27, 95, 98], "process_camera_fram": [22, 27, 95, 98], "update_blox_hash": [22, 27], "update_blox_esdf": [22, 27], "update_blox_mesh": [22, 27], "get_mesh_from_blox_lay": [22, 27], "save_lay": [22, 27], "decay_lay": [22, 27], "m_id": [22, 28], "_load_mesh_to_warp": [22, 28], "_load_mesh_into_cach": [22, 28], "_load_batch_mesh_to_warp": [22, 28], "add_mesh": [22, 28, 118], "get_mesh_idx": [22, 28], "create_collision_cach": [22, 28, 118], "_create_mesh_cach": [22, 28], "update_mesh_pos": [22, 28], "update_all_mesh_pos": [22, 28], "update_mesh_pose_env": [22, 28], "update_mesh_from_warp": [22, 28], "enable_mesh": [22, 28], "_get_sdf": [22, 28], "_get_swept_sdf": [22, 28], "_create_voxel_cach": [22, 29], "_batch_tensor_voxel": [22, 29], "enable_voxel": [22, 29], "update_voxel_data": [22, 29], "update_voxel_featur": [22, 29], "update_voxel_pos": [22, 29], "get_voxel_idx": [22, 29], "get_voxel_grid": [22, 29], "pt": [23, 32, 34], "dist_matrix_flat": 23, "num_voxel": 23, "dist": 23, "sdfgridbackward": 23, "out_cost": [25, 51, 53], "out_grad": 25, "mesh_idx": 25, "mesh_pose_invers": 25, "mesh_en": 25, "n_env_mesh": 25, "sdfmeshwarppybackward": 25, "sweptsdfmeshwarppybackward": 25, "size": [26, 41, 72, 74, 115, 116, 118, 119, 123], "classmethod": [26, 48, 55, 67, 72, 80], "three": [26, 118, 125, 134], "main": [26, 118], "initi": [26, 36, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 72, 98, 111, 116, 118, 120, 130, 134], "collision_typ": [26, 118], "checker": [26, 98, 105, 106, 107, 116, 117, 119, 127], "nonetyp": [26, 51, 52, 53, 54, 55, 57, 58, 59], "01": [26, 30, 39, 56, 70, 96, 98, 99, 100, 116, 123, 134], "world_coll_checker_dict": [26, 48], "world_model_dict": [26, 48], "collision_query_buff": [26, 27, 28, 29], "via": [26, 27, 28, 29], "don": [26, 27, 28, 29, 119], "test": [26, 114, 117], "02": [26, 32, 34, 85, 86, 98], "new_grid": 26, "orient": [26, 32, 55, 72, 110, 117, 118], "bound": [26, 32, 33, 34, 41, 50, 51, 81, 85, 109, 118], "box": [26, 32, 117, 118], "For": [26, 67, 105, 107, 110, 117, 118, 119, 121, 131], "speed": [26, 56, 118, 134], "maximum": [26, 98], "instanti": 26, "read": [26, 109, 115, 117], "call": [26, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 72, 98, 108, 109, 112, 115, 116, 117, 123, 127], "world_config": [26, 29, 86, 94, 116, 118], "env_idx": [26, 27, 28, 29, 118], "fix_cache_refer": [26, 27, 28, 29], "world_config_list": [26, 28, 29], "obb_cach": [26, 28], "w_obj_pos": [26, 27, 28, 29], "obj_w_pos": [26, 27, 28, 29], "lenght": 26, "width": 26, "3x3": [26, 72], "obj_dim": [26, 28, 29], "env_obj_idx": [26, 28, 29], "dimens": [26, 28, 29, 32, 123], "give": [26, 28, 29, 116, 117], "obj_idx": [26, 28, 29], "grid": [26, 29, 105, 106, 107, 117, 120], "representaiton": 27, "nvblox": [27, 32, 105, 107, 108, 115, 116, 117, 118, 119, 121], "librari": [27, 28, 109, 117, 120, 122, 123, 127, 130], "depend": [27, 114], "pytorch": [27, 41, 92, 94, 115, 119, 122, 123, 127], "wrapper": [27, 119, 120, 128], "addition": [27, 128], "disk": [27, 116, 119], "onlin": 27, "both": [27, 34, 108, 134], "than": [27, 56, 105, 107, 115, 116, 118, 119, 121, 130, 134], "against": 27, "facilit": 27, "creation": 27, "layer_nam": 27, "bounding_box": [27, 98], "obstacle_nam": [27, 98], "surface_sphere_radiu": [27, 30, 32, 98], "002": [27, 32, 134], "fit_typ": [27, 30, 32], "voxelize_method": [27, 30, 32, 98], "rai": [27, 30, 32, 98], "pre_transform_pos": [27, 32], "clear_region": 27, "camera_observ": [27, 98], "process_aux": [27, 98], "file_nam": [27, 121], "arrai": [28, 84, 85], "int64": 28, "compil": [28, 114, 121, 122, 123, 127, 129], "load_obb_ob": 28, "mesh_list": 28, "new_mesh": [28, 118], "mesh_cach": 28, "same": [28, 67, 72, 88], "warp_mesh_idx": 28, "env_mesh_idx": 28, "euclidean": [29, 119], "voxel_cach": 29, "todo": [29, 48, 64, 83], "new_voxel": 29, "featur": [29, 92, 94, 105, 106, 107, 109, 110, 120], "fit": [30, 32, 118], "here": [30, 39, 40, 46, 110, 114, 116, 118, 131, 134], "sampl": [30, 41, 42, 43, 44, 45, 46, 81, 91, 94, 116, 117, 118, 120], "surfac": [30, 118], "intersect": [30, 118], "ocupio": [30, 118], "insid": [30, 118, 122, 123, 126], "along": [30, 40, 41, 43, 44, 45, 64, 110, 111, 117, 118], "trimesh": [30, 32], "n_cube": 30, "out_point": 31, "out_gp": [31, 51, 53], "out_gq": 31, "out_gpt": 31, "adj_matrix": 31, "matric": 31, "real": [31, 117], "part": [31, 110, 120], "qw": [31, 32], "qx": [31, 32], "qy": [31, 32], "qz": [31, 32], "out_mat": 31, "adj_quaternion": 31, "out_matrix": [31, 72], "position2": 31, "quaternion2": 31, "out_quaternion": 31, "adj_po": 31, "adj_quat": 31, "adj_pos2": 31, "adj_quat2": 31, "adj_posit": 31, "adj_point": 31, "transformpointbackward": 31, "batchtransformpointbackward": 31, "adj_position2": 31, "adj_quaternion2": 31, "grad_out_posit": 31, "grad_out_quaternion": 31, "batchtransformposebackward": 31, "transformposebackward": 31, "poseinversebackward": 31, "grad_out_mat": 31, "quattomatrixbackward": 31, "adj_mat": 31, "matrixtoquaternionbackward": 31, "uniqu": 32, "appli": 32, "process_color": 32, "notimplementederror": [32, 67, 100], "deriv": [32, 39, 40, 41, 48], "transform_with_pos": 32, "homogen": 32, "np": [32, 44, 45, 46, 74, 120], "x_length": 32, "y_length": 32, "z_length": 32, "pitch": 32, "world_pc": 32, "filter_close_point": 32, "tsdf": 32, "occup": [32, 119], "integr": [32, 64, 118, 119, 123], "camera_ob": [32, 93], "pc_obstacl": 32, "transform_to_origin": 32, "feature_threshold": 32, "sequenc": [32, 44, 45, 46, 48, 64, 67, 72, 74, 97, 100, 109, 110], "current_world": 32, "merge_mesh": 32, "mesh_process": 32, "save_as_scene_graph": 32, "random": [32, 42, 44, 116, 118, 126], "within": [32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 105, 107, 111, 114, 118, 119, 130], "rang": [32, 72, 118, 120], "rgba": 32, "_abc": [32, 49, 64, 65, 67, 72, 74, 97, 100], "_abc_data": [32, 49, 64, 65, 67, 72, 74, 97, 100], "success": [33, 34, 80, 95, 97, 98, 100, 116, 121], "start_q": [33, 34], "goal_q": [33, 34], "path_length": [33, 34], "solve_tim": [33, 34, 80, 90, 95, 97, 98, 100, 102], "interpolated_plan": [33, 34, 95, 98], "valid_queri": [33, 34, 95, 98], "debug_info": [33, 34, 37, 39, 40, 41, 43, 44, 45, 95, 97, 98, 100], "optimized_dt": [33, 34, 95, 98, 100, 116], "path_buffer_last_tstep": [33, 34, 95, 98, 100], "node": [33, 34], "edg": [33, 34], "connect": [33, 34], "shortest_path_length": [33, 34], "set_shortest_path_length": [33, 34], "get_node_dist": [33, 34], "max_nod": [33, 34], "steer_delta_buff": [33, 34], "sample_pt": [33, 34], "node_similarity_dist": [33, 34], "rejection_ratio": [33, 34, 91, 92, 94], "k_nn": [33, 34, 36], "c_max": [33, 34, 36], "vertex_n": [33, 34], "graph_max_attempt": [33, 34], "graph_min_attempt": [33, 34], "init_nod": [33, 34], "use_bias_nod": [33, 34], "rollout_fn": [33, 34, 37, 39, 40, 41, 43, 44, 45, 47, 48, 67, 90, 95, 97, 99, 100, 102, 116], "safety_rollout_fn": [33, 34], "max_buff": [33, 34], "max_cg_buff": [33, 34], "compute_metr": [33, 34, 90, 95, 99, 100, 102], "interpolation_typ": [33, 34, 95, 98, 100], "interpolation_step": [33, 34, 86, 95, 98, 100], "seed": [33, 34, 41, 42, 43, 44, 45, 76, 81, 95, 97, 98, 100, 102, 103, 105, 107, 123, 126, 130], "use_cuda_graph_mask_sampl": [33, 34], "distance_weight": [33, 34], "bias_nod": [33, 34, 95, 100], "interpolation_dt": [33, 34, 85, 95, 98, 100, 116], "interpolation_devi": [33, 34], "interpolation_acceleration_scal": [33, 34], "load_from_robot_config": [33, 34, 95, 97, 98, 99, 100, 110, 116], "check_feas": [33, 34], "get_feasible_sample_set": [33, 34], "mask_sampl": [33, 34], "_mask_samples_cuda_graph": [33, 34], "_mask_sampl": [33, 34], "_cuda_graph_rollout_constraint": [33, 34], "get_sampl": [33, 34, 76, 81], "_sample_pt": [33, 34], "get_biased_vertex_set": [33, 34], "_compute_rotation_fram": [33, 34], "get_new_vertex_set": [33, 34], "validate_graph": [33, 34], "get_graph_edg": [33, 34], "get_graph": [33, 34], "_validate_graph": [33, 34], "_get_graph_shortest_path": [33, 34], "batch_get_graph_shortest_path": [33, 34], "batch_shortcut_path": [33, 34], "get_node_idx": [33, 34], "get_path_length": [33, 34, 35], "get_graph_shortest_path_length": [33, 34], "path_exist": [33, 34, 35], "batch_path_exist": [33, 34], "find_path": [33, 34], "_find_path": [33, 34, 36], "compute_path_length": [33, 34], "reset_graph": [33, 34, 35], "_distanc": [33, 34], "_hybrid_nearest": [33, 34], "_nearest": [33, 34], "_k_nearest": [33, 34], "_batch_k_nearest": [33, 34], "_near": [33, 34], "_batch_steer_and_connect": [33, 34], "_batch_steer": [33, 34], "_add_batch_edges_to_graph": [33, 34], "add_nodes_to_graph": [33, 34], "_add_unique_nodes_to_graph": [33, 34], "connect_nod": [33, 34], "get_path": [33, 34, 95, 98], "get_metr": [33, 34, 47, 48, 67, 90, 102], "reset_se": [33, 34, 37, 41, 42, 44, 47, 67, 90, 95, 97, 98, 100, 102], "reset_cuda_graph": [33, 34, 37, 38, 40, 41, 47, 48, 67, 90, 95, 97, 99, 100, 102], "get_all_rollout_inst": [33, 34, 37, 41, 90, 95, 97, 98, 100, 102], "warmup": [33, 34, 36, 95, 98, 116], "add_nod": [33, 35], "add_edg": [33, 35], "update_graph": [33, 35, 98], "get_edg": [33, 35], "get_shortest_path": [33, 35], "_add_bias_graph": [33, 36], "_find_one_path": [33, 36], "_find_all_path": [33, 36], "build_graph": [33, 36], "graph_dict": 34, "use_cuda_graph": [34, 37, 39, 40, 41, 43, 44, 45, 93, 95, 97, 98, 99, 100, 102, 116], "robot_cfg": [34, 48, 49, 64, 95, 97, 98, 99, 100, 116, 134], "world_coll_check": [34, 47, 48, 49, 50, 56, 95, 97, 98, 99, 100], "base_cfg_fil": [34, 97, 98, 100], "base_cfg": [34, 97, 98, 99, 100], "yml": [34, 94, 97, 98, 100, 114, 116, 117, 120, 121, 125, 134], "graph_fil": [34, 98], "self_collision_check": [34, 97, 98, 99, 100, 116], "x_sampl": 34, "n_sampl": 34, "unit_bal": 34, "123": [34, 81], "x_start": [34, 36], "x_goal": [34, 36], "c_min": [34, 36], "lazi": [34, 36], "locat": [34, 109, 118, 119, 127, 134], "start_node_idx": [34, 35], "goal_node_idx": [34, 35], "return_length": [34, 35], "start_idx_list": 34, "goal_idx_list": 34, "g_path": 34, "goal_idx": [34, 53], "goal_stat": [34, 47, 67, 98, 100, 101], "exact": [34, 55, 110], "all_path": [34, 36], "x_init": [34, 36], "abstract": [34, 41, 45, 48, 65, 66, 67, 118], "x_search": 34, "c_search": 34, "batch_pt": 34, "norm": [34, 77, 120], "sample_nod": 34, "k_n": 34, "sample_point": 34, "current_graph": 34, "k": 34, "start_nod": 34, "goal_nod": 34, "add_steer_pt": 34, "add_exact_nod": 34, "descript": [34, 36, 72, 97, 122, 134], "desired_nod": 34, "steer_radiu": 34, "new_nod": 34, "skip_unique_check": 34, "connect_mod": 34, "knn": 34, "edge_set": 34, "path_list": 34, "edge_list": 35, "node_list": 35, "start_i": 35, "end_i": 35, "attribu": 35, "x_init_batch": 36, "x_goal_batch": 36, "node_set_batch": 36, "node_set": 36, "find": [36, 41, 67, 98, 105, 107, 117, 118, 126], "return_path_length": 36, "h": [36, 63, 64], "number_of_nod": 36, "bias_sampl": 36, "lazy_nod": 36, "numer": [37, 105, 107], "opim": 37, "popular": 37, "particle_opt_bas": [37, 42, 43, 44], "particleoptbas": [37, 42, 44, 45, 102], "quasi": [37, 38, 41], "newton_bas": [37, 38, 39, 126], "newtonoptbas": [37, 38, 39, 40, 102, 126], "scheme": [37, 130], "tri": [37, 117, 118], "differ": [37, 56, 67, 98, 105, 107, 110, 114, 116, 118, 119, 127, 134], "magnitud": [37, 41], "parallel": [37, 41, 42, 43, 67, 105, 107, 117, 118, 126, 132], "choos": [37, 44, 45], "largest": 37, "satisfi": [37, 98, 117], "condit": 37, "lbfg": [37, 38, 126], "jit_lbfgs_compute_step_direct": [37, 38, 39], "lbfgsoptconfig": [37, 38, 39], "lbfgsopt": [37, 38, 39], "linesearchtyp": [37, 38, 39, 40], "newtonoptconfig": [37, 38, 39, 40], "parallel_": [37, 42], "parallelesconfig": [37, 42, 43], "parallel_mppi": [37, 42, 43], "baseactiontyp": [37, 42, 43, 44], "covtyp": [37, 42, 43, 44], "parallelmppiconfig": [37, 42, 43, 44], "parallelmppi": [37, 42, 43, 44], "samplemod": [37, 42, 43, 44, 45], "particleoptinfo": [37, 42, 45], "particleoptconfig": [37, 42, 44, 45], "particle_opt_util": [37, 42, 43, 44], "squashtyp": [37, 42, 43, 44, 46], "scale_ctrl": [37, 42, 46], "get_stomp_cov": [37, 42, 46], "gaussian_logprob": [37, 42, 46], "gaussian_logprobgrad": [37, 42, 46], "gaussian_entropi": [37, 42, 46], "gaussian_kl": [37, 42, 46], "cost_to_go": [37, 42, 46], "cost_to_go_np": [37, 42, 46], "matrix_choleski": [37, 42, 46], "batch_choleski": [37, 42, 46], "d_action": [37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 67, 76, 81], "action_low": [37, 39, 40, 41, 43, 44, 45, 46], "action_high": [37, 39, 40, 41, 43, 44, 45, 46], "action_horizon": [37, 39, 40, 41, 43, 44, 45, 47, 48, 62, 64, 67], "n_iter": [37, 39, 40, 41, 43, 44, 45], "cold_start_n_it": [37, 39, 40, 41, 43, 44, 45], "store_debug": [37, 39, 40, 41, 43, 44, 45, 97, 100], "n_problem": [37, 39, 40, 41, 43, 44, 45, 102], "num_particl": [37, 39, 40, 41, 43, 44, 45, 48, 81], "sync_cuda_tim": [37, 39, 40, 41, 43, 44, 45, 90, 95, 97, 98, 99, 100, 102], "use_coo_spars": [37, 39, 40, 41, 43, 44, 45], "create_data_dict": [37, 41, 42, 44, 45], "update_param": [37, 41, 47, 48, 49, 67, 90, 102], "reset": [37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 67, 76, 81, 82, 90, 95, 98, 99, 102, 103, 123], "update_nproblem": [37, 38, 39, 40, 41, 42, 45, 90, 102], "get_nproblem_tensor": [37, 41], "reset_shap": [37, 41, 47, 48, 67, 90, 95, 97, 100, 102], "_optim": [37, 38, 40, 41, 42, 45], "_shift": [37, 38, 39, 40, 41, 90, 103], "_update_problem_kernel": [37, 41], "histori": [38, 39, 119], "use_cuda_kernel": [38, 39], "use_shared_buffers_kernel": [38, 39], "init_hessian": [38, 39], "_get_step_direct": [38, 39, 40], "_update_q": [38, 39], "_update_r": [38, 39], "_update_buff": [38, 39], "_shift_buff": [38, 39], "greedi": [38, 40], "armijo": [38, 40], "wolf": [38, 40], "strong_wolf": [38, 40], "approx_wolf": [38, 40], "line_search_scal": [38, 39, 40], "cost_converg": [38, 39, 40], "cost_delta_threshold": [38, 39, 40], "fixed_it": [38, 39, 40, 100], "inner_it": [38, 39, 40], "line_search_typ": [38, 39, 40], "use_cuda_line_search_kernel": [38, 39, 40], "use_cuda_update_best_kernel": [38, 39, 40], "min_it": [38, 39, 40], "step_scal": [38, 39, 40], "last_best": [38, 39, 40], "use_temporal_smooth": [38, 39, 40], "cost_relative_threshold": [38, 39, 40], "_opt_it": [38, 40], "_opt_step": [38, 40], "clip_bound": [38, 40], "scale_step_direct": [38, 40], "project_bound": [38, 40], "_compute_cost_gradi": [38, 40], "_wolfe_line_search": [38, 40], "_greedy_line_search": [38, 40], "_armijo_line_search": [38, 40], "_approx_line_search": [38, 40], "check_converg": [38, 40, 42, 45], "_update_best": [38, 40], "_initialize_opt_iters_graph": [38, 40], "_create_box_line_search": [38, 40], "_call_opt_iters_graph": [38, 40], "_create_opt_iters_graph": [38, 40], "alpha_buff": 39, "m": [39, 114, 119, 134], "problem": [39, 40, 41, 44, 45, 98, 110, 112, 115, 116, 118, 121, 123, 127, 130], "reimplement": [39, 40], "descent": [39, 40, 105, 107, 126], "r_init": 39, "shift_step": [39, 40, 41, 45, 48, 64, 67, 99, 102, 103], "shift": [39, 40, 41, 63], "shift_d": 39, "workaround": [40, 41], "variabl": [40, 41, 64, 114, 127, 131, 133], "hotstart": [40, 41], "next": [40, 41, 45, 115, 117, 119, 120, 134], "timestep": [40, 41, 55, 56, 86, 88, 98, 110, 123], "opt_tensor": [40, 41], "mpc": [40, 41, 90, 95, 117, 119], "warm": [40, 41], "run": [40, 41, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 98, 105, 107, 114, 115, 116, 117, 119, 120, 122, 126, 129, 134], "dx": 40, "step_direct": 40, "per": [41, 98, 117, 118, 127], "lower": [41, 117, 121], "higher": [41, 121], "total": 41, "like": [41, 134], "cold": 41, "few": [41, 110, 117, 126], "captur": [41, 115, 116], "replai": [41, 98, 115], "eager": 41, "execut": [41, 44, 45, 98, 117, 121], "make": [41, 88, 114, 116, 122], "10x": [41, 98, 115, 116], "faster": [41, 98, 105, 107, 115, 118, 121, 130], "But": [41, 123], "chang": [41, 98, 108, 110, 114, 115, 116, 117, 119, 121, 123], "control": [41, 43, 44, 45, 99, 131, 133], "flow": [41, 118], "record": [41, 98, 115, 116], "everi": [41, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 117, 119, 127], "disabl": [41, 98, 109, 127, 129], "mppi": [41, 105, 107, 119, 126, 131, 133], "roll": [41, 44, 45], "mean": [41, 42, 44, 45, 46, 116, 120, 121], "synchron": 41, "befor": [41, 98, 114, 117, 121, 122, 126, 127, 134], "time": [41, 64, 76, 80, 85, 116, 117, 118, 121, 127], "matmul": 41, "spars": [41, 123], "version": [41, 114, 122], "do": [41, 72, 116, 117, 118, 122, 134], "coo": 41, "profil": 41, "child_dict": [41, 44, 45], "through": [41, 56, 110, 111, 114, 117, 118, 119, 120], "n_particl": 41, "reiniti": [41, 123], "learning_r": [42, 43], "_compute_mean": [42, 43, 44], "_exp_util_from_cost": [42, 43, 44], "_exp_util": [42, 43, 44], "_compute_mean_covari": [42, 43, 44], "_update_distribut": [42, 43, 44, 45], "repeat": [42, 44, 68, 72, 110, 120, 127], "null": [42, 44, 57, 134], "sigma_i": [42, 44], "diag_a": [42, 44], "full_a": [42, 44], "full_ha": [42, 44], "init_mean": [42, 43, 44], "init_cov": [42, 43, 44], "base_act": [42, 43, 44], "step_size_mean": [42, 43, 44], "step_size_cov": [42, 43, 44], "null_act_frac": [42, 43, 44], "squash_fn": [42, 43, 44, 46], "cov_typ": [42, 43, 44, 46], "sample_param": [42, 43, 44], "update_cov": [42, 43, 44], "random_mean": [42, 43, 44], "beta": [42, 43, 44], "alpha": [42, 43, 44], "gamma": [42, 43, 44, 45], "kappa": [42, 43, 44], "sample_per_problem": [42, 43, 44], "get_rollout": [42, 44, 90, 103], "reset_distribut": [42, 44], "_compute_total_cost": [42, 44], "_compute_covari": [42, 44], "_update_cov_scal": [42, 44], "sample_act": [42, 44, 45], "update_se": [42, 44, 45], "update_init_mean": [42, 44], "reset_mean": [42, 44], "reset_covari": [42, 44], "_get_action_seq": [42, 44, 45], "_calc_val": [42, 44, 45], "squashed_mean": [42, 44], "full_cov": [42, 44], "full_inv_cov": [42, 44], "full_scale_tril": [42, 44], "entropi": [42, 44, 46], "update_sampl": [42, 44], "generate_rollout": [42, 44, 45], "info": [42, 45, 46, 79, 114], "sample_mod": [42, 43, 44, 45], "calculate_valu": [42, 43, 44, 45], "store_rollout": [42, 43, 44, 45, 99], "_initialize_cuda_graph": [42, 45], "_call_cuda_opt_it": [42, 45], "_run_opt_it": [42, 45], "update_num_particles_per_problem": [42, 45], "clamp": [42, 46], "clamp_rescal": [42, 46], "tanh": [42, 46, 120], "ident": [42, 46, 50, 57], "total_cost": [43, 44], "distribut": [43, 44, 45], "observ": [43, 44, 45], "calcul": [44, 45, 46, 121], "exponenti": 44, "new_cov": 44, "init_act": [44, 45], "system": [44, 45, 85, 131, 133], "how": [44, 45, 114, 115, 116, 117, 118, 120], "plai": [44, 45, 110, 114, 117, 119, 134], "base_se": [44, 81], "correl": [44, 81], "noisi": [44, 81, 130], "autoregress": [44, 81], "polici": [44, 45, 105, 107, 121], "result": [44, 45, 86, 97, 98, 100, 105, 107, 108, 116, 118], "simul": [44, 45, 48, 117, 119], "converg": 45, "calc_val": 45, "estim": [45, 130], "side": 45, "num_particles_per_problem": 45, "ctrl": 46, "cov_mod": [46, 76, 81], "acc": [46, 51, 74], "return_m": 46, "covari": 46, "stomp": 46, "motion": [46, 89, 98, 105, 107, 110, 114, 118, 125, 131, 132, 133, 134], "planner": [46, 56, 98, 105, 107, 108, 112, 130], "coeffici": 46, "en": 46, "wikipedia": 46, "org": [46, 114, 134], "wiki": [46, 134], "finite_difference_coeffici": 46, "industri": [46, 134], "stomp_ro": 46, "blob": 46, "7fe40fbe6ad446459d8d4889916c64e276dbf882": 46, "stomp_cor": 46, "src": [46, 134], "cpp": 46, "l36": 46, "cov": [46, 81], "gaussian": [46, 81], "log": [46, 86, 120, 121], "prob": 46, "num_sampl": [46, 81], "log_prob": 46, "probabl": 46, "multivari": 46, "choleski": 46, "decomposit": 46, "mean0": 46, "cov0": 46, "mean1": 46, "cov1": 46, "kl": 46, "diverg": 46, "p": [46, 114, 121], "e_": [46, 120], "cost_seq": 46, "gamma_seq": 46, "only_first": 46, "discount": 46, "go": [46, 110, 116, 119, 120], "bound_cost": [47, 48, 49, 50, 91, 92, 94], "boundcosttyp": [47, 50, 51], "boundcostconfig": [47, 48, 49, 50, 51], "boundcost": [47, 50, 51, 92, 94], "warpboundsmoothfunct": [47, 50, 51], "warpboundfunct": [47, 50, 51], "warpboundposfunct": [47, 50, 51], "warpboundposloss": [47, 50, 51], "cost_bas": [47, 49, 50], "costconfig": [47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "costbas": [47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61], "dist_cost": [47, 48, 49, 50, 57], "disttyp": [47, 50, 53, 57], "distcostconfig": [47, 48, 49, 50, 53, 57], "l2distfunct": [47, 50, 53], "distcost": [47, 49, 50, 53, 57], "manipulability_cost": [47, 48, 49, 50], "manipulabilitycostconfig": [47, 48, 49, 50, 54], "manipulabilitycost": [47, 50, 54], "pose_cost": [47, 49, 50, 91, 92, 94, 110], "poseerrortyp": [47, 50, 55], "posecostconfig": [47, 49, 50, 55], "posecostmetr": [47, 49, 50, 55, 97, 98, 100, 110], "posecost": [47, 49, 50, 55, 92, 94], "primitive_collision_cost": [47, 48, 49, 50, 92, 94, 118], "primitivecollisioncostconfig": [47, 48, 49, 50, 56, 118], "primitivecollisioncost": [47, 50, 56, 92, 94], "projected_dist_cost": [47, 50], "projtyp": [47, 50, 57], "projecteddistcostconfig": [47, 50, 57], "projecteddistcost": [47, 50, 57], "self_collision_cost": [47, 48, 49, 50, 91, 92, 94, 120], "selfcollisioncostconfig": [47, 48, 49, 50, 58], "selfcollisioncost": [47, 50, 58, 92, 94], "stop_cost": [47, 48, 49, 50], "stopcostconfig": [47, 48, 49, 50, 59], "stopcost": [47, 50, 59], "straight_line_cost": [47, 50], "straightlinecost": [47, 50, 60], "zero_cost": [47, 50], "squaredsum": [47, 50, 61], "runsquaredsum": [47, 50, 61], "zerocost": [47, 50, 61], "integration_util": [47, 62], "build_clique_matrix": [47, 62, 63], "build_fd_matrix": [47, 62, 63], "build_int_matrix": [47, 62, 63], "build_start_state_mask": [47, 62, 63], "tensor_step_jerk": [47, 62, 63], "euler_integr": [47, 62, 63], "tensor_step_acc": [47, 62, 63], "cliquetensorstep": [47, 62, 63], "cliquetensorstepkernel": [47, 62, 63], "cliquetensorstepidxkernel": [47, 62, 63], "cliquetensorstepcentraldifferencekernel": [47, 62, 63], "cliquetensorstepidxcentraldifferencekernel": [47, 62, 63], "cliquetensorstepcoalescekernel": [47, 62, 63], "accelerationtensorstepkernel": [47, 62, 63], "accelerationtensorstepidxkernel": [47, 62, 63], "tensor_step_pos_cliqu": [47, 62, 63], "step_acc_semi_eul": [47, 62, 63], "tensor_step_acc_semi_eul": [47, 62, 63], "tensor_step_vel": [47, 62, 63], "tensor_step_po": [47, 62, 63], "tensor_step_pos_ik": [47, 62, 63], "tensor_linspac": [47, 62, 63], "sum_matrix": [47, 62, 63], "interpolate_kernel": [47, 62, 63], "action_interpolate_kernel": [47, 62, 63], "kinematic_model": [47, 48, 49, 59, 62], "timetrajconfig": [47, 59, 62, 64], "kinematicmodelst": [47, 48, 49, 62, 64, 98], "kinematicmodelconfig": [47, 48, 49, 62, 64], "kinematicmodel": [47, 62, 64], "model_bas": [47, 62], "dynamicsmodelbas": [47, 62, 65], "tensorsteptyp": [47, 62, 66], "tensorstepbas": [47, 62, 66], "tensorstepacceler": [47, 62, 66], "tensorsteppositionteleport": [47, 62, 66], "tensorstepposit": [47, 62, 66], "tensorsteppositioncliqu": [47, 62, 66], "tensorstepaccelerationkernel": [47, 62, 66], "tensorsteppositioncliquekernel": [47, 62, 66], "bound_cfg": [47, 48, 49], "null_space_cfg": [47, 48, 49], "manipulability_cfg": [47, 48, 49], "stop_cfg": [47, 48, 49], "self_collision_cfg": [47, 48, 49], "primitive_collision_cfg": [47, 48, 49], "_get_base_kei": [47, 48, 49], "_get_formatted_dict": [47, 48], "model_cfg": [47, 48, 49], "cost_cfg": [47, 48, 49], "constraint_cfg": [47, 48, 49], "convergence_cfg": [47, 48, 49], "model_from_dict": [47, 48], "cost_from_dict": [47, 48, 49], "world_coll_checker_from_dict": [47, 48], "_init_after_config_load": [47, 48, 67], "cost_fn": [47, 48, 49, 67], "constraint_fn": [47, 48, 67], "get_metrics_cuda_graph": [47, 48, 67], "convergence_fn": [47, 48, 49, 67], "_get_augmented_st": [47, 48], "compute_kinemat": [47, 48, 95, 98, 116], "rollout_constraint": [47, 48, 67], "rollout_constraint_cuda_graph": [47, 48], "get_ee_pos": [47, 48], "current_cost": [47, 48, 67], "filter_robot_st": [47, 48, 62, 64, 65, 67], "get_robot_command": [47, 48, 62, 64, 65, 67], "action_bound_low": [47, 48, 62, 64, 67], "action_bound_high": [47, 48, 62, 64, 67], "state_bound": [47, 48, 67], "dt": [47, 48, 51, 52, 56, 63, 64, 65, 66, 67, 74, 76, 82, 85, 86, 98, 100, 117, 120], "get_init_action_seq": [47, 48, 67], "get_action_from_st": [47, 48, 62, 64, 67], "get_state_from_act": [47, 48, 62, 64, 67], "cspace_config": [47, 48, 67], "get_full_dof_from_solut": [47, 48, 67], "retract_st": [47, 48, 67], "update_traj_dt": [47, 48, 62, 64], "update_cost_dt": [47, 48], "cspace_error": [47, 49, 95, 98, 100], "position_error": [47, 49, 80, 95, 97, 98, 100], "rotation_error": [47, 49, 95, 97, 98, 100], "pose_error": [47, 49, 100], "goalset_index": [47, 49, 95, 97, 98, 100], "null_space_error": [47, 49], "pose_cfg": [47, 49], "cspace_cfg": [47, 49], "straight_line_cfg": [47, 49], "zero_acc_cfg": [47, 49], "zero_vel_cfg": [47, 49], "zero_jerk_cfg": [47, 49], "link_pose_cfg": [47, 49], "enable_pose_cost": [47, 49, 95, 99], "enable_cspace_cost": [47, 49, 95, 99], "get_pose_cost": [47, 49], "update_pose_cost_metr": [47, 49, 95, 97, 98, 100], "constraint": [47, 49, 55, 67, 98, 110, 115, 117], "feasibl": [47, 49, 67], "goal_pos": [47, 55, 67, 86, 95, 97, 98, 101], "links_goal_pos": [47, 67], "current_st": [47, 48, 64, 65, 67, 81, 99], "batch_goal_state_idx": [47, 67], "batch_retract_state_idx": [47, 67], "batch_current_state_idx": [47, 67], "batch_enable_idx": [47, 67], "batch_world_idx": [47, 67], "update_batch_idx_buff": [47, 67], "n_goalset": [47, 67, 68, 72, 95, 98, 101], "_update_batch_s": [47, 67, 95, 99], "repeat_se": [47, 67, 68, 72, 74], "_tensor_repeat_se": [47, 67], "apply_kernel": [47, 67, 68, 72, 74], "_copy_buff": [47, 67], "_copy_tensor": [47, 67], "get_batch_goal_st": [47, 67], "create_index_buff": [47, 67], "create_idx": [47, 67], "sum_horizon": [47, 48, 49, 67], "action_bound": [47, 67], "update_start_st": [47, 67], "sample_random_act": [47, 67], "robot_config": [48, 62, 64, 94, 95, 97, 100], "cost_key_list": 48, "model_data_dict": 48, "cost_data_dict": [48, 49], "constraint_data_dict": 48, "convergence_data_dict": 48, "declar": 48, "reach": [48, 55, 98, 110, 113, 117, 119], "cartesian": [48, 98, 116, 134], "action_batch": [48, 49], "return_list": 48, "out_metr": [48, 49, 67], "urdfmodelst": 48, "act_seq": [48, 64, 65, 67, 102, 103], "encount": 48, "action_seq": 48, "d_act": 48, "target": [48, 53, 67, 98, 108, 110, 114, 117, 119], "no_col": 48, "return_st": 48, "state_idx": [48, 64, 67], "start_stat": [48, 64, 65, 66, 67, 86, 98, 100, 116], "q_j": [48, 67], "q_sol": 48, "base_dt": [48, 62, 64, 100], "max_dt": [48, 62, 64, 95, 96, 100], "base_ratio": [48, 62, 64, 100], "clone_st": [49, 67], "term": [49, 117, 126], "dynam": [49, 84, 119], "include_link_pos": 49, "include_converg": 49, "bounds_smooth": [50, 51], "smooth_weight": [50, 51, 98, 100], "run_weight_veloc": [50, 51], "run_weight_acceler": [50, 51], "run_weight_jerk": [50, 51], "cost_typ": [50, 51, 55], "state_finite_difference_mod": [50, 51, 62, 64, 98, 100], "set_bound": [50, 51], "update_dt": [50, 51, 52, 56, 62, 64, 66], "classifi": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "termin": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 117], "max_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "hinge_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "threshold_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "update_vec_weight": [50, 52], "_init_post_config": [50, 52, 53], "disable_cost": [50, 52], "enable_cost": [50, 52], "update_weight": [50, 52], "l1": [50, 53], "l2": [50, 53, 57, 98], "squared_l2": [50, 53], "dist_typ": [50, 53, 57], "use_null_spac": [50, 53, 57], "forward_target": [50, 53], "forward_target_idx": [50, 53], "use_joint_limit": [50, 54], "manipul": [50, 54, 105, 107, 109, 118, 119, 130, 131, 133], "joint_limited_manipulability_delta": [50, 54], "single_go": [50, 55], "batch_goal": [50, 55], "goalset": [50, 55, 72, 95, 98, 101], "batch_goalset": [50, 55, 95, 101], "use_projected_dist": [50, 55], "hold_partial_pos": [50, 55], "release_partial_pos": [50, 55], "hold_vec_weight": [50, 55, 110], "reach_partial_pos": [50, 55], "reach_full_pos": [50, 55], "reach_vec_weight": [50, 55], "offset_posit": [50, 55, 110], "offset_rot": [50, 55], "remove_offset_waypoint": [50, 55], "create_grasp_approach_metr": [50, 55, 110], "reset_metr": [50, 55], "update_metr": [50, 55], "update_offset_waypoint": [50, 55], "update_run_weight": [50, 55], "initialize_run_weight_vec": [50, 55], "goalset_index_buff": [50, 55], "_forward_goal_distribut": [50, 55], "_forward_single_go": [50, 55], "_forward_pytorch": [50, 55], "_update_cost_typ": [50, 55], "forward_out_dist": [50, 55], "forward_pos": [50, 55], "use_sweep": [50, 56], "use_sweep_kernel": [50, 56], "use_speed_metr": [50, 56], "sum_dist": [50, 56], "sweep_kernel_fn": [50, 56], "sweep_fn": [50, 56], "discrete_fn": [50, 56], "pseudo_invers": [50, 57], "ep": [50, 57, 81], "proj_typ": [50, 57], "get_pinv_null_disp": [50, 57], "self_collision_kin_config": [50, 58], "max_limit": [50, 59], "max_nlimit": [50, 59], "dt_traj_param": [50, 59, 62, 64], "teleport_mod": [51, 62, 64, 76, 82], "state_batch": 51, "retract_idx": 51, "perform": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 88, 105, 107, 108, 117, 118, 130, 134], "although": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "recip": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "afterward": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "sinc": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 109, 110, 117, 118, 119], "former": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "care": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "regist": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "hook": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "latter": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "silent": [51, 52, 53, 54, 55, 57, 58, 59, 60, 61], "po": [51, 53], "vel": [51, 59, 81], "p_b": 51, "v_b": 51, "a_b": 51, "j_b": 51, "cspace_weight": 51, "run_weight_vel": 51, "run_weight_acc": 51, "out_gv": 51, "out_ga": 51, "out_gj": 51, "grad_out_cost": [51, 53, 61], "warpboundsmoothfunctionbackward": 51, "warpboundfunctionbackward": 51, "p_l": 51, "warpboundposfunctionbackward": 51, "warpboundposlossbackward": 51, "target_idx": 53, "out_cost_v": 53, "l2distfunctionbackward": 53, "disp_vec": [53, 57], "return_goal_dist": 53, "goal_vec": 53, "current_vec": 53, "jac_batch": [54, 57], "qdot": 54, "pairwis": 55, "shortest": 55, "linear_axi": [55, 110], "tstep_fract": [55, 110], "move": [55, 56, 64, 108, 109, 110, 114, 117, 119, 127, 134], "pregrasp": 55, "movement": 55, "final": [55, 98, 110, 111], "grasp": [55, 109, 118], "ad": [55, 105, 106, 107, 110, 117], "try": [55, 110, 117, 119, 127], "blend": [55, 68, 74, 110], "without": [55, 110, 111, 118, 130], "stop": [55, 110, 117], "fraction": [55, 110], "75": [55, 121], "run_tstep_fract": 55, "ee_pos_batch": [55, 60], "ee_rot_batch": 55, "ee_goal_po": 55, "ee_goal_rot": 55, "query_pos": 55, "sweep": 56, "similar": [56, 117, 134], "chomp": [56, 118], "icra": [56, 130, 131, 133], "09": 56, "prevent": 56, "minim": 56, "encourag": [56, 105, 107], "around": [56, 117, 119], "central": 56, "less": [56, 118, 119, 123, 134], "better": [56, 118, 121], "lead": [56, 115, 130], "outsid": [56, 116, 118], "zero": [56, 61, 68, 74, 116, 118], "slowli": 56, "our": [56, 88, 105, 107, 117, 118, 127, 130], "post": [56, 118], "interpol": [56, 85, 88, 98, 117], "hit": [56, 123], "sum": [56, 98, 118, 119], "collid": [56, 119], "across": [56, 98, 105, 107, 108, 110, 118, 119, 127], "max": 56, "formul": [56, 110, 130], "robot_spheres_in": 56, "project": [57, 118, 131], "space": [57, 98, 120], "0001": 57, "cost_vec": 61, "squaredsumbackward": 61, "runsquaredsumbackward": 61, "goal_dist": 61, "get_dt_arrai": [62, 64], "state_seq": [62, 63, 64], "ee_pos_seq": [62, 64, 116], "ee_quat_seq": [62, 64, 116], "lin_jac_seq": [62, 64], "ang_jac_seq": [62, 64], "vel_scal": [62, 64], "state_estimation_vari": [62, 64], "control_spac": [62, 64, 76, 82], "state_filter_cfg": [62, 64], "return_full_act_buff": [62, 64], "filter_robot_command": [62, 64, 98, 100], "get_next_st": [62, 64, 65], "robot_cmd_tensor_step": [62, 64], "update_cmd_batch_s": [62, 64], "integrate_act": [62, 64], "integrate_action_step": [62, 64], "init_action_mean": [62, 64], "get_state_bound": [62, 64], "position_teleport": [62, 66], "position_clique_kernel": [62, 66], "acceleration_kernel": [62, 66], "position_cliqu": [62, 66], "filter_sign": [62, 66], "cpu": [63, 68, 69, 81, 85], "order": [63, 74], "prev_stat": 63, "full_rank": 63, "diagon": 63, "act": [63, 64, 65, 67], "dt_h": [63, 66], "integrate_matrix": 63, "fd_matrix": 63, "q_0": 63, "u": [63, 119], "diag_dt": 63, "u_act": [63, 66], "mask": [63, 111], "n_mask": 63, "fd_1": 63, "fd_2": 63, "fd_3": 63, "grad_out_p": 63, "grad_out_v": 63, "grad_out_a": 63, "grad_out_j": 63, "cliquetensorstepbackward": 63, "cliquetensorstepkernelbackward": 63, "cliquetensorstepidxkernelbackward": 63, "cliquetensorstepcentraldifferencekernelbackward": 63, "cliquetensorstepidxcentraldifferencekernelbackward": 63, "cliquetensorstepcoalescekernelbackward": 63, "accelerationtensorstepkernelbackward": 63, "accelerationtensorstepidxkernelbackward": 63, "mask_matrix": 63, "integrate_matrix_po": 63, "start_tensor": 63, "end_tensor": 63, "int_step": 63, "num_point": 64, "all_dt": 64, "data_dict_in": [64, 73], "kinematic_model_config": 64, "curr_stat": 64, "next_stat": 64, "tensorstep": 64, "start_state_idx": [64, 66], "abc": 65, "currend_st": 65, "out_state_seq": 66, "finite_difference_mod": 66, "filter_veloc": 66, "filter_acceler": 66, "filter_jerk": 66, "signal": 66, "normalize_rot": [67, 68, 72], "solv": [67, 88, 90, 95, 97, 98, 100, 102, 103, 112, 117, 130], "pair": [67, 134], "case": [67, 117, 118], "address": 67, "keep": [67, 117, 118, 127, 131, 134], "num_se": [67, 72, 74, 83, 95, 97, 98, 99, 100, 101, 116], "kernel_mat": [67, 72, 74], "update_idx_buff": 67, "copi": [67, 72, 74, 134], "anoth": [67, 72, 109, 126], "ref_buff": 67, "batch_env": [67, 95, 101], "batch_retract": [67, 95, 101], "pose_batch_s": 67, "from_bas": [68, 69, 73, 116], "to_devic": [68, 69, 118], "to_int8_devic": [68, 69], "as_torch_dict": [68, 69], "rgb_imag": [68, 70], "depth_imag": [68, 70, 111], "image_segment": [68, 70], "projection_matrix": [68, 70], "projection_rai": [68, 70], "resolut": [68, 70, 119], "intrins": [68, 70, 111], "timestamp": [68, 70], "filter_depth": [68, 70], "get_pointcloud": [68, 70], "get_image_from_pointcloud": [68, 70], "update_projection_rai": [68, 70], "stack": [68, 70, 72, 74], "from_matrix": [68, 72], "get_rot": [68, 72], "unsqueez": [68, 72, 74, 120], "get_index": [68, 72], "from_list": [68, 72, 74, 76, 80, 118], "from_batch_list": [68, 72], "to_list": [68, 72], "tolist": [68, 72, 120], "get_matrix": [68, 72], "get_numpy_matrix": [68, 72], "invers": [68, 72, 86, 98, 105, 107, 112, 120], "get_pose_vector": [68, 72], "cat": [68, 72, 120], "angular_dist": [68, 72], "linear_dist": [68, 72], "multipli": [68, 72], "compute_offset_pos": [68, 72], "compute_local_pos": [68, 72], "geodesic_dist": [68, 72], "ik_seed": [68, 73], "write_config": [68, 73], "get_state_tensor": [68, 74], "from_numpi": [68, 74], "from_posit": [68, 74, 116], "from_state_tensor": [68, 74], "copy_at_index": [68, 74], "copy_data": [68, 74], "_same_shap": [68, 74], "squeez": [68, 74, 116], "calculate_fd_from_posit": [68, 74], "get_ordered_joint_st": [68, 74], "get_augmented_joint_st": [68, 74], "append_joint": [68, 74], "trim_trajectori": [68, 74], "scale_by_dt": [68, 74], "dev_id": 69, "data_tensor": 69, "camera_imag": 70, "rgb": [70, 119, 131, 133], "imag": [70, 72, 93, 105, 107, 111, 115, 118, 119, 121], "bxhxwxchannel": 70, "new_data": 70, "output_imag": 70, "new_observ": 70, "normal": 72, "recommend": [72, 114], "come": [72, 117], "extern": 72, "send": [72, 116, 117, 119, 126], "other_pos": 72, "q_xyzw": 72, "pose_list": 72, "use_phi3": 72, "phi_3": 72, "huynh": 72, "du": 72, "3d": 72, "comparison": [72, 105, 107], "analysi": [72, 117], "journal": 72, "mathemat": 72, "vision": [72, 131, 133], "2009": 72, "155": 72, "164": [72, 134], "gp_out": 72, "gq_out": 72, "gpt_out": 72, "world_pos": 72, "q1": 72, "q2": [72, 105, 107], "q_re": 72, "quat_r": 72, "orientationerrorbackward": 72, "coeff": 74, "new_stat": 74, "ndarri": 74, "state_tensor": 74, "in_joint_st": 74, "new_j": 74, "ordered_joint_nam": 74, "j": [74, 86, 96, 120], "end_idx": 74, "new_dt": 74, "alias": 75, "structur": [75, 120], "improv": [75, 105, 106, 107, 121], "readabl": 75, "degre": [75, 76, 81, 85], "freedom": 75, "cspace_path_length": [76, 80], "perception_success": [76, 80], "perception_interpolated_success": [76, 80], "fixed_sampl": [76, 81], "sample_ratio": [76, 81], "filter_coeff": [76, 81, 82], "n_knot": [76, 81], "scale_tril": [76, 81], "covariance_matrix": [76, 81], "sample_method": [76, 81], "sine_period": [76, 81], "filter_sampl": [76, 81], "filter_smooth": [76, 81], "generate_sine_wav": [76, 81], "fast_forward": [76, 81], "_get_sampl": [76, 81], "get_gaussian_sampl": [76, 81], "filter_joint_st": [76, 82], "integrate_jerk": [76, 82], "integrate_acc": [76, 82], "integrate_vel": [76, 82], "integrate_po": [76, 82], "cubic": [76, 85], "quintic": [76, 85], "linear_cuda": [76, 85, 98, 100], "kunz_stilman_optim": [76, 85], "add_subroot": [76, 86], "load_stage_from_fil": [76, 86], "load_stag": [76, 86], "get_pos": [76, 86], "get_obstacles_from_stag": [76, 86], "add_world_to_stag": [76, 86], "get_prim_from_obstacl": [76, 86], "add_cuboid_to_stag": [76, 86], "add_cylinder_to_stag": [76, 86], "add_sphere_to_stag": [76, 86], "add_mesh_to_stag": [76, 86], "get_obstacle_from_prim": [76, 86], "write_stage_to_fil": [76, 86], "create_anim": [76, 86], "create_obstacle_anim": [76, 86], "create_linkpose_robot_anim": [76, 86], "write_trajectory_anim": [76, 86], "load_robot": [76, 86], "write_trajectory_animation_with_robot_usd": [76, 86, 120], "create_grid_usd": [76, 86, 120], "load_robot_usd": [76, 86], "get_robot_prim": [76, 86], "update_robot_joint_st": [76, 86], "write_motion_gen_log": [76, 86], "q_de": [77, 82, 97], "r_de": 77, "px": 77, "py": [77, 108, 110, 111, 114, 117, 119, 120, 121, 122, 128, 134], "pz": 77, "print": [77, 114, 116, 117], "current_px": 77, "current_pi": 77, "current_pz": 77, "des_px": 77, "des_pi": 77, "des_pz": 77, "d": [78, 116, 118, 122], "d_list": 78, "txt": 79, "exc_info": 79, "stack_info": 79, "skip": [80, 114, 115, 122, 134], "joint_limit_viol": 80, "self_collis": 80, "physical_viol": 80, "inf": 80, "orientation_error": 80, "eef_position_path_length": 80, "eef_orientation_path_length": 80, "trajectory_length": 80, "attempt": [80, 95, 98], "motion_tim": [80, 95, 98], "trajectorymetr": 80, "group_siz": 80, "env_collision_r": 80, "self_collision_r": 80, "joint_violation_r": 80, "physical_violation_r": 80, "within_one_cm_r": 80, "within_five_cm_r": 80, "within_fifteen_deg_r": 80, "within_thirty_deg_r": 80, "robometr": [80, 121], "statist": 80, "solve_time_per_step": 80, "trajectorygroupmetr": 80, "group": 80, "built": [81, 92, 94, 114, 115, 116, 118, 122], "0x7f55c178dfe0": 81, "halton": 81, "sample_config": [81, 95, 97, 116], "sample_shap": 81, "c_arr": 81, "t_arr": 81, "100": [81, 97, 98, 118, 120, 121], "up_bound": 81, "low_bound": 81, "ndim": 81, "store_buff": 81, "2000": 81, "fast": [81, 118], "sampler": [81, 91, 92, 94], "varianc": 81, "num": 81, "idx_batch": 81, "use_scipy_halton": 81, "coeff_dict": 82, "filter_config": 82, "raw_joint_st": 82, "qddd_de": 82, "cmd_joint_stat": 82, "qdd_de": 82, "qd_de": 82, "new_tensor": 83, "mem_tensor": 83, "ref_tensor": 83, "renam": 83, "equal": 84, "force_jit": 84, "only_valid_for_compil": 84, "scipi": 85, "lang": 85, "meth": 85, "scienc": 85, "viii": 85, "2012": 85, "kunz": 85, "stillman": 85, "durat": 85, "20": [85, 114, 116], "max_traj_pt": 85, "compute_dynam": 85, "raw_traj": [85, 88], "des_horizon": 85, "max_vel": [85, 96], "max_acc": [85, 95, 96, 100], "raw_dt": [85, 88, 96], "kind": 85, "out_traj_st": 85, "max_devi": 85, "min_dt": [85, 95, 96, 100], "optimize_dt": [85, 95, 98, 100], "traj_step": 85, "opt_dt": [85, 88, 96, 100], "max_veloc": 85, "last_step": 85, "translat": 86, "use_float": 86, "xformcach": 86, "mesh_geom": 86, "ob": 86, "cube_geom": 86, "cube": [86, 108, 109, 110, 114, 117, 119, 134], "sphere_geom": 86, "curobo_stag": 86, "base_fram": [86, 120], "sub_root": 86, "prim_path": 86, "timecod": [86, 128], "only_path": 86, "ignore_path": 86, "only_substr": 86, "ignore_substr": 86, "reference_prim_path": 86, "obstacles_fram": 86, "base_t_obstacle_pos": 86, "enable_phys": 86, "flatten": 86, "robot_world_cfg": 86, "robot_fram": 86, "anim": [86, 120, 128], "prim_nam": 86, "n_mesh": [86, 94], "robot_bas": 86, "robot_usd_path": 86, "robot_base_fram": 86, "local_asset_path": [86, 120], "asset": [86, 117], "write_robot_usd_path": 86, "robot_asset_prim_path": 86, "panda": [86, 108, 115, 116, 117, 121, 125, 134], "material_nam": 86, "object_path": 86, "obj_prim": 86, "robot_model_fil": 86, "q_start": 86, "q_traj": [86, 120], "save_path": [86, 120, 121], "kin_model": [86, 116], "visualize_robot_spher": [86, 120], "robot_color": 86, "flatten_usd": 86, "robot_usd_local_refer": 86, "usds_path": 86, "max_env": [86, 120], "max_timecod": [86, 120], "x_space": [86, 120], "y_space": [86, 120], "x_per_row": [86, 120], "prefix_str": 86, "write_asset_path": 86, "robot_base_path": 86, "joint_prim": 86, "robot_fil": [86, 93, 116, 120], "save_prefix": 86, "write_ik": 86, "write_trajopt": 86, "write_graph": 86, "goal_object": 86, "overlay_ik": 86, "overlay_trajopt": 86, "grid_spac": 86, "fp": 86, "24": 86, "motiongenresult": [86, 90, 95, 98], "quiet": 87, "traj_tstep": [88, 95, 100], "out_traj": 88, "gpu": [88, 111, 114, 117, 118, 123, 127, 130], "bug": 88, "last": [88, 98], "affect": 88, "source_fil": 89, "destination_path": 89, "remove_extens": 89, "dir_path": 89, "extens": 89, "curobo_robot_world": [90, 91], "curoborobotworldconfig": [90, 91, 92], "curoborobotworld": [90, 91, 92], "robot_segment": [90, 91, 111], "robotsegment": [90, 91, 93, 111], "robot_world": [90, 91, 93, 116, 120], "robotworldconfig": [90, 91, 92, 94, 116, 120], "robotworld": [90, 91, 92, 93, 94, 116, 120], "evalu": [90, 95, 100, 121], "trajevaluatorconfig": [90, 95, 96, 98, 100], "trajevalu": [90, 95, 96, 98, 100], "ik_solv": [90, 95, 98, 116, 117, 126], "iksolverconfig": [90, 95, 97, 116], "ikresult": [90, 95, 97, 98, 116], "iksolv": [90, 95, 97, 98, 116, 117, 126], "motion_gen": [90, 95, 110, 116], "motiongenconfig": [90, 95, 98, 110, 116], "motiongenplanconfig": [90, 95, 98, 110, 116], "motiongen": [90, 95, 98, 116], "mpcsolverconfig": [90, 95, 99], "mpcsolver": [90, 95, 99], "trajopt": [90, 95, 98, 126], "trajoptsolverconfig": [90, 95, 100], "trajresult": [90, 95, 100], "trajoptsolv": [90, 95, 98, 100, 126], "jit_trajopt_best_select": [90, 95, 100], "reachersolvetyp": [90, 95, 97, 98, 100, 101], "reachersolvest": [90, 95, 97, 98, 99, 100, 101], "motiongensolverst": [90, 95, 101], "get_padded_goalset": [90, 95, 101], "safety_rollout": [90, 102], "use_cuda_graph_metr": [90, 95, 99, 100, 102], "js_action": [90, 102], "raw_act": [90, 95, 100, 102], "get_debug_data": [90, 102], "get_debug_cost": [90, 102], "get_init_act": [90, 102], "newton_optim": [90, 102], "particle_optim": [90, 102], "_get_rollout_instances_from_optim": [90, 102], "update_init_se": [90, 103], "from_robot_fil": [91, 93], "get_pointcloud_from_depth": [91, 93], "update_camera_project": [91, 93], "get_robot_mask": [91, 93], "get_robot_mask_from_active_j": [91, 93], "_create_cg_graph": [91, 93], "_call_op": [91, 93], "_mask_op": [91, 93], "bound_scal": [91, 92, 94, 120], "collision_cost": [91, 92, 94], "collision_constraint": [91, 92, 94, 120], "contact_dist": [91, 92, 94], "load_from_config": [91, 94, 116, 120], "get_kinemat": [91, 94, 116, 120], "update_world": [91, 94, 95, 97, 98, 99], "clear_world_cach": [91, 94, 95, 98], "get_collision_dist": [91, 94, 116, 120], "get_collision_constraint": [91, 94], "get_self_collis": [91, 94], "get_collision_vector": [91, 94], "get_world_self_collision_distance_from_joint": [91, 94, 116], "get_world_self_collision_distance_from_joint_trajectori": [91, 94], "get_bound": [91, 94], "valid": [91, 94, 120], "sample_trajectori": [91, 94], "validate_trajectori": [91, 94], "get_point_robot_dist": [91, 94], "get_active_j": [91, 94, 95, 98, 99], "layer": [92, 94, 98, 119, 120], "core": [92, 94, 114, 116, 117], "ops_dtyp": 93, "joint_stat": [93, 98], "depth": [93, 105, 107, 111, 115, 116, 118, 121], "active_joint_st": 93, "cam_ob": 93, "franka": [94, 108, 115, 116, 117, 120, 125, 134], "50": [94, 97, 118], "n_cuboid": 94, "collision_activation_dist": [94, 97, 98, 99, 100, 116], "self_collision_activation_dist": 94, "max_collision_dist": 94, "collision_checker_typ": [94, 97, 98, 99, 100], "world_collision_check": 94, "x_sph": [94, 118], "mask_valid": [94, 116], "x_de": [94, 120], "x_current": 94, "done": [94, 126], "easili": 94, "full_j": 94, "cost_weight": [95, 96, 100], "_compute_path_length": [95, 96], "_check_smooth": [95, 96], "evaluate_interpolated_smooth": [95, 96], "evaluate_from_posit": [95, 96], "calculate_dt": [95, 96], "position_threshold": [95, 97, 98, 100, 116], "rotation_threshold": [95, 97, 98, 100, 116], "ik_nn_seed": [95, 97], "sample_rejection_ratio": [95, 97], "js_solut": [95, 97], "get_unique_solut": [95, 97], "get_batch_unique_solut": [95, 97], "update_goal_buff": [95, 97, 99, 100, 101], "solve_ani": [95, 97, 100], "solve_singl": [95, 97, 100], "solve_goalset": [95, 97, 100], "solve_batch": [95, 97, 100, 116], "solve_batch_goalset": [95, 97, 100], "solve_batch_env": [95, 97, 100], "solve_batch_env_goalset": [95, 97, 100], "solve_from_solve_st": [95, 97, 100], "get_result": [95, 97], "get_se": [95, 97, 100], "batch_env_solv": [95, 97, 112], "get_success": [95, 97], "generate_se": [95, 97], "check_constraint": [95, 97, 98], "get_all_kinematics_inst": [95, 97, 98, 100], "fk": [95, 97, 100, 116, 120], "attach_object_to_robot": [95, 97, 100], "detach_object_from_robot": [95, 97, 98, 100], "get_retract_config": [95, 97, 98, 116], "ik_se": [95, 98], "graph_se": [95, 98], "trajopt_se": [95, 98], "noisy_trajopt_se": [95, 98], "batch_ik_se": [95, 98], "batch_trajopt_se": [95, 98], "graph_plann": [95, 98], "trajopt_solv": [95, 98], "js_trajopt_solv": [95, 98], "finetune_trajopt_solv": [95, 98], "partial_ik_it": [95, 98], "graph_trajopt_it": [95, 98], "store_debug_in_result": [95, 98, 100], "finetune_dt_scal": [95, 98], "optimized_plan": [95, 98, 116], "ik_tim": [95, 98], "graph_tim": [95, 98], "trajopt_tim": [95, 98], "finetune_tim": [95, 98], "total_tim": [95, 98], "statu": [95, 98, 114], "trajopt_attempt": [95, 98], "used_graph": [95, 98], "graph_plan": [95, 98], "_check_none_and_copy_idx": [95, 98], "copy_idx": [95, 98], "get_successful_path": [95, 98], "get_interpolated_plan": [95, 98, 116], "enable_graph": [95, 98, 116], "enable_opt": [95, 98], "use_nn_ik_se": [95, 98], "need_graph_success": [95, 98], "max_attempt": [95, 98, 99, 116], "timeout": [95, 98], "enable_graph_attempt": [95, 98], "disable_graph_attempt": [95, 98], "ik_fail_return": [95, 98], "partial_ik_opt": [95, 98], "num_ik_se": [95, 98, 101], "num_graph_se": [95, 98, 101], "num_trajopt_se": [95, 98, 101], "success_ratio": [95, 98], "fail_on_invalid_queri": [95, 98], "enable_finetune_trajopt": [95, 98], "parallel_finetun": [95, 98], "use_start_state_as_retract": [95, 98], "pose_cost_metr": [95, 98, 110], "solve_ik": [95, 98], "_solve_ik_from_solve_st": [95, 98], "_solve_trajopt_from_solve_st": [95, 98], "graph_search": [95, 98], "_get_solve_st": [95, 98], "_plan_attempt": [95, 98], "_plan_batch_attempt": [95, 98], "plan_singl": [95, 98, 116], "plan_goalset": [95, 98], "plan_batch": [95, 98], "plan_batch_goalset": [95, 98], "plan_batch_env_goalset": [95, 98], "plan_batch_env": [95, 98], "_plan_from_solve_st": [95, 98], "_plan_js_from_solve_st": [95, 98], "_plan_from_solve_state_batch": [95, 98], "plan_single_j": [95, 98], "batch_plan": [95, 98], "solve_trajopt": [95, 98], "get_all_solver_rollout_inst": [95, 98], "get_all_pose_solver_rollout_inst": [95, 98], "attach_objects_to_robot": [95, 98], "attach_external_objects_to_robot": [95, 98], "attach_bounding_box_from_blox_to_robot": [95, 98], "attach_new_object_to_robot": [95, 98], "attach_spheres_to_robot": [95, 98], "detach_spheres_from_robot": [95, 98], "get_full_j": [95, 98, 100], "add_running_pose_constraint": [95, 98], "remove_running_pose_constraint": [95, 98], "run_finetune_trajopt": [95, 98], "world_collis": [95, 98, 99], "project_pose_to_goal_fram": [95, 97, 98, 100, 110], "update_interpolation_typ": [95, 98], "update_locked_joint": [95, 98], "use_cuda_graph_full_step": [95, 99], "step_onc": [95, 99], "_step": [95, 99], "_initialize_cuda_graph_step": [95, 99], "setup_solve_singl": [95, 99], "setup_solve_goalset": [95, 99], "setup_solve_batch": [95, 99], "setup_solve_batch_goalset": [95, 99], "setup_solve_batch_env": [95, 99], "setup_solve_batch_env_goalset": [95, 99], "_solve_from_solve_st": [95, 99], "fn": [95, 99], "update_go": [95, 99, 101, 120], "get_visual_rollout": [95, 99], "use_cspace_se": [95, 100], "seed_ratio": [95, 100], "traj_evaluator_config": [95, 98, 100], "traj_evalu": [95, 98, 100], "evaluate_interpolated_trajectori": [95, 98, 100], "cspace_threshold": [95, 98, 100], "interpolate_rollout": [95, 100], "trim_step": [95, 98, 100], "interpolated_solut": [95, 100], "smooth_error": [95, 100], "smooth_label": [95, 100], "raw_solut": [95, 100], "_get_result": [95, 100], "batch_solv": [95, 100, 112], "get_linear_se": [95, 100], "get_start_se": [95, 100], "_get_seed_numb": [95, 100], "get_seed_set": [95, 100], "get_bias_se": [95, 100], "calculate_trajectory_dt": [95, 100], "solver_dt": [95, 100], "solver_dt_tensor": [95, 100], "update_solver_dt": [95, 100], "batch_env_goalset": [95, 101], "solve_typ": [95, 97, 98, 100, 101], "batch_mod": [95, 100, 101], "num_mpc_se": [95, 101], "get_batch_s": [95, 101], "get_ik_batch_s": [95, 101], "create_goal_buff": [95, 101], "ik_solve_st": [95, 101], "trajopt_solve_st": [95, 101], "001": [96, 98, 100, 134], "skip_last_tstep": 96, "005": [97, 98, 100, 116, 134], "particle_fil": [97, 100], "particle_ik": [97, 98], "gradient_fil": [97, 100], "gradient_ik": [97, 98], "self_collision_opt": [97, 98, 100, 116], "grad_it": 97, "use_particle_opt": [97, 100], "use_gradient_desc": [97, 98, 100], "collision_cach": [97, 98, 99, 100], "n_collision_env": [97, 98, 99, 100], "ee_link_nam": [97, 98], "use_": [97, 99, 100], "es_learning_r": [97, 99, 100], "use_fixed_sampl": [97, 100], "regular": [97, 98], "high_precis": 97, "sqrt": [97, 120], "roundoff_decim": 97, "solve_st": [97, 98, 99, 100, 101], "seed_config": [97, 98], "return_se": [97, 98], "use_nn_se": [97, 98, 100], "newton_it": [97, 98, 100], "ik": [97, 98, 116, 117, 120, 121, 130], "random_restart": 97, "share": [98, 114, 122], "fine": 98, "tune": [98, 117], "dens": 98, "waypoint": 98, "finetun": 98, "op": 98, "upto": [98, 116], "30": 98, "12": 98, "num_batch_ik_se": 98, "num_batch_trajopt_se": 98, "num_trajopt_noisy_se": 98, "particle_ik_fil": 98, "gradient_ik_fil": 98, "particle_trajopt_fil": 98, "particle_trajopt": [98, 100], "gradient_trajopt_fil": 98, "gradient_trajopt": [98, 100], "finetune_trajopt_fil": 98, "trajopt_tstep": 98, "5000": [98, 116], "grad_trajopt_it": [98, 100], "trajopt_seed_ratio": 98, "bia": [98, 100], "ik_opt_it": 98, "ik_particle_opt": 98, "trajopt_particle_opt": 98, "minimize_jerk": [98, 100], "use_es_ik": 98, "use_es_trajopt": 98, "es_ik_learning_r": 98, "es_trajopt_learning_r": 98, "use_ik_fixed_sampl": 98, "use_trajopt_fixed_sampl": 98, "fixed_iters_trajopt": 98, "store_ik_debug": 98, "store_trajopt_debug": 98, "collision_max_outside_dist": 98, "trajopt_dt": [98, 100], "js_trajopt_dt": 98, "js_trajopt_tstep": 98, "finetune_trajopt_it": 98, "finetune_smooth_weight": 98, "95": [98, 121], "maximum_trajectory_tim": 98, "maximum_trajectory_dt": 98, "id": 98, "refer": [98, 111, 114, 118, 122, 126], "q_g": 98, "second": [98, 110, 111, 117, 118], "taken": 98, "fail": 98, "wa": [98, 114, 118, 130], "current_tensor": 98, "source_tensor": 98, "source_result": 98, "60": [98, 119], "retim": 98, "low": 98, "act_se": 98, "return_all_solut": [98, 100], "seed_success": [98, 100], "trajopt_inst": 98, "num_seeds_overrid": 98, "trajoptresult": 98, "start_config": 98, "goal_config": 98, "plan_config": 98, "warmup_js_trajopt": 98, "batch_env_mod": 98, "warmup_joint_index": 98, "warmup_joint_delta": 98, "in_j": [98, 99], "object_nam": 98, "sphere_fit_typ": 98, "world_objects_pose_offset": 98, "remove_obstacles_from_world_config": 98, "external_object": 98, "blox_layer_nam": 98, "active_j": [98, 100], "lock_x": 98, "lock_i": 98, "lock_z": 98, "lock_rx": 98, "lock_ri": 98, "lock_rz": 98, "traj_solut": 98, "update_trajopt": 98, "robot_config_dict": 98, "world_cfg": [99, 116], "particle_opt_it": 99, "step_dt": 99, "use_lbfg": 99, "use_mppi": 99, "predict": [99, 131, 133], "arm": [99, 125, 131, 133], "seed_traj": [99, 100], "1000": 100, "10000": [100, 120], "aux_rollout": 100, "traj_stat": 100, "opt_trajectori": 100, "interpolated_trajectori": 100, "smooth_cost": 100, "col": 100, "current_solve_st": 101, "current_goal_buff": 101, "new_goal_pos": 101, "packag": [104, 114, 120, 121, 124, 130, 134], "subpackag": 104, "submodul": 104, "gtc": [105, 107, 127], "talk": [105, 107], "research": [105, 107, 123, 133], "arxiv": [105, 107, 121, 130, 132], "pdf": [105, 107, 130], "preview": [105, 107], "highlight": [105, 107, 110], "technic": [105, 106, 107, 118], "report": [105, 106, 107, 118, 121], "ship": [105, 107, 122], "cumot": [105, 107], "2024": [105, 106, 107, 121, 127], "busi": [105, 107], "inquiri": [105, 107], "pleas": [105, 107], "submit": [105, 107], "form": [105, 107], "licens": [105, 107], "march": [105, 106, 107, 121], "v0": [105, 106, 107, 114, 121], "esdf": [105, 106, 107, 119], "partial": [105, 106, 107], "sim": [105, 106, 107, 109, 115, 118, 119, 122, 134], "2023": [105, 106, 107, 114, 122, 130, 131, 132, 133], "feb": [105, 106, 107], "constrain": [105, 106, 107], "segment": [105, 106, 107, 119], "dec": [105, 106, 107], "qualiti": [105, 106, 107, 117, 121], "nov": [105, 106, 107], "x86": [105, 106, 107, 122], "aarch64": [105, 106, 107, 122], "dockerfil": [105, 106, 107, 122], "oct": [105, 106, 107], "changelog": [105, 106, 107], "suit": [105, 107, 118], "algorithm": [105, 107, 118], "significantli": [105, 107, 127], "exist": [105, 107, 122, 123, 127, 134], "leverag": [105, 107, 109, 115, 117, 118, 119, 121, 128, 131, 133], "30m": [105, 107], "ur10": [105, 107, 117, 125], "100m": [105, 107], "jetson": [105, 107], "orin": [105, 107, 114], "penal": [105, 107, 110], "smoother": [105, 107], "shorter": [105, 107], "left": [105, 107, 111, 118], "birrt": [105, 107], "phase": [105, 107], "pick": [105, 107, 109, 110, 117, 118], "place": [105, 107, 109, 110, 117, 118, 119], "ax": [105, 107, 110], "remain": [105, 107, 110], "exampl": [105, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 120, 122, 123, 126, 128, 134], "motionbenchmak": [105, 107], "dataset": [105, 107], "curobo": [106, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 132, 133, 134], "own": [108, 115], "launch": [108, 110, 117, 119, 122, 134], "omni_python": [108, 110, 114, 117, 119, 134], "isaac_sim": [108, 110, 114, 117, 122, 134], "batch_collision_check": 108, "made": 108, "fashion": 108, "batch_motion_gen_reach": 108, "trigger": [108, 117, 134], "being": [108, 109, 117, 119], "long": [109, 127], "front": [109, 119], "tower": 109, "seen": [109, 110, 111, 126], "below": [109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 134], "kei": [109, 134], "componenet": 109, "design": [109, 119, 123], "shown": [109, 110, 111, 115, 117, 118, 119], "consist": 109, "close": [109, 110, 119, 134], "gripper": [109, 134], "top": 109, "open": [109, 119, 123, 134], "delet": 109, "placement": 109, "its": [109, 130], "reprensent": 109, "reason": 109, "about": [109, 117, 125], "similarli": 109, "constrained_reach": 110, "click": [110, 114, 117, 119, 134], "Then": [110, 111, 117, 119], "restrict": 110, "respect": [110, 117, 118], "plane": 110, "red": [110, 117, 119, 134], "well": [110, 123, 127, 134], "turn": [110, 117, 119], "green": [110, 117, 119, 126], "now": [110, 119, 127, 134], "upright": 110, "throughout": 110, "further": [110, 130], "visibl": [110, 111], "script": [110, 114, 121, 123, 134], "until": [110, 117], "By": 110, "tradition": 110, "goe": 110, "pre": [110, 119], "portion": 110, "t_step_fract": 110, "effect": [110, 118, 130], "runn": 110, "simple_stack": 110, "constrain_grasp_approach": 110, "show": [110, 118, 119, 120, 130], "behavior": [110, 134], "filter": 111, "scene": [111, 116, 117, 118, 119, 131, 133], "yellow": 111, "orang": 111, "third": [111, 116, 120], "subtract": 111, "fourth": 111, "rightmost": 111, "back": 111, "label": 111, "initialz": 111, "intern": [111, 118, 126, 130], "threshold": 111, "treat": [111, 134], "robot_image_segmentation_exampl": 111, "achiev": [111, 130], "3000hz": 111, "4090": [111, 117, 121], "480x480": 111, "middl": 111, "right": [111, 118], "No": 112, "env": 112, "goalset_solv": 112, "batch_goalset_solv": 112, "batch_goalset_env_solv": 112, "compon": [114, 116], "instruct": [114, 119, 121, 122, 134], "want": [114, 115, 116, 118, 121, 122, 127, 134], "develop": [114, 117, 119, 123, 130], "ubuntu": 114, "04": [114, 134], "22": 114, "linux": 114, "volta": 114, "newer": [114, 122], "architectur": 114, "least": 114, "gb": 114, "vram": 114, "git": [114, 121, 122], "lf": 114, "sudo": [114, 122], "apt": [114, 122, 123], "repositori": [114, 122], "nvlab": [114, 119, 122], "pip": [114, 119, 121, 134], "isol": [114, 134], "minut": 114, "python3": [114, 122], "pytest": 114, "verifi": 114, "unit": 114, "look": [114, 117, 118, 122, 127, 128, 134], "2022": [114, 122], "isaac_sim_workstation_instal": 114, "cuda_instruct": 114, "your": [114, 115, 116, 117, 118, 119, 120, 123, 127, 134], "usr": [114, 122], "local": [114, 117, 118, 122, 123], "bin": [114, 122], "bashrc": 114, "echo": 114, "ov": 114, "pkg": [114, 122], "sh": [114, 122, 134], "accordingli": 114, "tomli": 114, "wheel": 114, "ninja": 114, "isaacsim": 114, "motion_gen_reach": [114, 117, 134], "stabl": 114, "instabl": 114, "been": [114, 117], "heavili": 114, "ur5": [114, 125], "nativ": [114, 115, 122, 123], "proceed": 114, "d_glibcxx_use_cxx11_abi": 114, "ngc": [114, 122], "what": [114, 118], "import": [114, 116, 118, 120], "_c": 114, "_glibcxx_use_cxx11_abi": 114, "detect": [114, 117, 123], "glibcxx_use_cxx11_abi": 114, "dependenic": 114, "libgoogl": 114, "glog": [114, 123], "dev": 114, "libgtest": 114, "libsqlite3": 114, "curl": 114, "tcl": 114, "libbenchmark": 114, "valtsbluki": 114, "cd": [114, 121, 122], "mkdir": [114, 121, 122, 134], "cmake": [114, 123], "dpre_cxx11_abi_link": 114, "ON": 114, "dbuild_test": 114, "off": 114, "j32": 114, "nvblox_torch": [114, 119, 121], "cmake_prefix_path": 114, "opencv": 114, "pyrealsense2": [114, 119], "transforms3d": 114, "pre_cxx11_abi": 114, "shell": 114, "torch_cxx11": 114, "pkgs_path": 114, "home": [114, 122], "wget": [114, 122], "v3": 114, "27": 114, "tar": 114, "gz": 114, "xvzf": 114, "essenti": 114, "checkinstal": 114, "zlib1g": 114, "libssl": 114, "bootstrap": 114, "j8": 114, "sqlite3": 114, "sqlite": 114, "39": [114, 134], "cflag": 114, "fpic": 114, "prefix": 114, "googl": [114, 131], "dcmake_position_independent_cod": 114, "dcmake_install_prefix": 114, "dwith_gflag": 114, "dwith_gtest": 114, "dbuild_shared_lib": 114, "dcmake_cxx_flag": 114, "gflag": 114, "v2": 114, "dgflags_build_static_lib": 114, "dbuild_redistribut": 114, "dsqlite3_base_path": 114, "dglog_base_path": 114, "dgflags_base_path": 114, "dcmake_cuda_flag": 114, "found": [114, 118, 123, 127, 134], "runtim": [114, 122], "ld_library_path": 114, "lib": 114, "glu": 114, "freeglut3": 114, "discuss": 115, "pipelin": [115, 116, 120, 121], "wxyz": 115, "cudagraph": [115, 116, 117, 118, 123], "subsequ": 115, "referenc": 115, "aricl": 115, "blog": 115, "One": [115, 117], "caveat": 115, "cannot": [115, 116, 123], "henc": [115, 116, 118, 123, 128], "tool": [115, 118], "crash": [115, 123], "snippet": 116, "parti": [116, 120], "conveni": 116, "config_fil": 116, "urdf_fil": 116, "rand": 116, "var": [116, 118, 122], "possibl": [116, 118, 119, 128], "explain": [116, 118], "page": [116, 118, 130, 131], "dive": [116, 118, 127], "quick": 116, "tabl": [116, 122], "cube_1": [116, 118], "080": 116, "043": [116, 118, 121, 134], "471": [116, 118], "284": [116, 118], "834": [116, 118], "srl_ur10_bin": [116, 118], "obj": [116, 118], "world_fil": [116, 120], "curobo_fn": [116, 120], "q_sph": 116, "randn": 116, "q_": 116, "d_world": 116, "d_self": [116, 120], "penetr": 116, "howev": [116, 117, 118], "safeti": [116, 117, 134], "greater": 116, "ik_config": 116, "q_sampl": 116, "kin_stat": [116, 120], "q_solut": 116, "collision_cag": 116, "slower": 116, "collision_t": [116, 120], "motion_gen_config": 116, "retract_cfg": 116, "view": [116, 118, 120], "retract_pos": 116, "traj": 116, "item": [116, 120, 127], "abov": [116, 117, 121, 122], "yaml": [116, 134], "consum": 116, "programmat": 116, "meshe": 117, "leav": [117, 118], "even": [117, 126], "becom": 117, "awar": 117, "rate": 117, "1hz": 117, "track": [117, 127, 131], "interact": [117, 119], "marker": 117, "teleport": 117, "reactiv": [117, 119], "tf": 117, "window": [117, 119], "button": 117, "drag": [117, 118, 119], "drop": [117, 118, 119], "browser": 117, "articul": [117, 134], "ycb": [117, 118], "under": [117, 128], "prop": 117, "dropdown": 117, "section": [117, 134], "tab": 117, "down": 117, "select": 117, "300": 117, "wait": 117, "command": [117, 121, 122], "collision_checker_exampl": 117, "blue": [117, 119], "vector": [117, 119, 134], "indic": [117, 119, 126], "ui": 117, "request": 117, "gif": 117, "determin": [117, 118], "With": 117, "xyz": 117, "ik_reach": 117, "demo": 117, "video": [117, 134], "framework": 117, "storm": 117, "advanc": 117, "500hz": 117, "rtx": [117, 121], "compar": 117, "125hz": 117, "applic": [117, 128], "mpc_exampl": 117, "trail": 117, "stuck": 117, "minima": 117, "behind": 117, "pitcher": 117, "explor": [117, 130], "guarante": 117, "put": 117, "advis": 117, "deploi": 117, "modular": 117, "dual": 117, "multi_arm_reach": 117, "dual_ur10": [117, 125], "univers": [117, 125], "describ": [118, 120, 122], "later": [118, 122], "overview": 118, "illustr": [118, 126], "obstacle_1": 118, "mesh_fil": 118, "obstacle_2": 118, "mesh_1": 118, "obstacle_3": 118, "obstacle_4": 118, "cylinder_1": 118, "obstacle_5": 118, "sphere_1": 118, "viewer": [118, 119], "meshlab": 118, "assign": 118, "debug_mesh": 118, "five": 118, "cuboid_world": 118, "debug_collision_cuboid": 118, "visula": 118, "bottom": 118, "row": 118, "altern": 118, "accur": 118, "collision_supported_world": 118, "collision_support_world": 118, "debug_collision_mesh": 118, "4x": 118, "bvh": 118, "travers": 118, "inherit": 118, "entiti": 118, "world_ccheck": 118, "test_mesh": 118, "collision_buff": 118, "act_dist": 118, "know": 118, "recreat": 118, "therebi": 118, "break": 118, "alreadi": [118, 122], "interfac": [118, 119], "world_collision_config": 118, "new_cuboid": 118, "add_cuboid": 118, "new_pos": 118, "toggl": 118, "short": 118, "thorough": 118, "world_config_1": 118, "cube_env_1": 118, "world_config_2": 118, "cube_env_2": 118, "world_coll_config": 118, "query_buff": 118, "assert": 118, "int32": 118, "live": 118, "abl": [118, 127], "acheiv": 118, "slow": 118, "veri": [118, 123, 131, 134], "would": [118, 121], "chart": 118, "hierarchi": 118, "contribut": [118, 130], "welcom": 118, "eta": 118, "far": [118, 127], "awai": 118, "motiv": 118, "equat": 118, "neg": 118, "text": 118, "begin": 118, "leq": 118, "frac": 118, "introduc": [118, 130], "discret": 118, "thin": 118, "benefit": 118, "push": 118, "itself": 118, "wall": 118, "rush": 118, "overal": 118, "incur": 118, "often": 118, "reloc": 118, "techniqu": [118, 119, 130], "complex": 118, "rather": 118, "manual": 118, "obstacle_capsul": 118, "sph": 118, "bounding_spher": 118, "decai": 119, "ideal": 119, "high": 119, "expos": 119, "_": 119, "walk": 119, "instal": [119, 121, 122, 123, 127, 134], "precxx11_abi": 119, "collision_check": 119, "insert": 119, "basic": 119, "motion_gen_reacher_nvblox": 119, "mpc_nvblox_exampl": 119, "realsens": 119, "monitor": 119, "clip": 119, "stream": [119, 123], "render": [119, 121, 128], "realsense_collis": 119, "appear": 119, "realsense_reach": 119, "hq_voxel": 119, "machin": 119, "framer": 119, "realsense_mpc": 119, "stai": 119, "As": [120, 134], "loss": 120, "train": 120, "friendli": 120, "world_config_fil": 120, "swap": 120, "200": 120, "curobo_wrapp": 120, "torch_layers_exampl": 120, "uuid": 120, "nn": 120, "tensorboard": 120, "summarywrit": 120, "tqdm": 120, "hold": 120, "curobotorch": 120, "__init__": 120, "simpl": [120, 130], "q_current": 120, "q_out": 120, "super": 120, "feature_dim": 120, "q_feature_dim": 120, "final_feature_dim": 120, "output_dim": 120, "_robot_world": 120, "_feature_mlp": 120, "sequenti": 120, "512": 120, "relu6": 120, "_final_mlp": 120, "256": 120, "64": 120, "get_featur": 120, "q_sdf": 120, "q_self": 120, "append": 120, "in_featur": 120, "mlp": 120, "q_mid": 120, "q_scale": 120, "mid_featur": 120, "d_sdf": 120, "linalg": 120, "val_loss": 120, "validatin": 120, "__name__": 120, "__main__": 120, "write_usd": 120, "writer": 120, "uuid4": 120, "no_grad": 120, "q_train": 120, "q_val": 120, "2048": 120, "usd_list": 120, "adam": [120, 130, 132], "lr": 120, "weight_decai": 120, "batch_start": 120, "arang": 120, "x_des_train": 120, "x_des_val": 120, "q_debug": 120, "bar": 120, "x_train": 120, "x_des_batch": 120, "zero_grad": 120, "add_scalar": 120, "eval": 120, "q_pred": 120, "set_descript": 120, "len": 120, "gripper_mesh": 120, "target_gripp": 120, "franka_descript": [120, 134], "hand_ee_link": 120, "dae": 120, "save_nam": 120, "rand_perm": 120, "randperm": 120, "epoch_grid": 120, "paper": [121, 130, 131], "signific": 121, "length": [121, 134], "accuraci": 121, "1mm": 121, "15m": 121, "fusion": [121, 129], "10m": 121, "averag": [121, 130], "14": [121, 134], "2600": 121, "benchmak": 121, "99": 121, "77": 121, "044": 121, "073": 121, "median": 121, "028": 121, "031": [121, 134], "98": 121, "166": 121, "203": 121, "368": 121, "194": 121, "403": 121, "190": 121, "rad": 121, "247": 121, "077": [121, 134], "346": 121, "898": 121, "456": 121, "92": 121, "372": 121, "46": 121, "352": 121, "83": 121, "641": 121, "120": 121, "570": 121, "187": 121, "835": 121, "mm": 121, "134": [121, 134], "338": 121, "039": 121, "109": 121, "907": 121, "800": 121, "036": [121, 134], "032": 121, "029": [121, 134], "122": 121, "423": 121, "337": 121, "366": 121, "487": 121, "590": 121, "957": 121, "754": 121, "761": 121, "126": 121, "68": 121, "426": 121, "29": 121, "314": 121, "65": 121, "414": 121, "88": 121, "135": 121, "033": 121, "165": 121, "046": [121, 134], "599": 121, "1800": 121, "72": 121, "045": [121, 134], "069": 121, "037": 121, "157": 121, "106": 121, "064": 121, "316": 121, "954": 121, "927": 121, "035": 121, "943": 121, "643": 121, "016": 121, "102": 121, "246": 121, "48": 121, "082": 121, "302": 121, "133": 121, "311": 121, "202": 121, "304": 121, "141": 121, "330": 121, "034": 121, "101": 121, "201": 121, "089": 121, "052": [121, 134], "084": 121, "405": 121, "196": 121, "357": 121, "192": 121, "402": 121, "149": 121, "233": 121, "066": 121, "329": 121, "873": 121, "297": 121, "93": 121, "212": 121, "45": 121, "912": 121, "84": 121, "692": 121, "121": [121, 134], "339": 121, "899": 121, "140": 121, "353": 121, "113": 121, "112": 121, "csv": 121, "fishbot": 121, "measur": 121, "kinematics_benchmark": 121, "ik_benchmark": 121, "curobo_benchmark": 121, "pyrend": 121, "sensor": 121, "generate_nvblox_imag": 121, "curobo_nvblox_benchmark": 121, "robometrics_benchmark": 121, "who": 121, "understand": 121, "analyz": 121, "bottleneck": [121, 127], "dump": 121, "json": [121, 122], "chrome": 121, "trace": 121, "curobo_profil": 121, "curobo_nvblox_profil": 121, "curobo_python_profil": 121, "cprofil": 121, "most": 122, "tag": [122, 134], "isaac_sim_vers": 122, "vulkan": 122, "gui": 122, "headless": [122, 123], "replac": [122, 127, 134], "edit": 122, "etc": 122, "daemon": 122, "content": [122, 134], "runtimearg": 122, "bash": 122, "build_dock": 122, "column": 122, "start_dock": 122, "mount": 122, "folder": [122, 134], "build_dev_dock": 122, "start_dev_dock": 122, "pypi": 122, "anymor": 122, "download": 122, "repo": 122, "ubuntu2004": 122, "arm64": 122, "pin": 122, "mv": 122, "prefer": 122, "600": 122, "local_instal": 122, "tegra": 122, "local_11": 122, "1_arm64": 122, "deb": 122, "dpkg": 122, "cp": [122, 134], "keyr": 122, "gpg": 122, "cuda_hom": 122, "build_lib": 122, "no_standalon": 122, "sure": 122, "toolkit": 122, "percept": 123, "increas": [123, 127], "densiti": 123, "occlus": 123, "caus": 123, "failur": 123, "regener": 123, "redistribut": 123, "cxx11_abi": 123, "cm": 123, "quickli": 123, "mapper": 123, "clear": 123, "reliabl": 123, "client": 123, "headless_mod": 123, "websocket": 123, "webrtc": 123, "docker": 123, "tm12": 125, "techman": 125, "jaco7": 125, "kinova": 125, "jaco": 125, "kinova_gen3": 125, "gen3": 125, "iiwa": 125, "kuka": 125, "iiwa_allegro": 125, "allegro": 125, "hand": [125, 131, 133], "franka_mobil": 125, "mobil": 125, "multi": 125, "tri_ur10": 125, "quad_ur10": 125, "four": 125, "direct": [126, 130, 134], "togeth": [126, 134], "cccccc": 126, "block": 126, "mangl": 127, "templat": [127, 134], "75025": 127, "blindli": 127, "capabl": 127, "reccommend": 127, "torch_cuda_arch_list": 127, "ptx": 127, "written": 127, "batch_env_idx": 127, "n_batch": 127, "enable_obs_env": 127, "n_ob": 127, "duplic": [127, 134], "out_buffer_prim": 127, "out_buffer_mesh": 127, "usd_exampl": 128, "sub": 128, "substr": 128, "accident": 128, "coordin": 128, "xform": 128, "computelocaltoworldtransform": 128, "prod_kit": 128, "programmer_ref": 128, "w_t_o": 128, "w_t_r": 128, "rel": 128, "r_t_o": 128, "curobo_torch_compile_dis": 129, "curobo_torch_compile_forc": 129, "forc": 129, "bypass": 129, "balakumar": [130, 131, 132, 133], "sundaralingam": [130, 131, 132, 133], "siva": [130, 131, 132, 133], "kumar": [130, 131, 132, 133], "sastri": [130, 131, 132, 133], "hari": [130, 131, 132, 133], "fishman": [130, 132], "caelan": [130, 132], "garrett": [130, 132], "karl": [130, 131, 132, 133], "van": [130, 131, 132, 133], "wyk": [130, 131, 132, 133], "valt": [130, 132], "bluki": [130, 132], "alexand": [130, 131, 132, 133], "millan": [130, 132], "helen": [130, 132], "oleynikova": [130, 132], "ankur": [130, 132], "handa": [130, 132], "fabio": [130, 132], "ramo": [130, 132], "nathan": [130, 132], "ratliff": [130, 132], "dieter": [130, 131, 132, 133], "fox": [130, 131, 132, 133], "demonstr": 130, "massiv": 130, "difficult": 130, "50m": 130, "60x": 130, "art": 130, "sota": 130, "novel": 130, "aid": 130, "101x": 130, "rrtconnect": 130, "7000": 130, "enrich": 130, "commun": 130, "misc": [130, 132], "curobo_report23": [130, 132], "titl": [130, 132], "author": [130, 132], "year": [130, 132], "eprint": [130, 132], "2310": [130, 132], "17274": [130, 132], "archiveprefix": [130, 132], "primaryclass": [130, 132], "publish": 130, "inproceed": 130, "curobo_icra23": 130, "booktitl": 130, "ieee": 130, "confer": 130, "autom": 130, "8112": 130, "8119": 130, "doi": 130, "1109": 130, "icra48891": 130, "10160765": 130, "beyond": 131, "latest": 131, "scholar": 131, "studi": [131, 133], "aspect": [131, 133], "vapr": [131, 133], "precis": [131, 133], "yu": [131, 133], "shun": [131, 133], "hsiao": [131, 133], "jason": [131, 133], "yik": [131, 133], "thierri": [131, 133], "tamb": [131, 133], "charbel": [131, 133], "sakr": [131, 133], "stephen": [131, 133], "keckler": [131, 133], "vijai": [131, 133], "janapa": [131, 133], "reddi": [131, 133], "iro": [131, 133], "reconstruct": [131, 133], "tabletop": [131, 133], "zhenggang": [131, 133], "tang": [131, 133], "jonathan": [131, 133], "tremblai": [131, 133], "bowen": [131, 133], "wen": [131, 133], "ye": [131, 133], "yuan": [131, 133], "tyre": [131, 133], "charl": [131, 133], "loop": [131, 133], "schwing": [131, 133], "stan": [131, 133], "birchfield": [131, 133], "anyteleop": [131, 133], "dexter": [131, 133], "teleoper": [131, 133], "yuzh": [131, 133], "qin": [131, 133], "wei": [131, 133], "yang": [131, 133], "binghao": [131, 133], "huang": [131, 133], "hao": [131, 133], "su": [131, 133], "xiaolong": [131, 133], "wang": [131, 133], "chao": [131, 133], "rss": [131, 133], "minimum": 132, "displai": 134, "fill_thi": 134, "franka_panda_met": 134, "usda": 134, "panda_joint1": 134, "panda_joint2": 134, "panda_joint3": 134, "panda_joint4": 134, "panda_joint5": 134, "panda_joint6": 134, "panda_joint7": 134, "panda_finger_joint1": 134, "panda_finger_joint2": 134, "franka_panda": 134, "panda_hand": 134, "panda_link0": 134, "panda_link1": 134, "panda_link2": 134, "panda_link3": 134, "panda_link4": 134, "panda_link5": 134, "panda_link6": 134, "panda_link7": 134, "panda_leftfing": 134, "panda_rightfing": 134, "franka_mesh": 134, "003": 134, "panda_link8": 134, "attach_joint": 134, "ur_descript": 134, "universal_robot": 134, "catkin": 134, "workspac": 134, "xacro": 134, "rosrun": 134, "o": 134, "weigh": 134, "tool0": 134, "shoulder_pan_joint": 134, "shoulder_lift_joint": 134, "elbow_joint": 134, "wrist_1_joint": 134, "wrist_2_joint": 134, "wrist_3_joint": 134, "57": 134, "383": 134, "00": 134, "usual": 134, "isaac_sim_path": 134, "convert_urdf_to_usd": 134, "save_usd": 134, "lula": 134, "editor": 134, "remov": 134, "stand": 134, "ground": 134, "shoulder_link": 134, "upper_arm_link": 134, "forearm_link": 134, "wrist_1_link": 134, "wrist_2_link": 134, "wrist_3_link": 134, "center": 134, "416": 134, "143": 134, "078": 134, "015": 134, "138": 134, "062": 134, "285": 134, "139": 134, "061": 134, "376": 134, "222": 134, "055": 134, "008": 134, "07": 134, "076": 134, "072": 134, "387": 134, "014": 134, "057": 134, "006": 134, "206": 134, "007": 134, "312": 134, "056": 134, "065": 134, "266": 134, "397": 134, "018": 134, "009": 134, "047": 134, "027": 134, "03": 134, "consecut": 134, "suffici": 134, "neccessari": 134, "conserv": 134, "frankaemika": 134, "franka_ro": 134, "finger": 134, "fulli": 134, "visualize_spher": 134}, "objects": {"": [[0, 0, 0, "-", "curobo"]], "curobo": [[1, 0, 0, "-", "cuda_robot_model"], [8, 0, 0, "-", "curobolib"], [20, 0, 0, "-", "geom"], [33, 0, 0, "-", "graph"], [37, 0, 0, "-", "opt"], [47, 0, 0, "-", "rollout"], [68, 0, 0, "-", "types"], [76, 0, 0, "-", "util"], [89, 0, 0, "-", "util_file"], [90, 0, 0, "-", "wrap"]], "curobo.cuda_robot_model": [[2, 0, 0, "-", "cuda_robot_generator"], [3, 0, 0, "-", "cuda_robot_model"], [4, 0, 0, "-", "kinematics_parser"], [5, 0, 0, "-", "types"], [6, 0, 0, "-", "urdf_kinematics_parser"], [7, 0, 0, "-", "usd_kinematics_parser"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, 1, 1, "", "CudaRobotGenerator"], [2, 1, 1, "", "CudaRobotGeneratorConfig"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator": [[2, 2, 1, "", "_add_body_to_tree"], [2, 2, 1, "", "_build_chain"], [2, 2, 1, "", "_build_collision_model"], [2, 2, 1, "", "_build_kinematics"], [2, 2, 1, "", "_build_kinematics_tensors"], [2, 2, 1, "", "_build_kinematics_with_lock_joints"], [2, 2, 1, "", "_create_self_collision_thread_data"], [2, 2, 1, "", "_get_joint_links"], [2, 2, 1, "", "_get_joint_position_velocity_limits"], [2, 2, 1, "", "_get_link_poses"], [2, 2, 1, "", "_update_joint_limits"], [2, 2, 1, "", "add_fixed_link"], [2, 2, 1, "", "add_link"], [2, 3, 1, "", "get_joint_limits"], [2, 2, 1, "", "initialize_tensors"], [2, 3, 1, "", "kinematics_config"], [2, 3, 1, "", "kinematics_parser"], [2, 3, 1, "", "self_collision_config"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig": [[2, 4, 1, "", "add_object_link"], [2, 4, 1, "", "asset_root_path"], [2, 4, 1, "", "base_link"], [2, 4, 1, "", "collision_link_names"], [2, 4, 1, "", "collision_sphere_buffer"], [2, 4, 1, "", "collision_spheres"], [2, 4, 1, "", "compute_jacobian"], [2, 4, 1, "", "cspace"], [2, 4, 1, "", "debug"], [2, 4, 1, "", "ee_link"], [2, 4, 1, "", "external_asset_path"], [2, 4, 1, "", "external_robot_configs_path"], [2, 4, 1, "", "extra_collision_spheres"], [2, 4, 1, "", "extra_links"], [2, 4, 1, "", "isaac_usd_path"], [2, 4, 1, "", "link_names"], [2, 4, 1, "", "load_link_names_with_mesh"], [2, 4, 1, "", "load_meshes"], [2, 4, 1, "", "lock_joints"], [2, 4, 1, "", "mesh_link_names"], [2, 4, 1, "", "self_collision_buffer"], [2, 4, 1, "", "self_collision_ignore"], [2, 4, 1, "", "tensor_args"], [2, 4, 1, "", "urdf_path"], [2, 4, 1, "", "usd_flip_joint_limits"], [2, 4, 1, "", "usd_flip_joints"], [2, 4, 1, "", "usd_path"], [2, 4, 1, "", "usd_robot_root"], [2, 4, 1, "", "use_external_assets"], [2, 4, 1, "", "use_global_cumul"], [2, 4, 1, "", "use_usd_kinematics"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, 1, 1, "", "CudaRobotModel"], [3, 1, 1, "", "CudaRobotModelConfig"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel": [[3, 2, 1, "", "_cuda_forward"], [3, 3, 1, "", "all_articulated_joint_names"], [3, 3, 1, "", "base_link"], [3, 3, 1, "", "ee_link"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_all_link_transforms"], [3, 2, 1, "", "get_dof"], [3, 2, 1, "", "get_link_mesh"], [3, 2, 1, "", "get_link_poses"], [3, 2, 1, "", "get_link_transform"], [3, 2, 1, "", "get_robot_as_mesh"], [3, 2, 1, "", "get_robot_as_spheres"], [3, 2, 1, "", "get_robot_link_meshes"], [3, 2, 1, "", "get_self_collision_config"], [3, 2, 1, "", "get_state"], [3, 3, 1, "", "joint_names"], [3, 3, 1, "", "lock_jointstate"], [3, 3, 1, "", "retract_config"], [3, 3, 1, "", "total_spheres"], [3, 2, 1, "", "update_batch_size"], [3, 2, 1, "", "update_kinematics_config"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig": [[3, 4, 1, "", "compute_jacobian"], [3, 3, 1, "", "cspace"], [3, 2, 1, "", "from_basic_urdf"], [3, 2, 1, "", "from_basic_usd"], [3, 2, 1, "", "from_config"], [3, 2, 1, "", "from_data_dict"], [3, 2, 1, "", "from_robot_yaml_file"], [3, 4, 1, "", "generator_config"], [3, 2, 1, "", "get_joint_limits"], [3, 4, 1, "", "kinematics_config"], [3, 4, 1, "", "kinematics_parser"], [3, 4, 1, "", "link_names"], [3, 4, 1, "", "self_collision_config"], [3, 4, 1, "", "tensor_args"], [3, 4, 1, "", "use_global_cumul"]], "curobo.cuda_robot_model.kinematics_parser": [[4, 1, 1, "", "KinematicsParser"], [4, 1, 1, "", "LinkParams"]], "curobo.cuda_robot_model.kinematics_parser.KinematicsParser": [[4, 2, 1, "", "_get_from_extra_links"], [4, 2, 1, "", "add_absolute_path_to_link_meshes"], [4, 2, 1, "", "build_link_parent"], [4, 2, 1, "", "get_chain"], [4, 2, 1, "", "get_link_mesh"], [4, 2, 1, "", "get_link_parameters"]], "curobo.cuda_robot_model.kinematics_parser.LinkParams": [[4, 4, 1, "", "fixed_transform"], [4, 2, 1, "", "from_dict"], [4, 4, 1, "", "joint_axis"], [4, 4, 1, "", "joint_id"], [4, 4, 1, "", "joint_limits"], [4, 4, 1, "", "joint_name"], [4, 4, 1, "", "joint_type"], [4, 4, 1, "", "joint_velocity_limits"], [4, 4, 1, "", "link_name"], [4, 4, 1, "", "parent_link_name"]], "curobo.cuda_robot_model.types": [[5, 1, 1, "", "CSpaceConfig"], [5, 1, 1, "", "CudaRobotModelState"], [5, 1, 1, "", "JointLimits"], [5, 1, 1, "", "JointType"], [5, 1, 1, "", "KinematicsTensorConfig"], [5, 1, 1, "", "SelfCollisionKinematicsConfig"]], "curobo.cuda_robot_model.types.CSpaceConfig": [[5, 4, 1, "", "acceleration_scale"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "cspace_distance_weight"], [5, 2, 1, "", "inplace_reindex"], [5, 4, 1, "", "jerk_scale"], [5, 4, 1, "", "joint_names"], [5, 2, 1, "", "load_from_joint_limits"], [5, 4, 1, "", "max_acceleration"], [5, 4, 1, "", "max_jerk"], [5, 4, 1, "", "null_space_weight"], [5, 4, 1, "", "position_limit_clip"], [5, 4, 1, "", "retract_config"], [5, 2, 1, "", "scale_joint_limits"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity_scale"]], "curobo.cuda_robot_model.types.CudaRobotModelState": [[5, 4, 1, "", "ang_jacobian"], [5, 3, 1, "", "ee_pose"], [5, 4, 1, "", "ee_position"], [5, 4, 1, "", "ee_quaternion"], [5, 2, 1, "", "get_link_spheres"], [5, 4, 1, "", "lin_jacobian"], [5, 4, 1, "", "link_names"], [5, 3, 1, "", "link_pose"], [5, 4, 1, "", "link_spheres_tensor"], [5, 4, 1, "", "links_position"], [5, 4, 1, "", "links_quaternion"]], "curobo.cuda_robot_model.types.JointLimits": [[5, 4, 1, "", "acceleration"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "effort"], [5, 2, 1, "", "from_data_dict"], [5, 4, 1, "", "jerk"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "position"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity"]], "curobo.cuda_robot_model.types.JointType": [[5, 4, 1, "", "FIXED"], [5, 4, 1, "", "X_PRISM"], [5, 4, 1, "", "X_PRISM_NEG"], [5, 4, 1, "", "X_ROT"], [5, 4, 1, "", "X_ROT_NEG"], [5, 4, 1, "", "Y_PRISM"], [5, 4, 1, "", "Y_PRISM_NEG"], [5, 4, 1, "", "Y_ROT"], [5, 4, 1, "", "Y_ROT_NEG"], [5, 4, 1, "", "Z_PRISM"], [5, 4, 1, "", "Z_PRISM_NEG"], [5, 4, 1, "", "Z_ROT"], [5, 4, 1, "", "Z_ROT_NEG"]], "curobo.cuda_robot_model.types.KinematicsTensorConfig": [[5, 2, 1, "", "attach_object"], [5, 4, 1, "", "base_link"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "cspace"], [5, 4, 1, "", "debug"], [5, 2, 1, "", "detach_object"], [5, 2, 1, "", "disable_link_spheres"], [5, 4, 1, "", "ee_idx"], [5, 4, 1, "", "ee_link"], [5, 2, 1, "", "enable_link_spheres"], [5, 4, 1, "", "fixed_transforms"], [5, 2, 1, "", "get_link_spheres"], [5, 2, 1, "", "get_number_of_spheres"], [5, 2, 1, "", "get_reference_link_spheres"], [5, 2, 1, "", "get_sphere_index_from_link_name"], [5, 4, 1, "", "joint_limits"], [5, 4, 1, "", "joint_map"], [5, 4, 1, "", "joint_map_type"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "link_chain_map"], [5, 4, 1, "", "link_map"], [5, 4, 1, "", "link_name_to_idx_map"], [5, 4, 1, "", "link_names"], [5, 4, 1, "", "link_sphere_idx_map"], [5, 4, 1, "", "link_spheres"], [5, 2, 1, "", "load_cspace_cfg_from_kinematics"], [5, 4, 1, "", "lock_jointstate"], [5, 4, 1, "", "mesh_link_names"], [5, 4, 1, "", "n_dof"], [5, 4, 1, "", "non_fixed_joint_names"], [5, 4, 1, "", "reference_link_spheres"], [5, 4, 1, "", "store_link_map"], [5, 4, 1, "", "total_spheres"], [5, 2, 1, "", "update_link_spheres"]], "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig": [[5, 4, 1, "", "checks_per_thread"], [5, 4, 1, "", "collision_matrix"], [5, 4, 1, "", "distance_threshold"], [5, 4, 1, "", "experimental_kernel"], [5, 4, 1, "", "offset"], [5, 4, 1, "", "thread_location"], [5, 4, 1, "", "thread_max"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, 1, 1, "", "UrdfKinematicsParser"]], "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser": [[6, 2, 1, "", "_find_parent_joint_of_link"], [6, 2, 1, "", "_get_joint_name"], [6, 2, 1, "", "add_absolute_path_to_link_meshes"], [6, 2, 1, "", "build_link_parent"], [6, 2, 1, "", "get_link_mesh"], [6, 2, 1, "", "get_link_parameters"], [6, 2, 1, "", "get_urdf_string"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, 1, 1, "", "UsdKinematicsParser"], [7, 5, 1, "", "get_links_for_joint"]], "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser": [[7, 2, 1, "", "_get_joint_transform"], [7, 2, 1, "", "build_link_parent"], [7, 2, 1, "", "get_link_parameters"], [7, 3, 1, "", "robot_prim_root"]], "curobo.curobolib": [[9, 0, 0, "-", "geom"], [10, 0, 0, "-", "geom_cu"], [11, 0, 0, "-", "kinematics"], [12, 0, 0, "-", "kinematics_fused_cu"], [13, 0, 0, "-", "lbfgs_step_cu"], [14, 0, 0, "-", "line_search_cu"], [15, 0, 0, "-", "ls"], [16, 0, 0, "-", "opt"], [17, 0, 0, "-", "tensor_step"], [18, 0, 0, "-", "tensor_step_cu"], [19, 0, 0, "-", "util_file"]], "curobo.curobolib.geom": [[9, 1, 1, "", "PoseError"], [9, 1, 1, "", "PoseErrorDistance"], [9, 1, 1, "", "SdfSphereOBB"], [9, 1, 1, "", "SdfSphereVoxel"], [9, 1, 1, "", "SdfSweptSphereOBB"], [9, 1, 1, "", "SdfSweptSphereVoxel"], [9, 1, 1, "", "SelfCollisionDistance"], [9, 1, 1, "", "SelfCollisionDistanceLoss"], [9, 5, 1, "", "get_pose_distance"], [9, 5, 1, "", "get_pose_distance_backward"], [9, 5, 1, "", "get_self_collision_distance"]], "curobo.curobolib.geom.PoseError": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.PoseErrorDistance": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSphereOBB": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSphereVoxel": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSweptSphereOBB": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSweptSphereVoxel": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistance": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistanceLoss": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"]], "curobo.curobolib.geom_cu": [[10, 5, 1, "", "closest_point"], [10, 5, 1, "", "closest_point_voxel"], [10, 5, 1, "", "pose_distance"], [10, 5, 1, "", "pose_distance_backward"], [10, 5, 1, "", "self_collision_distance"], [10, 5, 1, "", "swept_closest_point"], [10, 5, 1, "", "swept_closest_point_voxel"]], "curobo.curobolib.kinematics": [[11, 1, 1, "", "KinematicsFusedFunction"], [11, 1, 1, "", "KinematicsFusedGlobalCumulFunction"], [11, 5, 1, "", "get_cuda_kinematics"], [11, 5, 1, "", "rotation_matrix_to_quaternion"]], "curobo.curobolib.kinematics.KinematicsFusedFunction": [[11, 4, 1, "", "_backward_cls"], [11, 2, 1, "", "_call_backward_cuda"], [11, 2, 1, "", "_call_cuda"], [11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction": [[11, 4, 1, "", "_backward_cls"], [11, 2, 1, "", "_call_backward_cuda"], [11, 2, 1, "", "_call_cuda"], [11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics_fused_cu": [[12, 5, 1, "", "backward"], [12, 5, 1, "", "forward"], [12, 5, 1, "", "matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, 5, 1, "", "forward"]], "curobo.curobolib.line_search_cu": [[14, 5, 1, "", "line_search"], [14, 5, 1, "", "update_best"]], "curobo.curobolib.ls": [[15, 5, 1, "", "update_best"], [15, 5, 1, "", "wolfe_line_search"]], "curobo.curobolib.opt": [[16, 1, 1, "", "LBFGScu"]], "curobo.curobolib.opt.LBFGScu": [[16, 4, 1, "", "_backward_cls"], [16, 2, 1, "", "backward"], [16, 2, 1, "", "forward"]], "curobo.curobolib.tensor_step": [[17, 5, 1, "", "tensor_step_acc_fwd"], [17, 5, 1, "", "tensor_step_acc_idx_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_bwd"], [17, 5, 1, "", "tensor_step_pos_clique_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, 5, 1, "", "step_acceleration"], [18, 5, 1, "", "step_acceleration_idx"], [18, 5, 1, "", "step_idx_position2"], [18, 5, 1, "", "step_position"], [18, 5, 1, "", "step_position2"], [18, 5, 1, "", "step_position_backward"], [18, 5, 1, "", "step_position_backward2"]], "curobo.curobolib.util_file": [[19, 5, 1, "", "add_cpp_path"], [19, 5, 1, "", "get_cpp_path"], [19, 5, 1, "", "join_path"]], "curobo.geom": [[21, 0, 0, "-", "cv"], [22, 0, 0, "-", "sdf"], [30, 0, 0, "-", "sphere_fit"], [31, 0, 0, "-", "transform"], [32, 0, 0, "-", "types"]], "curobo.geom.sdf": [[23, 0, 0, "-", "sdf_grid"], [24, 0, 0, "-", "utils"], [25, 0, 0, "-", "warp_primitives"], [26, 0, 0, "-", "world"], [27, 0, 0, "-", "world_blox"], [28, 0, 0, "-", "world_mesh"], [29, 0, 0, "-", "world_voxel"]], "curobo.geom.sdf.sdf_grid": [[23, 1, 1, "", "SDFGrid"], [23, 5, 1, "", "compute_sdf_gradient"], [23, 5, 1, "", "lookup_distance"]], "curobo.geom.sdf.sdf_grid.SDFGrid": [[23, 4, 1, "", "_backward_cls"], [23, 2, 1, "", "backward"], [23, 2, 1, "", "forward"]], "curobo.geom.sdf.utils": [[24, 5, 1, "", "create_collision_checker"]], "curobo.geom.sdf.warp_primitives": [[25, 1, 1, "", "SdfMeshWarpPy"], [25, 1, 1, "", "SweptSdfMeshWarpPy"]], "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy": [[25, 4, 1, "", "_backward_cls"], [25, 2, 1, "", "backward"], [25, 2, 1, "", "forward"]], "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy": [[25, 4, 1, "", "_backward_cls"], [25, 2, 1, "", "backward"], [25, 2, 1, "", "forward"]], "curobo.geom.sdf.world": [[26, 1, 1, "", "CollisionBuffer"], [26, 1, 1, "", "CollisionCheckerType"], [26, 1, 1, "", "CollisionQueryBuffer"], [26, 1, 1, "", "WorldCollision"], [26, 1, 1, "", "WorldCollisionConfig"], [26, 1, 1, "", "WorldPrimitiveCollision"]], "curobo.geom.sdf.world.CollisionBuffer": [[26, 2, 1, "", "_update_from_shape"], [26, 2, 1, "", "clone"], [26, 4, 1, "", "distance_buffer"], [26, 4, 1, "", "grad_distance_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 4, 1, "", "shape"], [26, 4, 1, "", "sparsity_index_buffer"], [26, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.CollisionCheckerType": [[26, 4, 1, "", "BLOX"], [26, 4, 1, "", "MESH"], [26, 4, 1, "", "PRIMITIVE"], [26, 4, 1, "", "VOXEL"]], "curobo.geom.sdf.world.CollisionQueryBuffer": [[26, 4, 1, "", "blox_collision_buffer"], [26, 2, 1, "", "clone"], [26, 2, 1, "", "create_from_shape"], [26, 2, 1, "", "get_gradient_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 4, 1, "", "mesh_collision_buffer"], [26, 4, 1, "", "primitive_collision_buffer"], [26, 4, 1, "", "shape"], [26, 2, 1, "", "update_buffer_shape"], [26, 4, 1, "", "voxel_collision_buffer"]], "curobo.geom.sdf.world.WorldCollision": [[26, 2, 1, "", "clear_voxelization_cache"], [26, 2, 1, "", "get_esdf_in_bounding_box"], [26, 2, 1, "", "get_mesh_in_bounding_box"], [26, 2, 1, "", "get_occupancy_in_bounding_box"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_sphere_trace"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "get_voxels_in_bounding_box"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "update_cache_voxelization"]], "curobo.geom.sdf.world.WorldCollisionConfig": [[26, 4, 1, "", "cache"], [26, 4, 1, "", "checker_type"], [26, 2, 1, "", "load_from_dict"], [26, 4, 1, "", "max_distance"], [26, 4, 1, "", "n_envs"], [26, 4, 1, "", "tensor_args"], [26, 4, 1, "", "world_model"]], "curobo.geom.sdf.world.WorldPrimitiveCollision": [[26, 2, 1, "", "_create_obb_cache"], [26, 2, 1, "", "_get_obstacle_poses"], [26, 2, 1, "", "_init_cache"], [26, 2, 1, "", "_load_collision_model_in_cache"], [26, 2, 1, "", "add_obb"], [26, 2, 1, "", "add_obb_from_raw"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "enable_obb"], [26, 2, 1, "", "enable_obstacle"], [26, 2, 1, "", "get_obb_idx"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "load_batch_collision_model"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "update_obb_dims"], [26, 2, 1, "", "update_obb_pose"], [26, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sdf.world_blox": [[27, 1, 1, "", "WorldBloxCollision"]], "curobo.geom.sdf.world_blox.WorldBloxCollision": [[27, 2, 1, "", "_get_blox_sdf"], [27, 2, 1, "", "_get_blox_swept_sdf"], [27, 2, 1, "", "add_camera_frame"], [27, 2, 1, "", "clear_blox_layer"], [27, 2, 1, "", "clear_bounding_box"], [27, 2, 1, "", "clear_cache"], [27, 2, 1, "", "decay_layer"], [27, 2, 1, "", "enable_blox"], [27, 2, 1, "", "enable_obstacle"], [27, 2, 1, "", "get_bounding_spheres"], [27, 2, 1, "", "get_mesh_from_blox_layer"], [27, 2, 1, "", "get_sphere_collision"], [27, 2, 1, "", "get_sphere_distance"], [27, 2, 1, "", "get_swept_sphere_collision"], [27, 2, 1, "", "get_swept_sphere_distance"], [27, 2, 1, "", "load_collision_model"], [27, 2, 1, "", "process_camera_frames"], [27, 2, 1, "", "save_layer"], [27, 2, 1, "", "update_blox_esdf"], [27, 2, 1, "", "update_blox_hashes"], [27, 2, 1, "", "update_blox_mesh"], [27, 2, 1, "", "update_blox_pose"]], "curobo.geom.sdf.world_mesh": [[28, 1, 1, "", "WarpMeshData"], [28, 1, 1, "", "WorldMeshCollision"]], "curobo.geom.sdf.world_mesh.WarpMeshData": [[28, 4, 1, "", "faces"], [28, 4, 1, "", "m_id"], [28, 4, 1, "", "mesh"], [28, 4, 1, "", "name"], [28, 4, 1, "", "vertices"]], "curobo.geom.sdf.world_mesh.WorldMeshCollision": [[28, 2, 1, "", "_create_mesh_cache"], [28, 2, 1, "", "_get_sdf"], [28, 2, 1, "", "_get_swept_sdf"], [28, 2, 1, "", "_init_cache"], [28, 2, 1, "", "_load_batch_mesh_to_warp"], [28, 2, 1, "", "_load_mesh_into_cache"], [28, 2, 1, "", "_load_mesh_to_warp"], [28, 2, 1, "", "add_mesh"], [28, 2, 1, "", "clear_cache"], [28, 2, 1, "", "create_collision_cache"], [28, 2, 1, "", "enable_mesh"], [28, 2, 1, "", "enable_obstacle"], [28, 2, 1, "", "get_mesh_idx"], [28, 2, 1, "", "get_sphere_collision"], [28, 2, 1, "", "get_sphere_distance"], [28, 2, 1, "", "get_swept_sphere_collision"], [28, 2, 1, "", "get_swept_sphere_distance"], [28, 2, 1, "", "load_batch_collision_model"], [28, 2, 1, "", "load_collision_model"], [28, 2, 1, "", "update_all_mesh_pose"], [28, 2, 1, "", "update_mesh_from_warp"], [28, 2, 1, "", "update_mesh_pose"], [28, 2, 1, "", "update_mesh_pose_env"], [28, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sdf.world_voxel": [[29, 1, 1, "", "WorldVoxelCollision"]], "curobo.geom.sdf.world_voxel.WorldVoxelCollision": [[29, 2, 1, "", "_batch_tensor_voxel"], [29, 2, 1, "", "_create_voxel_cache"], [29, 2, 1, "", "_init_cache"], [29, 2, 1, "", "_load_collision_model_in_cache"], [29, 2, 1, "", "clear_cache"], [29, 2, 1, "", "enable_obstacle"], [29, 2, 1, "", "enable_voxel"], [29, 2, 1, "", "get_sphere_collision"], [29, 2, 1, "", "get_sphere_distance"], [29, 2, 1, "", "get_swept_sphere_collision"], [29, 2, 1, "", "get_swept_sphere_distance"], [29, 2, 1, "", "get_voxel_grid"], [29, 2, 1, "", "get_voxel_idx"], [29, 2, 1, "", "load_batch_collision_model"], [29, 2, 1, "", "load_collision_model"], [29, 2, 1, "", "update_obstacle_pose"], [29, 2, 1, "", "update_voxel_data"], [29, 2, 1, "", "update_voxel_features"], [29, 2, 1, "", "update_voxel_pose"]], "curobo.geom.sphere_fit": [[30, 1, 1, "", "SphereFitType"], [30, 5, 1, "", "fit_spheres_to_mesh"], [30, 5, 1, "", "get_voxel_pitch"], [30, 5, 1, "", "get_voxelgrid_from_mesh"], [30, 5, 1, "", "sample_even_fit_mesh"], [30, 5, 1, "", "voxel_fit_mesh"], [30, 5, 1, "", "voxel_fit_surface_mesh"], [30, 5, 1, "", "voxel_fit_volume_inside_mesh"], [30, 5, 1, "", "voxel_fit_volume_sample_surface_mesh"]], "curobo.geom.sphere_fit.SphereFitType": [[30, 4, 1, "", "SAMPLE_SURFACE"], [30, 4, 1, "", "VOXEL_SURFACE"], [30, 4, 1, "", "VOXEL_VOLUME"], [30, 4, 1, "", "VOXEL_VOLUME_INSIDE"], [30, 4, 1, "", "VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.transform": [[31, 1, 1, "", "BatchTransformPoint"], [31, 1, 1, "", "BatchTransformPose"], [31, 1, 1, "", "MatrixToQuaternion"], [31, 1, 1, "", "PoseInverse"], [31, 1, 1, "", "QuatToMatrix"], [31, 1, 1, "", "TransformPoint"], [31, 1, 1, "", "TransformPose"], [31, 5, 1, "", "batch_transform_points"], [31, 5, 1, "", "cuda_matrix_to_quaternion"], [31, 5, 1, "", "matrix_to_quaternion"], [31, 5, 1, "", "pose_inverse"], [31, 5, 1, "", "pose_multiply"], [31, 5, 1, "", "pose_to_matrix"], [31, 5, 1, "", "quaternion_to_matrix"], [31, 5, 1, "", "torch_quaternion_to_matrix"], [31, 5, 1, "", "transform_points"]], "curobo.geom.transform.BatchTransformPoint": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.BatchTransformPose": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.MatrixToQuaternion": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.PoseInverse": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.QuatToMatrix": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPoint": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPose": [[31, 4, 1, "", "_backward_cls"], [31, 2, 1, "", "backward"], [31, 2, 1, "", "forward"]], "curobo.geom.types": [[32, 1, 1, "", "BloxMap"], [32, 1, 1, "", "Capsule"], [32, 1, 1, "", "Cuboid"], [32, 1, 1, "", "Cylinder"], [32, 1, 1, "", "Material"], [32, 1, 1, "", "Mesh"], [32, 1, 1, "", "Obstacle"], [32, 1, 1, "", "PointCloud"], [32, 1, 1, "", "Sphere"], [32, 1, 1, "", "VoxelGrid"], [32, 1, 1, "", "WorldConfig"], [32, 5, 1, "", "batch_tensor_cube"], [32, 5, 1, "", "tensor_capsule"], [32, 5, 1, "", "tensor_cube"], [32, 5, 1, "", "tensor_sphere"]], "curobo.geom.types.BloxMap": [[32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "integrator_type"], [32, 4, 1, "", "map_path"], [32, 4, 1, "", "mapper_instance"], [32, 4, 1, "", "mesh"], [32, 4, 1, "", "mesh_file_path"], [32, 4, 1, "", "voxel_size"]], "curobo.geom.types.Capsule": [[32, 4, 1, "", "base"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "radius"], [32, 4, 1, "", "tip"]], "curobo.geom.types.Cuboid": [[32, 4, 1, "", "dims"], [32, 2, 1, "", "get_trimesh_mesh"]], "curobo.geom.types.Cylinder": [[32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "height"], [32, 4, 1, "", "radius"]], "curobo.geom.types.Material": [[32, 4, 1, "", "metallic"], [32, 4, 1, "", "roughness"]], "curobo.geom.types.Mesh": [[32, 4, 1, "", "face_colors"], [32, 4, 1, "", "faces"], [32, 4, 1, "", "file_path"], [32, 4, 1, "", "file_string"], [32, 2, 1, "", "from_pointcloud"], [32, 2, 1, "", "get_mesh_data"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 2, 1, "", "update_material"], [32, 4, 1, "", "urdf_path"], [32, 4, 1, "", "vertex_colors"], [32, 4, 1, "", "vertex_normals"], [32, 4, 1, "", "vertices"]], "curobo.geom.types.Obstacle": [[32, 4, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "material"], [32, 4, 1, "", "name"], [32, 4, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 4, 1, "", "scale"], [32, 4, 1, "", "tensor_args"], [32, 4, 1, "", "texture"], [32, 4, 1, "", "texture_id"]], "curobo.geom.types.PointCloud": [[32, 2, 1, "", "from_camera_observation"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_mesh_data"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "points"], [32, 4, 1, "", "points_features"]], "curobo.geom.types.Sphere": [[32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 4, 1, "", "position"], [32, 4, 1, "", "radius"]], "curobo.geom.types.VoxelGrid": [[32, 2, 1, "", "clone"], [32, 2, 1, "", "create_xyzr_tensor"], [32, 4, 1, "", "dims"], [32, 4, 1, "", "feature_dtype"], [32, 4, 1, "", "feature_tensor"], [32, 2, 1, "", "get_occupied_voxels"], [32, 4, 1, "", "voxel_size"], [32, 4, 1, "", "xyzr_tensor"]], "curobo.geom.types.WorldConfig": [[32, 4, 1, "", "_abc_impl"], [32, 2, 1, "", "add_color"], [32, 2, 1, "", "add_material"], [32, 2, 1, "", "add_obstacle"], [32, 4, 1, "", "blox"], [32, 4, 1, "", "capsule"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "create_collision_support_world"], [32, 2, 1, "", "create_merged_mesh_world"], [32, 2, 1, "", "create_mesh_world"], [32, 2, 1, "", "create_obb_world"], [32, 4, 1, "", "cuboid"], [32, 4, 1, "", "cylinder"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "get_cache_dict"], [32, 2, 1, "", "get_collision_check_world"], [32, 2, 1, "", "get_mesh_world"], [32, 2, 1, "", "get_obb_world"], [32, 2, 1, "", "get_obstacle"], [32, 2, 1, "", "get_scene_graph"], [32, 4, 1, "", "mesh"], [32, 4, 1, "", "objects"], [32, 2, 1, "", "randomize_color"], [32, 2, 1, "", "remove_absolute_paths"], [32, 2, 1, "", "remove_obstacle"], [32, 2, 1, "", "save_world_as_mesh"], [32, 4, 1, "", "sphere"], [32, 4, 1, "", "voxel"]], "curobo.graph": [[34, 0, 0, "-", "graph_base"], [35, 0, 0, "-", "graph_nx"], [36, 0, 0, "-", "prm"]], "curobo.graph.graph_base": [[34, 1, 1, "", "Graph"], [34, 1, 1, "", "GraphConfig"], [34, 1, 1, "", "GraphPlanBase"], [34, 1, 1, "", "GraphResult"]], "curobo.graph.graph_base.Graph": [[34, 4, 1, "", "connectivity"], [34, 4, 1, "", "edges"], [34, 2, 1, "", "get_node_distance"], [34, 4, 1, "", "nodes"], [34, 2, 1, "", "set_shortest_path_lengths"], [34, 4, 1, "", "shortest_path_lengths"]], "curobo.graph.graph_base.GraphConfig": [[34, 4, 1, "", "bias_node"], [34, 4, 1, "", "bounds"], [34, 4, 1, "", "c_max"], [34, 4, 1, "", "compute_metrics"], [34, 4, 1, "", "distance_weight"], [34, 4, 1, "", "dof"], [34, 2, 1, "", "from_dict"], [34, 4, 1, "", "graph_max_attempts"], [34, 4, 1, "", "graph_min_attempts"], [34, 4, 1, "", "init_nodes"], [34, 4, 1, "", "interpolation_acceleration_scale"], [34, 4, 1, "", "interpolation_deviation"], [34, 4, 1, "", "interpolation_dt"], [34, 4, 1, "", "interpolation_steps"], [34, 4, 1, "", "interpolation_type"], [34, 4, 1, "", "k_nn"], [34, 2, 1, "", "load_from_robot_config"], [34, 4, 1, "", "max_buffer"], [34, 4, 1, "", "max_cg_buffer"], [34, 4, 1, "", "max_nodes"], [34, 4, 1, "", "node_similarity_distance"], [34, 4, 1, "", "rejection_ratio"], [34, 4, 1, "", "rollout_fn"], [34, 4, 1, "", "safety_rollout_fn"], [34, 4, 1, "", "sample_pts"], [34, 4, 1, "", "seed"], [34, 4, 1, "", "steer_delta_buffer"], [34, 4, 1, "", "tensor_args"], [34, 4, 1, "", "use_bias_node"], [34, 4, 1, "", "use_cuda_graph_mask_samples"], [34, 4, 1, "", "vertex_n"]], "curobo.graph.graph_base.GraphPlanBase": [[34, 2, 1, "", "_add_batch_edges_to_graph"], [34, 2, 1, "", "_add_unique_nodes_to_graph"], [34, 2, 1, "", "_batch_k_nearest"], [34, 2, 1, "", "_batch_steer"], [34, 2, 1, "", "_batch_steer_and_connect"], [34, 2, 1, "", "_compute_rotation_frame"], [34, 2, 1, "", "_cuda_graph_rollout_constraint"], [34, 2, 1, "", "_distance"], [34, 2, 1, "", "_find_paths"], [34, 2, 1, "", "_get_graph_shortest_path"], [34, 2, 1, "", "_hybrid_nearest"], [34, 2, 1, "", "_k_nearest"], [34, 2, 1, "", "_mask_samples"], [34, 2, 1, "", "_mask_samples_cuda_graph"], [34, 2, 1, "", "_near"], [34, 2, 1, "", "_nearest"], [34, 2, 1, "", "_sample_pts"], [34, 2, 1, "", "_validate_graph"], [34, 2, 1, "", "add_nodes_to_graph"], [34, 2, 1, "", "batch_get_graph_shortest_path"], [34, 2, 1, "", "batch_path_exists"], [34, 2, 1, "", "batch_shortcut_path"], [34, 2, 1, "", "check_feasibility"], [34, 2, 1, "", "compute_path_length"], [34, 2, 1, "", "connect_nodes"], [34, 2, 1, "", "distance"], [34, 2, 1, "", "find_paths"], [34, 2, 1, "", "get_all_rollout_instances"], [34, 2, 1, "", "get_biased_vertex_set"], [34, 2, 1, "", "get_feasible_sample_set"], [34, 2, 1, "", "get_graph"], [34, 2, 1, "", "get_graph_edges"], [34, 2, 1, "", "get_graph_shortest_path_lengths"], [34, 2, 1, "", "get_interpolated_trajectory"], [34, 2, 1, "", "get_metrics"], [34, 2, 1, "", "get_new_vertex_set"], [34, 2, 1, "", "get_node_idx"], [34, 2, 1, "", "get_path_lengths"], [34, 2, 1, "", "get_paths"], [34, 2, 1, "", "get_samples"], [34, 2, 1, "", "mask_samples"], [34, 2, 1, "", "path_exists"], [34, 2, 1, "", "reset_buffer"], [34, 2, 1, "", "reset_cuda_graph"], [34, 2, 1, "", "reset_graph"], [34, 2, 1, "", "reset_seed"], [34, 2, 1, "", "validate_graph"], [34, 2, 1, "", "warmup"]], "curobo.graph.graph_base.GraphResult": [[34, 4, 1, "", "debug_info"], [34, 4, 1, "", "goal_q"], [34, 4, 1, "", "interpolated_plan"], [34, 4, 1, "", "metrics"], [34, 4, 1, "", "optimized_dt"], [34, 4, 1, "", "path_buffer_last_tstep"], [34, 4, 1, "", "path_length"], [34, 4, 1, "", "plan"], [34, 4, 1, "", "solve_time"], [34, 4, 1, "", "start_q"], [34, 4, 1, "", "success"], [34, 4, 1, "", "valid_query"]], "curobo.graph.graph_nx": [[35, 1, 1, "", "NetworkxGraph"]], "curobo.graph.graph_nx.NetworkxGraph": [[35, 2, 1, "", "add_edge"], [35, 2, 1, "", "add_edges"], [35, 2, 1, "", "add_node"], [35, 2, 1, "", "add_nodes"], [35, 2, 1, "", "get_edges"], [35, 2, 1, "", "get_path_lengths"], [35, 2, 1, "", "get_shortest_path"], [35, 2, 1, "", "path_exists"], [35, 2, 1, "", "reset_graph"], [35, 2, 1, "", "update_graph"]], "curobo.graph.prm": [[36, 1, 1, "", "PRMStar"]], "curobo.graph.prm.PRMStar": [[36, 2, 1, "", "_add_bias_graph"], [36, 2, 1, "", "_find_all_path"], [36, 2, 1, "", "_find_one_path"], [36, 2, 1, "", "_find_paths"], [36, 2, 1, "", "build_graph"], [36, 2, 1, "", "warmup"]], "curobo.opt": [[38, 0, 0, "-", "newton"], [41, 0, 0, "-", "opt_base"], [42, 0, 0, "-", "particle"]], "curobo.opt.newton": [[39, 0, 0, "-", "lbfgs"], [40, 0, 0, "-", "newton_base"]], "curobo.opt.newton.lbfgs": [[39, 1, 1, "", "LBFGSOpt"], [39, 1, 1, "", "LBFGSOptConfig"], [39, 5, 1, "", "jit_lbfgs_compute_step_direction"]], "curobo.opt.newton.lbfgs.LBFGSOpt": [[39, 2, 1, "", "_get_step_direction"], [39, 2, 1, "", "_shift"], [39, 2, 1, "", "_shift_buffer"], [39, 2, 1, "", "_update_buffers"], [39, 2, 1, "", "_update_q"], [39, 2, 1, "", "_update_r"], [39, 2, 1, "", "init_hessian"], [39, 2, 1, "", "reset"], [39, 2, 1, "", "update_nproblems"]], "curobo.opt.newton.lbfgs.LBFGSOptConfig": [[39, 4, 1, "", "epsilon"], [39, 4, 1, "", "history"], [39, 4, 1, "", "stable_mode"], [39, 4, 1, "", "use_cuda_kernel"], [39, 4, 1, "", "use_shared_buffers_kernel"]], "curobo.opt.newton.newton_base": [[40, 1, 1, "", "LineSearchType"], [40, 1, 1, "", "NewtonOptBase"], [40, 1, 1, "", "NewtonOptConfig"]], "curobo.opt.newton.newton_base.LineSearchType": [[40, 4, 1, "", "APPROX_WOLFE"], [40, 4, 1, "", "ARMIJO"], [40, 4, 1, "", "GREEDY"], [40, 4, 1, "", "STRONG_WOLFE"], [40, 4, 1, "", "WOLFE"]], "curobo.opt.newton.newton_base.NewtonOptBase": [[40, 2, 1, "", "_approx_line_search"], [40, 2, 1, "", "_armijo_line_search"], [40, 2, 1, "", "_call_opt_iters_graph"], [40, 2, 1, "", "_compute_cost_gradient"], [40, 2, 1, "", "_create_box_line_search"], [40, 2, 1, "", "_create_opt_iters_graph"], [40, 2, 1, "", "_get_step_direction"], [40, 2, 1, "", "_greedy_line_search"], [40, 2, 1, "", "_initialize_opt_iters_graph"], [40, 2, 1, "", "_opt_iters"], [40, 2, 1, "", "_opt_step"], [40, 2, 1, "", "_optimize"], [40, 2, 1, "", "_shift"], [40, 2, 1, "", "_update_best"], [40, 2, 1, "", "_wolfe_line_search"], [40, 2, 1, "", "check_convergence"], [40, 2, 1, "", "clip_bounds"], [40, 2, 1, "", "project_bounds"], [40, 2, 1, "", "reset"], [40, 2, 1, "", "reset_cuda_graph"], [40, 2, 1, "", "scale_step_direction"], [40, 2, 1, "", "update_nproblems"]], "curobo.opt.newton.newton_base.NewtonOptConfig": [[40, 4, 1, "", "cost_convergence"], [40, 4, 1, "", "cost_delta_threshold"], [40, 4, 1, "", "cost_relative_threshold"], [40, 4, 1, "", "fixed_iters"], [40, 4, 1, "", "inner_iters"], [40, 4, 1, "", "last_best"], [40, 4, 1, "", "line_search_scale"], [40, 4, 1, "", "line_search_type"], [40, 4, 1, "", "min_iters"], [40, 4, 1, "", "step_scale"], [40, 4, 1, "", "use_cuda_line_search_kernel"], [40, 4, 1, "", "use_cuda_update_best_kernel"], [40, 4, 1, "", "use_temporal_smooth"]], "curobo.opt.opt_base": [[41, 1, 1, "", "Optimizer"], [41, 1, 1, "", "OptimizerConfig"]], "curobo.opt.opt_base.Optimizer": [[41, 2, 1, "", "_optimize"], [41, 2, 1, "", "_shift"], [41, 2, 1, "", "_update_problem_kernel"], [41, 2, 1, "", "get_all_rollout_instances"], [41, 2, 1, "", "get_nproblem_tensor"], [41, 2, 1, "", "optimize"], [41, 2, 1, "", "reset"], [41, 2, 1, "", "reset_cuda_graph"], [41, 2, 1, "", "reset_seed"], [41, 2, 1, "", "reset_shape"], [41, 2, 1, "", "update_nproblems"], [41, 2, 1, "", "update_params"]], "curobo.opt.opt_base.OptimizerConfig": [[41, 4, 1, "", "action_highs"], [41, 4, 1, "", "action_horizon"], [41, 4, 1, "", "action_lows"], [41, 4, 1, "", "cold_start_n_iters"], [41, 2, 1, "", "create_data_dict"], [41, 4, 1, "", "d_action"], [41, 4, 1, "", "debug_info"], [41, 4, 1, "", "horizon"], [41, 4, 1, "", "n_iters"], [41, 4, 1, "", "n_problems"], [41, 4, 1, "", "num_particles"], [41, 4, 1, "", "rollout_fn"], [41, 4, 1, "", "store_debug"], [41, 4, 1, "", "sync_cuda_time"], [41, 4, 1, "", "tensor_args"], [41, 4, 1, "", "use_coo_sparse"], [41, 4, 1, "", "use_cuda_graph"]], "curobo.opt.particle": [[43, 0, 0, "-", "parallel_es"], [44, 0, 0, "-", "parallel_mppi"], [45, 0, 0, "-", "particle_opt_base"], [46, 0, 0, "-", "particle_opt_utils"]], "curobo.opt.particle.parallel_es": [[43, 1, 1, "", "ParallelES"], [43, 1, 1, "", "ParallelESConfig"]], "curobo.opt.particle.parallel_es.ParallelES": [[43, 2, 1, "", "_compute_mean"], [43, 2, 1, "", "_compute_mean_covariance"], [43, 2, 1, "", "_exp_util"], [43, 2, 1, "", "_exp_util_from_costs"], [43, 2, 1, "", "_update_distribution"]], "curobo.opt.particle.parallel_es.ParallelESConfig": [[43, 4, 1, "", "learning_rate"]], "curobo.opt.particle.parallel_mppi": [[44, 1, 1, "", "BaseActionType"], [44, 1, 1, "", "CovType"], [44, 1, 1, "", "ParallelMPPI"], [44, 1, 1, "", "ParallelMPPIConfig"]], "curobo.opt.particle.parallel_mppi.BaseActionType": [[44, 4, 1, "", "NULL"], [44, 4, 1, "", "RANDOM"], [44, 4, 1, "", "REPEAT"]], "curobo.opt.particle.parallel_mppi.CovType": [[44, 4, 1, "", "DIAG_A"], [44, 4, 1, "", "FULL_A"], [44, 4, 1, "", "FULL_HA"], [44, 4, 1, "", "SIGMA_I"]], "curobo.opt.particle.parallel_mppi.ParallelMPPI": [[44, 2, 1, "", "_calc_val"], [44, 2, 1, "", "_compute_covariance"], [44, 2, 1, "", "_compute_mean"], [44, 2, 1, "", "_compute_mean_covariance"], [44, 2, 1, "", "_compute_total_cost"], [44, 2, 1, "", "_exp_util"], [44, 2, 1, "", "_exp_util_from_costs"], [44, 2, 1, "", "_get_action_seq"], [44, 2, 1, "", "_update_cov_scale"], [44, 2, 1, "", "_update_distribution"], [44, 3, 1, "", "entropy"], [44, 3, 1, "", "full_cov"], [44, 3, 1, "", "full_inv_cov"], [44, 3, 1, "", "full_scale_tril"], [44, 2, 1, "", "generate_noise"], [44, 2, 1, "", "generate_rollouts"], [44, 2, 1, "", "get_rollouts"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "reset_covariance"], [44, 2, 1, "", "reset_distribution"], [44, 2, 1, "", "reset_mean"], [44, 2, 1, "", "reset_seed"], [44, 2, 1, "", "sample_actions"], [44, 3, 1, "", "squashed_mean"], [44, 2, 1, "", "update_init_mean"], [44, 2, 1, "", "update_samples"], [44, 2, 1, "", "update_seed"]], "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig": [[44, 4, 1, "", "alpha"], [44, 4, 1, "", "base_action"], [44, 4, 1, "", "beta"], [44, 4, 1, "", "cov_type"], [44, 2, 1, "", "create_data_dict"], [44, 4, 1, "", "gamma"], [44, 4, 1, "", "init_cov"], [44, 4, 1, "", "init_mean"], [44, 4, 1, "", "kappa"], [44, 4, 1, "", "null_act_frac"], [44, 4, 1, "", "random_mean"], [44, 4, 1, "", "sample_params"], [44, 4, 1, "", "sample_per_problem"], [44, 4, 1, "", "squash_fn"], [44, 4, 1, "", "step_size_cov"], [44, 4, 1, "", "step_size_mean"], [44, 4, 1, "", "update_cov"]], "curobo.opt.particle.particle_opt_base": [[45, 1, 1, "", "ParticleOptBase"], [45, 1, 1, "", "ParticleOptConfig"], [45, 1, 1, "", "ParticleOptInfo"], [45, 1, 1, "", "SampleMode"]], "curobo.opt.particle.particle_opt_base.ParticleOptBase": [[45, 2, 1, "", "_calc_val"], [45, 2, 1, "", "_call_cuda_opt_iters"], [45, 2, 1, "", "_get_action_seq"], [45, 2, 1, "", "_initialize_cuda_graph"], [45, 2, 1, "", "_optimize"], [45, 2, 1, "", "_run_opt_iters"], [45, 2, 1, "", "_update_distribution"], [45, 2, 1, "", "check_convergence"], [45, 2, 1, "", "generate_rollouts"], [45, 2, 1, "", "reset"], [45, 2, 1, "", "sample_actions"], [45, 2, 1, "", "update_nproblems"], [45, 2, 1, "", "update_num_particles_per_problem"], [45, 2, 1, "", "update_seed"]], "curobo.opt.particle.particle_opt_base.ParticleOptConfig": [[45, 4, 1, "", "calculate_value"], [45, 2, 1, "", "create_data_dict"], [45, 4, 1, "", "gamma"], [45, 4, 1, "", "sample_mode"], [45, 4, 1, "", "seed"], [45, 4, 1, "", "store_rollouts"]], "curobo.opt.particle.particle_opt_base.ParticleOptInfo": [[45, 4, 1, "", "info"]], "curobo.opt.particle.particle_opt_base.SampleMode": [[45, 4, 1, "", "BEST"], [45, 4, 1, "", "MEAN"], [45, 4, 1, "", "SAMPLE"]], "curobo.opt.particle.particle_opt_utils": [[46, 1, 1, "", "SquashType"], [46, 5, 1, "", "batch_cholesky"], [46, 5, 1, "", "cost_to_go"], [46, 5, 1, "", "cost_to_go_np"], [46, 5, 1, "", "gaussian_entropy"], [46, 5, 1, "", "gaussian_kl"], [46, 5, 1, "", "gaussian_logprob"], [46, 5, 1, "", "gaussian_logprobgrad"], [46, 5, 1, "", "get_stomp_cov"], [46, 5, 1, "", "matrix_cholesky"], [46, 5, 1, "", "scale_ctrl"]], "curobo.opt.particle.particle_opt_utils.SquashType": [[46, 4, 1, "", "CLAMP"], [46, 4, 1, "", "CLAMP_RESCALE"], [46, 4, 1, "", "IDENTITY"], [46, 4, 1, "", "TANH"]], "curobo.rollout": [[48, 0, 0, "-", "arm_base"], [49, 0, 0, "-", "arm_reacher"], [50, 0, 0, "-", "cost"], [62, 0, 0, "-", "dynamics_model"], [67, 0, 0, "-", "rollout_base"]], "curobo.rollout.arm_base": [[48, 1, 1, "", "ArmBase"], [48, 1, 1, "", "ArmBaseConfig"], [48, 1, 1, "", "ArmCostConfig"]], "curobo.rollout.arm_base.ArmBase": [[48, 2, 1, "", "_get_augmented_state"], [48, 2, 1, "", "_init_after_config_load"], [48, 3, 1, "", "action_bound_highs"], [48, 3, 1, "", "action_bound_lows"], [48, 3, 1, "", "action_horizon"], [48, 2, 1, "", "compute_kinematics"], [48, 2, 1, "", "constraint_fn"], [48, 2, 1, "", "convergence_fn"], [48, 2, 1, "", "cost_fn"], [48, 3, 1, "", "cspace_config"], [48, 2, 1, "", "current_cost"], [48, 3, 1, "", "d_action"], [48, 3, 1, "", "dt"], [48, 2, 1, "", "filter_robot_state"], [48, 2, 1, "", "get_action_from_state"], [48, 2, 1, "", "get_ee_pose"], [48, 2, 1, "", "get_full_dof_from_solution"], [48, 2, 1, "", "get_init_action_seq"], [48, 2, 1, "", "get_metrics"], [48, 2, 1, "", "get_metrics_cuda_graph"], [48, 2, 1, "", "get_robot_command"], [48, 2, 1, "", "get_state_from_action"], [48, 3, 1, "", "horizon"], [48, 3, 1, "", "joint_names"], [48, 3, 1, "", "kinematics"], [48, 2, 1, "", "reset"], [48, 2, 1, "", "reset_cuda_graph"], [48, 2, 1, "", "reset_shape"], [48, 3, 1, "", "retract_state"], [48, 2, 1, "", "rollout_constraint"], [48, 2, 1, "", "rollout_constraint_cuda_graph"], [48, 2, 1, "", "rollout_fn"], [48, 3, 1, "", "state_bounds"], [48, 2, 1, "", "update_cost_dt"], [48, 2, 1, "", "update_params"], [48, 2, 1, "", "update_traj_dt"]], "curobo.rollout.arm_base.ArmBaseConfig": [[48, 4, 1, "", "constraint_cfg"], [48, 4, 1, "", "convergence_cfg"], [48, 4, 1, "", "cost_cfg"], [48, 2, 1, "", "cost_from_dict"], [48, 2, 1, "", "from_dict"], [48, 4, 1, "", "model_cfg"], [48, 2, 1, "", "model_from_dict"], [48, 4, 1, "", "world_coll_checker"], [48, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_base.ArmCostConfig": [[48, 2, 1, "", "_get_base_keys"], [48, 2, 1, "", "_get_formatted_dict"], [48, 4, 1, "", "bound_cfg"], [48, 2, 1, "", "from_dict"], [48, 4, 1, "", "manipulability_cfg"], [48, 4, 1, "", "null_space_cfg"], [48, 4, 1, "", "primitive_collision_cfg"], [48, 4, 1, "", "self_collision_cfg"], [48, 4, 1, "", "stop_cfg"]], "curobo.rollout.arm_reacher": [[49, 1, 1, "", "ArmReacher"], [49, 1, 1, "", "ArmReacherConfig"], [49, 1, 1, "", "ArmReacherCostConfig"], [49, 1, 1, "", "ArmReacherMetrics"]], "curobo.rollout.arm_reacher.ArmReacher": [[49, 2, 1, "", "convergence_fn"], [49, 2, 1, "", "cost_fn"], [49, 2, 1, "", "enable_cspace_cost"], [49, 2, 1, "", "enable_pose_cost"], [49, 2, 1, "", "get_pose_costs"], [49, 2, 1, "", "update_params"], [49, 2, 1, "", "update_pose_cost_metric"]], "curobo.rollout.arm_reacher.ArmReacherConfig": [[49, 2, 1, "", "cost_from_dict"]], "curobo.rollout.arm_reacher.ArmReacherCostConfig": [[49, 2, 1, "", "_get_base_keys"], [49, 4, 1, "", "cspace_cfg"], [49, 2, 1, "", "from_dict"], [49, 4, 1, "", "link_pose_cfg"], [49, 4, 1, "", "pose_cfg"], [49, 4, 1, "", "straight_line_cfg"], [49, 4, 1, "", "zero_acc_cfg"], [49, 4, 1, "", "zero_jerk_cfg"], [49, 4, 1, "", "zero_vel_cfg"]], "curobo.rollout.arm_reacher.ArmReacherMetrics": [[49, 4, 1, "", "_abc_impl"], [49, 2, 1, "", "clone"], [49, 4, 1, "", "cspace_error"], [49, 4, 1, "", "goalset_index"], [49, 4, 1, "", "null_space_error"], [49, 4, 1, "", "pose_error"], [49, 4, 1, "", "position_error"], [49, 4, 1, "", "rotation_error"]], "curobo.rollout.cost": [[51, 0, 0, "-", "bound_cost"], [52, 0, 0, "-", "cost_base"], [53, 0, 0, "-", "dist_cost"], [54, 0, 0, "-", "manipulability_cost"], [55, 0, 0, "-", "pose_cost"], [56, 0, 0, "-", "primitive_collision_cost"], [57, 0, 0, "-", "projected_dist_cost"], [58, 0, 0, "-", "self_collision_cost"], [59, 0, 0, "-", "stop_cost"], [60, 0, 0, "-", "straight_line_cost"], [61, 0, 0, "-", "zero_cost"]], "curobo.rollout.cost.bound_cost": [[51, 1, 1, "", "BoundCost"], [51, 1, 1, "", "BoundCostConfig"], [51, 1, 1, "", "BoundCostType"], [51, 1, 1, "", "WarpBoundFunction"], [51, 1, 1, "", "WarpBoundPosFunction"], [51, 1, 1, "", "WarpBoundPosLoss"], [51, 1, 1, "", "WarpBoundSmoothFunction"]], "curobo.rollout.cost.bound_cost.BoundCost": [[51, 2, 1, "", "forward"], [51, 2, 1, "", "update_batch_size"], [51, 2, 1, "", "update_dt"]], "curobo.rollout.cost.bound_cost.BoundCostConfig": [[51, 4, 1, "", "activation_distance"], [51, 4, 1, "", "cost_type"], [51, 4, 1, "", "cspace_distance_weight"], [51, 4, 1, "", "joint_limits"], [51, 4, 1, "", "null_space_weight"], [51, 4, 1, "", "run_weight_acceleration"], [51, 4, 1, "", "run_weight_jerk"], [51, 4, 1, "", "run_weight_velocity"], [51, 2, 1, "", "set_bounds"], [51, 4, 1, "", "smooth_weight"], [51, 4, 1, "", "state_finite_difference_mode"]], "curobo.rollout.cost.bound_cost.BoundCostType": [[51, 4, 1, "", "BOUNDS"], [51, 4, 1, "", "BOUNDS_SMOOTH"], [51, 4, 1, "", "POSITION"]], "curobo.rollout.cost.bound_cost.WarpBoundFunction": [[51, 4, 1, "", "_backward_cls"], [51, 2, 1, "", "backward"], [51, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosFunction": [[51, 4, 1, "", "_backward_cls"], [51, 2, 1, "", "backward"], [51, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosLoss": [[51, 4, 1, "", "_backward_cls"], [51, 2, 1, "", "backward"]], "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction": [[51, 4, 1, "", "_backward_cls"], [51, 2, 1, "", "backward"], [51, 2, 1, "", "forward"]], "curobo.rollout.cost.cost_base": [[52, 1, 1, "", "CostBase"], [52, 1, 1, "", "CostConfig"]], "curobo.rollout.cost.cost_base.CostBase": [[52, 2, 1, "", "_init_post_config"], [52, 2, 1, "", "disable_cost"], [52, 2, 1, "", "enable_cost"], [52, 3, 1, "", "enabled"], [52, 2, 1, "", "forward"], [52, 2, 1, "", "update_dt"], [52, 2, 1, "", "update_weight"]], "curobo.rollout.cost.cost_base.CostConfig": [[52, 4, 1, "", "classify"], [52, 4, 1, "", "distance_threshold"], [52, 4, 1, "", "dof"], [52, 4, 1, "", "hinge_value"], [52, 4, 1, "", "max_value"], [52, 4, 1, "", "return_loss"], [52, 4, 1, "", "run_weight"], [52, 4, 1, "", "tensor_args"], [52, 4, 1, "", "terminal"], [52, 4, 1, "", "threshold_value"], [52, 2, 1, "", "update_vec_weight"], [52, 4, 1, "", "vec_convergence"], [52, 4, 1, "", "vec_weight"], [52, 4, 1, "", "weight"]], "curobo.rollout.cost.dist_cost": [[53, 1, 1, "", "DistCost"], [53, 1, 1, "", "DistCostConfig"], [53, 1, 1, "", "DistType"], [53, 1, 1, "", "L2DistFunction"]], "curobo.rollout.cost.dist_cost.DistCost": [[53, 2, 1, "", "_init_post_config"], [53, 2, 1, "", "forward"], [53, 2, 1, "", "forward_target"], [53, 2, 1, "", "forward_target_idx"], [53, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.dist_cost.DistCostConfig": [[53, 4, 1, "", "dist_type"], [53, 4, 1, "", "use_null_space"]], "curobo.rollout.cost.dist_cost.DistType": [[53, 4, 1, "", "L1"], [53, 4, 1, "", "L2"], [53, 4, 1, "", "SQUARED_L2"]], "curobo.rollout.cost.dist_cost.L2DistFunction": [[53, 4, 1, "", "_backward_cls"], [53, 2, 1, "", "backward"], [53, 2, 1, "", "forward"]], "curobo.rollout.cost.manipulability_cost": [[54, 1, 1, "", "ManipulabilityCost"], [54, 1, 1, "", "ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCost": [[54, 2, 1, "", "forward"], [54, 2, 1, "", "joint_limited_manipulability_delta"], [54, 2, 1, "", "manipulability"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig": [[54, 4, 1, "", "use_joint_limits"]], "curobo.rollout.cost.pose_cost": [[55, 1, 1, "", "PoseCost"], [55, 1, 1, "", "PoseCostConfig"], [55, 1, 1, "", "PoseCostMetric"], [55, 1, 1, "", "PoseErrorType"]], "curobo.rollout.cost.pose_cost.PoseCost": [[55, 2, 1, "", "_forward_goal_distribution"], [55, 2, 1, "", "_forward_pytorch"], [55, 2, 1, "", "_forward_single_goal"], [55, 2, 1, "", "_update_cost_type"], [55, 2, 1, "", "forward"], [55, 2, 1, "", "forward_out_distance"], [55, 2, 1, "", "forward_pose"], [55, 3, 1, "", "goalset_index_buffer"], [55, 2, 1, "", "hold_partial_pose"], [55, 2, 1, "", "initialize_run_weight_vec"], [55, 2, 1, "", "reach_full_pose"], [55, 2, 1, "", "reach_partial_pose"], [55, 2, 1, "", "release_partial_pose"], [55, 2, 1, "", "remove_offset_waypoint"], [55, 2, 1, "", "update_batch_size"], [55, 2, 1, "", "update_metric"], [55, 2, 1, "", "update_offset_waypoint"], [55, 2, 1, "", "update_run_weight"]], "curobo.rollout.cost.pose_cost.PoseCostConfig": [[55, 4, 1, "", "cost_type"], [55, 4, 1, "", "offset_tstep_fraction"], [55, 4, 1, "", "offset_waypoint"], [55, 4, 1, "", "project_distance"], [55, 4, 1, "", "run_vec_weight"], [55, 4, 1, "", "use_metric"], [55, 4, 1, "", "use_projected_distance"]], "curobo.rollout.cost.pose_cost.PoseCostMetric": [[55, 2, 1, "", "clone"], [55, 2, 1, "", "create_grasp_approach_metric"], [55, 4, 1, "", "hold_partial_pose"], [55, 4, 1, "", "hold_vec_weight"], [55, 4, 1, "", "offset_position"], [55, 4, 1, "", "offset_rotation"], [55, 4, 1, "", "offset_tstep_fraction"], [55, 4, 1, "", "reach_full_pose"], [55, 4, 1, "", "reach_partial_pose"], [55, 4, 1, "", "reach_vec_weight"], [55, 4, 1, "", "release_partial_pose"], [55, 4, 1, "", "remove_offset_waypoint"], [55, 2, 1, "", "reset_metric"]], "curobo.rollout.cost.pose_cost.PoseErrorType": [[55, 4, 1, "", "BATCH_GOAL"], [55, 4, 1, "", "BATCH_GOALSET"], [55, 4, 1, "", "GOALSET"], [55, 4, 1, "", "SINGLE_GOAL"]], "curobo.rollout.cost.primitive_collision_cost": [[56, 1, 1, "", "PrimitiveCollisionCost"], [56, 1, 1, "", "PrimitiveCollisionCostConfig"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost": [[56, 2, 1, "", "discrete_fn"], [56, 2, 1, "", "get_gradient_buffer"], [56, 2, 1, "", "sweep_fn"], [56, 2, 1, "", "sweep_kernel_fn"], [56, 2, 1, "", "update_dt"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig": [[56, 4, 1, "", "activation_distance"], [56, 4, 1, "", "speed_dt"], [56, 4, 1, "", "sum_collisions"], [56, 4, 1, "", "sum_distance"], [56, 4, 1, "", "sweep_steps"], [56, 4, 1, "", "use_speed_metric"], [56, 4, 1, "", "use_sweep"], [56, 4, 1, "", "use_sweep_kernel"], [56, 4, 1, "", "world_coll_checker"]], "curobo.rollout.cost.projected_dist_cost": [[57, 1, 1, "", "ProjType"], [57, 1, 1, "", "ProjectedDistCost"], [57, 1, 1, "", "ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost.ProjType": [[57, 4, 1, "", "IDENTITY"], [57, 4, 1, "", "PSEUDO_INVERSE"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost": [[57, 2, 1, "", "forward"], [57, 2, 1, "", "get_pinv_null_disp"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig": [[57, 4, 1, "", "eps"], [57, 4, 1, "", "proj_type"]], "curobo.rollout.cost.self_collision_cost": [[58, 1, 1, "", "SelfCollisionCost"], [58, 1, 1, "", "SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCost": [[58, 2, 1, "", "forward"], [58, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig": [[58, 4, 1, "", "self_collision_kin_config"]], "curobo.rollout.cost.stop_cost": [[59, 1, 1, "", "StopCost"], [59, 1, 1, "", "StopCostConfig"]], "curobo.rollout.cost.stop_cost.StopCost": [[59, 2, 1, "", "forward"]], "curobo.rollout.cost.stop_cost.StopCostConfig": [[59, 4, 1, "", "dt_traj_params"], [59, 4, 1, "", "horizon"], [59, 4, 1, "", "max_limit"], [59, 4, 1, "", "max_nlimit"]], "curobo.rollout.cost.straight_line_cost": [[60, 1, 1, "", "StraightLineCost"]], "curobo.rollout.cost.straight_line_cost.StraightLineCost": [[60, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost": [[61, 1, 1, "", "RunSquaredSum"], [61, 1, 1, "", "SquaredSum"], [61, 1, 1, "", "ZeroCost"]], "curobo.rollout.cost.zero_cost.RunSquaredSum": [[61, 4, 1, "", "_backward_cls"], [61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.SquaredSum": [[61, 4, 1, "", "_backward_cls"], [61, 2, 1, "", "backward"], [61, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.ZeroCost": [[61, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model": [[63, 0, 0, "-", "integration_utils"], [64, 0, 0, "-", "kinematic_model"], [65, 0, 0, "-", "model_base"], [66, 0, 0, "-", "tensor_step"]], "curobo.rollout.dynamics_model.integration_utils": [[63, 1, 1, "", "AccelerationTensorStepIdxKernel"], [63, 1, 1, "", "AccelerationTensorStepKernel"], [63, 1, 1, "", "CliqueTensorStep"], [63, 1, 1, "", "CliqueTensorStepCentralDifferenceKernel"], [63, 1, 1, "", "CliqueTensorStepCoalesceKernel"], [63, 1, 1, "", "CliqueTensorStepIdxCentralDifferenceKernel"], [63, 1, 1, "", "CliqueTensorStepIdxKernel"], [63, 1, 1, "", "CliqueTensorStepKernel"], [63, 5, 1, "", "action_interpolate_kernel"], [63, 5, 1, "", "build_clique_matrix"], [63, 5, 1, "", "build_fd_matrix"], [63, 5, 1, "", "build_int_matrix"], [63, 5, 1, "", "build_start_state_mask"], [63, 5, 1, "", "euler_integrate"], [63, 5, 1, "", "interpolate_kernel"], [63, 5, 1, "", "step_acc_semi_euler"], [63, 5, 1, "", "sum_matrix"], [63, 5, 1, "", "tensor_linspace"], [63, 5, 1, "", "tensor_step_acc"], [63, 5, 1, "", "tensor_step_acc_semi_euler"], [63, 5, 1, "", "tensor_step_jerk"], [63, 5, 1, "", "tensor_step_pos"], [63, 5, 1, "", "tensor_step_pos_clique"], [63, 5, 1, "", "tensor_step_pos_ik"], [63, 5, 1, "", "tensor_step_vel"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel": [[63, 4, 1, "", "_backward_cls"], [63, 2, 1, "", "backward"], [63, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.kinematic_model": [[64, 1, 1, "", "KinematicModel"], [64, 1, 1, "", "KinematicModelConfig"], [64, 1, 1, "", "KinematicModelState"], [64, 1, 1, "", "TimeTrajConfig"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModel": [[64, 3, 1, "", "action_bound_highs"], [64, 3, 1, "", "action_bound_lows"], [64, 3, 1, "", "action_horizon"], [64, 3, 1, "", "cspace_distance_weight"], [64, 2, 1, "", "filter_robot_state"], [64, 2, 1, "", "forward"], [64, 2, 1, "", "get_action_from_state"], [64, 2, 1, "", "get_next_state"], [64, 2, 1, "", "get_robot_command"], [64, 2, 1, "", "get_state_bounds"], [64, 2, 1, "", "get_state_from_action"], [64, 3, 1, "", "init_action_mean"], [64, 2, 1, "", "integrate_action"], [64, 2, 1, "", "integrate_action_step"], [64, 3, 1, "", "max_acceleration"], [64, 3, 1, "", "max_jerk"], [64, 3, 1, "", "null_space_weight"], [64, 3, 1, "", "retract_config"], [64, 2, 1, "", "robot_cmd_tensor_step"], [64, 2, 1, "", "tensor_step"], [64, 2, 1, "", "update_batch_size"], [64, 2, 1, "", "update_cmd_batch_size"], [64, 2, 1, "", "update_traj_dt"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig": [[64, 4, 1, "", "batch_size"], [64, 4, 1, "", "control_space"], [64, 4, 1, "", "dt_traj_params"], [64, 4, 1, "", "filter_robot_command"], [64, 2, 1, "", "from_dict"], [64, 4, 1, "", "horizon"], [64, 4, 1, "", "return_full_act_buffer"], [64, 4, 1, "", "robot_config"], [64, 4, 1, "", "state_estimation_variance"], [64, 4, 1, "", "state_filter_cfg"], [64, 4, 1, "", "state_finite_difference_mode"], [64, 4, 1, "", "teleport_mode"], [64, 4, 1, "", "tensor_args"], [64, 4, 1, "", "vel_scale"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState": [[64, 4, 1, "", "_abc_impl"], [64, 4, 1, "", "ang_jac_seq"], [64, 4, 1, "", "ee_pos_seq"], [64, 3, 1, "", "ee_pose"], [64, 4, 1, "", "ee_quat_seq"], [64, 4, 1, "", "lin_jac_seq"], [64, 4, 1, "", "link_names"], [64, 4, 1, "", "link_pos_seq"], [64, 3, 1, "", "link_pose"], [64, 4, 1, "", "link_quat_seq"], [64, 4, 1, "", "robot_spheres"], [64, 4, 1, "", "state_seq"]], "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig": [[64, 4, 1, "", "base_dt"], [64, 4, 1, "", "base_ratio"], [64, 2, 1, "", "get_dt_array"], [64, 4, 1, "", "max_dt"], [64, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.model_base": [[65, 1, 1, "", "DynamicsModelBase"]], "curobo.rollout.dynamics_model.model_base.DynamicsModelBase": [[65, 4, 1, "", "_abc_impl"], [65, 2, 1, "", "filter_robot_state"], [65, 2, 1, "", "forward"], [65, 2, 1, "", "get_next_state"], [65, 2, 1, "", "get_robot_command"]], "curobo.rollout.dynamics_model.tensor_step": [[66, 1, 1, "", "TensorStepAcceleration"], [66, 1, 1, "", "TensorStepAccelerationKernel"], [66, 1, 1, "", "TensorStepBase"], [66, 1, 1, "", "TensorStepPosition"], [66, 1, 1, "", "TensorStepPositionClique"], [66, 1, 1, "", "TensorStepPositionCliqueKernel"], [66, 1, 1, "", "TensorStepPositionTeleport"], [66, 1, 1, "", "TensorStepType"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepBase": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel": [[66, 2, 1, "", "filter_signal"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport": [[66, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepType": [[66, 4, 1, "", "ACCELERATION"], [66, 4, 1, "", "ACCELERATION_KERNEL"], [66, 4, 1, "", "JERK"], [66, 4, 1, "", "POSITION"], [66, 4, 1, "", "POSITION_CLIQUE"], [66, 4, 1, "", "POSITION_CLIQUE_KERNEL"], [66, 4, 1, "", "POSITION_TELEPORT"], [66, 4, 1, "", "VELOCITY"]], "curobo.rollout.rollout_base": [[67, 1, 1, "", "Goal"], [67, 1, 1, "", "RolloutBase"], [67, 1, 1, "", "RolloutConfig"], [67, 1, 1, "", "RolloutMetrics"], [67, 1, 1, "", "Trajectory"]], "curobo.rollout.rollout_base.Goal": [[67, 4, 1, "", "_abc_impl"], [67, 2, 1, "", "_copy_buffer"], [67, 2, 1, "", "_copy_tensor"], [67, 2, 1, "", "_tensor_repeat_seeds"], [67, 2, 1, "", "_update_batch_size"], [67, 2, 1, "", "apply_kernel"], [67, 4, 1, "", "batch"], [67, 4, 1, "", "batch_current_state_idx"], [67, 4, 1, "", "batch_enable_idx"], [67, 4, 1, "", "batch_goal_state_idx"], [67, 4, 1, "", "batch_pose_idx"], [67, 4, 1, "", "batch_retract_state_idx"], [67, 4, 1, "", "batch_world_idx"], [67, 2, 1, "", "clone"], [67, 2, 1, "", "copy_"], [67, 2, 1, "", "create_idx"], [67, 2, 1, "", "create_index_buffers"], [67, 4, 1, "", "current_state"], [67, 2, 1, "", "get_batch_goal_state"], [67, 4, 1, "", "goal_pose"], [67, 4, 1, "", "goal_state"], [67, 4, 1, "", "links_goal_pose"], [67, 4, 1, "", "n_goalset"], [67, 4, 1, "", "name"], [67, 2, 1, "", "repeat_seeds"], [67, 4, 1, "", "retract_state"], [67, 2, 1, "", "to"], [67, 4, 1, "", "update_batch_idx_buffers"]], "curobo.rollout.rollout_base.RolloutBase": [[67, 2, 1, "", "_init_after_config_load"], [67, 3, 1, "", "action_bound_highs"], [67, 3, 1, "", "action_bound_lows"], [67, 3, 1, "", "action_bounds"], [67, 3, 1, "", "action_horizon"], [67, 2, 1, "", "constraint_fn"], [67, 2, 1, "", "convergence_fn"], [67, 2, 1, "", "cost_fn"], [67, 3, 1, "", "cspace_config"], [67, 2, 1, "", "current_cost"], [67, 3, 1, "", "d_action"], [67, 3, 1, "", "dt"], [67, 2, 1, "", "filter_robot_state"], [67, 2, 1, "", "get_action_from_state"], [67, 2, 1, "", "get_full_dof_from_solution"], [67, 2, 1, "", "get_init_action_seq"], [67, 2, 1, "", "get_metrics"], [67, 2, 1, "", "get_metrics_cuda_graph"], [67, 2, 1, "", "get_robot_command"], [67, 2, 1, "", "get_state_from_action"], [67, 3, 1, "", "horizon"], [67, 2, 1, "", "reset"], [67, 2, 1, "", "reset_cuda_graph"], [67, 2, 1, "", "reset_seed"], [67, 2, 1, "", "reset_shape"], [67, 2, 1, "", "rollout_constraint"], [67, 2, 1, "", "rollout_fn"], [67, 2, 1, "", "sample_random_actions"], [67, 3, 1, "", "state_bounds"], [67, 2, 1, "", "update_params"], [67, 2, 1, "", "update_start_state"]], "curobo.rollout.rollout_base.RolloutConfig": [[67, 4, 1, "", "sum_horizon"], [67, 4, 1, "", "tensor_args"]], "curobo.rollout.rollout_base.RolloutMetrics": [[67, 4, 1, "", "_abc_impl"], [67, 2, 1, "", "clone"], [67, 4, 1, "", "constraint"], [67, 4, 1, "", "cost"], [67, 4, 1, "", "feasible"], [67, 4, 1, "", "state"]], "curobo.rollout.rollout_base.Trajectory": [[67, 4, 1, "", "actions"], [67, 4, 1, "", "costs"], [67, 4, 1, "", "debug"], [67, 4, 1, "", "state"]], "curobo.types": [[69, 0, 0, "-", "base"], [70, 0, 0, "-", "camera"], [71, 0, 0, "-", "enum"], [72, 0, 0, "-", "math"], [73, 0, 0, "-", "robot"], [74, 0, 0, "-", "state"], [75, 0, 0, "-", "tensor"]], "curobo.types.base": [[69, 1, 1, "", "TensorDeviceType"]], "curobo.types.base.TensorDeviceType": [[69, 2, 1, "", "as_torch_dict"], [69, 4, 1, "", "collision_distance_dtype"], [69, 4, 1, "", "collision_geometry_dtype"], [69, 4, 1, "", "collision_gradient_dtype"], [69, 2, 1, "", "cpu"], [69, 4, 1, "", "device"], [69, 4, 1, "", "dtype"], [69, 2, 1, "", "from_basic"], [69, 2, 1, "", "to_device"], [69, 2, 1, "", "to_int8_device"]], "curobo.types.camera": [[70, 1, 1, "", "CameraObservation"]], "curobo.types.camera.CameraObservation": [[70, 2, 1, "", "clone"], [70, 2, 1, "", "copy_"], [70, 4, 1, "", "depth_image"], [70, 2, 1, "", "filter_depth"], [70, 2, 1, "", "get_image_from_pointcloud"], [70, 2, 1, "", "get_pointcloud"], [70, 4, 1, "", "image_segmentation"], [70, 4, 1, "", "intrinsics"], [70, 4, 1, "", "name"], [70, 4, 1, "", "pose"], [70, 4, 1, "", "projection_matrix"], [70, 4, 1, "", "projection_rays"], [70, 4, 1, "", "resolution"], [70, 4, 1, "", "rgb_image"], [70, 3, 1, "", "shape"], [70, 2, 1, "", "stack"], [70, 4, 1, "", "timestamp"], [70, 2, 1, "", "to"], [70, 2, 1, "", "update_projection_rays"]], "curobo.types.enum": [[71, 1, 1, "", "StateType"]], "curobo.types.enum.StateType": [[71, 4, 1, "", "ACCELERATION"], [71, 4, 1, "", "JERK"], [71, 4, 1, "", "POSITION"], [71, 4, 1, "", "VELOCITY"]], "curobo.types.math": [[72, 1, 1, "", "OrientationError"], [72, 1, 1, "", "Pose"], [72, 5, 1, "", "quat_multiply"]], "curobo.types.math.OrientationError": [[72, 4, 1, "", "_backward_cls"], [72, 2, 1, "", "backward"], [72, 2, 1, "", "forward"], [72, 2, 1, "", "geodesic_distance"]], "curobo.types.math.Pose": [[72, 4, 1, "", "_abc_impl"], [72, 2, 1, "", "angular_distance"], [72, 2, 1, "", "apply_kernel"], [72, 4, 1, "", "batch"], [72, 2, 1, "", "batch_transform_points"], [72, 2, 1, "", "cat"], [72, 2, 1, "", "clone"], [72, 2, 1, "", "compute_local_pose"], [72, 2, 1, "", "compute_offset_pose"], [72, 2, 1, "", "copy_"], [72, 2, 1, "", "distance"], [72, 2, 1, "", "from_batch_list"], [72, 2, 1, "", "from_list"], [72, 2, 1, "", "from_matrix"], [72, 2, 1, "", "get_index"], [72, 2, 1, "", "get_matrix"], [72, 2, 1, "", "get_numpy_matrix"], [72, 2, 1, "", "get_pose_vector"], [72, 2, 1, "", "get_rotation"], [72, 2, 1, "", "inverse"], [72, 2, 1, "", "linear_distance"], [72, 2, 1, "", "multiply"], [72, 4, 1, "", "n_goalset"], [72, 4, 1, "", "name"], [72, 4, 1, "", "normalize_rotation"], [72, 4, 1, "", "position"], [72, 4, 1, "", "quaternion"], [72, 2, 1, "", "repeat"], [72, 2, 1, "", "repeat_seeds"], [72, 4, 1, "", "rotation"], [72, 3, 1, "", "shape"], [72, 2, 1, "", "stack"], [72, 2, 1, "", "to"], [72, 2, 1, "", "to_list"], [72, 2, 1, "", "tolist"], [72, 2, 1, "", "transform_point"], [72, 2, 1, "", "transform_points"], [72, 2, 1, "", "unsqueeze"]], "curobo.types.robot": [[73, 1, 1, "", "NNConfig"], [73, 1, 1, "", "RobotConfig"]], "curobo.types.robot.NNConfig": [[73, 4, 1, "", "ik_seeder"]], "curobo.types.robot.RobotConfig": [[73, 3, 1, "", "cspace"], [73, 2, 1, "", "from_basic"], [73, 2, 1, "", "from_dict"], [73, 4, 1, "", "kinematics"], [73, 4, 1, "", "tensor_args"], [73, 2, 1, "", "write_config"]], "curobo.types.state": [[74, 1, 1, "", "FilterCoeff"], [74, 1, 1, "", "JointState"], [74, 1, 1, "", "State"], [74, 5, 1, "", "fn_get_index"]], "curobo.types.state.FilterCoeff": [[74, 4, 1, "", "acceleration"], [74, 4, 1, "", "jerk"], [74, 4, 1, "", "position"], [74, 4, 1, "", "velocity"]], "curobo.types.state.JointState": [[74, 4, 1, "", "_abc_impl"], [74, 2, 1, "", "_same_shape"], [74, 4, 1, "", "acceleration"], [74, 2, 1, "", "append_joints"], [74, 2, 1, "", "apply_kernel"], [74, 2, 1, "", "blend"], [74, 2, 1, "", "calculate_fd_from_position"], [74, 2, 1, "", "clone"], [74, 2, 1, "", "copy_"], [74, 2, 1, "", "copy_at_index"], [74, 2, 1, "", "copy_data"], [74, 2, 1, "", "detach"], [74, 2, 1, "", "from_list"], [74, 2, 1, "", "from_numpy"], [74, 2, 1, "", "from_position"], [74, 2, 1, "", "from_state_tensor"], [74, 2, 1, "", "get_augmented_joint_state"], [74, 2, 1, "", "get_ordered_joint_state"], [74, 2, 1, "", "get_state_tensor"], [74, 2, 1, "", "inplace_reindex"], [74, 4, 1, "", "jerk"], [74, 4, 1, "", "joint_names"], [74, 4, 1, "", "position"], [74, 2, 1, "", "repeat_seeds"], [74, 2, 1, "", "scale"], [74, 2, 1, "", "scale_by_dt"], [74, 3, 1, "", "shape"], [74, 2, 1, "", "squeeze"], [74, 2, 1, "", "stack"], [74, 4, 1, "", "tensor_args"], [74, 2, 1, "", "to"], [74, 2, 1, "", "trim_trajectory"], [74, 2, 1, "", "unsqueeze"], [74, 4, 1, "", "velocity"], [74, 2, 1, "", "zeros"]], "curobo.types.state.State": [[74, 4, 1, "", "_abc_impl"], [74, 2, 1, "", "apply_kernel"], [74, 2, 1, "", "blend"], [74, 2, 1, "", "clone"], [74, 2, 1, "", "get_state_tensor"], [74, 2, 1, "", "to"]], "curobo.types.tensor": [[75, 4, 1, "", "T_BDOF"], [75, 4, 1, "", "T_BHDOF_float"], [75, 4, 1, "", "T_BHValue_float"], [75, 4, 1, "", "T_BPosition"], [75, 4, 1, "", "T_BQuaternion"], [75, 4, 1, "", "T_BRotation"], [75, 4, 1, "", "T_BValue_bool"], [75, 4, 1, "", "T_BValue_float"], [75, 4, 1, "", "T_BValue_int"], [75, 4, 1, "", "T_DOF"], [75, 4, 1, "", "T_HDOF_float"]], "curobo.util": [[77, 0, 0, "-", "error_metrics"], [78, 0, 0, "-", "helpers"], [79, 0, 0, "-", "logger"], [80, 0, 0, "-", "metrics"], [81, 0, 0, "-", "sample_lib"], [82, 0, 0, "-", "state_filter"], [83, 0, 0, "-", "tensor_util"], [84, 0, 0, "-", "torch_utils"], [85, 0, 0, "-", "trajectory"], [86, 0, 0, "-", "usd_helper"], [87, 0, 0, "-", "warp"], [88, 0, 0, "-", "warp_interpolation"]], "curobo.util.error_metrics": [[77, 5, 1, "", "rotation_error_matrix"], [77, 5, 1, "", "rotation_error_quaternion"]], "curobo.util.helpers": [[78, 5, 1, "", "default_to_regular"], [78, 5, 1, "", "list_idx_if_not_none"]], "curobo.util.logger": [[79, 5, 1, "", "log_error"], [79, 5, 1, "", "log_info"], [79, 5, 1, "", "log_warn"], [79, 5, 1, "", "setup_curobo_logger"]], "curobo.util.metrics": [[80, 1, 1, "", "CuroboGroupMetrics"], [80, 1, 1, "", "CuroboMetrics"]], "curobo.util.metrics.CuroboGroupMetrics": [[80, 4, 1, "", "cspace_path_length"], [80, 2, 1, "", "from_list"], [80, 4, 1, "", "jerk"], [80, 4, 1, "", "perception_interpolated_success"], [80, 4, 1, "", "perception_success"], [80, 4, 1, "", "time"]], "curobo.util.metrics.CuroboMetrics": [[80, 4, 1, "", "cspace_path_length"], [80, 4, 1, "", "jerk"], [80, 4, 1, "", "perception_interpolated_success"], [80, 4, 1, "", "perception_success"], [80, 4, 1, "", "time"]], "curobo.util.sample_lib": [[81, 1, 1, "", "BaseSampleLib"], [81, 1, 1, "", "HaltonGenerator"], [81, 1, 1, "", "HaltonSampleLib"], [81, 1, 1, "", "KnotSampleLib"], [81, 1, 1, "", "RandomSampleLib"], [81, 1, 1, "", "SampleConfig"], [81, 1, 1, "", "SampleLib"], [81, 1, 1, "", "SineSampleLib"], [81, 1, 1, "", "StompSampleLib"], [81, 5, 1, "", "bspline"], [81, 5, 1, "", "generate_gaussian_halton_samples"], [81, 5, 1, "", "generate_gaussian_sobol_samples"], [81, 5, 1, "", "generate_halton_samples"], [81, 5, 1, "", "generate_noise"], [81, 5, 1, "", "generate_noise_np"], [81, 5, 1, "", "generate_prime_numbers"], [81, 5, 1, "", "generate_van_der_corput_sample"], [81, 5, 1, "", "generate_van_der_corput_samples_batch"], [81, 5, 1, "", "get_ranged_halton_samples"]], "curobo.util.sample_lib.BaseSampleLib": [[81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.HaltonGenerator": [[81, 2, 1, "", "_get_samples"], [81, 2, 1, "", "fast_forward"], [81, 2, 1, "", "get_gaussian_samples"], [81, 2, 1, "", "get_samples"], [81, 2, 1, "", "reset"]], "curobo.util.sample_lib.HaltonSampleLib": [[81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.KnotSampleLib": [[81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.RandomSampleLib": [[81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SampleConfig": [[81, 4, 1, "", "cov_mode"], [81, 4, 1, "", "covariance_matrix"], [81, 4, 1, "", "d_action"], [81, 4, 1, "", "degree"], [81, 4, 1, "", "filter_coeffs"], [81, 4, 1, "", "fixed_samples"], [81, 4, 1, "", "horizon"], [81, 4, 1, "", "n_knots"], [81, 4, 1, "", "sample_method"], [81, 4, 1, "", "sample_ratio"], [81, 4, 1, "", "scale_tril"], [81, 4, 1, "", "seed"], [81, 4, 1, "", "sine_period"], [81, 4, 1, "", "tensor_args"]], "curobo.util.sample_lib.SampleLib": [[81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SineSampleLib": [[81, 2, 1, "", "generate_sine_wave"], [81, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.StompSampleLib": [[81, 2, 1, "", "get_samples"]], "curobo.util.state_filter": [[82, 1, 1, "", "FilterConfig"], [82, 1, 1, "", "JointStateFilter"]], "curobo.util.state_filter.FilterConfig": [[82, 4, 1, "", "control_space"], [82, 4, 1, "", "dt"], [82, 4, 1, "", "enable"], [82, 4, 1, "", "filter_coeff"], [82, 2, 1, "", "from_dict"], [82, 4, 1, "", "teleport_mode"], [82, 4, 1, "", "tensor_args"]], "curobo.util.state_filter.JointStateFilter": [[82, 2, 1, "", "filter_joint_state"], [82, 2, 1, "", "integrate_acc"], [82, 2, 1, "", "integrate_jerk"], [82, 2, 1, "", "integrate_pos"], [82, 2, 1, "", "integrate_vel"], [82, 2, 1, "", "reset"]], "curobo.util.tensor_util": [[83, 5, 1, "", "check_tensor_shapes"], [83, 5, 1, "", "clone_if_not_none"], [83, 5, 1, "", "copy_if_not_none"], [83, 5, 1, "", "copy_tensor"], [83, 5, 1, "", "tensor_repeat_seeds"]], "curobo.util.torch_utils": [[84, 5, 1, "", "disable_torch_compile_global"], [84, 5, 1, "", "empty_decorator"], [84, 5, 1, "", "find_first_idx"], [84, 5, 1, "", "find_last_idx"], [84, 5, 1, "", "get_torch_compile_options"], [84, 5, 1, "", "get_torch_jit_decorator"], [84, 5, 1, "", "is_cuda_graph_available"], [84, 5, 1, "", "is_torch_compile_available"], [84, 5, 1, "", "set_torch_compile_global_options"]], "curobo.util.trajectory": [[85, 1, 1, "", "InterpolateType"], [85, 5, 1, "", "get_batch_interpolated_trajectory"], [85, 5, 1, "", "get_cpu_kunz_stilman_interpolation"], [85, 5, 1, "", "get_cpu_linear_interpolation"], [85, 5, 1, "", "get_interpolated_trajectory"], [85, 5, 1, "", "get_linear_traj"], [85, 5, 1, "", "get_smooth_trajectory"], [85, 5, 1, "", "get_spline_interpolated_trajectory"], [85, 5, 1, "", "linear_smooth"]], "curobo.util.trajectory.InterpolateType": [[85, 4, 1, "", "CUBIC"], [85, 4, 1, "", "KUNZ_STILMAN_OPTIMAL"], [85, 4, 1, "", "LINEAR"], [85, 4, 1, "", "LINEAR_CUDA"], [85, 4, 1, "", "QUINTIC"]], "curobo.util.usd_helper": [[86, 1, 1, "", "UsdHelper"], [86, 5, 1, "", "create_stage"], [86, 5, 1, "", "get_capsule_attrs"], [86, 5, 1, "", "get_cube_attrs"], [86, 5, 1, "", "get_cylinder_attrs"], [86, 5, 1, "", "get_mesh_attrs"], [86, 5, 1, "", "get_position_quat"], [86, 5, 1, "", "get_prim_world_pose"], [86, 5, 1, "", "get_sphere_attrs"], [86, 5, 1, "", "get_transform"], [86, 5, 1, "", "set_cylinder_attrs"], [86, 5, 1, "", "set_geom_cube_attrs"], [86, 5, 1, "", "set_geom_cylinder_attrs"], [86, 5, 1, "", "set_geom_mesh_attrs"], [86, 5, 1, "", "set_geom_sphere_attrs"], [86, 5, 1, "", "set_prim_transform"], [86, 5, 1, "", "set_prim_translate"]], "curobo.util.usd_helper.UsdHelper": [[86, 2, 1, "", "add_cuboid_to_stage"], [86, 2, 1, "", "add_cylinder_to_stage"], [86, 2, 1, "", "add_material"], [86, 2, 1, "", "add_mesh_to_stage"], [86, 2, 1, "", "add_sphere_to_stage"], [86, 2, 1, "", "add_subroot"], [86, 2, 1, "", "add_world_to_stage"], [86, 2, 1, "", "create_animation"], [86, 2, 1, "", "create_grid_usd"], [86, 2, 1, "", "create_linkpose_robot_animation"], [86, 2, 1, "", "create_obstacle_animation"], [86, 2, 1, "", "create_stage"], [86, 2, 1, "", "get_obstacle_from_prim"], [86, 2, 1, "", "get_obstacles_from_stage"], [86, 2, 1, "", "get_pose"], [86, 2, 1, "", "get_prim_from_obstacle"], [86, 2, 1, "", "get_robot_prims"], [86, 2, 1, "", "load_robot"], [86, 2, 1, "", "load_robot_usd"], [86, 2, 1, "", "load_stage"], [86, 2, 1, "", "load_stage_from_file"], [86, 2, 1, "", "save"], [86, 2, 1, "", "update_robot_joint_state"], [86, 2, 1, "", "write_motion_gen_log"], [86, 2, 1, "", "write_stage_to_file"], [86, 2, 1, "", "write_trajectory_animation"], [86, 2, 1, "", "write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[87, 5, 1, "", "init_warp"]], "curobo.util.warp_interpolation": [[88, 5, 1, "", "get_cuda_linear_interpolation"]], "curobo.util_file": [[89, 5, 1, "", "add_cpp_path"], [89, 5, 1, "", "copy_file_to_path"], [89, 5, 1, "", "file_exists"], [89, 5, 1, "", "get_assets_path"], [89, 5, 1, "", "get_configs_path"], [89, 5, 1, "", "get_content_path"], [89, 5, 1, "", "get_cpp_path"], [89, 5, 1, "", "get_debug_path"], [89, 5, 1, "", "get_filename"], [89, 5, 1, "", "get_files_from_dir"], [89, 5, 1, "", "get_module_path"], [89, 5, 1, "", "get_motion_gen_robot_list"], [89, 5, 1, "", "get_multi_arm_robot_list"], [89, 5, 1, "", "get_path_of_dir"], [89, 5, 1, "", "get_robot_configs_path"], [89, 5, 1, "", "get_robot_list"], [89, 5, 1, "", "get_robot_path"], [89, 5, 1, "", "get_root_path"], [89, 5, 1, "", "get_task_configs_path"], [89, 5, 1, "", "get_weights_path"], [89, 5, 1, "", "get_world_configs_path"], [89, 5, 1, "", "join_path"], [89, 5, 1, "", "load_yaml"], [89, 5, 1, "", "write_yaml"]], "curobo.wrap": [[91, 0, 0, "-", "model"], [95, 0, 0, "-", "reacher"], [102, 0, 0, "-", "wrap_base"], [103, 0, 0, "-", "wrap_mpc"]], "curobo.wrap.model": [[92, 0, 0, "-", "curobo_robot_world"], [93, 0, 0, "-", "robot_segmenter"], [94, 0, 0, "-", "robot_world"]], "curobo.wrap.model.curobo_robot_world": [[92, 1, 1, "", "CuroboRobotWorld"], [92, 1, 1, "", "CuroboRobotWorldConfig"]], "curobo.wrap.model.robot_segmenter": [[93, 1, 1, "", "RobotSegmenter"]], "curobo.wrap.model.robot_segmenter.RobotSegmenter": [[93, 2, 1, "", "_call_op"], [93, 2, 1, "", "_create_cg_graph"], [93, 2, 1, "", "_mask_op"], [93, 3, 1, "", "base_link"], [93, 2, 1, "", "from_robot_file"], [93, 2, 1, "", "get_pointcloud_from_depth"], [93, 2, 1, "", "get_robot_mask"], [93, 2, 1, "", "get_robot_mask_from_active_js"], [93, 3, 1, "", "kinematics"], [93, 3, 1, "", "robot_world"], [93, 2, 1, "", "update_camera_projection"]], "curobo.wrap.model.robot_world": [[94, 1, 1, "", "RobotWorld"], [94, 1, 1, "", "RobotWorldConfig"]], "curobo.wrap.model.robot_world.RobotWorld": [[94, 2, 1, "", "clear_world_cache"], [94, 2, 1, "", "get_active_js"], [94, 2, 1, "", "get_bound"], [94, 2, 1, "", "get_collision_constraint"], [94, 2, 1, "", "get_collision_distance"], [94, 2, 1, "", "get_collision_vector"], [94, 2, 1, "", "get_kinematics"], [94, 2, 1, "", "get_point_robot_distance"], [94, 2, 1, "", "get_self_collision"], [94, 2, 1, "", "get_self_collision_distance"], [94, 2, 1, "", "get_world_self_collision_distance_from_joint_trajectory"], [94, 2, 1, "", "get_world_self_collision_distance_from_joints"], [94, 2, 1, "", "pose_distance"], [94, 2, 1, "", "sample"], [94, 2, 1, "", "sample_trajectory"], [94, 2, 1, "", "update_world"], [94, 2, 1, "", "validate"], [94, 2, 1, "", "validate_trajectory"]], "curobo.wrap.model.robot_world.RobotWorldConfig": [[94, 4, 1, "", "bound_cost"], [94, 4, 1, "", "bound_scale"], [94, 4, 1, "", "collision_constraint"], [94, 4, 1, "", "collision_cost"], [94, 4, 1, "", "contact_distance"], [94, 4, 1, "", "kinematics"], [94, 2, 1, "", "load_from_config"], [94, 4, 1, "", "pose_cost"], [94, 4, 1, "", "rejection_ratio"], [94, 4, 1, "", "sampler"], [94, 4, 1, "", "self_collision_cost"], [94, 4, 1, "", "tensor_args"], [94, 4, 1, "", "world_model"]], "curobo.wrap.reacher": [[96, 0, 0, "-", "evaluator"], [97, 0, 0, "-", "ik_solver"], [98, 0, 0, "-", "motion_gen"], [99, 0, 0, "-", "mpc"], [100, 0, 0, "-", "trajopt"], [101, 0, 0, "-", "types"]], "curobo.wrap.reacher.evaluator": [[96, 1, 1, "", "TrajEvaluator"], [96, 1, 1, "", "TrajEvaluatorConfig"]], "curobo.wrap.reacher.evaluator.TrajEvaluator": [[96, 2, 1, "", "_check_smoothness"], [96, 2, 1, "", "_compute_path_length"], [96, 2, 1, "", "calculate_dt"], [96, 2, 1, "", "evaluate"], [96, 2, 1, "", "evaluate_from_position"], [96, 2, 1, "", "evaluate_interpolated_smootheness"]], "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig": [[96, 4, 1, "", "cost_weight"], [96, 4, 1, "", "max_acc"], [96, 4, 1, "", "max_dt"], [96, 4, 1, "", "max_jerk"], [96, 4, 1, "", "min_dt"]], "curobo.wrap.reacher.ik_solver": [[97, 1, 1, "", "IKResult"], [97, 1, 1, "", "IKSolver"], [97, 1, 1, "", "IKSolverConfig"]], "curobo.wrap.reacher.ik_solver.IKResult": [[97, 4, 1, "", "_abc_impl"], [97, 4, 1, "", "debug_info"], [97, 4, 1, "", "error"], [97, 2, 1, "", "get_batch_unique_solution"], [97, 2, 1, "", "get_unique_solution"], [97, 4, 1, "", "goal_pose"], [97, 4, 1, "", "goalset_index"], [97, 4, 1, "", "js_solution"], [97, 4, 1, "", "position_error"], [97, 4, 1, "", "rotation_error"], [97, 4, 1, "", "seed"], [97, 4, 1, "", "solution"], [97, 4, 1, "", "solve_time"], [97, 4, 1, "", "success"]], "curobo.wrap.reacher.ik_solver.IKSolver": [[97, 2, 1, "", "attach_object_to_robot"], [97, 2, 1, "", "batch_env_solve"], [97, 2, 1, "", "check_constraints"], [97, 2, 1, "", "detach_object_from_robot"], [97, 2, 1, "", "fk"], [97, 2, 1, "", "generate_seed"], [97, 2, 1, "", "get_all_kinematics_instances"], [97, 2, 1, "", "get_all_rollout_instances"], [97, 2, 1, "", "get_result"], [97, 2, 1, "", "get_retract_config"], [97, 2, 1, "", "get_seed"], [97, 2, 1, "", "get_success"], [97, 3, 1, "", "kinematics"], [97, 2, 1, "", "reset_cuda_graph"], [97, 2, 1, "", "reset_seed"], [97, 2, 1, "", "reset_shape"], [97, 2, 1, "", "sample_configs"], [97, 2, 1, "", "solve"], [97, 2, 1, "", "solve_any"], [97, 2, 1, "", "solve_batch"], [97, 2, 1, "", "solve_batch_env"], [97, 2, 1, "", "solve_batch_env_goalset"], [97, 2, 1, "", "solve_batch_goalset"], [97, 2, 1, "", "solve_from_solve_state"], [97, 2, 1, "", "solve_goalset"], [97, 2, 1, "", "solve_single"], [97, 2, 1, "", "update_goal_buffer"], [97, 2, 1, "", "update_pose_cost_metric"], [97, 2, 1, "", "update_world"]], "curobo.wrap.reacher.ik_solver.IKSolverConfig": [[97, 4, 1, "", "ik_nn_seeder"], [97, 2, 1, "", "load_from_robot_config"], [97, 4, 1, "", "num_seeds"], [97, 4, 1, "", "position_threshold"], [97, 4, 1, "", "robot_config"], [97, 4, 1, "", "rollout_fn"], [97, 4, 1, "", "rotation_threshold"], [97, 4, 1, "", "sample_rejection_ratio"], [97, 4, 1, "", "solver"], [97, 4, 1, "", "tensor_args"], [97, 4, 1, "", "use_cuda_graph"], [97, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen": [[98, 1, 1, "", "MotionGen"], [98, 1, 1, "", "MotionGenConfig"], [98, 1, 1, "", "MotionGenPlanConfig"], [98, 1, 1, "", "MotionGenResult"]], "curobo.wrap.reacher.motion_gen.MotionGen": [[98, 2, 1, "", "_get_solve_state"], [98, 2, 1, "", "_plan_attempts"], [98, 2, 1, "", "_plan_batch_attempts"], [98, 2, 1, "", "_plan_from_solve_state"], [98, 2, 1, "", "_plan_from_solve_state_batch"], [98, 2, 1, "", "_plan_js_from_solve_state"], [98, 2, 1, "", "_solve_ik_from_solve_state"], [98, 2, 1, "", "_solve_trajopt_from_solve_state"], [98, 2, 1, "", "add_camera_frame"], [98, 2, 1, "", "add_running_pose_constraint"], [98, 2, 1, "", "attach_bounding_box_from_blox_to_robot"], [98, 2, 1, "", "attach_external_objects_to_robot"], [98, 2, 1, "", "attach_new_object_to_robot"], [98, 2, 1, "", "attach_objects_to_robot"], [98, 2, 1, "", "attach_spheres_to_robot"], [98, 2, 1, "", "batch_plan"], [98, 2, 1, "", "check_constraints"], [98, 2, 1, "", "clear_world_cache"], [98, 2, 1, "", "compute_kinematics"], [98, 2, 1, "", "detach_object_from_robot"], [98, 2, 1, "", "detach_spheres_from_robot"], [98, 3, 1, "", "dof"], [98, 2, 1, "", "get_active_js"], [98, 2, 1, "", "get_all_kinematics_instances"], [98, 2, 1, "", "get_all_pose_solver_rollout_instances"], [98, 2, 1, "", "get_all_rollout_instances"], [98, 2, 1, "", "get_all_solver_rollout_instances"], [98, 2, 1, "", "get_full_js"], [98, 2, 1, "", "get_retract_config"], [98, 2, 1, "", "graph_search"], [98, 3, 1, "", "kinematics"], [98, 2, 1, "", "plan"], [98, 2, 1, "", "plan_batch"], [98, 2, 1, "", "plan_batch_env"], [98, 2, 1, "", "plan_batch_env_goalset"], [98, 2, 1, "", "plan_batch_goalset"], [98, 2, 1, "", "plan_goalset"], [98, 2, 1, "", "plan_single"], [98, 2, 1, "", "plan_single_js"], [98, 2, 1, "", "process_camera_frames"], [98, 3, 1, "", "project_pose_to_goal_frame"], [98, 2, 1, "", "remove_running_pose_constraint"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "reset_seed"], [98, 2, 1, "", "run_finetune_trajopt"], [98, 2, 1, "", "solve_ik"], [98, 2, 1, "", "solve_trajopt"], [98, 2, 1, "", "update_batch_size"], [98, 2, 1, "", "update_interpolation_type"], [98, 2, 1, "", "update_locked_joints"], [98, 2, 1, "", "update_pose_cost_metric"], [98, 2, 1, "", "update_world"], [98, 2, 1, "", "warmup"], [98, 3, 1, "", "world_collision"], [98, 3, 1, "", "world_model"]], "curobo.wrap.reacher.motion_gen.MotionGenConfig": [[98, 4, 1, "", "batch_ik_seeds"], [98, 4, 1, "", "batch_trajopt_seeds"], [98, 4, 1, "", "finetune_dt_scale"], [98, 4, 1, "", "finetune_trajopt_solver"], [98, 4, 1, "", "graph_planner"], [98, 4, 1, "", "graph_seeds"], [98, 4, 1, "", "graph_trajopt_iters"], [98, 4, 1, "", "ik_seeds"], [98, 4, 1, "", "ik_solver"], [98, 4, 1, "", "interpolation_dt"], [98, 4, 1, "", "interpolation_steps"], [98, 4, 1, "", "interpolation_type"], [98, 4, 1, "", "js_trajopt_solver"], [98, 2, 1, "", "load_from_robot_config"], [98, 4, 1, "", "noisy_trajopt_seeds"], [98, 4, 1, "", "partial_ik_iters"], [98, 4, 1, "", "robot_cfg"], [98, 4, 1, "", "store_debug_in_result"], [98, 4, 1, "", "tensor_args"], [98, 4, 1, "", "trajopt_seeds"], [98, 4, 1, "", "trajopt_solver"], [98, 4, 1, "", "use_cuda_graph"], [98, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig": [[98, 2, 1, "", "clone"], [98, 4, 1, "", "disable_graph_attempt"], [98, 4, 1, "", "enable_finetune_trajopt"], [98, 4, 1, "", "enable_graph"], [98, 4, 1, "", "enable_graph_attempt"], [98, 4, 1, "", "enable_opt"], [98, 4, 1, "", "fail_on_invalid_query"], [98, 4, 1, "", "ik_fail_return"], [98, 4, 1, "", "max_attempts"], [98, 4, 1, "", "need_graph_success"], [98, 4, 1, "", "num_graph_seeds"], [98, 4, 1, "", "num_ik_seeds"], [98, 4, 1, "", "num_trajopt_seeds"], [98, 4, 1, "", "parallel_finetune"], [98, 4, 1, "", "partial_ik_opt"], [98, 4, 1, "", "pose_cost_metric"], [98, 4, 1, "", "success_ratio"], [98, 4, 1, "", "timeout"], [98, 4, 1, "", "use_nn_ik_seed"], [98, 4, 1, "", "use_start_state_as_retract"]], "curobo.wrap.reacher.motion_gen.MotionGenResult": [[98, 2, 1, "", "_check_none_and_copy_idx"], [98, 4, 1, "", "attempts"], [98, 2, 1, "", "clone"], [98, 2, 1, "", "copy_idx"], [98, 4, 1, "", "cspace_error"], [98, 4, 1, "", "debug_info"], [98, 4, 1, "", "finetune_time"], [98, 2, 1, "", "get_interpolated_plan"], [98, 2, 1, "", "get_paths"], [98, 2, 1, "", "get_successful_paths"], [98, 4, 1, "", "goalset_index"], [98, 4, 1, "", "graph_plan"], [98, 4, 1, "", "graph_time"], [98, 4, 1, "", "ik_time"], [98, 4, 1, "", "interpolated_plan"], [98, 4, 1, "", "interpolation_dt"], [98, 3, 1, "", "motion_time"], [98, 4, 1, "", "optimized_dt"], [98, 4, 1, "", "optimized_plan"], [98, 4, 1, "", "path_buffer_last_tstep"], [98, 4, 1, "", "position_error"], [98, 4, 1, "", "rotation_error"], [98, 4, 1, "", "solve_time"], [98, 4, 1, "", "status"], [98, 4, 1, "", "success"], [98, 4, 1, "", "total_time"], [98, 4, 1, "", "trajopt_attempts"], [98, 4, 1, "", "trajopt_time"], [98, 4, 1, "", "used_graph"], [98, 4, 1, "", "valid_query"]], "curobo.wrap.reacher.mpc": [[99, 1, 1, "", "MpcSolver"], [99, 1, 1, "", "MpcSolverConfig"]], "curobo.wrap.reacher.mpc.MpcSolver": [[99, 2, 1, "", "_initialize_cuda_graph_step"], [99, 2, 1, "", "_solve_from_solve_state"], [99, 2, 1, "", "_step"], [99, 2, 1, "", "_update_batch_size"], [99, 2, 1, "", "enable_cspace_cost"], [99, 2, 1, "", "enable_pose_cost"], [99, 2, 1, "", "fn"], [99, 2, 1, "", "get_active_js"], [99, 2, 1, "", "get_visual_rollouts"], [99, 3, 1, "", "joint_names"], [99, 3, 1, "", "kinematics"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "reset_cuda_graph"], [99, 3, 1, "", "rollout_fn"], [99, 2, 1, "", "setup_solve_batch"], [99, 2, 1, "", "setup_solve_batch_env"], [99, 2, 1, "", "setup_solve_batch_env_goalset"], [99, 2, 1, "", "setup_solve_batch_goalset"], [99, 2, 1, "", "setup_solve_goalset"], [99, 2, 1, "", "setup_solve_single"], [99, 2, 1, "", "step"], [99, 2, 1, "", "step_once"], [99, 2, 1, "", "update_goal"], [99, 2, 1, "", "update_goal_buffer"], [99, 2, 1, "", "update_world"], [99, 3, 1, "", "world_collision"]], "curobo.wrap.reacher.mpc.MpcSolverConfig": [[99, 2, 1, "", "load_from_robot_config"], [99, 4, 1, "", "solver"], [99, 4, 1, "", "tensor_args"], [99, 4, 1, "", "use_cuda_graph_full_step"], [99, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt": [[100, 1, 1, "", "TrajOptSolver"], [100, 1, 1, "", "TrajOptSolverConfig"], [100, 1, 1, "", "TrajResult"], [100, 5, 1, "", "jit_trajopt_best_select"]], "curobo.wrap.reacher.trajopt.TrajOptSolver": [[100, 2, 1, "", "_get_result"], [100, 2, 1, "", "_get_seed_numbers"], [100, 2, 1, "", "attach_object_to_robot"], [100, 2, 1, "", "batch_solve"], [100, 2, 1, "", "calculate_trajectory_dt"], [100, 2, 1, "", "compute_metrics"], [100, 2, 1, "", "detach_object_from_robot"], [100, 2, 1, "", "fk"], [100, 2, 1, "", "get_all_kinematics_instances"], [100, 2, 1, "", "get_all_rollout_instances"], [100, 2, 1, "", "get_bias_seed"], [100, 2, 1, "", "get_full_js"], [100, 2, 1, "", "get_interpolated_trajectory"], [100, 2, 1, "", "get_linear_seed"], [100, 2, 1, "", "get_seed_set"], [100, 2, 1, "", "get_seeds"], [100, 2, 1, "", "get_start_seed"], [100, 3, 1, "", "kinematics"], [100, 2, 1, "", "reset_cuda_graph"], [100, 2, 1, "", "reset_seed"], [100, 2, 1, "", "reset_shape"], [100, 3, 1, "", "retract_config"], [100, 2, 1, "", "solve"], [100, 2, 1, "", "solve_any"], [100, 2, 1, "", "solve_batch"], [100, 2, 1, "", "solve_batch_env"], [100, 2, 1, "", "solve_batch_env_goalset"], [100, 2, 1, "", "solve_batch_goalset"], [100, 2, 1, "", "solve_from_solve_state"], [100, 2, 1, "", "solve_goalset"], [100, 2, 1, "", "solve_single"], [100, 3, 1, "", "solver_dt"], [100, 3, 1, "", "solver_dt_tensor"], [100, 2, 1, "", "update_goal_buffer"], [100, 2, 1, "", "update_pose_cost_metric"], [100, 2, 1, "", "update_solver_dt"]], "curobo.wrap.reacher.trajopt.TrajOptSolverConfig": [[100, 4, 1, "", "bias_node"], [100, 4, 1, "", "cspace_threshold"], [100, 4, 1, "", "evaluate_interpolated_trajectory"], [100, 4, 1, "", "interpolate_rollout"], [100, 4, 1, "", "interpolation_dt"], [100, 4, 1, "", "interpolation_steps"], [100, 4, 1, "", "interpolation_type"], [100, 2, 1, "", "load_from_robot_config"], [100, 4, 1, "", "num_seeds"], [100, 4, 1, "", "optimize_dt"], [100, 4, 1, "", "position_threshold"], [100, 4, 1, "", "robot_config"], [100, 4, 1, "", "rollout_fn"], [100, 4, 1, "", "rotation_threshold"], [100, 4, 1, "", "seed_ratio"], [100, 4, 1, "", "solver"], [100, 4, 1, "", "store_debug_in_result"], [100, 4, 1, "", "sync_cuda_time"], [100, 4, 1, "", "tensor_args"], [100, 4, 1, "", "traj_evaluator"], [100, 4, 1, "", "traj_evaluator_config"], [100, 4, 1, "", "traj_tsteps"], [100, 4, 1, "", "trim_steps"], [100, 4, 1, "", "use_cspace_seed"], [100, 4, 1, "", "use_cuda_graph"], [100, 4, 1, "", "use_cuda_graph_metrics"], [100, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt.TrajResult": [[100, 4, 1, "", "_abc_impl"], [100, 4, 1, "", "cspace_error"], [100, 4, 1, "", "debug_info"], [100, 4, 1, "", "goal"], [100, 4, 1, "", "goalset_index"], [100, 4, 1, "", "interpolated_solution"], [100, 4, 1, "", "metrics"], [100, 4, 1, "", "optimized_dt"], [100, 4, 1, "", "path_buffer_last_tstep"], [100, 4, 1, "", "position_error"], [100, 4, 1, "", "raw_action"], [100, 4, 1, "", "raw_solution"], [100, 4, 1, "", "rotation_error"], [100, 4, 1, "", "seed"], [100, 4, 1, "", "smooth_error"], [100, 4, 1, "", "smooth_label"], [100, 4, 1, "", "solution"], [100, 4, 1, "", "solve_time"], [100, 4, 1, "", "success"]], "curobo.wrap.reacher.types": [[101, 1, 1, "", "MotionGenSolverState"], [101, 1, 1, "", "ReacherSolveState"], [101, 1, 1, "", "ReacherSolveType"], [101, 5, 1, "", "get_padded_goalset"]], "curobo.wrap.reacher.types.MotionGenSolverState": [[101, 4, 1, "", "ik_solve_state"], [101, 4, 1, "", "solve_type"], [101, 4, 1, "", "trajopt_solve_state"]], "curobo.wrap.reacher.types.ReacherSolveState": [[101, 4, 1, "", "batch_env"], [101, 4, 1, "", "batch_mode"], [101, 4, 1, "", "batch_retract"], [101, 4, 1, "", "batch_size"], [101, 2, 1, "", "clone"], [101, 2, 1, "", "create_goal_buffer"], [101, 2, 1, "", "get_batch_size"], [101, 2, 1, "", "get_ik_batch_size"], [101, 4, 1, "", "n_envs"], [101, 4, 1, "", "n_goalset"], [101, 4, 1, "", "num_graph_seeds"], [101, 4, 1, "", "num_ik_seeds"], [101, 4, 1, "", "num_mpc_seeds"], [101, 4, 1, "", "num_seeds"], [101, 4, 1, "", "num_trajopt_seeds"], [101, 4, 1, "", "solve_type"], [101, 2, 1, "", "update_goal"], [101, 2, 1, "", "update_goal_buffer"]], "curobo.wrap.reacher.types.ReacherSolveType": [[101, 4, 1, "", "BATCH"], [101, 4, 1, "", "BATCH_ENV"], [101, 4, 1, "", "BATCH_ENV_GOALSET"], [101, 4, 1, "", "BATCH_GOALSET"], [101, 4, 1, "", "GOALSET"], [101, 4, 1, "", "SINGLE"]], "curobo.wrap.wrap_base": [[102, 1, 1, "", "WrapBase"], [102, 1, 1, "", "WrapConfig"], [102, 1, 1, "", "WrapResult"]], "curobo.wrap.wrap_base.WrapBase": [[102, 2, 1, "", "_get_rollout_instances_from_optimizers"], [102, 2, 1, "", "get_all_rollout_instances"], [102, 2, 1, "", "get_debug_cost"], [102, 2, 1, "", "get_debug_data"], [102, 2, 1, "", "get_init_act"], [102, 2, 1, "", "get_metrics"], [102, 3, 1, "", "joint_names"], [102, 3, 1, "", "newton_optimizer"], [102, 2, 1, "", "optimize"], [102, 3, 1, "", "particle_optimizer"], [102, 2, 1, "", "reset"], [102, 2, 1, "", "reset_cuda_graph"], [102, 2, 1, "", "reset_seed"], [102, 2, 1, "", "reset_shape"], [102, 3, 1, "", "rollout_fn"], [102, 2, 1, "", "solve"], [102, 2, 1, "", "update_nproblems"], [102, 2, 1, "", "update_params"]], "curobo.wrap.wrap_base.WrapConfig": [[102, 4, 1, "", "compute_metrics"], [102, 4, 1, "", "optimizers"], [102, 4, 1, "", "safety_rollout"], [102, 4, 1, "", "sync_cuda_time"], [102, 4, 1, "", "use_cuda_graph_metrics"]], "curobo.wrap.wrap_base.WrapResult": [[102, 4, 1, "", "action"], [102, 2, 1, "", "clone"], [102, 4, 1, "", "debug"], [102, 4, 1, "", "js_action"], [102, 4, 1, "", "metrics"], [102, 4, 1, "", "raw_action"], [102, 4, 1, "", "solve_time"]], "curobo.wrap.wrap_mpc": [[103, 1, 1, "", "WrapMpc"]], "curobo.wrap.wrap_mpc.WrapMpc": [[103, 2, 1, "", "_shift"], [103, 2, 1, "", "get_rollouts"], [103, 2, 1, "", "reset"], [103, 2, 1, "", "solve"], [103, 2, 1, "", "update_init_seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"curobo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 122, 123, 130, 131], "packag": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95], "subpackag": [0, 20, 37, 47, 90], "submodul": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95], "cuda_robot_model": [1, 2, 3, 4, 5, 6, 7], "cuda_robot_gener": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "kinematics_pars": 4, "type": [5, 32, 68, 69, 70, 71, 72, 73, 74, 75, 101], "urdf_kinematics_pars": 6, "usd_kinematics_pars": 7, "curobolib": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "geom": [9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "geom_cu": 10, "kinemat": [11, 116, 117, 121], "kinematics_fused_cu": 12, "lbfgs_step_cu": 13, "line_search_cu": 14, "l": 15, "opt": [16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "tensor_step": [17, 66], "tensor_step_cu": 18, "util_fil": [19, 89], "cv": 21, "sdf": [22, 23, 24, 25, 26, 27, 28, 29], "sdf_grid": 23, "util": [24, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "warp_primit": 25, "world": [26, 118, 128], "world_blox": 27, "world_mesh": 28, "world_voxel": 29, "sphere_fit": 30, "transform": 31, "graph": [33, 34, 35, 36], "graph_bas": 34, "graph_nx": 35, "prm": 36, "newton": [38, 39, 40], "lbfg": 39, "newton_bas": 40, "opt_bas": 41, "particl": [42, 43, 44, 45, 46], "parallel_": 43, "parallel_mppi": 44, "particle_opt_bas": 45, "particle_opt_util": 46, "rollout": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "arm_bas": 48, "arm_reach": 49, "cost": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bound_cost": 51, "cost_bas": 52, "dist_cost": 53, "manipulability_cost": 54, "pose_cost": 55, "primitive_collision_cost": 56, "projected_dist_cost": 57, "self_collision_cost": 58, "stop_cost": 59, "straight_line_cost": 60, "zero_cost": 61, "dynamics_model": [62, 63, 64, 65, 66], "integration_util": 63, "kinematic_model": 64, "model_bas": 65, "rollout_bas": 67, "base": 69, "camera": [70, 119], "enum": 71, "math": 72, "robot": [73, 105, 107, 109, 111, 125, 128, 130, 134], "state": 74, "tensor": [75, 127], "error_metr": 77, "helper": 78, "logger": 79, "metric": [80, 118], "sample_lib": 81, "state_filt": 82, "tensor_util": 83, "torch_util": 84, "trajectori": 85, "usd_help": 86, "warp": [87, 122], "warp_interpol": 88, "wrap": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "model": [91, 92, 93, 94, 117, 119], "curobo_robot_world": 92, "robot_segment": 93, "robot_world": 94, "reacher": [95, 96, 97, 98, 99, 100, 101, 113, 117], "evalu": 96, "ik_solv": 97, "motion_gen": 98, "mpc": 99, "trajopt": 100, "wrap_bas": 102, "wrap_mpc": 103, "cuda": [105, 107, 127], "acceler": [105, 107], "librari": [105, 107, 114], "updat": [105, 106, 107], "overview": [105, 107], "batch": [108, 117, 118, 127], "environ": [108, 118, 127, 129], "collis": [108, 116, 117, 118, 119, 121, 127, 130, 134], "check": [108, 116, 117, 118, 119, 121, 127], "motion": [108, 112, 116, 117, 119, 121, 130], "gener": [108, 112, 116, 117, 119, 121, 130], "block": 109, "stack": 109, "attach": 109, "object": [109, 118], "constrain": 110, "plan": [110, 112, 121], "isaac": [110, 114, 117, 123], "sim": [110, 114, 117, 123], "demo": [110, 119], "grasp": 110, "approach": 110, "vector": 110, "segment": 111, "mode": 112, "instal": 114, "system": 114, "requir": 114, "us": [114, 116, 117, 119, 120, 131], "nvblox": [114, 123], "option": 114, "cxx11_abi": 114, "pytorch": 114, "docker": [114, 122], "precxx11_abi": 114, "nvidia": [114, 122], "jetson": [114, 122], "aarch64": 114, "basic": [115, 117], "python": [116, 123, 124], "forward": 116, "invers": [116, 117, 121], "usd": [117, 128], "interfac": 117, "reachabl": 117, "free": [117, 130], "predict": [117, 119], "control": [117, 119], "mppi": 117, "multi": 117, "arm": 117, "represent": [118, 128, 134], "checker": 118, "implement": 118, "geometri": 118, "approxim": 118, "sphere": 118, "index": 118, "depth": 119, "an": 119, "exist": 119, "map": 119, "onlin": 119, "neural": 120, "network": 120, "benchmark": 121, "profil": 121, "latest": 121, "result": 121, "run": 121, "geometr": 121, "develop": [122, 127], "build": 122, "your": 122, "own": 122, "imag": 122, "deprec": 122, "known": 123, "issu": 123, "api": 124, "support": 125, "numer": 126, "optim": 126, "note": 127, "kernel": 127, "io": 127, "buffer": 127, "read": 128, "from": 128, "variabl": 129, "technic": 130, "report": 130, "parallel": 130, "minimum": 130, "jerk": 130, "citat": 130, "research": 131, "configur": 134, "new": 134, "prequisit": 134, "file": 134, "tutori": 134, "ur5": 134, "prepar": 134, "asset": 134, "creat": 134, "self": 134, "addit": 134, "test": 134}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"curobo package": [[0, "module-curobo"]], "Subpackages": [[0, "subpackages"], [20, "subpackages"], [37, "subpackages"], [47, "subpackages"], [90, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [8, "submodules"], [20, "submodules"], [22, "submodules"], [33, "submodules"], [37, "submodules"], [38, "submodules"], [42, "submodules"], [47, "submodules"], [50, "submodules"], [62, "submodules"], [68, "submodules"], [76, "submodules"], [90, "submodules"], [91, "submodules"], [95, "submodules"]], "curobo.cuda_robot_model package": [[1, "module-curobo.cuda_robot_model"]], "curobo.cuda_robot_model.cuda_robot_generator module": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "curobo.cuda_robot_model.cuda_robot_model module": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "curobo.cuda_robot_model.kinematics_parser module": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "curobo.cuda_robot_model.types module": [[5, "module-curobo.cuda_robot_model.types"]], "curobo.cuda_robot_model.urdf_kinematics_parser module": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "curobo.cuda_robot_model.usd_kinematics_parser module": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "curobo.curobolib package": [[8, "module-curobo.curobolib"]], "curobo.curobolib.geom module": [[9, "module-curobo.curobolib.geom"]], "curobo.curobolib.geom_cu module": [[10, "module-curobo.curobolib.geom_cu"]], "curobo.curobolib.kinematics module": [[11, "module-curobo.curobolib.kinematics"]], "curobo.curobolib.kinematics_fused_cu module": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "curobo.curobolib.lbfgs_step_cu module": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "curobo.curobolib.line_search_cu module": [[14, "module-curobo.curobolib.line_search_cu"]], "curobo.curobolib.ls module": [[15, "module-curobo.curobolib.ls"]], "curobo.curobolib.opt module": [[16, "module-curobo.curobolib.opt"]], "curobo.curobolib.tensor_step module": [[17, "module-curobo.curobolib.tensor_step"]], "curobo.curobolib.tensor_step_cu module": [[18, "module-curobo.curobolib.tensor_step_cu"]], "curobo.curobolib.util_file module": [[19, "module-curobo.curobolib.util_file"]], "curobo.geom package": [[20, "module-curobo.geom"]], "curobo.geom.cv module": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf package": [[22, "module-curobo.geom.sdf"]], "curobo.geom.sdf.sdf_grid module": [[23, "module-curobo.geom.sdf.sdf_grid"]], "curobo.geom.sdf.utils module": [[24, "module-curobo.geom.sdf.utils"]], "curobo.geom.sdf.warp_primitives module": [[25, "module-curobo.geom.sdf.warp_primitives"]], "curobo.geom.sdf.world module": [[26, "module-curobo.geom.sdf.world"]], "curobo.geom.sdf.world_blox module": [[27, "module-curobo.geom.sdf.world_blox"]], "curobo.geom.sdf.world_mesh module": [[28, "module-curobo.geom.sdf.world_mesh"]], "curobo.geom.sdf.world_voxel module": [[29, "module-curobo.geom.sdf.world_voxel"]], "curobo.geom.sphere_fit module": [[30, "module-curobo.geom.sphere_fit"]], "curobo.geom.transform module": [[31, "module-curobo.geom.transform"]], "curobo.geom.types module": [[32, "module-curobo.geom.types"]], "curobo.graph package": [[33, "module-curobo.graph"]], "curobo.graph.graph_base module": [[34, "module-curobo.graph.graph_base"]], "curobo.graph.graph_nx module": [[35, "module-curobo.graph.graph_nx"]], "curobo.graph.prm module": [[36, "module-curobo.graph.prm"]], "curobo.opt package": [[37, "module-curobo.opt"]], "curobo.opt.newton package": [[38, "module-curobo.opt.newton"]], "curobo.opt.newton.lbfgs module": [[39, "module-curobo.opt.newton.lbfgs"]], "curobo.opt.newton.newton_base module": [[40, "module-curobo.opt.newton.newton_base"]], "curobo.opt.opt_base module": [[41, "module-curobo.opt.opt_base"]], "curobo.opt.particle package": [[42, "module-curobo.opt.particle"]], "curobo.opt.particle.parallel_es module": [[43, "module-curobo.opt.particle.parallel_es"]], "curobo.opt.particle.parallel_mppi module": [[44, "module-curobo.opt.particle.parallel_mppi"]], "curobo.opt.particle.particle_opt_base module": [[45, "module-curobo.opt.particle.particle_opt_base"]], "curobo.opt.particle.particle_opt_utils module": [[46, "module-curobo.opt.particle.particle_opt_utils"]], "curobo.rollout package": [[47, "module-curobo.rollout"]], "curobo.rollout.arm_base module": [[48, "module-curobo.rollout.arm_base"]], "curobo.rollout.arm_reacher module": [[49, "module-curobo.rollout.arm_reacher"]], "curobo.rollout.cost package": [[50, "module-curobo.rollout.cost"]], "curobo.rollout.cost.bound_cost module": [[51, "module-curobo.rollout.cost.bound_cost"]], "curobo.rollout.cost.cost_base module": [[52, "module-curobo.rollout.cost.cost_base"]], "curobo.rollout.cost.dist_cost module": [[53, "module-curobo.rollout.cost.dist_cost"]], "curobo.rollout.cost.manipulability_cost module": [[54, "module-curobo.rollout.cost.manipulability_cost"]], "curobo.rollout.cost.pose_cost module": [[55, "module-curobo.rollout.cost.pose_cost"]], "curobo.rollout.cost.primitive_collision_cost module": [[56, "module-curobo.rollout.cost.primitive_collision_cost"]], "curobo.rollout.cost.projected_dist_cost module": [[57, "module-curobo.rollout.cost.projected_dist_cost"]], "curobo.rollout.cost.self_collision_cost module": [[58, "module-curobo.rollout.cost.self_collision_cost"]], "curobo.rollout.cost.stop_cost module": [[59, "module-curobo.rollout.cost.stop_cost"]], "curobo.rollout.cost.straight_line_cost module": [[60, "module-curobo.rollout.cost.straight_line_cost"]], "curobo.rollout.cost.zero_cost module": [[61, "module-curobo.rollout.cost.zero_cost"]], "curobo.rollout.dynamics_model package": [[62, "module-curobo.rollout.dynamics_model"]], "curobo.rollout.dynamics_model.integration_utils module": [[63, "module-curobo.rollout.dynamics_model.integration_utils"]], "curobo.rollout.dynamics_model.kinematic_model module": [[64, "module-curobo.rollout.dynamics_model.kinematic_model"]], "curobo.rollout.dynamics_model.model_base module": [[65, "module-curobo.rollout.dynamics_model.model_base"]], "curobo.rollout.dynamics_model.tensor_step module": [[66, "module-curobo.rollout.dynamics_model.tensor_step"]], "curobo.rollout.rollout_base module": [[67, "module-curobo.rollout.rollout_base"]], "curobo.types package": [[68, "module-curobo.types"]], "curobo.types.base module": [[69, "module-curobo.types.base"]], "curobo.types.camera module": [[70, "module-curobo.types.camera"]], "curobo.types.enum module": [[71, "module-curobo.types.enum"]], "curobo.types.math module": [[72, "module-curobo.types.math"]], "curobo.types.robot module": [[73, "module-curobo.types.robot"]], "curobo.types.state module": [[74, "module-curobo.types.state"]], "curobo.types.tensor module": [[75, "module-curobo.types.tensor"]], "curobo.util package": [[76, "module-curobo.util"]], "curobo.util.error_metrics module": [[77, "module-curobo.util.error_metrics"]], "curobo.util.helpers module": [[78, "module-curobo.util.helpers"]], "curobo.util.logger module": [[79, "module-curobo.util.logger"]], "curobo.util.metrics module": [[80, "module-curobo.util.metrics"]], "curobo.util.sample_lib module": [[81, "module-curobo.util.sample_lib"]], "curobo.util.state_filter module": [[82, "module-curobo.util.state_filter"]], "curobo.util.tensor_util module": [[83, "module-curobo.util.tensor_util"]], "curobo.util.torch_utils module": [[84, "module-curobo.util.torch_utils"]], "curobo.util.trajectory module": [[85, "module-curobo.util.trajectory"]], "curobo.util.usd_helper module": [[86, "module-curobo.util.usd_helper"]], "curobo.util.warp module": [[87, "module-curobo.util.warp"]], "curobo.util.warp_interpolation module": [[88, "module-curobo.util.warp_interpolation"]], "curobo.util_file module": [[89, "module-curobo.util_file"]], "curobo.wrap package": [[90, "module-curobo.wrap"]], "curobo.wrap.model package": [[91, "module-curobo.wrap.model"]], "curobo.wrap.model.curobo_robot_world module": [[92, "module-curobo.wrap.model.curobo_robot_world"]], "curobo.wrap.model.robot_segmenter module": [[93, "module-curobo.wrap.model.robot_segmenter"]], "curobo.wrap.model.robot_world module": [[94, "module-curobo.wrap.model.robot_world"]], "curobo.wrap.reacher package": [[95, "module-curobo.wrap.reacher"]], "curobo.wrap.reacher.evaluator module": [[96, "module-curobo.wrap.reacher.evaluator"]], "curobo.wrap.reacher.ik_solver module": [[97, "module-curobo.wrap.reacher.ik_solver"]], "curobo.wrap.reacher.motion_gen module": [[98, "module-curobo.wrap.reacher.motion_gen"]], "curobo.wrap.reacher.mpc module": [[99, "module-curobo.wrap.reacher.mpc"]], "curobo.wrap.reacher.trajopt module": [[100, "module-curobo.wrap.reacher.trajopt"]], "curobo.wrap.reacher.types module": [[101, "module-curobo.wrap.reacher.types"]], "curobo.wrap.wrap_base module": [[102, "module-curobo.wrap.wrap_base"]], "curobo.wrap.wrap_mpc module": [[103, "module-curobo.wrap.wrap_mpc"]], "curobo": [[104, "curobo"]], "cuRobo: CUDA Accelerated Robot Library": [[105, "curobo-cuda-accelerated-robot-library"], [107, "curobo-cuda-accelerated-robot-library"]], "Updates": [[105, "updates"], [106, "updates"], [107, "updates"]], "Overview": [[105, "overview"], [107, "overview"]], "Batched Environments": [[108, "batched-environments"], [118, "batched-environments"]], "Collision Checking": [[108, "collision-checking"], [116, "collision-checking"], [117, "collision-checking"], [119, "collision-checking"], [119, "id1"]], "Motion Generation": [[108, "motion-generation"], [112, "motion-generation"], [116, "motion-generation"], [117, "motion-generation"], [119, "motion-generation"], [119, "id2"]], "Block Stacking": [[109, "block-stacking"]], "Attaching Object to Robot": [[109, "attaching-object-to-robot"]], "Constrained Planning": [[110, "constrained-planning"]], "Isaac Sim Demo": [[110, "isaac-sim-demo"]], "Grasp Approach Vector": [[110, "grasp-approach-vector"]], "Robot Segmentation": [[111, "robot-segmentation"]], "Planning Modes": [[112, "id1"]], "Reacher": [[113, "reacher"]], "Installation": [[114, "installation"]], "System Requirements": [[114, "system-requirements"]], "Library Installation": [[114, "library-installation"]], "Install for use in Isaac Sim": [[114, "install-for-use-in-isaac-sim"]], "Install nvblox (optional)": [[114, "install-nvblox-optional"]], "Installing nvblox for CXX11_ABI and pytorch dockers": [[114, "installing-nvblox-for-cxx11-abi-and-pytorch-dockers"]], "Installing nvblox for PRECXX11_ABI and Isaac Sim": [[114, "installing-nvblox-for-precxx11-abi-and-isaac-sim"]], "Installing on NVIDIA Jetson (aarch64)": [[114, "installing-on-nvidia-jetson-aarch64"]], "Basics": [[115, "basics"]], "Using in Python": [[116, "using-in-python"]], "Forward Kinematics": [[116, "forward-kinematics"]], "Inverse Kinematics": [[116, "inverse-kinematics"], [121, "inverse-kinematics"]], "Using with Isaac Sim": [[117, "using-with-isaac-sim"]], "Usd Interface": [[117, "usd-interface"]], "Isaac Sim Basics": [[117, "isaac-sim-basics"]], "Reachability using Batched Collision-Free Inverse Kinematics": [[117, "reachability-using-batched-collision-free-inverse-kinematics"]], "Model Predictive Control with MPPI": [[117, "model-predictive-control-with-mppi"]], "Multi-Arm Reacher": [[117, "multi-arm-reacher"]], "Collision World Representation": [[118, "collision-world-representation"]], "World Representation": [[118, "world-representation"]], "World Collision Checkers": [[118, "world-collision-checkers"]], "Collision Checking Implementation": [[118, "collision-checking-implementation"]], "Collision Metric": [[118, "collision-metric"]], "Geometry Approximation to Spheres": [[118, "geometry-approximation-to-spheres"]], "Collision Object Index": [[118, "collision-object-index"]], "Using with Depth Camera": [[119, "using-with-depth-camera"]], "Demos with an existing map": [[119, "demos-with-an-existing-map"]], "Model Predictive Control": [[119, "model-predictive-control"], [119, "id3"]], "Demos with online mapping": [[119, "demos-with-online-mapping"]], "Using in a Neural Network": [[120, "using-in-a-neural-network"]], "Benchmarks & Profiling": [[121, "benchmarks-profiling"]], "Benchmarks": [[121, "benchmarks"]], "Latest Motion Generation Results": [[121, "latest-motion-generation-results"]], "Running Benchmarks": [[121, "running-benchmarks"]], "Kinematics & Collision Checking": [[121, "kinematics-collision-checking"]], "Motion Generation & Geometric Planning": [[121, "motion-generation-geometric-planning"]], "Profiling": [[121, "profiling"]], "Docker Development": [[122, "docker-development"]], "Building your own docker image with cuRobo": [[122, "building-your-own-docker-image-with-curobo"]], "Build Warp for NVIDIA Jetson (Deprecated)": [[122, "build-warp-for-nvidia-jetson-deprecated"]], "Known Issues": [[123, "known-issues"]], "cuRobo": [[123, "curobo"]], "Python": [[123, "python"]], "nvblox": [[123, "nvblox"]], "Isaac Sim": [[123, "isaac-sim"]], "Python API": [[124, "python-api"]], "Supported Robots": [[125, "supported-robots"]], "Numerical Optimization": [[126, "numerical-optimization"]], "CUDA Notes": [[127, "cuda-notes"]], "Developing CUDA kernels": [[127, "developing-cuda-kernels"]], "Tensor IO Buffers": [[127, "tensor-io-buffers"]], "Batched Environment Collision Checking": [[127, "batched-environment-collision-checking"]], "USD for Robot and World Representation": [[128, "usd-for-robot-and-world-representation"]], "Reading World from USD": [[128, "reading-world-from-usd"]], "Environment Variables": [[129, "environment-variables"]], "Technical Report": [[130, "technical-report"]], "cuRobo: Parallelized Collision-Free Minimum-Jerk Robot Motion Generation": [[130, "curobo-parallelized-collision-free-minimum-jerk-robot-motion-generation"]], "Citation": [[130, "citation"]], "Research using cuRobo": [[131, "research-using-curobo"]], "Configuring a New Robot": [[134, "configuring-a-new-robot"]], "Prequisite": [[134, "prequisite"]], "Robot Configuration File": [[134, "robot-configuration-file"]], "Tutorial with a UR5e robot": [[134, "tutorial-with-a-ur5e-robot"]], "Prepare assets": [[134, "prepare-assets"]], "Create Configuration File": [[134, "create-configuration-file"]], "Robot Collision Representation": [[134, "robot-collision-representation"]], "Self Collision Configuration": [[134, "self-collision-configuration"]], "Additional Configurations": [[134, "additional-configurations"]], "Test Robot Configuration": [[134, "test-robot-configuration"]]}, "indexentries": {"curobo": [[0, "module-curobo"]], "module": [[0, "module-curobo"], [1, "module-curobo.cuda_robot_model"], [2, "module-curobo.cuda_robot_model.cuda_robot_generator"], [3, "module-curobo.cuda_robot_model.cuda_robot_model"], [4, "module-curobo.cuda_robot_model.kinematics_parser"], [5, "module-curobo.cuda_robot_model.types"], [6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"], [7, "module-curobo.cuda_robot_model.usd_kinematics_parser"], [8, "module-curobo.curobolib"], [9, "module-curobo.curobolib.geom"], [10, "module-curobo.curobolib.geom_cu"], [11, "module-curobo.curobolib.kinematics"], [12, "module-curobo.curobolib.kinematics_fused_cu"], [13, "module-curobo.curobolib.lbfgs_step_cu"], [14, "module-curobo.curobolib.line_search_cu"], [15, "module-curobo.curobolib.ls"], [16, "module-curobo.curobolib.opt"], [17, "module-curobo.curobolib.tensor_step"], [18, "module-curobo.curobolib.tensor_step_cu"], [19, "module-curobo.curobolib.util_file"], [20, "module-curobo.geom"], [21, "module-curobo.geom.cv"], [22, "module-curobo.geom.sdf"], [23, "module-curobo.geom.sdf.sdf_grid"], [24, "module-curobo.geom.sdf.utils"], [25, "module-curobo.geom.sdf.warp_primitives"], [26, "module-curobo.geom.sdf.world"], [27, "module-curobo.geom.sdf.world_blox"], [28, "module-curobo.geom.sdf.world_mesh"], [29, "module-curobo.geom.sdf.world_voxel"], [30, "module-curobo.geom.sphere_fit"], [31, "module-curobo.geom.transform"], [32, "module-curobo.geom.types"], [33, "module-curobo.graph"], [34, "module-curobo.graph.graph_base"], [35, "module-curobo.graph.graph_nx"], [36, "module-curobo.graph.prm"], [37, "module-curobo.opt"], [38, "module-curobo.opt.newton"], [39, "module-curobo.opt.newton.lbfgs"], [40, "module-curobo.opt.newton.newton_base"], [41, "module-curobo.opt.opt_base"], [42, "module-curobo.opt.particle"], [43, "module-curobo.opt.particle.parallel_es"], [44, "module-curobo.opt.particle.parallel_mppi"], [45, "module-curobo.opt.particle.particle_opt_base"], [46, "module-curobo.opt.particle.particle_opt_utils"], [47, "module-curobo.rollout"], [48, "module-curobo.rollout.arm_base"], [49, "module-curobo.rollout.arm_reacher"], [50, "module-curobo.rollout.cost"], [51, "module-curobo.rollout.cost.bound_cost"], [52, "module-curobo.rollout.cost.cost_base"], [53, "module-curobo.rollout.cost.dist_cost"], [54, "module-curobo.rollout.cost.manipulability_cost"], [55, "module-curobo.rollout.cost.pose_cost"], [56, "module-curobo.rollout.cost.primitive_collision_cost"], [57, "module-curobo.rollout.cost.projected_dist_cost"], [58, "module-curobo.rollout.cost.self_collision_cost"], [59, "module-curobo.rollout.cost.stop_cost"], [60, "module-curobo.rollout.cost.straight_line_cost"], [61, "module-curobo.rollout.cost.zero_cost"], [62, "module-curobo.rollout.dynamics_model"], [63, "module-curobo.rollout.dynamics_model.integration_utils"], [64, "module-curobo.rollout.dynamics_model.kinematic_model"], [65, "module-curobo.rollout.dynamics_model.model_base"], [66, "module-curobo.rollout.dynamics_model.tensor_step"], [67, "module-curobo.rollout.rollout_base"], [68, "module-curobo.types"], [69, "module-curobo.types.base"], [70, "module-curobo.types.camera"], [71, "module-curobo.types.enum"], [72, "module-curobo.types.math"], [73, "module-curobo.types.robot"], [74, "module-curobo.types.state"], [75, "module-curobo.types.tensor"], [76, "module-curobo.util"], [77, "module-curobo.util.error_metrics"], [78, "module-curobo.util.helpers"], [79, "module-curobo.util.logger"], [80, "module-curobo.util.metrics"], [81, "module-curobo.util.sample_lib"], [82, "module-curobo.util.state_filter"], [83, "module-curobo.util.tensor_util"], [84, "module-curobo.util.torch_utils"], [85, "module-curobo.util.trajectory"], [86, "module-curobo.util.usd_helper"], [87, "module-curobo.util.warp"], [88, "module-curobo.util.warp_interpolation"], [89, "module-curobo.util_file"], [90, "module-curobo.wrap"], [91, "module-curobo.wrap.model"], [92, "module-curobo.wrap.model.curobo_robot_world"], [93, "module-curobo.wrap.model.robot_segmenter"], [94, "module-curobo.wrap.model.robot_world"], [95, "module-curobo.wrap.reacher"], [96, "module-curobo.wrap.reacher.evaluator"], [97, "module-curobo.wrap.reacher.ik_solver"], [98, "module-curobo.wrap.reacher.motion_gen"], [99, "module-curobo.wrap.reacher.mpc"], [100, "module-curobo.wrap.reacher.trajopt"], [101, "module-curobo.wrap.reacher.types"], [102, "module-curobo.wrap.wrap_base"], [103, "module-curobo.wrap.wrap_mpc"]], "curobo.cuda_robot_model": [[1, "module-curobo.cuda_robot_model"]], "cudarobotgenerator (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator"]], "cudarobotgeneratorconfig (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig"]], "_add_body_to_tree() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._add_body_to_tree"]], "_build_chain() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_chain"]], "_build_collision_model() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_collision_model"]], "_build_kinematics() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics"]], "_build_kinematics_tensors() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_tensors"]], "_build_kinematics_with_lock_joints() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_with_lock_joints"]], "_create_self_collision_thread_data() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._create_self_collision_thread_data"]], "_get_joint_links() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_links"]], "_get_joint_position_velocity_limits() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_position_velocity_limits"]], "_get_link_poses() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_link_poses"]], "_update_joint_limits() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._update_joint_limits"]], "add_fixed_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_fixed_link"]], "add_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_link"]], "add_object_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.add_object_link"]], "asset_root_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.asset_root_path"]], "base_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.base_link"]], "collision_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_link_names"]], "collision_sphere_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_sphere_buffer"]], "collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_spheres"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "debug (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.debug"]], "ee_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.ee_link"]], "external_asset_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_asset_path"]], "external_robot_configs_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_robot_configs_path"]], "extra_collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_collision_spheres"]], "extra_links (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_links"]], "get_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.get_joint_limits"]], "initialize_tensors() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.initialize_tensors"]], "isaac_usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.isaac_usd_path"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.link_names"]], "load_link_names_with_mesh (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_link_names_with_mesh"]], "load_meshes (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_meshes"]], "lock_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.lock_joints"]], "mesh_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.mesh_link_names"]], "self_collision_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_buffer"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_config"]], "self_collision_ignore (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_ignore"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.tensor_args"]], "urdf_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.urdf_path"]], "usd_flip_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joint_limits"]], "usd_flip_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joints"]], "usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_path"]], "usd_robot_root (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_robot_root"]], "use_external_assets (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_external_assets"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_global_cumul"]], "use_usd_kinematics (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_usd_kinematics"]], "cudarobotmodel (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel"]], "cudarobotmodelconfig (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig"]], "_cuda_forward() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel._cuda_forward"]], "all_articulated_joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.all_articulated_joint_names"]], "base_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.base_link"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "ee_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.ee_link"]], "forward() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.forward"]], "from_basic_urdf() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_urdf"]], "from_basic_usd() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_usd"]], "from_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_config"]], "from_data_dict() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_data_dict"]], "from_robot_yaml_file() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_robot_yaml_file"]], "generator_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.generator_config"]], "get_all_link_transforms() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_all_link_transforms"]], "get_dof() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_dof"]], "get_joint_limits() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.get_joint_limits"]], "get_link_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_mesh"]], "get_link_poses() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_poses"]], "get_link_transform() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_transform"]], "get_robot_as_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_mesh"]], "get_robot_as_spheres() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_spheres"]], "get_robot_link_meshes() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_link_meshes"]], "get_self_collision_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_self_collision_config"]], "get_state() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_state"]], "joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.joint_names"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.link_names"]], "lock_jointstate (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.lock_jointstate"]], "retract_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.retract_config"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.self_collision_config"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.tensor_args"]], "total_spheres (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.total_spheres"]], "update_batch_size() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_batch_size"]], "update_kinematics_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_kinematics_config"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.use_global_cumul"]], "kinematicsparser (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser"]], "linkparams (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams"]], "_get_from_extra_links() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser._get_from_extra_links"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.kinematics_parser": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "fixed_transform (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.fixed_transform"]], "from_dict() (curobo.cuda_robot_model.kinematics_parser.linkparams static method)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.from_dict"]], "get_chain() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_chain"]], "get_link_mesh() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_parameters"]], "joint_axis (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_axis"]], "joint_id (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_id"]], "joint_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_limits"]], "joint_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_name"]], "joint_type (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_type"]], "joint_velocity_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_velocity_limits"]], "link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.link_name"]], "parent_link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.parent_link_name"]], "cspaceconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig"]], "cudarobotmodelstate (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState"]], "fixed (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.FIXED"]], "jointlimits (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointLimits"]], "jointtype (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointType"]], "kinematicstensorconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig"]], "selfcollisionkinematicsconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig"]], "x_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM"]], "x_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM_NEG"]], "x_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT"]], "x_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT_NEG"]], "y_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM"]], "y_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM_NEG"]], "y_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT"]], "y_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT_NEG"]], "z_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM"]], "z_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM_NEG"]], "z_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT"]], "z_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT_NEG"]], "acceleration (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.acceleration"]], "acceleration_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.acceleration_scale"]], "ang_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ang_jacobian"]], "attach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.attach_object"]], "base_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.base_link"]], "checks_per_thread (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.checks_per_thread"]], "clone() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.clone"]], "clone() (curobo.cuda_robot_model.types.jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.clone"]], "collision_matrix (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.collision_matrix"]], "copy_() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.copy_"]], "copy_() (curobo.cuda_robot_model.types.jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.copy_"]], "copy_() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.copy_"]], "cspace (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.cspace"]], "cspace_distance_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.cspace_distance_weight"]], "curobo.cuda_robot_model.types": [[5, "module-curobo.cuda_robot_model.types"]], "debug (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.debug"]], "detach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.detach_object"]], "disable_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.disable_link_spheres"]], "distance_threshold (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.distance_threshold"]], "ee_idx (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_idx"]], "ee_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_link"]], "ee_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_pose"]], "ee_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_position"]], "ee_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_quaternion"]], "effort (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.effort"]], "enable_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.enable_link_spheres"]], "experimental_kernel (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.experimental_kernel"]], "fixed_transforms (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.fixed_transforms"]], "from_data_dict() (curobo.cuda_robot_model.types.jointlimits static method)": [[5, "curobo.cuda_robot_model.types.JointLimits.from_data_dict"]], "get_link_spheres() (curobo.cuda_robot_model.types.cudarobotmodelstate method)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.get_link_spheres"]], "get_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_link_spheres"]], "get_number_of_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_number_of_spheres"]], "get_reference_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_reference_link_spheres"]], "get_sphere_index_from_link_name() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_sphere_index_from_link_name"]], "inplace_reindex() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.inplace_reindex"]], "jerk (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.jerk"]], "jerk_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.jerk_scale"]], "joint_limits (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_limits"]], "joint_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map"]], "joint_map_type (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map_type"]], "joint_names (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.joint_names"]], "joint_names (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.joint_names"]], "joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_names"]], "lin_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.lin_jacobian"]], "link_chain_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_chain_map"]], "link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_map"]], "link_name_to_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_name_to_idx_map"]], "link_names (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_names"]], "link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_names"]], "link_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_pose"]], "link_sphere_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_sphere_idx_map"]], "link_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_spheres"]], "link_spheres_tensor (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_spheres_tensor"]], "links_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_position"]], "links_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_quaternion"]], "load_cspace_cfg_from_kinematics() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.load_cspace_cfg_from_kinematics"]], "load_from_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig static method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.load_from_joint_limits"]], "lock_jointstate (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.lock_jointstate"]], "max_acceleration (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_acceleration"]], "max_jerk (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_jerk"]], "mesh_link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.mesh_link_names"]], "n_dof (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.n_dof"]], "non_fixed_joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.non_fixed_joint_names"]], "null_space_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.null_space_weight"]], "offset (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.offset"]], "position (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.position"]], "position_limit_clip (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.position_limit_clip"]], "reference_link_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.reference_link_spheres"]], "retract_config (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.retract_config"]], "scale_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.scale_joint_limits"]], "store_link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.store_link_map"]], "tensor_args (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.tensor_args"]], "tensor_args (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.tensor_args"]], "thread_location (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_location"]], "thread_max (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_max"]], "total_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.total_spheres"]], "update_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.update_link_spheres"]], "velocity (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.velocity"]], "velocity_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.velocity_scale"]], "urdfkinematicsparser (class in curobo.cuda_robot_model.urdf_kinematics_parser)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser"]], "_find_parent_joint_of_link() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._find_parent_joint_of_link"]], "_get_joint_name() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._get_joint_name"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "get_link_mesh() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_parameters"]], "get_urdf_string() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_urdf_string"]], "usdkinematicsparser (class in curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser"]], "_get_joint_transform() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser._get_joint_transform"]], "build_link_parent() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "get_link_parameters() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_link_parameters"]], "get_links_for_joint() (in module curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.get_links_for_joint"]], "robot_prim_root (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser property)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.robot_prim_root"]], "curobo.curobolib": [[8, "module-curobo.curobolib"]], "poseerror (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseError"]], "poseerrordistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseErrorDistance"]], "sdfsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereOBB"]], "sdfspherevoxel (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereVoxel"]], "sdfsweptsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB"]], "sdfsweptspherevoxel (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel"]], "selfcollisiondistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistance"]], "selfcollisiondistanceloss (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss"]], "_backward_cls (curobo.curobolib.geom.poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError._backward_cls"]], "_backward_cls (curobo.curobolib.geom.poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._backward_cls"]], "_backward_cls (curobo.curobolib.geom.selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._backward_cls"]], "_backward_cls (curobo.curobolib.geom.selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._backward_cls"]], "backward() (curobo.curobolib.geom.poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.backward"]], "backward() (curobo.curobolib.geom.poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.backward"]], "backward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.backward"]], "backward() (curobo.curobolib.geom.sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.backward"]], "backward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.backward"]], "backward() (curobo.curobolib.geom.sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.backward"]], "curobo.curobolib.geom": [[9, "module-curobo.curobolib.geom"]], "forward() (curobo.curobolib.geom.poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.forward"]], "forward() (curobo.curobolib.geom.poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.forward"]], "forward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.forward"]], "forward() (curobo.curobolib.geom.sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.forward"]], "forward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.forward"]], "forward() (curobo.curobolib.geom.sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.forward"]], "forward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.forward"]], "get_pose_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance"]], "get_pose_distance_backward() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance_backward"]], "get_self_collision_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_self_collision_distance"]], "closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point"]], "closest_point_voxel() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point_voxel"]], "curobo.curobolib.geom_cu": [[10, "module-curobo.curobolib.geom_cu"]], "pose_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance"]], "pose_distance_backward() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance_backward"]], "self_collision_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.self_collision_distance"]], "swept_closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point"]], "swept_closest_point_voxel() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point_voxel"]], "kinematicsfusedfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction"]], "kinematicsfusedglobalcumulfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction"]], "_backward_cls (curobo.curobolib.kinematics.kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._backward_cls"]], "_backward_cls (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._backward_cls"]], "_call_backward_cuda() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._call_backward_cuda"]], "_call_backward_cuda() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._call_backward_cuda"]], "_call_cuda() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._call_cuda"]], "_call_cuda() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._call_cuda"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.backward"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.backward"]], "curobo.curobolib.kinematics": [[11, "module-curobo.curobolib.kinematics"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.forward"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.forward"]], "get_cuda_kinematics() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.get_cuda_kinematics"]], "rotation_matrix_to_quaternion() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.rotation_matrix_to_quaternion"]], "backward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.backward"]], "curobo.curobolib.kinematics_fused_cu": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "forward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.forward"]], "matrix_to_quaternion() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "forward() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.forward"]], "curobo.curobolib.line_search_cu": [[14, "module-curobo.curobolib.line_search_cu"]], "line_search() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.line_search"]], "update_best() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.update_best"]], "curobo.curobolib.ls": [[15, "module-curobo.curobolib.ls"]], "update_best() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.update_best"]], "wolfe_line_search() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.wolfe_line_search"]], "lbfgscu (class in curobo.curobolib.opt)": [[16, "curobo.curobolib.opt.LBFGScu"]], "_backward_cls (curobo.curobolib.opt.lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu._backward_cls"]], "backward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.backward"]], "curobo.curobolib.opt": [[16, "module-curobo.curobolib.opt"]], "forward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.forward"]], "curobo.curobolib.tensor_step": [[17, "module-curobo.curobolib.tensor_step"]], "tensor_step_acc_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_fwd"]], "tensor_step_acc_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_idx_fwd"]], "tensor_step_pos_clique_bwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_bwd"]], "tensor_step_pos_clique_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_fwd"]], "tensor_step_pos_clique_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, "module-curobo.curobolib.tensor_step_cu"]], "step_acceleration() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration"]], "step_acceleration_idx() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration_idx"]], "step_idx_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_idx_position2"]], "step_position() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position"]], "step_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position2"]], "step_position_backward() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward"]], "step_position_backward2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward2"]], "add_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.add_cpp_path"]], "curobo.curobolib.util_file": [[19, "module-curobo.curobolib.util_file"]], "get_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.get_cpp_path"]], "join_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.join_path"]], "curobo.geom": [[20, "module-curobo.geom"]], "curobo.geom.cv": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf": [[22, "module-curobo.geom.sdf"]], "sdfgrid (class in curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid"]], "_backward_cls (curobo.geom.sdf.sdf_grid.sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._backward_cls"]], "backward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.backward"]], "compute_sdf_gradient() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.compute_sdf_gradient"]], "curobo.geom.sdf.sdf_grid": [[23, "module-curobo.geom.sdf.sdf_grid"]], "forward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.forward"]], "lookup_distance() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.lookup_distance"]], "create_collision_checker() (in module curobo.geom.sdf.utils)": [[24, "curobo.geom.sdf.utils.create_collision_checker"]], "curobo.geom.sdf.utils": [[24, "module-curobo.geom.sdf.utils"]], "sdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy"]], "sweptsdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy"]], "_backward_cls (curobo.geom.sdf.warp_primitives.sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._backward_cls"]], "_backward_cls (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._backward_cls"]], "backward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.backward"]], "backward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.backward"]], "curobo.geom.sdf.warp_primitives": [[25, "module-curobo.geom.sdf.warp_primitives"]], "forward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.forward"]], "forward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.forward"]], "blox (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.BLOX"]], "collisionbuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionBuffer"]], "collisioncheckertype (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionCheckerType"]], "collisionquerybuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer"]], "mesh (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.MESH"]], "primitive (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.PRIMITIVE"]], "voxel (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.VOXEL"]], "worldcollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollision"]], "worldcollisionconfig (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig"]], "worldprimitivecollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision"]], "_create_obb_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._create_obb_cache"]], "_get_obstacle_poses() (curobo.geom.sdf.world.worldprimitivecollision class method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._get_obstacle_poses"]], "_init_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._init_cache"]], "_load_collision_model_in_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._load_collision_model_in_cache"]], "_update_from_shape() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer._update_from_shape"]], "add_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb"]], "add_obb_from_raw() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb_from_raw"]], "blox_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.blox_collision_buffer"]], "cache (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.cache"]], "checker_type (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.checker_type"]], "clear_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.clear_cache"]], "clear_voxelization_cache() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.clear_voxelization_cache"]], "clone() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.clone"]], "clone() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.clone"]], "create_from_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.create_from_shape"]], "curobo.geom.sdf.world": [[26, "module-curobo.geom.sdf.world"]], "distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.distance_buffer"]], "enable_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obb"]], "enable_obstacle() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obstacle"]], "get_esdf_in_bounding_box() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_esdf_in_bounding_box"]], "get_gradient_buffer() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.get_gradient_buffer"]], "get_mesh_in_bounding_box() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_obb_idx"]], "get_occupancy_in_bounding_box() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_occupancy_in_bounding_box"]], "get_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_collision"]], "get_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_distance"]], "get_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_distance"]], "get_sphere_trace() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_trace"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_collision"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_distance"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_distance"]], "get_voxels_in_bounding_box() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_voxels_in_bounding_box"]], "grad_distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.grad_distance_buffer"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionbuffer class method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.initialize_from_shape"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionquerybuffer class method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.initialize_from_shape"]], "load_batch_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.load_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_collision_model"]], "load_from_dict() (curobo.geom.sdf.world.worldcollisionconfig static method)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.load_from_dict"]], "max_distance (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.max_distance"]], "mesh_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.mesh_collision_buffer"]], "n_envs (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.n_envs"]], "primitive_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.primitive_collision_buffer"]], "shape (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.shape"]], "shape (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.shape"]], "sparsity_index_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.sparsity_index_buffer"]], "tensor_args (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.tensor_args"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.update_buffer_shape"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.update_buffer_shape"]], "update_cache_voxelization() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.update_cache_voxelization"]], "update_obb_dims() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_dims"]], "update_obb_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_pose"]], "update_obstacle_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obstacle_pose"]], "voxel_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.voxel_collision_buffer"]], "world_model (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.world_model"]], "worldbloxcollision (class in curobo.geom.sdf.world_blox)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision"]], "_get_blox_sdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_sdf"]], "_get_blox_swept_sdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_swept_sdf"]], "add_camera_frame() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_camera_frame"]], "clear_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_blox_layer"]], "clear_bounding_box() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_bounding_box"]], "clear_cache() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_cache"]], "curobo.geom.sdf.world_blox": [[27, "module-curobo.geom.sdf.world_blox"]], "decay_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.decay_layer"]], "enable_blox() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_blox"]], "enable_obstacle() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_obstacle"]], "get_bounding_spheres() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_bounding_spheres"]], "get_mesh_from_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_from_blox_layer"]], "get_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_distance"]], "load_collision_model() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_collision_model"]], "process_camera_frames() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.process_camera_frames"]], "save_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.save_layer"]], "update_blox_esdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_esdf"]], "update_blox_hashes() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_hashes"]], "update_blox_mesh() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_mesh"]], "update_blox_pose() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_pose"]], "warpmeshdata (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData"]], "worldmeshcollision (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision"]], "_create_mesh_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._create_mesh_cache"]], "_get_sdf() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_sdf"]], "_get_swept_sdf() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_swept_sdf"]], "_init_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._init_cache"]], "_load_batch_mesh_to_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_batch_mesh_to_warp"]], "_load_mesh_into_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_into_cache"]], "_load_mesh_to_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_to_warp"]], "add_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_mesh"]], "clear_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.clear_cache"]], "create_collision_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.create_collision_cache"]], "curobo.geom.sdf.world_mesh": [[28, "module-curobo.geom.sdf.world_mesh"]], "enable_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_mesh"]], "enable_obstacle() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_obstacle"]], "faces (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.faces"]], "get_mesh_idx() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_mesh_idx"]], "get_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_distance"]], "load_batch_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_collision_model"]], "m_id (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.m_id"]], "mesh (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.mesh"]], "name (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.name"]], "update_all_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_all_mesh_pose"]], "update_mesh_from_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_from_warp"]], "update_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose"]], "update_mesh_pose_env() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose_env"]], "update_obstacle_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obstacle_pose"]], "vertices (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.vertices"]], "worldvoxelcollision (class in curobo.geom.sdf.world_voxel)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision"]], "_batch_tensor_voxel() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._batch_tensor_voxel"]], "_create_voxel_cache() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._create_voxel_cache"]], "_init_cache() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._init_cache"]], "_load_collision_model_in_cache() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_collision_model_in_cache"]], "clear_cache() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.clear_cache"]], "curobo.geom.sdf.world_voxel": [[29, "module-curobo.geom.sdf.world_voxel"]], "enable_obstacle() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_obstacle"]], "enable_voxel() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_voxel"]], "get_sphere_collision() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_swept_sphere_distance"]], "get_voxel_grid() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxel_grid"]], "get_voxel_idx() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxel_idx"]], "load_batch_collision_model() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.load_collision_model"]], "update_obstacle_pose() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_obstacle_pose"]], "update_voxel_data() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_data"]], "update_voxel_features() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_features"]], "update_voxel_pose() (curobo.geom.sdf.world_voxel.worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_pose"]], "sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.SAMPLE_SURFACE"]], "spherefittype (class in curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.SphereFitType"]], "voxel_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_SURFACE"]], "voxel_volume (curobo.geom.sphere_fit.spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME"]], "voxel_volume_inside (curobo.geom.sphere_fit.spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_INSIDE"]], "voxel_volume_sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.sphere_fit": [[30, "module-curobo.geom.sphere_fit"]], "fit_spheres_to_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.fit_spheres_to_mesh"]], "get_voxel_pitch() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.get_voxel_pitch"]], "get_voxelgrid_from_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.get_voxelgrid_from_mesh"]], "sample_even_fit_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.sample_even_fit_mesh"]], "voxel_fit_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_mesh"]], "voxel_fit_surface_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_surface_mesh"]], "voxel_fit_volume_inside_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_volume_inside_mesh"]], "voxel_fit_volume_sample_surface_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_volume_sample_surface_mesh"]], "batchtransformpoint (class in curobo.geom.transform)": [[31, "curobo.geom.transform.BatchTransformPoint"]], "batchtransformpose (class in curobo.geom.transform)": [[31, "curobo.geom.transform.BatchTransformPose"]], "matrixtoquaternion (class in curobo.geom.transform)": [[31, "curobo.geom.transform.MatrixToQuaternion"]], "poseinverse (class in curobo.geom.transform)": [[31, "curobo.geom.transform.PoseInverse"]], "quattomatrix (class in curobo.geom.transform)": [[31, "curobo.geom.transform.QuatToMatrix"]], "transformpoint (class in curobo.geom.transform)": [[31, "curobo.geom.transform.TransformPoint"]], "transformpose (class in curobo.geom.transform)": [[31, "curobo.geom.transform.TransformPose"]], "_backward_cls (curobo.geom.transform.batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint._backward_cls"]], "_backward_cls (curobo.geom.transform.batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose._backward_cls"]], "_backward_cls (curobo.geom.transform.matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion._backward_cls"]], "_backward_cls (curobo.geom.transform.poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse._backward_cls"]], "_backward_cls (curobo.geom.transform.quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix._backward_cls"]], "_backward_cls (curobo.geom.transform.transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint._backward_cls"]], "_backward_cls (curobo.geom.transform.transformpose attribute)": [[31, "curobo.geom.transform.TransformPose._backward_cls"]], "backward() (curobo.geom.transform.batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.backward"]], "backward() (curobo.geom.transform.batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.backward"]], "backward() (curobo.geom.transform.matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.backward"]], "backward() (curobo.geom.transform.poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.backward"]], "backward() (curobo.geom.transform.quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.backward"]], "backward() (curobo.geom.transform.transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.backward"]], "backward() (curobo.geom.transform.transformpose static method)": [[31, "curobo.geom.transform.TransformPose.backward"]], "batch_transform_points() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.batch_transform_points"]], "cuda_matrix_to_quaternion() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.cuda_matrix_to_quaternion"]], "curobo.geom.transform": [[31, "module-curobo.geom.transform"]], "forward() (curobo.geom.transform.batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.forward"]], "forward() (curobo.geom.transform.batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.forward"]], "forward() (curobo.geom.transform.matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.forward"]], "forward() (curobo.geom.transform.poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.forward"]], "forward() (curobo.geom.transform.quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.forward"]], "forward() (curobo.geom.transform.transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.forward"]], "forward() (curobo.geom.transform.transformpose static method)": [[31, "curobo.geom.transform.TransformPose.forward"]], "matrix_to_quaternion() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.matrix_to_quaternion"]], "pose_inverse() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_inverse"]], "pose_multiply() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_multiply"]], "pose_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_to_matrix"]], "quaternion_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.quaternion_to_matrix"]], "torch_quaternion_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.torch_quaternion_to_matrix"]], "transform_points() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.transform_points"]], "bloxmap (class in curobo.geom.types)": [[32, "curobo.geom.types.BloxMap"]], "capsule (class in curobo.geom.types)": [[32, "curobo.geom.types.Capsule"]], "cuboid (class in curobo.geom.types)": [[32, "curobo.geom.types.Cuboid"]], "cylinder (class in curobo.geom.types)": [[32, "curobo.geom.types.Cylinder"]], "material (class in curobo.geom.types)": [[32, "curobo.geom.types.Material"]], "mesh (class in curobo.geom.types)": [[32, "curobo.geom.types.Mesh"]], "obstacle (class in curobo.geom.types)": [[32, "curobo.geom.types.Obstacle"]], "pointcloud (class in curobo.geom.types)": [[32, "curobo.geom.types.PointCloud"]], "sphere (class in curobo.geom.types)": [[32, "curobo.geom.types.Sphere"]], "voxelgrid (class in curobo.geom.types)": [[32, "curobo.geom.types.VoxelGrid"]], "worldconfig (class in curobo.geom.types)": [[32, "curobo.geom.types.WorldConfig"]], "_abc_impl (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig._abc_impl"]], "add_color() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_color"]], "add_material() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_material"]], "add_obstacle() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_obstacle"]], "base (curobo.geom.types.capsule attribute)": [[32, "curobo.geom.types.Capsule.base"]], "batch_tensor_cube() (in module curobo.geom.types)": [[32, "curobo.geom.types.batch_tensor_cube"]], "blox (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.blox"]], "capsule (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.capsule"]], "clone() (curobo.geom.types.voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.clone"]], "clone() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.clone"]], "color (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.color"]], "create_collision_support_world() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_collision_support_world"]], "create_merged_mesh_world() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_merged_mesh_world"]], "create_mesh_world() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_mesh_world"]], "create_obb_world() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_obb_world"]], "create_xyzr_tensor() (curobo.geom.types.voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.create_xyzr_tensor"]], "cuboid (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.cuboid"]], "curobo.geom.types": [[32, "module-curobo.geom.types"]], "cylinder (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.cylinder"]], "dims (curobo.geom.types.cuboid attribute)": [[32, "curobo.geom.types.Cuboid.dims"]], "dims (curobo.geom.types.voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.dims"]], "face_colors (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.face_colors"]], "faces (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.faces"]], "feature_dtype (curobo.geom.types.voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.feature_dtype"]], "feature_tensor (curobo.geom.types.voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.feature_tensor"]], "file_path (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.file_path"]], "file_string (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.file_string"]], "from_camera_observation() (curobo.geom.types.pointcloud static method)": [[32, "curobo.geom.types.PointCloud.from_camera_observation"]], "from_dict() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.from_dict"]], "from_pointcloud() (curobo.geom.types.mesh static method)": [[32, "curobo.geom.types.Mesh.from_pointcloud"]], "get_bounding_spheres() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_bounding_spheres"]], "get_bounding_spheres() (curobo.geom.types.pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_bounding_spheres"]], "get_cache_dict() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_cache_dict"]], "get_collision_check_world() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_collision_check_world"]], "get_cuboid() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_cuboid"]], "get_cuboid() (curobo.geom.types.sphere method)": [[32, "curobo.geom.types.Sphere.get_cuboid"]], "get_mesh() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_mesh"]], "get_mesh_data() (curobo.geom.types.mesh method)": [[32, "curobo.geom.types.Mesh.get_mesh_data"]], "get_mesh_data() (curobo.geom.types.pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_mesh_data"]], "get_mesh_world() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_mesh_world"]], "get_obb_world() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_obb_world"]], "get_obstacle() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_obstacle"]], "get_occupied_voxels() (curobo.geom.types.voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_occupied_voxels"]], "get_scene_graph() (curobo.geom.types.worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.get_scene_graph"]], "get_sphere() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_sphere"]], "get_transform_matrix() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_transform_matrix"]], "get_trimesh_mesh() (curobo.geom.types.bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.capsule method)": [[32, "curobo.geom.types.Capsule.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cuboid method)": [[32, "curobo.geom.types.Cuboid.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cylinder method)": [[32, "curobo.geom.types.Cylinder.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.mesh method)": [[32, "curobo.geom.types.Mesh.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.sphere method)": [[32, "curobo.geom.types.Sphere.get_trimesh_mesh"]], "height (curobo.geom.types.cylinder attribute)": [[32, "curobo.geom.types.Cylinder.height"]], "integrator_type (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.integrator_type"]], "map_path (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.map_path"]], "mapper_instance (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mapper_instance"]], "material (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.material"]], "mesh (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mesh"]], "mesh (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.mesh"]], "mesh_file_path (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mesh_file_path"]], "metallic (curobo.geom.types.material attribute)": [[32, "curobo.geom.types.Material.metallic"]], "name (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.name"]], "objects (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.objects"]], "points (curobo.geom.types.pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.points"]], "points_features (curobo.geom.types.pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.points_features"]], "pose (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.pose"]], "position (curobo.geom.types.sphere attribute)": [[32, "curobo.geom.types.Sphere.position"]], "radius (curobo.geom.types.capsule attribute)": [[32, "curobo.geom.types.Capsule.radius"]], "radius (curobo.geom.types.cylinder attribute)": [[32, "curobo.geom.types.Cylinder.radius"]], "radius (curobo.geom.types.sphere attribute)": [[32, "curobo.geom.types.Sphere.radius"]], "randomize_color() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.randomize_color"]], "remove_absolute_paths() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.remove_absolute_paths"]], "remove_obstacle() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.remove_obstacle"]], "roughness (curobo.geom.types.material attribute)": [[32, "curobo.geom.types.Material.roughness"]], "save_as_mesh() (curobo.geom.types.obstacle method)": [[32, "curobo.geom.types.Obstacle.save_as_mesh"]], "save_world_as_mesh() (curobo.geom.types.worldconfig method)": [[32, "curobo.geom.types.WorldConfig.save_world_as_mesh"]], "scale (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.scale"]], "sphere (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.sphere"]], "tensor_args (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.tensor_args"]], "tensor_capsule() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_capsule"]], "tensor_cube() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_cube"]], "tensor_sphere() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_sphere"]], "texture (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.texture"]], "texture_id (curobo.geom.types.obstacle attribute)": [[32, "curobo.geom.types.Obstacle.texture_id"]], "tip (curobo.geom.types.capsule attribute)": [[32, "curobo.geom.types.Capsule.tip"]], "update_material() (curobo.geom.types.mesh method)": [[32, "curobo.geom.types.Mesh.update_material"]], "urdf_path (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.urdf_path"]], "vertex_colors (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.vertex_colors"]], "vertex_normals (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.vertex_normals"]], "vertices (curobo.geom.types.mesh attribute)": [[32, "curobo.geom.types.Mesh.vertices"]], "voxel (curobo.geom.types.worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.voxel"]], "voxel_size (curobo.geom.types.bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.voxel_size"]], "voxel_size (curobo.geom.types.voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.voxel_size"]], "xyzr_tensor (curobo.geom.types.voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.xyzr_tensor"]], "curobo.graph": [[33, "module-curobo.graph"]], "graph (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.Graph"]], "graphconfig (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphConfig"]], "graphplanbase (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphPlanBase"]], "graphresult (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphResult"]], "_add_batch_edges_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._add_batch_edges_to_graph"]], "_add_unique_nodes_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._add_unique_nodes_to_graph"]], "_batch_k_nearest() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_k_nearest"]], "_batch_steer() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_steer"]], "_batch_steer_and_connect() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_steer_and_connect"]], "_compute_rotation_frame() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._compute_rotation_frame"]], "_cuda_graph_rollout_constraint() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._cuda_graph_rollout_constraint"]], "_distance() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._distance"]], "_find_paths() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._find_paths"]], "_get_graph_shortest_path() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._get_graph_shortest_path"]], "_hybrid_nearest() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._hybrid_nearest"]], "_k_nearest() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._k_nearest"]], "_mask_samples() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._mask_samples"]], "_mask_samples_cuda_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._mask_samples_cuda_graph"]], "_near() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._near"]], "_nearest() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._nearest"]], "_sample_pts() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._sample_pts"]], "_validate_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._validate_graph"]], "add_nodes_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.add_nodes_to_graph"]], "batch_get_graph_shortest_path() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_get_graph_shortest_path"]], "batch_path_exists() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_path_exists"]], "batch_shortcut_path() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_shortcut_path"]], "bias_node (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.bias_node"]], "bounds (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.bounds"]], "c_max (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.c_max"]], "check_feasibility() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.check_feasibility"]], "compute_metrics (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.compute_metrics"]], "compute_path_length() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.compute_path_length"]], "connect_nodes() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.connect_nodes"]], "connectivity (curobo.graph.graph_base.graph attribute)": [[34, "curobo.graph.graph_base.Graph.connectivity"]], "curobo.graph.graph_base": [[34, "module-curobo.graph.graph_base"]], "debug_info (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.debug_info"]], "distance() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.distance"]], "distance_weight (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.distance_weight"]], "dof (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.dof"]], "edges (curobo.graph.graph_base.graph attribute)": [[34, "curobo.graph.graph_base.Graph.edges"]], "find_paths() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.find_paths"]], "from_dict() (curobo.graph.graph_base.graphconfig static method)": [[34, "curobo.graph.graph_base.GraphConfig.from_dict"]], "get_all_rollout_instances() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_all_rollout_instances"]], "get_biased_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_biased_vertex_set"]], "get_feasible_sample_set() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_feasible_sample_set"]], "get_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph"]], "get_graph_edges() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph_edges"]], "get_graph_shortest_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph_shortest_path_lengths"]], "get_interpolated_trajectory() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_interpolated_trajectory"]], "get_metrics() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_metrics"]], "get_new_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_new_vertex_set"]], "get_node_distance() (curobo.graph.graph_base.graph method)": [[34, "curobo.graph.graph_base.Graph.get_node_distance"]], "get_node_idx() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_node_idx"]], "get_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_path_lengths"]], "get_paths() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_paths"]], "get_samples() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_samples"]], "goal_q (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.goal_q"]], "graph_max_attempts (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.graph_max_attempts"]], "graph_min_attempts (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.graph_min_attempts"]], "init_nodes (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.init_nodes"]], "interpolated_plan (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.interpolated_plan"]], "interpolation_acceleration_scale (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_acceleration_scale"]], "interpolation_deviation (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_deviation"]], "interpolation_dt (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_dt"]], "interpolation_steps (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_steps"]], "interpolation_type (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_type"]], "k_nn (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.k_nn"]], "load_from_robot_config() (curobo.graph.graph_base.graphconfig static method)": [[34, "curobo.graph.graph_base.GraphConfig.load_from_robot_config"]], "mask_samples() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.mask_samples"]], "max_buffer (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_buffer"]], "max_cg_buffer (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_cg_buffer"]], "max_nodes (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_nodes"]], "metrics (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.metrics"]], "node_similarity_distance (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.node_similarity_distance"]], "nodes (curobo.graph.graph_base.graph attribute)": [[34, "curobo.graph.graph_base.Graph.nodes"]], "optimized_dt (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.optimized_dt"]], "path_buffer_last_tstep (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.path_buffer_last_tstep"]], "path_exists() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.path_exists"]], "path_length (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.path_length"]], "plan (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.plan"]], "rejection_ratio (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.rejection_ratio"]], "reset_buffer() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_buffer"]], "reset_cuda_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_cuda_graph"]], "reset_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_graph"]], "reset_seed() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_seed"]], "rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.rollout_fn"]], "safety_rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.safety_rollout_fn"]], "sample_pts (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.sample_pts"]], "seed (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.seed"]], "set_shortest_path_lengths() (curobo.graph.graph_base.graph method)": [[34, "curobo.graph.graph_base.Graph.set_shortest_path_lengths"]], "shortest_path_lengths (curobo.graph.graph_base.graph attribute)": [[34, "curobo.graph.graph_base.Graph.shortest_path_lengths"]], "solve_time (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.solve_time"]], "start_q (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.start_q"]], "steer_delta_buffer (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.steer_delta_buffer"]], "success (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.success"]], "tensor_args (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.tensor_args"]], "use_bias_node (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.use_bias_node"]], "use_cuda_graph_mask_samples (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.use_cuda_graph_mask_samples"]], "valid_query (curobo.graph.graph_base.graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.valid_query"]], "validate_graph() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.validate_graph"]], "vertex_n (curobo.graph.graph_base.graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.vertex_n"]], "warmup() (curobo.graph.graph_base.graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.warmup"]], "networkxgraph (class in curobo.graph.graph_nx)": [[35, "curobo.graph.graph_nx.NetworkxGraph"]], "add_edge() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_edge"]], "add_edges() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_edges"]], "add_node() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_node"]], "add_nodes() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_nodes"]], "curobo.graph.graph_nx": [[35, "module-curobo.graph.graph_nx"]], "get_edges() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_edges"]], "get_path_lengths() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_path_lengths"]], "get_shortest_path() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_shortest_path"]], "path_exists() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.path_exists"]], "reset_graph() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.reset_graph"]], "update_graph() (curobo.graph.graph_nx.networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.update_graph"]], "prmstar (class in curobo.graph.prm)": [[36, "curobo.graph.prm.PRMStar"]], "_add_bias_graph() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar._add_bias_graph"]], "_find_all_path() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_all_path"]], "_find_one_path() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_one_path"]], "_find_paths() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_paths"]], "build_graph() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar.build_graph"]], "curobo.graph.prm": [[36, "module-curobo.graph.prm"]], "warmup() (curobo.graph.prm.prmstar method)": [[36, "curobo.graph.prm.PRMStar.warmup"]], "curobo.opt": [[37, "module-curobo.opt"]], "curobo.opt.newton": [[38, "module-curobo.opt.newton"]], "lbfgsopt (class in curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt"]], "lbfgsoptconfig (class in curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig"]], "_get_step_direction() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._get_step_direction"]], "_shift() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._shift"]], "_shift_buffer() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._shift_buffer"]], "_update_buffers() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_buffers"]], "_update_q() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_q"]], "_update_r() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_r"]], "curobo.opt.newton.lbfgs": [[39, "module-curobo.opt.newton.lbfgs"]], "epsilon (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.epsilon"]], "history (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.history"]], "init_hessian() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.init_hessian"]], "jit_lbfgs_compute_step_direction() (in module curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.jit_lbfgs_compute_step_direction"]], "reset() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.reset"]], "stable_mode (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.stable_mode"]], "update_nproblems() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.update_nproblems"]], "use_cuda_kernel (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_kernel"]], "use_shared_buffers_kernel (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_shared_buffers_kernel"]], "approx_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.APPROX_WOLFE"]], "armijo (curobo.opt.newton.newton_base.linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.ARMIJO"]], "greedy (curobo.opt.newton.newton_base.linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.GREEDY"]], "linesearchtype (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.LineSearchType"]], "newtonoptbase (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase"]], "newtonoptconfig (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig"]], "strong_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.STRONG_WOLFE"]], "wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.WOLFE"]], "_approx_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._approx_line_search"]], "_armijo_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._armijo_line_search"]], "_call_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._call_opt_iters_graph"]], "_compute_cost_gradient() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._compute_cost_gradient"]], "_create_box_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._create_box_line_search"]], "_create_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._create_opt_iters_graph"]], "_get_step_direction() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._get_step_direction"]], "_greedy_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._greedy_line_search"]], "_initialize_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._initialize_opt_iters_graph"]], "_opt_iters() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._opt_iters"]], "_opt_step() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._opt_step"]], "_optimize() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._optimize"]], "_shift() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._shift"]], "_update_best() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._update_best"]], "_wolfe_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._wolfe_line_search"]], "check_convergence() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.check_convergence"]], "clip_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.clip_bounds"]], "cost_convergence (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_convergence"]], "cost_delta_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_delta_threshold"]], "cost_relative_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_relative_threshold"]], "curobo.opt.newton.newton_base": [[40, "module-curobo.opt.newton.newton_base"]], "fixed_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.fixed_iters"]], "inner_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.inner_iters"]], "last_best (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.last_best"]], "line_search_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_scale"]], "line_search_type (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_type"]], "min_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.min_iters"]], "project_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.project_bounds"]], "reset() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset"]], "reset_cuda_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset_cuda_graph"]], "scale_step_direction() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.scale_step_direction"]], "step_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.step_scale"]], "update_nproblems() (curobo.opt.newton.newton_base.newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.update_nproblems"]], "use_cuda_line_search_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_line_search_kernel"]], "use_cuda_update_best_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_update_best_kernel"]], "use_temporal_smooth (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_temporal_smooth"]], "optimizer (class in curobo.opt.opt_base)": [[41, "curobo.opt.opt_base.Optimizer"]], "optimizerconfig (class in curobo.opt.opt_base)": [[41, "curobo.opt.opt_base.OptimizerConfig"]], "_optimize() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._optimize"]], "_shift() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._shift"]], "_update_problem_kernel() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._update_problem_kernel"]], "action_highs (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_highs"]], "action_horizon (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_horizon"]], "action_lows (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_lows"]], "cold_start_n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.cold_start_n_iters"]], "create_data_dict() (curobo.opt.opt_base.optimizerconfig static method)": [[41, "curobo.opt.opt_base.OptimizerConfig.create_data_dict"]], "curobo.opt.opt_base": [[41, "module-curobo.opt.opt_base"]], "d_action (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.d_action"]], "debug_info (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.debug_info"]], "get_all_rollout_instances() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.get_all_rollout_instances"]], "get_nproblem_tensor() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.get_nproblem_tensor"]], "horizon (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.horizon"]], "n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.n_iters"]], "n_problems (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.n_problems"]], "num_particles (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.num_particles"]], "optimize() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.optimize"]], "reset() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset"]], "reset_cuda_graph() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_cuda_graph"]], "reset_seed() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_seed"]], "reset_shape() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_shape"]], "rollout_fn (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.rollout_fn"]], "store_debug (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.store_debug"]], "sync_cuda_time (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.sync_cuda_time"]], "tensor_args (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.tensor_args"]], "update_nproblems() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.update_nproblems"]], "update_params() (curobo.opt.opt_base.optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.update_params"]], "use_coo_sparse (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.use_coo_sparse"]], "use_cuda_graph (curobo.opt.opt_base.optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.use_cuda_graph"]], "curobo.opt.particle": [[42, "module-curobo.opt.particle"]], "paralleles (class in curobo.opt.particle.parallel_es)": [[43, "curobo.opt.particle.parallel_es.ParallelES"]], "parallelesconfig (class in curobo.opt.particle.parallel_es)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig"]], "_compute_mean() (curobo.opt.particle.parallel_es.paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_mean"]], "_compute_mean_covariance() (curobo.opt.particle.parallel_es.paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_mean_covariance"]], "_exp_util() (curobo.opt.particle.parallel_es.paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._exp_util"]], "_exp_util_from_costs() (curobo.opt.particle.parallel_es.paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._exp_util_from_costs"]], "_update_distribution() (curobo.opt.particle.parallel_es.paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._update_distribution"]], "curobo.opt.particle.parallel_es": [[43, "module-curobo.opt.particle.parallel_es"]], "learning_rate (curobo.opt.particle.parallel_es.parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.learning_rate"]], "baseactiontype (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType"]], "covtype (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.CovType"]], "diag_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.DIAG_A"]], "full_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.FULL_A"]], "full_ha (curobo.opt.particle.parallel_mppi.covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.FULL_HA"]], "null (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.NULL"]], "parallelmppi (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI"]], "parallelmppiconfig (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig"]], "random (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.RANDOM"]], "repeat (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.REPEAT"]], "sigma_i (curobo.opt.particle.parallel_mppi.covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.SIGMA_I"]], "_calc_val() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._calc_val"]], "_compute_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_covariance"]], "_compute_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_mean"]], "_compute_mean_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_mean_covariance"]], "_compute_total_cost() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_total_cost"]], "_exp_util() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._exp_util"]], "_exp_util_from_costs() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._exp_util_from_costs"]], "_get_action_seq() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._get_action_seq"]], "_update_cov_scale() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_cov_scale"]], "_update_distribution() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_distribution"]], "alpha (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.alpha"]], "base_action (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.base_action"]], "beta (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.beta"]], "cov_type (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.cov_type"]], "create_data_dict() (curobo.opt.particle.parallel_mppi.parallelmppiconfig static method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.create_data_dict"]], "curobo.opt.particle.parallel_mppi": [[44, "module-curobo.opt.particle.parallel_mppi"]], "entropy (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.entropy"]], "full_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_cov"]], "full_inv_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_inv_cov"]], "full_scale_tril (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_scale_tril"]], "gamma (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.gamma"]], "generate_noise() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_noise"]], "generate_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_rollouts"]], "get_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_rollouts"]], "init_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_cov"]], "init_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_mean"]], "kappa (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.kappa"]], "null_act_frac (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.null_act_frac"]], "random_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.random_mean"]], "reset() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset"]], "reset_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_covariance"]], "reset_distribution() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_distribution"]], "reset_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_mean"]], "reset_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_seed"]], "sample_actions() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_actions"]], "sample_params (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_params"]], "sample_per_problem (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_per_problem"]], "squash_fn (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.squash_fn"]], "squashed_mean (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.squashed_mean"]], "step_size_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_cov"]], "step_size_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_mean"]], "update_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.update_cov"]], "update_init_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_init_mean"]], "update_samples() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_samples"]], "update_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_seed"]], "best (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.BEST"]], "mean (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.MEAN"]], "particleoptbase (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase"]], "particleoptconfig (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig"]], "particleoptinfo (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptInfo"]], "sample (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.SAMPLE"]], "samplemode (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode"]], "_calc_val() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._calc_val"]], "_call_cuda_opt_iters() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._call_cuda_opt_iters"]], "_get_action_seq() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._get_action_seq"]], "_initialize_cuda_graph() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._initialize_cuda_graph"]], "_optimize() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._optimize"]], "_run_opt_iters() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._run_opt_iters"]], "_update_distribution() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._update_distribution"]], "calculate_value (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.calculate_value"]], "check_convergence() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.check_convergence"]], "create_data_dict() (curobo.opt.particle.particle_opt_base.particleoptconfig static method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.create_data_dict"]], "curobo.opt.particle.particle_opt_base": [[45, "module-curobo.opt.particle.particle_opt_base"]], "gamma (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.gamma"]], "generate_rollouts() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.generate_rollouts"]], "info (curobo.opt.particle.particle_opt_base.particleoptinfo attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptInfo.info"]], "reset() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset"]], "sample_actions() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sample_actions"]], "sample_mode (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.sample_mode"]], "seed (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.seed"]], "store_rollouts (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.store_rollouts"]], "update_nproblems() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_nproblems"]], "update_num_particles_per_problem() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_num_particles_per_problem"]], "update_seed() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_seed"]], "clamp (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP"]], "clamp_rescale (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP_RESCALE"]], "identity (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.IDENTITY"]], "squashtype (class in curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType"]], "tanh (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.TANH"]], "batch_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.batch_cholesky"]], "cost_to_go() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.cost_to_go"]], "cost_to_go_np() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.cost_to_go_np"]], "curobo.opt.particle.particle_opt_utils": [[46, "module-curobo.opt.particle.particle_opt_utils"]], "gaussian_entropy() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_entropy"]], "gaussian_kl() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_kl"]], "gaussian_logprob() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_logprob"]], "gaussian_logprobgrad() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_logprobgrad"]], "get_stomp_cov() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.get_stomp_cov"]], "matrix_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.matrix_cholesky"]], "scale_ctrl() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.scale_ctrl"]], "curobo.rollout": [[47, "module-curobo.rollout"]], "armbase (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmBase"]], "armbaseconfig (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmBaseConfig"]], "armcostconfig (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmCostConfig"]], "_get_augmented_state() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase._get_augmented_state"]], "_get_base_keys() (curobo.rollout.arm_base.armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig._get_base_keys"]], "_get_formatted_dict() (curobo.rollout.arm_base.armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig._get_formatted_dict"]], "_init_after_config_load() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase._init_after_config_load"]], "action_bound_highs (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_bound_lows"]], "action_horizon (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_horizon"]], "bound_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.bound_cfg"]], "compute_kinematics() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.compute_kinematics"]], "constraint_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.constraint_cfg"]], "constraint_fn() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.constraint_fn"]], "convergence_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.convergence_cfg"]], "convergence_fn() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.convergence_fn"]], "cost_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.cost_cfg"]], "cost_fn() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.cost_from_dict"]], "cspace_config (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.cspace_config"]], "curobo.rollout.arm_base": [[48, "module-curobo.rollout.arm_base"]], "current_cost() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.current_cost"]], "d_action (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.d_action"]], "dt (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.dt"]], "filter_robot_state() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.filter_robot_state"]], "from_dict() (curobo.rollout.arm_base.armbaseconfig class method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.from_dict"]], "from_dict() (curobo.rollout.arm_base.armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig.from_dict"]], "get_action_from_state() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_action_from_state"]], "get_ee_pose() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_ee_pose"]], "get_full_dof_from_solution() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_state_from_action"]], "horizon (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.horizon"]], "joint_names (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.joint_names"]], "kinematics (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.kinematics"]], "manipulability_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.manipulability_cfg"]], "model_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.model_cfg"]], "model_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.model_from_dict"]], "null_space_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.null_space_cfg"]], "primitive_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.primitive_collision_cfg"]], "reset() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset"]], "reset_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset_cuda_graph"]], "reset_shape() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset_shape"]], "retract_state (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.retract_state"]], "rollout_constraint() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_constraint"]], "rollout_constraint_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_constraint_cuda_graph"]], "rollout_fn() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_fn"]], "self_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.self_collision_cfg"]], "state_bounds (curobo.rollout.arm_base.armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.state_bounds"]], "stop_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.stop_cfg"]], "update_cost_dt() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_cost_dt"]], "update_params() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_params"]], "update_traj_dt() (curobo.rollout.arm_base.armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_traj_dt"]], "world_coll_checker (curobo.rollout.arm_base.armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker"]], "world_coll_checker_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker_from_dict"]], "armreacher (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacher"]], "armreacherconfig (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig"]], "armreachercostconfig (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig"]], "armreachermetrics (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics"]], "_abc_impl (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics._abc_impl"]], "_get_base_keys() (curobo.rollout.arm_reacher.armreachercostconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig._get_base_keys"]], "clone() (curobo.rollout.arm_reacher.armreachermetrics method)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.clone"]], "convergence_fn() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.convergence_fn"]], "cost_fn() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_reacher.armreacherconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_from_dict"]], "cspace_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.cspace_cfg"]], "cspace_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.cspace_error"]], "curobo.rollout.arm_reacher": [[49, "module-curobo.rollout.arm_reacher"]], "enable_cspace_cost() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.enable_cspace_cost"]], "enable_pose_cost() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.enable_pose_cost"]], "from_dict() (curobo.rollout.arm_reacher.armreachercostconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.from_dict"]], "get_pose_costs() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_pose_costs"]], "goalset_index (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.goalset_index"]], "link_pose_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.link_pose_cfg"]], "null_space_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.null_space_error"]], "pose_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.pose_cfg"]], "pose_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.pose_error"]], "position_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.position_error"]], "rotation_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.rotation_error"]], "straight_line_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.straight_line_cfg"]], "update_params() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_params"]], "update_pose_cost_metric() (curobo.rollout.arm_reacher.armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_pose_cost_metric"]], "zero_acc_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_acc_cfg"]], "zero_jerk_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_jerk_cfg"]], "zero_vel_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_vel_cfg"]], "curobo.rollout.cost": [[50, "module-curobo.rollout.cost"]], "bounds (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS"]], "bounds_smooth (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS_SMOOTH"]], "boundcost (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCost"]], "boundcostconfig (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig"]], "boundcosttype (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType"]], "position (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.POSITION"]], "warpboundfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction"]], "warpboundposfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction"]], "warpboundposloss (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss"]], "warpboundsmoothfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._backward_cls"]], "activation_distance (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.activation_distance"]], "backward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.backward"]], "cost_type (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.cost_type"]], "cspace_distance_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.cspace_distance_weight"]], "curobo.rollout.cost.bound_cost": [[51, "module-curobo.rollout.cost.bound_cost"]], "forward() (curobo.rollout.cost.bound_cost.boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.forward"]], "joint_limits (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.joint_limits"]], "null_space_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.null_space_weight"]], "run_weight_acceleration (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_acceleration"]], "run_weight_jerk (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_jerk"]], "run_weight_velocity (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_velocity"]], "set_bounds() (curobo.rollout.cost.bound_cost.boundcostconfig method)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.set_bounds"]], "smooth_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.smooth_weight"]], "state_finite_difference_mode (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.state_finite_difference_mode"]], "update_batch_size() (curobo.rollout.cost.bound_cost.boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_batch_size"]], "update_dt() (curobo.rollout.cost.bound_cost.boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_dt"]], "costbase (class in curobo.rollout.cost.cost_base)": [[52, "curobo.rollout.cost.cost_base.CostBase"]], "costconfig (class in curobo.rollout.cost.cost_base)": [[52, "curobo.rollout.cost.cost_base.CostConfig"]], "_init_post_config() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._init_post_config"]], "classify (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.classify"]], "curobo.rollout.cost.cost_base": [[52, "module-curobo.rollout.cost.cost_base"]], "disable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.disable_cost"]], "distance_threshold (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.distance_threshold"]], "dof (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.dof"]], "enable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.enable_cost"]], "enabled (curobo.rollout.cost.cost_base.costbase property)": [[52, "curobo.rollout.cost.cost_base.CostBase.enabled"]], "forward() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.forward"]], "hinge_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.hinge_value"]], "max_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.max_value"]], "return_loss (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.return_loss"]], "run_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.run_weight"]], "tensor_args (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.tensor_args"]], "terminal (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.terminal"]], "threshold_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.threshold_value"]], "update_dt() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.update_dt"]], "update_vec_weight() (curobo.rollout.cost.cost_base.costconfig method)": [[52, "curobo.rollout.cost.cost_base.CostConfig.update_vec_weight"]], "update_weight() (curobo.rollout.cost.cost_base.costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.update_weight"]], "vec_convergence (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.vec_convergence"]], "vec_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.vec_weight"]], "weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.weight"]], "distcost (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistCost"]], "distcostconfig (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig"]], "disttype (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistType"]], "l1 (curobo.rollout.cost.dist_cost.disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.L1"]], "l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.L2"]], "l2distfunction (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction"]], "squared_l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.SQUARED_L2"]], "_backward_cls (curobo.rollout.cost.dist_cost.l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._backward_cls"]], "_init_post_config() (curobo.rollout.cost.dist_cost.distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._init_post_config"]], "backward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.backward"]], "curobo.rollout.cost.dist_cost": [[53, "module-curobo.rollout.cost.dist_cost"]], "dist_type (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.dist_type"]], "forward() (curobo.rollout.cost.dist_cost.distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward"]], "forward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.forward"]], "forward_target() (curobo.rollout.cost.dist_cost.distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward_target"]], "forward_target_idx() (curobo.rollout.cost.dist_cost.distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward_target_idx"]], "update_batch_size() (curobo.rollout.cost.dist_cost.distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.update_batch_size"]], "use_null_space (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.use_null_space"]], "manipulabilitycost (class in curobo.rollout.cost.manipulability_cost)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost"]], "manipulabilitycostconfig (class in curobo.rollout.cost.manipulability_cost)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost": [[54, "module-curobo.rollout.cost.manipulability_cost"]], "forward() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.forward"]], "joint_limited_manipulability_delta() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.joint_limited_manipulability_delta"]], "manipulability() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.manipulability"]], "use_joint_limits (curobo.rollout.cost.manipulability_cost.manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.use_joint_limits"]], "batch_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOAL"]], "batch_goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOALSET"]], "goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.GOALSET"]], "posecost (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCost"]], "posecostconfig (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig"]], "posecostmetric (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric"]], "poseerrortype (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType"]], "single_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.SINGLE_GOAL"]], "_forward_goal_distribution() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_goal_distribution"]], "_forward_pytorch() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_pytorch"]], "_forward_single_goal() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_single_goal"]], "_update_cost_type() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._update_cost_type"]], "clone() (curobo.rollout.cost.pose_cost.posecostmetric method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.clone"]], "cost_type (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.cost_type"]], "create_grasp_approach_metric() (curobo.rollout.cost.pose_cost.posecostmetric class method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.create_grasp_approach_metric"]], "curobo.rollout.cost.pose_cost": [[55, "module-curobo.rollout.cost.pose_cost"]], "forward() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward"]], "forward_out_distance() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward_out_distance"]], "forward_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward_pose"]], "goalset_index_buffer (curobo.rollout.cost.pose_cost.posecost property)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.goalset_index_buffer"]], "hold_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_partial_pose"]], "hold_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.hold_partial_pose"]], "hold_vec_weight (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_vec_weight"]], "initialize_run_weight_vec() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.initialize_run_weight_vec"]], "offset_position (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_position"]], "offset_rotation (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_rotation"]], "offset_tstep_fraction (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_tstep_fraction"]], "offset_tstep_fraction (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_tstep_fraction"]], "offset_waypoint (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_waypoint"]], "project_distance (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.project_distance"]], "reach_full_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_full_pose"]], "reach_full_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.reach_full_pose"]], "reach_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_partial_pose"]], "reach_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.reach_partial_pose"]], "reach_vec_weight (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_vec_weight"]], "release_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.release_partial_pose"]], "release_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.release_partial_pose"]], "remove_offset_waypoint (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.remove_offset_waypoint"]], "remove_offset_waypoint() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.remove_offset_waypoint"]], "reset_metric() (curobo.rollout.cost.pose_cost.posecostmetric class method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reset_metric"]], "run_vec_weight (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.run_vec_weight"]], "update_batch_size() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_batch_size"]], "update_metric() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_metric"]], "update_offset_waypoint() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_offset_waypoint"]], "update_run_weight() (curobo.rollout.cost.pose_cost.posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_run_weight"]], "use_metric (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_metric"]], "use_projected_distance (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_projected_distance"]], "primitivecollisioncost (class in curobo.rollout.cost.primitive_collision_cost)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost"]], "primitivecollisioncostconfig (class in curobo.rollout.cost.primitive_collision_cost)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig"]], "activation_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.activation_distance"]], "curobo.rollout.cost.primitive_collision_cost": [[56, "module-curobo.rollout.cost.primitive_collision_cost"]], "discrete_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.discrete_fn"]], "get_gradient_buffer() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_gradient_buffer"]], "speed_dt (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.speed_dt"]], "sum_collisions (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_collisions"]], "sum_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_distance"]], "sweep_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_fn"]], "sweep_kernel_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_kernel_fn"]], "sweep_steps (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sweep_steps"]], "update_dt() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_dt"]], "use_speed_metric (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_speed_metric"]], "use_sweep (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep"]], "use_sweep_kernel (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep_kernel"]], "world_coll_checker (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.world_coll_checker"]], "identity (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType.IDENTITY"]], "pseudo_inverse (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType.PSEUDO_INVERSE"]], "projtype (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType"]], "projecteddistcost (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost"]], "projecteddistcostconfig (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost": [[57, "module-curobo.rollout.cost.projected_dist_cost"]], "eps (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.eps"]], "forward() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward"]], "get_pinv_null_disp() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_pinv_null_disp"]], "proj_type (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.proj_type"]], "selfcollisioncost (class in curobo.rollout.cost.self_collision_cost)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost"]], "selfcollisioncostconfig (class in curobo.rollout.cost.self_collision_cost)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost": [[58, "module-curobo.rollout.cost.self_collision_cost"]], "forward() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.forward"]], "self_collision_kin_config (curobo.rollout.cost.self_collision_cost.selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.self_collision_kin_config"]], "update_batch_size() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_batch_size"]], "stopcost (class in curobo.rollout.cost.stop_cost)": [[59, "curobo.rollout.cost.stop_cost.StopCost"]], "stopcostconfig (class in curobo.rollout.cost.stop_cost)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig"]], "curobo.rollout.cost.stop_cost": [[59, "module-curobo.rollout.cost.stop_cost"]], "dt_traj_params (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.dt_traj_params"]], "forward() (curobo.rollout.cost.stop_cost.stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.forward"]], "horizon (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.horizon"]], "max_limit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.max_limit"]], "max_nlimit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.max_nlimit"]], "straightlinecost (class in curobo.rollout.cost.straight_line_cost)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost"]], "curobo.rollout.cost.straight_line_cost": [[60, "module-curobo.rollout.cost.straight_line_cost"]], "forward() (curobo.rollout.cost.straight_line_cost.straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.forward"]], "runsquaredsum (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum"]], "squaredsum (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum"]], "zerocost (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost"]], "_backward_cls (curobo.rollout.cost.zero_cost.runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._backward_cls"]], "_backward_cls (curobo.rollout.cost.zero_cost.squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._backward_cls"]], "backward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.backward"]], "backward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.backward"]], "curobo.rollout.cost.zero_cost": [[61, "module-curobo.rollout.cost.zero_cost"]], "forward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.forward"]], "curobo.rollout.dynamics_model": [[62, "module-curobo.rollout.dynamics_model"]], "accelerationtensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel"]], "accelerationtensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel"]], "cliquetensorstep (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep"]], "cliquetensorstepcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel"]], "cliquetensorstepcoalescekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel"]], "cliquetensorstepidxcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel"]], "cliquetensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel"]], "cliquetensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._backward_cls"]], "action_interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.action_interpolate_kernel"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.backward"]], "build_clique_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_clique_matrix"]], "build_fd_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_fd_matrix"]], "build_int_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_int_matrix"]], "build_start_state_mask() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_start_state_mask"]], "curobo.rollout.dynamics_model.integration_utils": [[63, "module-curobo.rollout.dynamics_model.integration_utils"]], "euler_integrate() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.euler_integrate"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.forward"]], "interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.interpolate_kernel"]], "step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.step_acc_semi_euler"]], "sum_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.sum_matrix"]], "tensor_linspace() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_linspace"]], "tensor_step_acc() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc"]], "tensor_step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc_semi_euler"]], "tensor_step_jerk() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_jerk"]], "tensor_step_pos() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos"]], "tensor_step_pos_clique() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_clique"]], "tensor_step_pos_ik() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_ik"]], "tensor_step_vel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_vel"]], "kinematicmodel (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel"]], "kinematicmodelconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig"]], "kinematicmodelstate (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState"]], "timetrajconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig"]], "_abc_impl (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState._abc_impl"]], "action_bound_highs (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_highs"]], "action_bound_lows (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_lows"]], "action_horizon (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_horizon"]], "ang_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ang_jac_seq"]], "base_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_dt"]], "base_ratio (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_ratio"]], "batch_size (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.batch_size"]], "control_space (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.control_space"]], "cspace_distance_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.cspace_distance_weight"]], "curobo.rollout.dynamics_model.kinematic_model": [[64, "module-curobo.rollout.dynamics_model.kinematic_model"]], "dt_traj_params (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.dt_traj_params"]], "ee_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pos_seq"]], "ee_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pose"]], "ee_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_quat_seq"]], "filter_robot_command (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.filter_robot_command"]], "filter_robot_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.forward"]], "from_dict() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig static method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.from_dict"]], "get_action_from_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_action_from_state"]], "get_dt_array() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.get_dt_array"]], "get_next_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_robot_command"]], "get_state_bounds() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_bounds"]], "get_state_from_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_from_action"]], "horizon (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.horizon"]], "init_action_mean (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.init_action_mean"]], "integrate_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action"]], "integrate_action_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action_step"]], "lin_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.lin_jac_seq"]], "link_names (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_names"]], "link_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pos_seq"]], "link_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pose"]], "link_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_quat_seq"]], "max_acceleration (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_acceleration"]], "max_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.max_dt"]], "max_jerk (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_jerk"]], "null_space_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.null_space_weight"]], "retract_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.retract_config"]], "return_full_act_buffer (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.return_full_act_buffer"]], "robot_cmd_tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.robot_cmd_tensor_step"]], "robot_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.robot_config"]], "robot_spheres (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.robot_spheres"]], "state_estimation_variance (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_estimation_variance"]], "state_filter_cfg (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_filter_cfg"]], "state_finite_difference_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_finite_difference_mode"]], "state_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.state_seq"]], "teleport_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.teleport_mode"]], "tensor_args (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.tensor_args"]], "tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.tensor_step"]], "update_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_batch_size"]], "update_cmd_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_cmd_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.update_dt"]], "update_traj_dt() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_traj_dt"]], "vel_scale (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.vel_scale"]], "dynamicsmodelbase (class in curobo.rollout.dynamics_model.model_base)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase"]], "_abc_impl (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase attribute)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase._abc_impl"]], "curobo.rollout.dynamics_model.model_base": [[65, "module-curobo.rollout.dynamics_model.model_base"]], "filter_robot_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.forward"]], "get_next_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_robot_command"]], "acceleration (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION"]], "acceleration_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION_KERNEL"]], "jerk (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.JERK"]], "position (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION"]], "position_clique (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE"]], "position_clique_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE_KERNEL"]], "position_teleport (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_TELEPORT"]], "tensorstepacceleration (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration"]], "tensorstepaccelerationkernel (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel"]], "tensorstepbase (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase"]], "tensorstepposition (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition"]], "tensorsteppositionclique (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique"]], "tensorsteppositioncliquekernel (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel"]], "tensorsteppositionteleport (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport"]], "tensorsteptype (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType"]], "velocity (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.VELOCITY"]], "curobo.rollout.dynamics_model.tensor_step": [[66, "module-curobo.rollout.dynamics_model.tensor_step"]], "filter_signal() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.filter_signal"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionteleport method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.forward"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.update_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_dt"]], "goal (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.Goal"]], "rolloutbase (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutBase"]], "rolloutconfig (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutConfig"]], "rolloutmetrics (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutMetrics"]], "trajectory (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.Trajectory"]], "_abc_impl (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal._abc_impl"]], "_abc_impl (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics._abc_impl"]], "_copy_buffer() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal._copy_buffer"]], "_copy_tensor() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal._copy_tensor"]], "_init_after_config_load() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase._init_after_config_load"]], "_tensor_repeat_seeds() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal._tensor_repeat_seeds"]], "_update_batch_size() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal._update_batch_size"]], "action_bound_highs (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bound_lows"]], "action_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bounds"]], "action_horizon (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_horizon"]], "actions (curobo.rollout.rollout_base.trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.actions"]], "apply_kernel() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.apply_kernel"]], "batch (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch"]], "batch_current_state_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_current_state_idx"]], "batch_enable_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_enable_idx"]], "batch_goal_state_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_goal_state_idx"]], "batch_pose_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_pose_idx"]], "batch_retract_state_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_retract_state_idx"]], "batch_world_idx (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_world_idx"]], "clone() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.clone"]], "clone() (curobo.rollout.rollout_base.rolloutmetrics method)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.clone"]], "constraint (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.constraint"]], "constraint_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.constraint_fn"]], "convergence_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.convergence_fn"]], "copy_() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.copy_"]], "cost (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.cost"]], "cost_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.cost_fn"]], "costs (curobo.rollout.rollout_base.trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.costs"]], "create_idx() (curobo.rollout.rollout_base.goal class method)": [[67, "curobo.rollout.rollout_base.Goal.create_idx"]], "create_index_buffers() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.create_index_buffers"]], "cspace_config (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.cspace_config"]], "curobo.rollout.rollout_base": [[67, "module-curobo.rollout.rollout_base"]], "current_cost() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.current_cost"]], "current_state (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.current_state"]], "d_action (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.d_action"]], "debug (curobo.rollout.rollout_base.trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.debug"]], "dt (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.dt"]], "feasible (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.feasible"]], "filter_robot_state() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.filter_robot_state"]], "get_action_from_state() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_action_from_state"]], "get_batch_goal_state() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.get_batch_goal_state"]], "get_full_dof_from_solution() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_state_from_action"]], "goal_pose (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.goal_pose"]], "goal_state (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.goal_state"]], "horizon (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.horizon"]], "links_goal_pose (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.links_goal_pose"]], "n_goalset (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.n_goalset"]], "name (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.name"]], "repeat_seeds() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.repeat_seeds"]], "reset() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset"]], "reset_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_cuda_graph"]], "reset_seed() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_seed"]], "reset_shape() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_shape"]], "retract_state (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.retract_state"]], "rollout_constraint() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.rollout_constraint"]], "rollout_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.rollout_fn"]], "sample_random_actions() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.sample_random_actions"]], "state (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.state"]], "state (curobo.rollout.rollout_base.trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.state"]], "state_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.state_bounds"]], "sum_horizon (curobo.rollout.rollout_base.rolloutconfig attribute)": [[67, "curobo.rollout.rollout_base.RolloutConfig.sum_horizon"]], "tensor_args (curobo.rollout.rollout_base.rolloutconfig attribute)": [[67, "curobo.rollout.rollout_base.RolloutConfig.tensor_args"]], "to() (curobo.rollout.rollout_base.goal method)": [[67, "curobo.rollout.rollout_base.Goal.to"]], "update_batch_idx_buffers (curobo.rollout.rollout_base.goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.update_batch_idx_buffers"]], "update_params() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.update_params"]], "update_start_state() (curobo.rollout.rollout_base.rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.update_start_state"]], "curobo.types": [[68, "module-curobo.types"]], "tensordevicetype (class in curobo.types.base)": [[69, "curobo.types.base.TensorDeviceType"]], "as_torch_dict() (curobo.types.base.tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.as_torch_dict"]], "collision_distance_dtype (curobo.types.base.tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_distance_dtype"]], "collision_geometry_dtype (curobo.types.base.tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_geometry_dtype"]], "collision_gradient_dtype (curobo.types.base.tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_gradient_dtype"]], "cpu() (curobo.types.base.tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.cpu"]], "curobo.types.base": [[69, "module-curobo.types.base"]], "device (curobo.types.base.tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.device"]], "dtype (curobo.types.base.tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.dtype"]], "from_basic() (curobo.types.base.tensordevicetype static method)": [[69, "curobo.types.base.TensorDeviceType.from_basic"]], "to_device() (curobo.types.base.tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.to_device"]], "to_int8_device() (curobo.types.base.tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.to_int8_device"]], "cameraobservation (class in curobo.types.camera)": [[70, "curobo.types.camera.CameraObservation"]], "clone() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.clone"]], "copy_() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.copy_"]], "curobo.types.camera": [[70, "module-curobo.types.camera"]], "depth_image (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.depth_image"]], "filter_depth() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.filter_depth"]], "get_image_from_pointcloud() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.get_image_from_pointcloud"]], "get_pointcloud() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.get_pointcloud"]], "image_segmentation (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.image_segmentation"]], "intrinsics (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.intrinsics"]], "name (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.name"]], "pose (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.pose"]], "projection_matrix (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.projection_matrix"]], "projection_rays (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.projection_rays"]], "resolution (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.resolution"]], "rgb_image (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.rgb_image"]], "shape (curobo.types.camera.cameraobservation property)": [[70, "curobo.types.camera.CameraObservation.shape"]], "stack() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.stack"]], "timestamp (curobo.types.camera.cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.timestamp"]], "to() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.to"]], "update_projection_rays() (curobo.types.camera.cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.update_projection_rays"]], "acceleration (curobo.types.enum.statetype attribute)": [[71, "curobo.types.enum.StateType.ACCELERATION"]], "jerk (curobo.types.enum.statetype attribute)": [[71, "curobo.types.enum.StateType.JERK"]], "position (curobo.types.enum.statetype attribute)": [[71, "curobo.types.enum.StateType.POSITION"]], "statetype (class in curobo.types.enum)": [[71, "curobo.types.enum.StateType"]], "velocity (curobo.types.enum.statetype attribute)": [[71, "curobo.types.enum.StateType.VELOCITY"]], "curobo.types.enum": [[71, "module-curobo.types.enum"]], "orientationerror (class in curobo.types.math)": [[72, "curobo.types.math.OrientationError"]], "pose (class in curobo.types.math)": [[72, "curobo.types.math.Pose"]], "_abc_impl (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose._abc_impl"]], "_backward_cls (curobo.types.math.orientationerror attribute)": [[72, "curobo.types.math.OrientationError._backward_cls"]], "angular_distance() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.angular_distance"]], "apply_kernel() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.apply_kernel"]], "backward() (curobo.types.math.orientationerror static method)": [[72, "curobo.types.math.OrientationError.backward"]], "batch (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.batch"]], "batch_transform_points() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.batch_transform_points"]], "cat() (curobo.types.math.pose static method)": [[72, "curobo.types.math.Pose.cat"]], "clone() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.clone"]], "compute_local_pose() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.compute_local_pose"]], "compute_offset_pose() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.compute_offset_pose"]], "copy_() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.copy_"]], "curobo.types.math": [[72, "module-curobo.types.math"]], "distance() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.distance"]], "forward() (curobo.types.math.orientationerror static method)": [[72, "curobo.types.math.OrientationError.forward"]], "from_batch_list() (curobo.types.math.pose class method)": [[72, "curobo.types.math.Pose.from_batch_list"]], "from_list() (curobo.types.math.pose class method)": [[72, "curobo.types.math.Pose.from_list"]], "from_matrix() (curobo.types.math.pose static method)": [[72, "curobo.types.math.Pose.from_matrix"]], "geodesic_distance() (curobo.types.math.orientationerror static method)": [[72, "curobo.types.math.OrientationError.geodesic_distance"]], "get_index() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.get_index"]], "get_matrix() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.get_matrix"]], "get_numpy_matrix() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.get_numpy_matrix"]], "get_pose_vector() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.get_pose_vector"]], "get_rotation() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.get_rotation"]], "inverse() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.inverse"]], "linear_distance() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.linear_distance"]], "multiply() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.multiply"]], "n_goalset (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.n_goalset"]], "name (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.name"]], "normalize_rotation (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.normalize_rotation"]], "position (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.position"]], "quat_multiply() (in module curobo.types.math)": [[72, "curobo.types.math.quat_multiply"]], "quaternion (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.quaternion"]], "repeat() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.repeat"]], "repeat_seeds() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.repeat_seeds"]], "rotation (curobo.types.math.pose attribute)": [[72, "curobo.types.math.Pose.rotation"]], "shape (curobo.types.math.pose property)": [[72, "curobo.types.math.Pose.shape"]], "stack() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.stack"]], "to() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.to"]], "to_list() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.to_list"]], "tolist() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.tolist"]], "transform_point() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.transform_point"]], "transform_points() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.transform_points"]], "unsqueeze() (curobo.types.math.pose method)": [[72, "curobo.types.math.Pose.unsqueeze"]], "nnconfig (class in curobo.types.robot)": [[73, "curobo.types.robot.NNConfig"]], "robotconfig (class in curobo.types.robot)": [[73, "curobo.types.robot.RobotConfig"]], "cspace (curobo.types.robot.robotconfig property)": [[73, "curobo.types.robot.RobotConfig.cspace"]], "curobo.types.robot": [[73, "module-curobo.types.robot"]], "from_basic() (curobo.types.robot.robotconfig static method)": [[73, "curobo.types.robot.RobotConfig.from_basic"]], "from_dict() (curobo.types.robot.robotconfig static method)": [[73, "curobo.types.robot.RobotConfig.from_dict"]], "ik_seeder (curobo.types.robot.nnconfig attribute)": [[73, "curobo.types.robot.NNConfig.ik_seeder"]], "kinematics (curobo.types.robot.robotconfig attribute)": [[73, "curobo.types.robot.RobotConfig.kinematics"]], "tensor_args (curobo.types.robot.robotconfig attribute)": [[73, "curobo.types.robot.RobotConfig.tensor_args"]], "write_config() (curobo.types.robot.robotconfig method)": [[73, "curobo.types.robot.RobotConfig.write_config"]], "filtercoeff (class in curobo.types.state)": [[74, "curobo.types.state.FilterCoeff"]], "jointstate (class in curobo.types.state)": [[74, "curobo.types.state.JointState"]], "state (class in curobo.types.state)": [[74, "curobo.types.state.State"]], "_abc_impl (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState._abc_impl"]], "_abc_impl (curobo.types.state.state attribute)": [[74, "curobo.types.state.State._abc_impl"]], "_same_shape() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState._same_shape"]], "acceleration (curobo.types.state.filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.acceleration"]], "acceleration (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.acceleration"]], "append_joints() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.append_joints"]], "apply_kernel() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.apply_kernel"]], "apply_kernel() (curobo.types.state.state method)": [[74, "curobo.types.state.State.apply_kernel"]], "blend() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.blend"]], "blend() (curobo.types.state.state method)": [[74, "curobo.types.state.State.blend"]], "calculate_fd_from_position() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.calculate_fd_from_position"]], "clone() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.clone"]], "clone() (curobo.types.state.state method)": [[74, "curobo.types.state.State.clone"]], "copy_() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.copy_"]], "copy_at_index() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.copy_at_index"]], "copy_data() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.copy_data"]], "curobo.types.state": [[74, "module-curobo.types.state"]], "detach() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.detach"]], "fn_get_index() (in module curobo.types.state)": [[74, "curobo.types.state.fn_get_index"]], "from_list() (curobo.types.state.jointstate static method)": [[74, "curobo.types.state.JointState.from_list"]], "from_numpy() (curobo.types.state.jointstate static method)": [[74, "curobo.types.state.JointState.from_numpy"]], "from_position() (curobo.types.state.jointstate static method)": [[74, "curobo.types.state.JointState.from_position"]], "from_state_tensor() (curobo.types.state.jointstate static method)": [[74, "curobo.types.state.JointState.from_state_tensor"]], "get_augmented_joint_state() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.get_augmented_joint_state"]], "get_ordered_joint_state() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.get_ordered_joint_state"]], "get_state_tensor() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.get_state_tensor"]], "get_state_tensor() (curobo.types.state.state method)": [[74, "curobo.types.state.State.get_state_tensor"]], "inplace_reindex() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.inplace_reindex"]], "jerk (curobo.types.state.filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.jerk"]], "jerk (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.jerk"]], "joint_names (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.joint_names"]], "position (curobo.types.state.filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.position"]], "position (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.position"]], "repeat_seeds() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.repeat_seeds"]], "scale() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.scale"]], "scale_by_dt() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.scale_by_dt"]], "shape (curobo.types.state.jointstate property)": [[74, "curobo.types.state.JointState.shape"]], "squeeze() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.squeeze"]], "stack() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.stack"]], "tensor_args (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.tensor_args"]], "to() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.to"]], "to() (curobo.types.state.state method)": [[74, "curobo.types.state.State.to"]], "trim_trajectory() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.trim_trajectory"]], "unsqueeze() (curobo.types.state.jointstate method)": [[74, "curobo.types.state.JointState.unsqueeze"]], "velocity (curobo.types.state.filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.velocity"]], "velocity (curobo.types.state.jointstate attribute)": [[74, "curobo.types.state.JointState.velocity"]], "zeros() (curobo.types.state.jointstate static method)": [[74, "curobo.types.state.JointState.zeros"]], "t_bdof (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BDOF"]], "t_bhdof_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BHDOF_float"]], "t_bhvalue_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BHValue_float"]], "t_bposition (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BPosition"]], "t_bquaternion (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BQuaternion"]], "t_brotation (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BRotation"]], "t_bvalue_bool (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_bool"]], "t_bvalue_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_float"]], "t_bvalue_int (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_int"]], "t_dof (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_DOF"]], "t_hdof_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_HDOF_float"]], "curobo.types.tensor": [[75, "module-curobo.types.tensor"]], "curobo.util": [[76, "module-curobo.util"]], "curobo.util.error_metrics": [[77, "module-curobo.util.error_metrics"]], "rotation_error_matrix() (in module curobo.util.error_metrics)": [[77, "curobo.util.error_metrics.rotation_error_matrix"]], "rotation_error_quaternion() (in module curobo.util.error_metrics)": [[77, "curobo.util.error_metrics.rotation_error_quaternion"]], "curobo.util.helpers": [[78, "module-curobo.util.helpers"]], "default_to_regular() (in module curobo.util.helpers)": [[78, "curobo.util.helpers.default_to_regular"]], "list_idx_if_not_none() (in module curobo.util.helpers)": [[78, "curobo.util.helpers.list_idx_if_not_none"]], "curobo.util.logger": [[79, "module-curobo.util.logger"]], "log_error() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_error"]], "log_info() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_info"]], "log_warn() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_warn"]], "setup_curobo_logger() (in module curobo.util.logger)": [[79, "curobo.util.logger.setup_curobo_logger"]], "curobogroupmetrics (class in curobo.util.metrics)": [[80, "curobo.util.metrics.CuroboGroupMetrics"]], "curobometrics (class in curobo.util.metrics)": [[80, "curobo.util.metrics.CuroboMetrics"]], "cspace_path_length (curobo.util.metrics.curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.cspace_path_length"]], "cspace_path_length (curobo.util.metrics.curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.cspace_path_length"]], "curobo.util.metrics": [[80, "module-curobo.util.metrics"]], "from_list() (curobo.util.metrics.curobogroupmetrics class method)": [[80, "curobo.util.metrics.CuroboGroupMetrics.from_list"]], "jerk (curobo.util.metrics.curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.jerk"]], "jerk (curobo.util.metrics.curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.jerk"]], "perception_interpolated_success (curobo.util.metrics.curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.perception_interpolated_success"]], "perception_interpolated_success (curobo.util.metrics.curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.perception_interpolated_success"]], "perception_success (curobo.util.metrics.curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.perception_success"]], "perception_success (curobo.util.metrics.curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.perception_success"]], "time (curobo.util.metrics.curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.time"]], "time (curobo.util.metrics.curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.time"]], "basesamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.BaseSampleLib"]], "haltongenerator (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.HaltonGenerator"]], "haltonsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.HaltonSampleLib"]], "knotsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.KnotSampleLib"]], "randomsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.RandomSampleLib"]], "sampleconfig (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SampleConfig"]], "samplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SampleLib"]], "sinesamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SineSampleLib"]], "stompsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.StompSampleLib"]], "_get_samples() (curobo.util.sample_lib.haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator._get_samples"]], "bspline() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.bspline"]], "cov_mode (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.cov_mode"]], "covariance_matrix (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.covariance_matrix"]], "curobo.util.sample_lib": [[81, "module-curobo.util.sample_lib"]], "d_action (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.d_action"]], "degree (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.degree"]], "fast_forward() (curobo.util.sample_lib.haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.fast_forward"]], "filter_coeffs (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.filter_coeffs"]], "filter_samples() (curobo.util.sample_lib.basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.filter_samples"]], "filter_smooth() (curobo.util.sample_lib.basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.filter_smooth"]], "fixed_samples (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.fixed_samples"]], "generate_gaussian_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_gaussian_halton_samples"]], "generate_gaussian_sobol_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_gaussian_sobol_samples"]], "generate_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_halton_samples"]], "generate_noise() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_noise"]], "generate_noise_np() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_noise_np"]], "generate_prime_numbers() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_prime_numbers"]], "generate_sine_wave() (curobo.util.sample_lib.sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.generate_sine_wave"]], "generate_van_der_corput_sample() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_van_der_corput_sample"]], "generate_van_der_corput_samples_batch() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_van_der_corput_samples_batch"]], "get_gaussian_samples() (curobo.util.sample_lib.haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.get_gaussian_samples"]], "get_ranged_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.get_ranged_halton_samples"]], "get_samples() (curobo.util.sample_lib.basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.get_samples"]], "get_samples() (curobo.util.sample_lib.haltonsamplelib method)": [[81, "curobo.util.sample_lib.HaltonSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.knotsamplelib method)": [[81, "curobo.util.sample_lib.KnotSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.randomsamplelib method)": [[81, "curobo.util.sample_lib.RandomSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.samplelib method)": [[81, "curobo.util.sample_lib.SampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.stompsamplelib method)": [[81, "curobo.util.sample_lib.StompSampleLib.get_samples"]], "horizon (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.horizon"]], "n_knots (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.n_knots"]], "reset() (curobo.util.sample_lib.haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.reset"]], "sample_method (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sample_method"]], "sample_ratio (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sample_ratio"]], "scale_tril (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.scale_tril"]], "seed (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.seed"]], "sine_period (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sine_period"]], "tensor_args (curobo.util.sample_lib.sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.tensor_args"]], "filterconfig (class in curobo.util.state_filter)": [[82, "curobo.util.state_filter.FilterConfig"]], "jointstatefilter (class in curobo.util.state_filter)": [[82, "curobo.util.state_filter.JointStateFilter"]], "control_space (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.control_space"]], "curobo.util.state_filter": [[82, "module-curobo.util.state_filter"]], "dt (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.dt"]], "enable (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.enable"]], "filter_coeff (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.filter_coeff"]], "filter_joint_state() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.filter_joint_state"]], "from_dict() (curobo.util.state_filter.filterconfig static method)": [[82, "curobo.util.state_filter.FilterConfig.from_dict"]], "integrate_acc() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_acc"]], "integrate_jerk() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_jerk"]], "integrate_pos() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_pos"]], "integrate_vel() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_vel"]], "reset() (curobo.util.state_filter.jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.reset"]], "teleport_mode (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.teleport_mode"]], "tensor_args (curobo.util.state_filter.filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.tensor_args"]], "check_tensor_shapes() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.check_tensor_shapes"]], "clone_if_not_none() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.clone_if_not_none"]], "copy_if_not_none() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.copy_if_not_none"]], "copy_tensor() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.copy_tensor"]], "curobo.util.tensor_util": [[83, "module-curobo.util.tensor_util"]], "tensor_repeat_seeds() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.tensor_repeat_seeds"]], "curobo.util.torch_utils": [[84, "module-curobo.util.torch_utils"]], "disable_torch_compile_global() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.disable_torch_compile_global"]], "empty_decorator() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.empty_decorator"]], "find_first_idx() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.find_first_idx"]], "find_last_idx() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.find_last_idx"]], "get_torch_compile_options() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.get_torch_compile_options"]], "get_torch_jit_decorator() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.get_torch_jit_decorator"]], "is_cuda_graph_available() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.is_cuda_graph_available"]], "is_torch_compile_available() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.is_torch_compile_available"]], "set_torch_compile_global_options() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.set_torch_compile_global_options"]], "cubic (curobo.util.trajectory.interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.CUBIC"]], "interpolatetype (class in curobo.util.trajectory)": [[85, "curobo.util.trajectory.InterpolateType"]], "kunz_stilman_optimal (curobo.util.trajectory.interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.KUNZ_STILMAN_OPTIMAL"]], "linear (curobo.util.trajectory.interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.LINEAR"]], "linear_cuda (curobo.util.trajectory.interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.LINEAR_CUDA"]], "quintic (curobo.util.trajectory.interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.QUINTIC"]], "curobo.util.trajectory": [[85, "module-curobo.util.trajectory"]], "get_batch_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_batch_interpolated_trajectory"]], "get_cpu_kunz_stilman_interpolation() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_cpu_kunz_stilman_interpolation"]], "get_cpu_linear_interpolation() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_cpu_linear_interpolation"]], "get_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_interpolated_trajectory"]], "get_linear_traj() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_linear_traj"]], "get_smooth_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_smooth_trajectory"]], "get_spline_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_spline_interpolated_trajectory"]], "linear_smooth() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.linear_smooth"]], "usdhelper (class in curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.UsdHelper"]], "add_cuboid_to_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_cuboid_to_stage"]], "add_cylinder_to_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_cylinder_to_stage"]], "add_material() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_material"]], "add_mesh_to_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_mesh_to_stage"]], "add_sphere_to_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_sphere_to_stage"]], "add_subroot() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_subroot"]], "add_world_to_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_world_to_stage"]], "create_animation() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_animation"]], "create_grid_usd() (curobo.util.usd_helper.usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.create_grid_usd"]], "create_linkpose_robot_animation() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_linkpose_robot_animation"]], "create_obstacle_animation() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_obstacle_animation"]], "create_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_stage"]], "create_stage() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.create_stage"]], "curobo.util.usd_helper": [[86, "module-curobo.util.usd_helper"]], "get_capsule_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_capsule_attrs"]], "get_cube_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_cube_attrs"]], "get_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_cylinder_attrs"]], "get_mesh_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_mesh_attrs"]], "get_obstacle_from_prim() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_obstacle_from_prim"]], "get_obstacles_from_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_obstacles_from_stage"]], "get_pose() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_pose"]], "get_position_quat() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_position_quat"]], "get_prim_from_obstacle() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_prim_from_obstacle"]], "get_prim_world_pose() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_prim_world_pose"]], "get_robot_prims() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_robot_prims"]], "get_sphere_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_sphere_attrs"]], "get_transform() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_transform"]], "load_robot() (curobo.util.usd_helper.usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.load_robot"]], "load_robot_usd() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_robot_usd"]], "load_stage() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_stage"]], "load_stage_from_file() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_stage_from_file"]], "save() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.save"]], "set_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_cylinder_attrs"]], "set_geom_cube_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_cube_attrs"]], "set_geom_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_cylinder_attrs"]], "set_geom_mesh_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_mesh_attrs"]], "set_geom_sphere_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_sphere_attrs"]], "set_prim_transform() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_prim_transform"]], "set_prim_translate() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_prim_translate"]], "update_robot_joint_state() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.update_robot_joint_state"]], "write_motion_gen_log() (curobo.util.usd_helper.usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_motion_gen_log"]], "write_stage_to_file() (curobo.util.usd_helper.usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.write_stage_to_file"]], "write_trajectory_animation() (curobo.util.usd_helper.usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation"]], "write_trajectory_animation_with_robot_usd() (curobo.util.usd_helper.usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[87, "module-curobo.util.warp"]], "init_warp() (in module curobo.util.warp)": [[87, "curobo.util.warp.init_warp"]], "curobo.util.warp_interpolation": [[88, "module-curobo.util.warp_interpolation"]], "get_cuda_linear_interpolation() (in module curobo.util.warp_interpolation)": [[88, "curobo.util.warp_interpolation.get_cuda_linear_interpolation"]], "add_cpp_path() (in module curobo.util_file)": [[89, "curobo.util_file.add_cpp_path"]], "copy_file_to_path() (in module curobo.util_file)": [[89, "curobo.util_file.copy_file_to_path"]], "curobo.util_file": [[89, "module-curobo.util_file"]], "file_exists() (in module curobo.util_file)": [[89, "curobo.util_file.file_exists"]], "get_assets_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_assets_path"]], "get_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_configs_path"]], "get_content_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_content_path"]], "get_cpp_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_cpp_path"]], "get_debug_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_debug_path"]], "get_filename() (in module curobo.util_file)": [[89, "curobo.util_file.get_filename"]], "get_files_from_dir() (in module curobo.util_file)": [[89, "curobo.util_file.get_files_from_dir"]], "get_module_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_module_path"]], "get_motion_gen_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_motion_gen_robot_list"]], "get_multi_arm_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_multi_arm_robot_list"]], "get_path_of_dir() (in module curobo.util_file)": [[89, "curobo.util_file.get_path_of_dir"]], "get_robot_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_configs_path"]], "get_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_list"]], "get_robot_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_path"]], "get_root_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_root_path"]], "get_task_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_task_configs_path"]], "get_weights_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_weights_path"]], "get_world_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_world_configs_path"]], "join_path() (in module curobo.util_file)": [[89, "curobo.util_file.join_path"]], "load_yaml() (in module curobo.util_file)": [[89, "curobo.util_file.load_yaml"]], "write_yaml() (in module curobo.util_file)": [[89, "curobo.util_file.write_yaml"]], "curobo.wrap": [[90, "module-curobo.wrap"]], "curobo.wrap.model": [[91, "module-curobo.wrap.model"]], "curoborobotworld (class in curobo.wrap.model.curobo_robot_world)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld"]], "curoborobotworldconfig (class in curobo.wrap.model.curobo_robot_world)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig"]], "curobo.wrap.model.curobo_robot_world": [[92, "module-curobo.wrap.model.curobo_robot_world"]], "robotsegmenter (class in curobo.wrap.model.robot_segmenter)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter"]], "_call_op() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._call_op"]], "_create_cg_graph() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._create_cg_graph"]], "_mask_op() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._mask_op"]], "base_link (curobo.wrap.model.robot_segmenter.robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.base_link"]], "curobo.wrap.model.robot_segmenter": [[93, "module-curobo.wrap.model.robot_segmenter"]], "from_robot_file() (curobo.wrap.model.robot_segmenter.robotsegmenter static method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.from_robot_file"]], "get_pointcloud_from_depth() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_pointcloud_from_depth"]], "get_robot_mask() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask"]], "get_robot_mask_from_active_js() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask_from_active_js"]], "kinematics (curobo.wrap.model.robot_segmenter.robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.kinematics"]], "robot_world (curobo.wrap.model.robot_segmenter.robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.robot_world"]], "update_camera_projection() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.update_camera_projection"]], "robotworld (class in curobo.wrap.model.robot_world)": [[94, "curobo.wrap.model.robot_world.RobotWorld"]], "robotworldconfig (class in curobo.wrap.model.robot_world)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig"]], "bound_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_cost"]], "bound_scale (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_scale"]], "clear_world_cache() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.clear_world_cache"]], "collision_constraint (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_constraint"]], "collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_cost"]], "contact_distance (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.contact_distance"]], "curobo.wrap.model.robot_world": [[94, "module-curobo.wrap.model.robot_world"]], "get_active_js() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_active_js"]], "get_bound() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_bound"]], "get_collision_constraint() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_constraint"]], "get_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_distance"]], "get_collision_vector() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_vector"]], "get_kinematics() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_kinematics"]], "get_point_robot_distance() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_point_robot_distance"]], "get_self_collision() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision"]], "get_self_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision_distance"]], "get_world_self_collision_distance_from_joint_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joint_trajectory"]], "get_world_self_collision_distance_from_joints() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joints"]], "kinematics (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.kinematics"]], "load_from_config() (curobo.wrap.model.robot_world.robotworldconfig static method)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.load_from_config"]], "pose_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.pose_cost"]], "pose_distance() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.pose_distance"]], "rejection_ratio (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.rejection_ratio"]], "sample() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.sample"]], "sample_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.sample_trajectory"]], "sampler (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.sampler"]], "self_collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.self_collision_cost"]], "tensor_args (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.tensor_args"]], "update_world() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.update_world"]], "validate() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.validate"]], "validate_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.validate_trajectory"]], "world_model (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.world_model"]], "curobo.wrap.reacher": [[95, "module-curobo.wrap.reacher"]], "trajevaluator (class in curobo.wrap.reacher.evaluator)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator"]], "trajevaluatorconfig (class in curobo.wrap.reacher.evaluator)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig"]], "_check_smoothness() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator._check_smoothness"]], "_compute_path_length() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator._compute_path_length"]], "calculate_dt() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.calculate_dt"]], "cost_weight (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.cost_weight"]], "curobo.wrap.reacher.evaluator": [[96, "module-curobo.wrap.reacher.evaluator"]], "evaluate() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate"]], "evaluate_from_position() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_from_position"]], "evaluate_interpolated_smootheness() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_interpolated_smootheness"]], "max_acc (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_acc"]], "max_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_dt"]], "max_jerk (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_jerk"]], "min_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.min_dt"]], "ikresult (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKResult"]], "iksolver (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver"]], "iksolverconfig (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig"]], "_abc_impl (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult._abc_impl"]], "attach_object_to_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.attach_object_to_robot"]], "batch_env_solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.batch_env_solve"]], "check_constraints() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.check_constraints"]], "curobo.wrap.reacher.ik_solver": [[97, "module-curobo.wrap.reacher.ik_solver"]], "debug_info (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.detach_object_from_robot"]], "error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.error"]], "fk() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.fk"]], "generate_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.generate_seed"]], "get_all_kinematics_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_rollout_instances"]], "get_batch_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.get_batch_unique_solution"]], "get_result() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_result"]], "get_retract_config() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_retract_config"]], "get_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_seed"]], "get_success() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_success"]], "get_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.get_unique_solution"]], "goal_pose (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.goal_pose"]], "goalset_index (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.goalset_index"]], "ik_nn_seeder (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.ik_nn_seeder"]], "js_solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.js_solution"]], "kinematics (curobo.wrap.reacher.ik_solver.iksolver property)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.ik_solver.iksolverconfig static method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.load_from_robot_config"]], "num_seeds (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.num_seeds"]], "position_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.position_error"]], "position_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.position_threshold"]], "reset_cuda_graph() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_seed"]], "reset_shape() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_shape"]], "robot_config (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rotation_threshold"]], "sample_configs() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.sample_configs"]], "sample_rejection_ratio (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.sample_rejection_ratio"]], "seed (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.seed"]], "solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.solution"]], "solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve"]], "solve_any() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_single"]], "solve_time (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.solve_time"]], "solver (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.solver"]], "success (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.success"]], "tensor_args (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.tensor_args"]], "update_goal_buffer() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.update_goal_buffer"]], "update_pose_cost_metric() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.update_pose_cost_metric"]], "update_world() (curobo.wrap.reacher.ik_solver.iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.update_world"]], "use_cuda_graph (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.use_cuda_graph"]], "world_coll_checker (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.world_coll_checker"]], "motiongen (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen"]], "motiongenconfig (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig"]], "motiongenplanconfig (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig"]], "motiongenresult (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult"]], "_check_none_and_copy_idx() (curobo.wrap.reacher.motion_gen.motiongenresult static method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult._check_none_and_copy_idx"]], "_get_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._get_solve_state"]], "_plan_attempts() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_attempts"]], "_plan_batch_attempts() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_batch_attempts"]], "_plan_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state"]], "_plan_from_solve_state_batch() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state_batch"]], "_plan_js_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_js_from_solve_state"]], "_solve_ik_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._solve_ik_from_solve_state"]], "_solve_trajopt_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._solve_trajopt_from_solve_state"]], "add_camera_frame() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.add_camera_frame"]], "add_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.add_running_pose_constraint"]], "attach_bounding_box_from_blox_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_bounding_box_from_blox_to_robot"]], "attach_external_objects_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_external_objects_to_robot"]], "attach_new_object_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_new_object_to_robot"]], "attach_objects_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_objects_to_robot"]], "attach_spheres_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_spheres_to_robot"]], "attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.attempts"]], "batch_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_ik_seeds"]], "batch_plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.batch_plan"]], "batch_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_trajopt_seeds"]], "check_constraints() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.check_constraints"]], "clear_world_cache() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.clear_world_cache"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenplanconfig method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.clone"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.clone"]], "compute_kinematics() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.compute_kinematics"]], "copy_idx() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.copy_idx"]], "cspace_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.cspace_error"]], "curobo.wrap.reacher.motion_gen": [[98, "module-curobo.wrap.reacher.motion_gen"]], "debug_info (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.detach_object_from_robot"]], "detach_spheres_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.detach_spheres_from_robot"]], "disable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.disable_graph_attempt"]], "dof (curobo.wrap.reacher.motion_gen.motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.dof"]], "enable_finetune_trajopt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_finetune_trajopt"]], "enable_graph (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph"]], "enable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph_attempt"]], "enable_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_opt"]], "fail_on_invalid_query (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.fail_on_invalid_query"]], "finetune_dt_scale (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_dt_scale"]], "finetune_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.finetune_time"]], "finetune_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_trajopt_solver"]], "get_active_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_active_js"]], "get_all_kinematics_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_kinematics_instances"]], "get_all_pose_solver_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_pose_solver_rollout_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_rollout_instances"]], "get_all_solver_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_solver_rollout_instances"]], "get_full_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_full_js"]], "get_interpolated_plan() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_interpolated_plan"]], "get_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_paths"]], "get_retract_config() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_retract_config"]], "get_successful_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_successful_paths"]], "goalset_index (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.goalset_index"]], "graph_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_plan"]], "graph_planner (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_planner"]], "graph_search() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.graph_search"]], "graph_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_seeds"]], "graph_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_time"]], "graph_trajopt_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_trajopt_iters"]], "ik_fail_return (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.ik_fail_return"]], "ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_seeds"]], "ik_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_solver"]], "ik_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.ik_time"]], "interpolated_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolated_plan"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_dt"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_type"]], "js_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.js_trajopt_solver"]], "kinematics (curobo.wrap.reacher.motion_gen.motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.motion_gen.motiongenconfig static method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.load_from_robot_config"]], "max_attempts (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.max_attempts"]], "motion_time (curobo.wrap.reacher.motion_gen.motiongenresult property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.motion_time"]], "need_graph_success (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.need_graph_success"]], "noisy_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.noisy_trajopt_seeds"]], "num_graph_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_ik_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_trajopt_seeds"]], "optimized_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_dt"]], "optimized_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_plan"]], "parallel_finetune (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.parallel_finetune"]], "partial_ik_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.partial_ik_iters"]], "partial_ik_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.partial_ik_opt"]], "path_buffer_last_tstep (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.path_buffer_last_tstep"]], "plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan"]], "plan_batch() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch"]], "plan_batch_env() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env"]], "plan_batch_env_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env_goalset"]], "plan_batch_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_goalset"]], "plan_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_goalset"]], "plan_single() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single"]], "plan_single_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single_js"]], "pose_cost_metric (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.pose_cost_metric"]], "position_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.position_error"]], "process_camera_frames() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.process_camera_frames"]], "project_pose_to_goal_frame (curobo.wrap.reacher.motion_gen.motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.project_pose_to_goal_frame"]], "remove_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.remove_running_pose_constraint"]], "reset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.reset"]], "reset_seed() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.reset_seed"]], "robot_cfg (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.robot_cfg"]], "rotation_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.rotation_error"]], "run_finetune_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.run_finetune_trajopt"]], "solve_ik() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.solve_ik"]], "solve_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.solve_time"]], "solve_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.solve_trajopt"]], "status (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.status"]], "store_debug_in_result (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.success"]], "success_ratio (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.success_ratio"]], "tensor_args (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.tensor_args"]], "timeout (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.timeout"]], "total_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.total_time"]], "trajopt_attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_attempts"]], "trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_seeds"]], "trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_solver"]], "trajopt_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_time"]], "update_batch_size() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_batch_size"]], "update_interpolation_type() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_interpolation_type"]], "update_locked_joints() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_locked_joints"]], "update_pose_cost_metric() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_pose_cost_metric"]], "update_world() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_world"]], "use_cuda_graph (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.use_cuda_graph"]], "use_nn_ik_seed (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_nn_ik_seed"]], "use_start_state_as_retract (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_start_state_as_retract"]], "used_graph (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.used_graph"]], "valid_query (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.valid_query"]], "warmup() (curobo.wrap.reacher.motion_gen.motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.warmup"]], "world_coll_checker (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.motion_gen.motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.world_collision"]], "world_model (curobo.wrap.reacher.motion_gen.motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.world_model"]], "mpcsolver (class in curobo.wrap.reacher.mpc)": [[99, "curobo.wrap.reacher.mpc.MpcSolver"]], "mpcsolverconfig (class in curobo.wrap.reacher.mpc)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig"]], "_initialize_cuda_graph_step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._initialize_cuda_graph_step"]], "_solve_from_solve_state() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._solve_from_solve_state"]], "_step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._step"]], "_update_batch_size() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._update_batch_size"]], "curobo.wrap.reacher.mpc": [[99, "module-curobo.wrap.reacher.mpc"]], "enable_cspace_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.enable_cspace_cost"]], "enable_pose_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.enable_pose_cost"]], "fn() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.fn"]], "get_active_js() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.get_active_js"]], "get_visual_rollouts() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.get_visual_rollouts"]], "joint_names (curobo.wrap.reacher.mpc.mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.joint_names"]], "kinematics (curobo.wrap.reacher.mpc.mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.mpc.mpcsolverconfig static method)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.load_from_robot_config"]], "reset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.reset"]], "reset_cuda_graph() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.reset_cuda_graph"]], "rollout_fn (curobo.wrap.reacher.mpc.mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.rollout_fn"]], "setup_solve_batch() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch"]], "setup_solve_batch_env() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env"]], "setup_solve_batch_env_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env_goalset"]], "setup_solve_batch_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_goalset"]], "setup_solve_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_goalset"]], "setup_solve_single() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_single"]], "solver (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.solver"]], "step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.step"]], "step_once() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.step_once"]], "tensor_args (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.tensor_args"]], "update_goal() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.update_goal_buffer"]], "update_world() (curobo.wrap.reacher.mpc.mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.update_world"]], "use_cuda_graph_full_step (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.use_cuda_graph_full_step"]], "world_coll_checker (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.mpc.mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.world_collision"]], "trajoptsolver (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver"]], "trajoptsolverconfig (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig"]], "trajresult (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajResult"]], "_abc_impl (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult._abc_impl"]], "_get_result() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_result"]], "_get_seed_numbers() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_seed_numbers"]], "attach_object_to_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.attach_object_to_robot"]], "batch_solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.batch_solve"]], "bias_node (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.bias_node"]], "calculate_trajectory_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.calculate_trajectory_dt"]], "compute_metrics() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.compute_metrics"]], "cspace_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.cspace_error"]], "cspace_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.cspace_threshold"]], "curobo.wrap.reacher.trajopt": [[100, "module-curobo.wrap.reacher.trajopt"]], "debug_info (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.detach_object_from_robot"]], "evaluate_interpolated_trajectory (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.evaluate_interpolated_trajectory"]], "fk() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.fk"]], "get_all_kinematics_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_rollout_instances"]], "get_bias_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_bias_seed"]], "get_full_js() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_full_js"]], "get_interpolated_trajectory() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_interpolated_trajectory"]], "get_linear_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_linear_seed"]], "get_seed_set() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seed_set"]], "get_seeds() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seeds"]], "get_start_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_start_seed"]], "goal (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.goal"]], "goalset_index (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.goalset_index"]], "interpolate_rollout (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolate_rollout"]], "interpolated_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.interpolated_solution"]], "interpolation_dt (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_type"]], "jit_trajopt_best_select() (in module curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.jit_trajopt_best_select"]], "kinematics (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.trajopt.trajoptsolverconfig static method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.load_from_robot_config"]], "metrics (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.metrics"]], "num_seeds (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.num_seeds"]], "optimize_dt (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.optimize_dt"]], "optimized_dt (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.optimized_dt"]], "path_buffer_last_tstep (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.path_buffer_last_tstep"]], "position_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.position_error"]], "position_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.position_threshold"]], "raw_action (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.raw_action"]], "raw_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.raw_solution"]], "reset_cuda_graph() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_seed"]], "reset_shape() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_shape"]], "retract_config (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.retract_config"]], "robot_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rotation_threshold"]], "seed (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.seed"]], "seed_ratio (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.seed_ratio"]], "smooth_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.smooth_error"]], "smooth_label (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.smooth_label"]], "solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.solution"]], "solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve"]], "solve_any() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_single"]], "solve_time (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.solve_time"]], "solver (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.solver"]], "solver_dt (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt"]], "solver_dt_tensor (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt_tensor"]], "store_debug_in_result (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.trajopt.trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.success"]], "sync_cuda_time (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.sync_cuda_time"]], "tensor_args (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.tensor_args"]], "traj_evaluator (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator"]], "traj_evaluator_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator_config"]], "traj_tsteps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_tsteps"]], "trim_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.trim_steps"]], "update_goal_buffer() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_goal_buffer"]], "update_pose_cost_metric() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_pose_cost_metric"]], "update_solver_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_solver_dt"]], "use_cspace_seed (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cspace_seed"]], "use_cuda_graph (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph"]], "use_cuda_graph_metrics (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph_metrics"]], "world_coll_checker (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.world_coll_checker"]], "batch (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH"]], "batch_env (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV"]], "batch_env_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV_GOALSET"]], "batch_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_GOALSET"]], "goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.GOALSET"]], "motiongensolverstate (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState"]], "reachersolvestate (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.ReacherSolveState"]], "reachersolvetype (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.ReacherSolveType"]], "single (curobo.wrap.reacher.types.reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.SINGLE"]], "batch_env (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_env"]], "batch_mode (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_mode"]], "batch_retract (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_retract"]], "batch_size (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_size"]], "clone() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.clone"]], "create_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.create_goal_buffer"]], "curobo.wrap.reacher.types": [[101, "module-curobo.wrap.reacher.types"]], "get_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.get_batch_size"]], "get_ik_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.get_ik_batch_size"]], "get_padded_goalset() (in module curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.get_padded_goalset"]], "ik_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.ik_solve_state"]], "n_envs (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.n_envs"]], "n_goalset (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.n_goalset"]], "num_graph_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_ik_seeds"]], "num_mpc_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_mpc_seeds"]], "num_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_trajopt_seeds"]], "solve_type (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.solve_type"]], "solve_type (curobo.wrap.reacher.types.reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.solve_type"]], "trajopt_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.trajopt_solve_state"]], "update_goal() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.update_goal_buffer"]], "wrapbase (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapBase"]], "wrapconfig (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapConfig"]], "wrapresult (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapResult"]], "_get_rollout_instances_from_optimizers() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase._get_rollout_instances_from_optimizers"]], "action (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.action"]], "clone() (curobo.wrap.wrap_base.wrapresult method)": [[102, "curobo.wrap.wrap_base.WrapResult.clone"]], "compute_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.compute_metrics"]], "curobo.wrap.wrap_base": [[102, "module-curobo.wrap.wrap_base"]], "debug (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.debug"]], "get_all_rollout_instances() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_all_rollout_instances"]], "get_debug_cost() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_debug_cost"]], "get_debug_data() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_debug_data"]], "get_init_act() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_init_act"]], "get_metrics() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_metrics"]], "joint_names (curobo.wrap.wrap_base.wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.joint_names"]], "js_action (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.js_action"]], "metrics (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.metrics"]], "newton_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.newton_optimizer"]], "optimize() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.optimize"]], "optimizers (curobo.wrap.wrap_base.wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.optimizers"]], "particle_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.particle_optimizer"]], "raw_action (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.raw_action"]], "reset() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset"]], "reset_cuda_graph() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_cuda_graph"]], "reset_seed() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_seed"]], "reset_shape() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_shape"]], "rollout_fn (curobo.wrap.wrap_base.wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.rollout_fn"]], "safety_rollout (curobo.wrap.wrap_base.wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.safety_rollout"]], "solve() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.solve"]], "solve_time (curobo.wrap.wrap_base.wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.solve_time"]], "sync_cuda_time (curobo.wrap.wrap_base.wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.sync_cuda_time"]], "update_nproblems() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.update_nproblems"]], "update_params() (curobo.wrap.wrap_base.wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.update_params"]], "use_cuda_graph_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.use_cuda_graph_metrics"]], "wrapmpc (class in curobo.wrap.wrap_mpc)": [[103, "curobo.wrap.wrap_mpc.WrapMpc"]], "_shift() (curobo.wrap.wrap_mpc.wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc._shift"]], "curobo.wrap.wrap_mpc": [[103, "module-curobo.wrap.wrap_mpc"]], "get_rollouts() (curobo.wrap.wrap_mpc.wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_rollouts"]], "reset() (curobo.wrap.wrap_mpc.wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.reset"]], "solve() (curobo.wrap.wrap_mpc.wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.solve"]], "update_init_seed() (curobo.wrap.wrap_mpc.wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.update_init_seed"]]}})
Search.setIndex({"docnames": ["_api/curobo", "_api/curobo.cuda_robot_model", "_api/curobo.cuda_robot_model.cuda_robot_generator", "_api/curobo.cuda_robot_model.cuda_robot_model", "_api/curobo.cuda_robot_model.kinematics_parser", "_api/curobo.cuda_robot_model.types", "_api/curobo.cuda_robot_model.urdf_kinematics_parser", "_api/curobo.cuda_robot_model.usd_kinematics_parser", "_api/curobo.curobolib", "_api/curobo.curobolib.geom", "_api/curobo.curobolib.geom_cu", "_api/curobo.curobolib.kinematics", "_api/curobo.curobolib.kinematics_fused_cu", "_api/curobo.curobolib.lbfgs_step_cu", "_api/curobo.curobolib.line_search_cu", "_api/curobo.curobolib.ls", "_api/curobo.curobolib.opt", "_api/curobo.curobolib.tensor_step", "_api/curobo.curobolib.tensor_step_cu", "_api/curobo.curobolib.util_file", "_api/curobo.geom", "_api/curobo.geom.cv", "_api/curobo.geom.sdf", "_api/curobo.geom.sdf.sdf_grid", "_api/curobo.geom.sdf.utils", "_api/curobo.geom.sdf.warp_primitives", "_api/curobo.geom.sdf.world", "_api/curobo.geom.sdf.world_blox", "_api/curobo.geom.sdf.world_mesh", "_api/curobo.geom.sdf.world_voxel", "_api/curobo.geom.sphere_fit", "_api/curobo.geom.transform", "_api/curobo.geom.types", "_api/curobo.graph", "_api/curobo.graph.graph_base", "_api/curobo.graph.graph_nx", "_api/curobo.graph.prm", "_api/curobo.opt", "_api/curobo.opt.newton", "_api/curobo.opt.newton.lbfgs", "_api/curobo.opt.newton.newton_base", "_api/curobo.opt.opt_base", "_api/curobo.opt.particle", "_api/curobo.opt.particle.parallel_es", "_api/curobo.opt.particle.parallel_mppi", "_api/curobo.opt.particle.particle_opt_base", "_api/curobo.opt.particle.particle_opt_utils", "_api/curobo.rollout", "_api/curobo.rollout.arm_base", "_api/curobo.rollout.arm_reacher", "_api/curobo.rollout.cost", "_api/curobo.rollout.cost.bound_cost", "_api/curobo.rollout.cost.cost_base", "_api/curobo.rollout.cost.dist_cost", "_api/curobo.rollout.cost.manipulability_cost", "_api/curobo.rollout.cost.pose_cost", "_api/curobo.rollout.cost.primitive_collision_cost", "_api/curobo.rollout.cost.projected_dist_cost", "_api/curobo.rollout.cost.self_collision_cost", "_api/curobo.rollout.cost.stop_cost", "_api/curobo.rollout.cost.straight_line_cost", "_api/curobo.rollout.cost.zero_cost", "_api/curobo.rollout.dynamics_model", "_api/curobo.rollout.dynamics_model.integration_utils", "_api/curobo.rollout.dynamics_model.kinematic_model", "_api/curobo.rollout.dynamics_model.model_base", "_api/curobo.rollout.dynamics_model.tensor_step", "_api/curobo.rollout.rollout_base", "_api/curobo.types", "_api/curobo.types.base", "_api/curobo.types.camera", "_api/curobo.types.enum", "_api/curobo.types.math", "_api/curobo.types.robot", "_api/curobo.types.state", "_api/curobo.types.tensor", "_api/curobo.util", "_api/curobo.util.error_metrics", "_api/curobo.util.helpers", "_api/curobo.util.logger", "_api/curobo.util.metrics", "_api/curobo.util.sample_lib", "_api/curobo.util.state_filter", "_api/curobo.util.tensor_util", "_api/curobo.util.torch_utils", "_api/curobo.util.trajectory", "_api/curobo.util.usd_helper", "_api/curobo.util.warp", "_api/curobo.util.warp_interpolation", "_api/curobo.util_file", "_api/curobo.wrap", "_api/curobo.wrap.model", "_api/curobo.wrap.model.curobo_robot_world", "_api/curobo.wrap.model.robot_segmenter", "_api/curobo.wrap.model.robot_world", "_api/curobo.wrap.reacher", "_api/curobo.wrap.reacher.evaluator", "_api/curobo.wrap.reacher.ik_solver", "_api/curobo.wrap.reacher.motion_gen", "_api/curobo.wrap.reacher.mpc", "_api/curobo.wrap.reacher.trajopt", "_api/curobo.wrap.reacher.types", "_api/curobo.wrap.wrap_base", "_api/curobo.wrap.wrap_mpc", "_api/modules", "advanced_examples/1_batch_env", "advanced_examples/2_block_stacking_example", "advanced_examples/3_constrained_planning", "advanced_examples/4_robot_segmentation", "advanced_examples_index", "developer_notes_index", "get_started/1_install_instructions", "get_started/1a_quick_overview", "get_started/2a_python_examples", "get_started/2b_isaacsim_examples", "get_started/2c_world_collision", "get_started/2d_nvblox_demo", "get_started/2e_torch_layer_example", "get_started/4_benchmarks", "get_started/5_docker_development", "get_started/6_known_issues", "get_started/7_api", "get_started_index", "index", "news", "notes/01_robot_list", "notes/02_numerical_optimization", "notes/03_performance_tuning", "notes/04_cuda_kernels", "notes/05_usd_api", "notes/07_environment_variables", "readme", "research/research", "research/research_using_curobo", "research_index", "snippets/citation", "snippets/research_list", "source/api/motion_generation", "source/api/reacher", "tutorials/1_robot_configuration", "tutorials_index"], "filenames": ["_api/curobo.rst", "_api/curobo.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.cuda_robot_generator.rst", "_api/curobo.cuda_robot_model.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.kinematics_parser.rst", "_api/curobo.cuda_robot_model.types.rst", "_api/curobo.cuda_robot_model.urdf_kinematics_parser.rst", "_api/curobo.cuda_robot_model.usd_kinematics_parser.rst", "_api/curobo.curobolib.rst", "_api/curobo.curobolib.geom.rst", "_api/curobo.curobolib.geom_cu.rst", "_api/curobo.curobolib.kinematics.rst", "_api/curobo.curobolib.kinematics_fused_cu.rst", "_api/curobo.curobolib.lbfgs_step_cu.rst", "_api/curobo.curobolib.line_search_cu.rst", "_api/curobo.curobolib.ls.rst", "_api/curobo.curobolib.opt.rst", "_api/curobo.curobolib.tensor_step.rst", "_api/curobo.curobolib.tensor_step_cu.rst", "_api/curobo.curobolib.util_file.rst", "_api/curobo.geom.rst", "_api/curobo.geom.cv.rst", "_api/curobo.geom.sdf.rst", "_api/curobo.geom.sdf.sdf_grid.rst", "_api/curobo.geom.sdf.utils.rst", "_api/curobo.geom.sdf.warp_primitives.rst", "_api/curobo.geom.sdf.world.rst", "_api/curobo.geom.sdf.world_blox.rst", "_api/curobo.geom.sdf.world_mesh.rst", "_api/curobo.geom.sdf.world_voxel.rst", "_api/curobo.geom.sphere_fit.rst", "_api/curobo.geom.transform.rst", "_api/curobo.geom.types.rst", "_api/curobo.graph.rst", "_api/curobo.graph.graph_base.rst", "_api/curobo.graph.graph_nx.rst", "_api/curobo.graph.prm.rst", "_api/curobo.opt.rst", "_api/curobo.opt.newton.rst", "_api/curobo.opt.newton.lbfgs.rst", "_api/curobo.opt.newton.newton_base.rst", "_api/curobo.opt.opt_base.rst", "_api/curobo.opt.particle.rst", "_api/curobo.opt.particle.parallel_es.rst", "_api/curobo.opt.particle.parallel_mppi.rst", "_api/curobo.opt.particle.particle_opt_base.rst", "_api/curobo.opt.particle.particle_opt_utils.rst", "_api/curobo.rollout.rst", "_api/curobo.rollout.arm_base.rst", "_api/curobo.rollout.arm_reacher.rst", "_api/curobo.rollout.cost.rst", "_api/curobo.rollout.cost.bound_cost.rst", "_api/curobo.rollout.cost.cost_base.rst", "_api/curobo.rollout.cost.dist_cost.rst", "_api/curobo.rollout.cost.manipulability_cost.rst", "_api/curobo.rollout.cost.pose_cost.rst", "_api/curobo.rollout.cost.primitive_collision_cost.rst", "_api/curobo.rollout.cost.projected_dist_cost.rst", "_api/curobo.rollout.cost.self_collision_cost.rst", "_api/curobo.rollout.cost.stop_cost.rst", "_api/curobo.rollout.cost.straight_line_cost.rst", "_api/curobo.rollout.cost.zero_cost.rst", "_api/curobo.rollout.dynamics_model.rst", "_api/curobo.rollout.dynamics_model.integration_utils.rst", "_api/curobo.rollout.dynamics_model.kinematic_model.rst", "_api/curobo.rollout.dynamics_model.model_base.rst", "_api/curobo.rollout.dynamics_model.tensor_step.rst", "_api/curobo.rollout.rollout_base.rst", "_api/curobo.types.rst", "_api/curobo.types.base.rst", "_api/curobo.types.camera.rst", "_api/curobo.types.enum.rst", "_api/curobo.types.math.rst", "_api/curobo.types.robot.rst", "_api/curobo.types.state.rst", "_api/curobo.types.tensor.rst", "_api/curobo.util.rst", "_api/curobo.util.error_metrics.rst", "_api/curobo.util.helpers.rst", "_api/curobo.util.logger.rst", "_api/curobo.util.metrics.rst", "_api/curobo.util.sample_lib.rst", "_api/curobo.util.state_filter.rst", "_api/curobo.util.tensor_util.rst", "_api/curobo.util.torch_utils.rst", "_api/curobo.util.trajectory.rst", "_api/curobo.util.usd_helper.rst", "_api/curobo.util.warp.rst", "_api/curobo.util.warp_interpolation.rst", "_api/curobo.util_file.rst", "_api/curobo.wrap.rst", "_api/curobo.wrap.model.rst", "_api/curobo.wrap.model.curobo_robot_world.rst", "_api/curobo.wrap.model.robot_segmenter.rst", "_api/curobo.wrap.model.robot_world.rst", "_api/curobo.wrap.reacher.rst", "_api/curobo.wrap.reacher.evaluator.rst", "_api/curobo.wrap.reacher.ik_solver.rst", "_api/curobo.wrap.reacher.motion_gen.rst", "_api/curobo.wrap.reacher.mpc.rst", "_api/curobo.wrap.reacher.trajopt.rst", "_api/curobo.wrap.reacher.types.rst", "_api/curobo.wrap.wrap_base.rst", "_api/curobo.wrap.wrap_mpc.rst", "_api/modules.rst", "advanced_examples/1_batch_env.rst", "advanced_examples/2_block_stacking_example.rst", "advanced_examples/3_constrained_planning.rst", "advanced_examples/4_robot_segmentation.rst", "advanced_examples_index.rst", "developer_notes_index.rst", "get_started/1_install_instructions.rst", "get_started/1a_quick_overview.rst", "get_started/2a_python_examples.rst", "get_started/2b_isaacsim_examples.rst", "get_started/2c_world_collision.rst", "get_started/2d_nvblox_demo.rst", "get_started/2e_torch_layer_example.rst", "get_started/4_benchmarks.rst", "get_started/5_docker_development.rst", "get_started/6_known_issues.rst", "get_started/7_api.rst", "get_started_index.rst", "index.rst", "news.rst", "notes/01_robot_list.rst", "notes/02_numerical_optimization.rst", "notes/03_performance_tuning.rst", "notes/04_cuda_kernels.rst", "notes/05_usd_api.rst", "notes/07_environment_variables.rst", "readme.rst", "research/research.rst", "research/research_using_curobo.rst", "research_index.rst", "snippets/citation.rst", "snippets/research_list.rst", "source/api/motion_generation.rst", "source/api/reacher.rst", "tutorials/1_robot_configuration.rst", "tutorials_index.rst"], "titles": ["curobo package", "curobo.cuda_robot_model package", "curobo.cuda_robot_model.cuda_robot_generator module", "curobo.cuda_robot_model.cuda_robot_model module", "curobo.cuda_robot_model.kinematics_parser module", "curobo.cuda_robot_model.types module", "curobo.cuda_robot_model.urdf_kinematics_parser module", "curobo.cuda_robot_model.usd_kinematics_parser module", "curobo.curobolib package", "curobo.curobolib.geom module", "curobo.curobolib.geom_cu module", "curobo.curobolib.kinematics module", "curobo.curobolib.kinematics_fused_cu module", "curobo.curobolib.lbfgs_step_cu module", "curobo.curobolib.line_search_cu module", "curobo.curobolib.ls module", "curobo.curobolib.opt module", "curobo.curobolib.tensor_step module", "curobo.curobolib.tensor_step_cu module", "curobo.curobolib.util_file module", "curobo.geom package", "curobo.geom.cv module", "curobo.geom.sdf package", "curobo.geom.sdf.sdf_grid module", "curobo.geom.sdf.utils module", "curobo.geom.sdf.warp_primitives module", "curobo.geom.sdf.world module", "curobo.geom.sdf.world_blox module", "curobo.geom.sdf.world_mesh module", "curobo.geom.sdf.world_voxel module", "curobo.geom.sphere_fit module", "curobo.geom.transform module", "curobo.geom.types module", "curobo.graph package", "curobo.graph.graph_base module", "curobo.graph.graph_nx module", "curobo.graph.prm module", "curobo.opt package", "curobo.opt.newton package", "curobo.opt.newton.lbfgs module", "curobo.opt.newton.newton_base module", "curobo.opt.opt_base module", "curobo.opt.particle package", "curobo.opt.particle.parallel_es module", "curobo.opt.particle.parallel_mppi module", "curobo.opt.particle.particle_opt_base module", "curobo.opt.particle.particle_opt_utils module", "curobo.rollout package", "curobo.rollout.arm_base module", "curobo.rollout.arm_reacher module", "curobo.rollout.cost package", "curobo.rollout.cost.bound_cost module", "curobo.rollout.cost.cost_base module", "curobo.rollout.cost.dist_cost module", "curobo.rollout.cost.manipulability_cost module", "curobo.rollout.cost.pose_cost module", "curobo.rollout.cost.primitive_collision_cost module", "curobo.rollout.cost.projected_dist_cost module", "curobo.rollout.cost.self_collision_cost module", "curobo.rollout.cost.stop_cost module", "curobo.rollout.cost.straight_line_cost module", "curobo.rollout.cost.zero_cost module", "curobo.rollout.dynamics_model package", "curobo.rollout.dynamics_model.integration_utils module", "curobo.rollout.dynamics_model.kinematic_model module", "curobo.rollout.dynamics_model.model_base module", "curobo.rollout.dynamics_model.tensor_step module", "curobo.rollout.rollout_base module", "curobo.types package", "curobo.types.base module", "curobo.types.camera module", "curobo.types.enum module", "curobo.types.math module", "curobo.types.robot module", "curobo.types.state module", "curobo.types.tensor module", "curobo.util package", "curobo.util.error_metrics module", "curobo.util.helpers module", "curobo.util.logger module", "curobo.util.metrics module", "curobo.util.sample_lib module", "curobo.util.state_filter module", "curobo.util.tensor_util module", "curobo.util.torch_utils module", "curobo.util.trajectory module", "curobo.util.usd_helper module", "curobo.util.warp module", "curobo.util.warp_interpolation module", "curobo.util_file module", "curobo.wrap package", "curobo.wrap.model package", "curobo.wrap.model.curobo_robot_world module", "curobo.wrap.model.robot_segmenter module", "curobo.wrap.model.robot_world module", "curobo.wrap.reacher package", "curobo.wrap.reacher.evaluator module", "curobo.wrap.reacher.ik_solver module", "curobo.wrap.reacher.motion_gen module", "curobo.wrap.reacher.mpc module", "curobo.wrap.reacher.trajopt module", "curobo.wrap.reacher.types module", "curobo.wrap.wrap_base module", "curobo.wrap.wrap_mpc module", "curobo", "Batched Environments", "Block Stacking", "Constrained Planning", "Robot Segmentation", "Advanced Examples", "Developer Notes", "Installation", "Basics", "Using in Python", "Using with Isaac Sim", "Collision World Representation", "Using with Depth Camera", "Using in a Neural Network", "Benchmarks &amp; Profiling", "Docker Development", "Known Issues", "Python API", "Get Started", "cuRobo: CUDA Accelerated Robot Library", "Updates", "Supported Robots", "Numerical Optimization", "Performance Tuning", "CUDA Notes", "USD for Robot and World Representation", "Environment Variables", "cuRobo: CUDA Accelerated Robot Library", "Technical Report", "Research using cuRobo", "Research", "&lt;no title&gt;", "&lt;no title&gt;", "Motion Generation", "Reacher", "Configuring a New Robot", "Tutorials"], "terms": {"provid": [0, 1, 27, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 97, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 131, 139], "acceler": [0, 1, 3, 5, 18, 48, 49, 56, 62, 64, 66, 68, 71, 74, 82, 85, 96, 98, 100, 113, 114, 115, 121, 132, 133, 136], "modul": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95, 104, 117, 121, 133], "robot": [0, 1, 2, 3, 5, 7, 20, 22, 48, 56, 64, 68, 85, 86, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 124, 133, 135, 136, 140], "which": [0, 1, 5, 9, 11, 16, 23, 25, 28, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 88, 97, 98, 99, 100, 101, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 121, 125, 128, 129, 139], "can": [0, 1, 2, 9, 11, 16, 20, 22, 23, 25, 26, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 79, 92, 94, 97, 98, 99, 100, 101, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 128, 129, 131, 132, 133, 139], "us": [0, 1, 2, 4, 5, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 79, 81, 85, 88, 92, 94, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 112, 115, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 134, 139], "build": [0, 4, 6, 7, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 113, 116, 117, 121, 123, 139], "high": [0, 90, 95, 98, 99, 100, 116, 121, 123, 124, 131], "perform": [0, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 88, 100, 105, 110, 114, 115, 121, 123, 131, 132, 139], "applic": [0, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 90, 97, 114, 121, 129], "The": [0, 9, 11, 16, 22, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 106, 107, 108, 114, 115, 116, 117, 119, 121, 126, 139], "librari": [0, 27, 28, 106, 114, 117, 119, 120, 121, 128, 132], "ha": [0, 9, 11, 16, 23, 25, 26, 31, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 92, 94, 97, 98, 100, 101, 111, 113, 114, 115, 118, 121, 125, 128, 139], "sever": [0, 1, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 112, 115, 121], "numer": [0, 37, 98, 99, 100, 110, 121, 123, 131], "optim": [0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 85, 90, 96, 97, 98, 99, 100, 101, 102, 103, 107, 110, 112, 113, 114, 115, 117, 121, 123, 128, 131, 132], "kinemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 47, 48, 49, 68, 73, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 108, 112, 117, 120, 121, 123, 125, 129, 131, 137, 139], "geometri": [0, 2, 3, 5, 7, 30, 97, 98, 106, 108, 112, 117, 121, 123, 139], "process": [0, 20, 22, 32, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 81, 98, 107, 115, 121], "collis": [0, 2, 3, 5, 10, 20, 22, 26, 27, 28, 56, 76, 80, 92, 94, 97, 98, 99, 100, 106, 112, 117, 120, 121, 122, 123, 124, 125, 129, 131, 133, 135, 136], "check": [0, 2, 5, 9, 11, 16, 20, 22, 23, 25, 27, 31, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 96, 97, 98, 99, 100, 108, 111, 121, 123, 125, 126, 130, 131, 139], "graph": [0, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 48, 49, 51, 53, 61, 63, 72, 97, 98, 99, 100, 101, 104, 105, 106, 108, 112, 113, 114, 118, 120, 121, 126], "search": [0, 14, 37, 39, 40, 41, 43, 44, 45, 98, 101, 121, 126, 132], "plan": [0, 2, 33, 34, 95, 97, 98, 99, 100, 109, 116, 120, 121, 123, 124, 131, 133, 136, 139], "level": [0, 79, 90, 95, 98, 99, 100, 121, 123, 124, 128, 131], "api": [0, 27, 79, 90, 95, 97, 98, 116, 122, 123, 124, 129, 131, 137], "task": [0, 97, 100, 106, 107, 113, 114, 115, 121, 123, 131, 138], "like": [0, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 121, 139], "free": [0, 97, 98, 113, 117, 118, 120, 121, 123, 133, 135, 136, 139], "invers": [0, 68, 72, 86, 97, 98, 101, 117, 121, 123, 131, 137], "model": [0, 2, 3, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 90, 97, 98, 99, 101, 106, 108, 115, 117, 121, 123, 133, 136, 139], "predict": [0, 99, 101, 121, 123, 133, 136], "control": [0, 39, 40, 41, 43, 44, 45, 97, 98, 99, 100, 101, 121, 123, 133, 136], "motion": [0, 46, 89, 95, 98, 100, 101, 107, 111, 115, 121, 123, 125, 131, 133, 135, 136, 139], "gener": [0, 1, 2, 5, 43, 44, 81, 85, 89, 95, 97, 98, 99, 100, 101, 107, 108, 111, 112, 115, 120, 121, 123, 125, 131, 133, 135, 136, 139], "wrap": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 104, 107, 108, 111, 113, 114, 117, 121, 126], "reacher": [0, 90, 107, 113, 121, 123, 126], "motion_gen": [0, 90, 95, 97, 107, 113, 121], "ik_solv": [0, 90, 95, 98, 113, 114, 121, 126], "mpc": [0, 39, 40, 41, 43, 44, 45, 90, 95, 114, 116, 121, 123], "trajectori": [0, 34, 36, 43, 44, 45, 47, 48, 49, 55, 56, 64, 67, 76, 88, 96, 98, 99, 100, 101, 107, 113, 114, 115, 121, 123, 124, 126, 131, 132], "trajopt": [0, 90, 95, 98, 121, 126], "i": [0, 1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 27, 28, 31, 32, 35, 37, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 70, 72, 74, 79, 88, 92, 94, 97, 98, 99, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123, 126, 128, 130, 131, 132, 139], "split": [0, 121], "opt": [0, 8, 100, 102, 104, 121, 126], "contain": [0, 1, 9, 11, 16, 20, 22, 23, 25, 29, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 75, 89, 90, 95, 96, 97, 98, 99, 100, 101, 111, 115, 119, 121, 123, 128, 131], "solver": [0, 37, 38, 39, 40, 41, 42, 43, 44, 45, 95, 97, 98, 99, 100, 101, 114, 121, 126, 132], "cuda_robot_model": [0, 51, 58, 92, 94, 101, 104, 113, 121, 139], "curobolib": [0, 104, 121], "cuda": [0, 1, 2, 3, 5, 7, 12, 13, 14, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 108, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 127], "kernel": [0, 1, 5, 85, 97, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 127, 130, 131], "python": [0, 99, 108, 111, 112, 115, 118, 122, 123, 139], "bind": [0, 121], "them": [0, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 96, 97, 114, 115, 121, 139], "geom": [0, 8, 48, 49, 92, 94, 97, 104, 113, 114, 115, 116, 117, 121], "frame": [0, 97, 98, 100, 107, 108, 113, 114, 115, 121, 129], "transform": [0, 1, 2, 5, 7, 20, 32, 86, 108, 114, 121, 129], "geometr": [0, 20, 22, 114, 121, 123, 131, 132, 137], "method": [0, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 81, 98, 100, 101, 114, 115, 121, 132], "rollout": [0, 34, 39, 40, 41, 43, 44, 45, 92, 94, 97, 98, 99, 100, 101, 102, 104, 107, 113, 114, 115, 121, 126], "map": [0, 4, 5, 6, 7, 27, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 112, 113, 114, 115, 120, 121, 123, 128, 139], "action": [0, 43, 44, 45, 47, 48, 49, 64, 67, 90, 99, 100, 102, 106, 113, 114, 121, 126], "cost": [0, 15, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 67, 77, 92, 94, 96, 97, 98, 99, 100, 107, 113, 114, 115, 116, 121, 126, 128], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 75, 79, 83, 88, 92, 94, 96, 97, 98, 99, 100, 101, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 126, 128, 129, 130, 131, 132, 133, 139], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 80, 81, 82, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 113, 115, 116, 117, 121, 126], "instanc": [0, 1, 27, 32, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 97, 98, 99, 100, 105, 111, 113, 115, 117, 120, 121, 139], "comput": [0, 1, 2, 3, 5, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 92, 94, 96, 97, 98, 99, 100, 106, 108, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 127, 128, 129, 131, 133, 136], "given": [0, 2, 5, 7, 9, 11, 16, 23, 25, 31, 32, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 86, 98, 99, 100, 113, 114, 115, 117, 121, 128, 138], "util": [0, 20, 22, 34, 43, 44, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 92, 94, 98, 100, 104, 111, 114, 117, 121, 139], "add": [0, 2, 3, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 79, 98, 100, 107, 111, 113, 114, 116, 119, 121, 139], "user": [0, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 107, 111, 114, 118, 119, 121], "program": [0, 72, 114, 121], "includ": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 100, 101, 113, 114, 121], "implement": [0, 1, 7, 32, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 105, 106, 107, 108, 111, 113, 114, 116, 121, 123, 126, 128, 131, 132, 133, 136], "batch": [0, 3, 26, 27, 28, 29, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 55, 57, 67, 68, 72, 75, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 109, 113, 118, 121, 123, 126, 137], "world": [0, 20, 22, 27, 28, 29, 32, 48, 49, 86, 92, 94, 97, 98, 99, 100, 101, 105, 106, 108, 110, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 128, 131, 139], "type": [0, 1, 2, 3, 4, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 31, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 81, 82, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 108, 112, 113, 114, 115, 116, 117, 121, 128, 137], "custom": [0, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 85, 98, 100, 101, 113, 114, 115, 121, 128], "dataclass": [0, 3, 5, 39, 40, 41, 43, 44, 45, 98, 99, 101, 121, 128], "common": [0, 39, 40, 41, 43, 44, 45, 97, 121], "data": [0, 1, 5, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 67, 72, 74, 89, 98, 112, 115, 121], "jointstat": [0, 3, 5, 34, 48, 49, 51, 63, 64, 66, 67, 68, 74, 82, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 108, 113, 114, 117, 121, 123, 124, 131], "cameraobserv": [0, 27, 32, 68, 70, 93, 98, 108, 121], "pose": [0, 2, 3, 5, 9, 10, 20, 26, 27, 28, 29, 32, 48, 55, 64, 67, 68, 70, 72, 86, 92, 93, 94, 97, 98, 99, 100, 101, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 121, 128, 129, 138, 139], "cuda_robot_gener": [0, 1, 5, 139], "cudarobotgeneratorconfig": [0, 1, 2, 3, 139], "cudarobotgener": [0, 1, 2, 5], "cudarobotmodelconfig": [0, 1, 3, 73, 101, 113], "cudarobotmodelst": [0, 1, 3, 92, 94, 97, 100, 113], "cudarobotmodel": [0, 1, 3, 86, 92, 93, 94, 97, 98, 99, 100, 113], "kinematics_pars": [0, 1, 2, 3], "linkparam": [0, 1, 2, 4, 6, 7], "kinematicspars": [0, 1, 3, 4, 6, 7], "jointtyp": [0, 1, 4, 5], "jointlimit": [0, 1, 5, 51], "cspaceconfig": [0, 1, 2, 5, 48, 49, 67, 73], "kinematicstensorconfig": [0, 1, 2, 3, 5], "selfcollisionkinematicsconfig": [0, 1, 3, 5, 58], "urdf_kinematics_pars": [0, 1], "urdfkinematicspars": [0, 1, 6], "usd_kinematics_pars": [0, 1], "usdkinematicspars": [0, 1, 7], "get_links_for_joint": [0, 1, 7], "get_self_collision_dist": [0, 8, 9, 91, 92, 94], "selfcollisiondist": [0, 8, 9], "selfcollisiondistanceloss": [0, 8, 9], "get_pose_dist": [0, 8, 9], "get_pose_distance_backward": [0, 8, 9], "poseerrordist": [0, 8, 9], "poseerror": [0, 8, 9], "sdfsphereobb": [0, 8, 9], "sdfsweptsphereobb": [0, 8, 9], "sdfspherevoxel": [0, 8, 9], "sdfsweptspherevoxel": [0, 8, 9], "geom_cu": [0, 8], "closest_point": [0, 8, 10], "closest_point_voxel": [0, 8, 10], "pose_dist": [0, 8, 10, 91, 92, 94, 117], "pose_distance_backward": [0, 8, 10], "self_collision_dist": [0, 8, 10], "swept_closest_point": [0, 8, 10], "swept_closest_point_voxel": [0, 8, 10], "rotation_matrix_to_quaternion": [0, 8, 11], "kinematicsfusedfunct": [0, 8, 11], "get_cuda_kinemat": [0, 8, 11], "kinematics_fused_cu": [0, 8], "backward": [0, 2, 8, 9, 10, 11, 12, 16, 20, 22, 23, 25, 31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 72, 98, 100, 117], "forward": [0, 1, 3, 8, 9, 11, 12, 13, 16, 20, 22, 23, 25, 31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 81, 97, 100, 117, 123, 131], "matrix_to_quaternion": [0, 8, 12, 20, 31], "lbfgs_step_cu": [0, 8], "line_search_cu": [0, 8], "line_search": [0, 8, 14], "update_best": [0, 8, 14, 15], "l": [0, 8, 13, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 123, 131, 132], "wolfe_line_search": [0, 8, 15], "lbfgscu": [0, 8, 16], "tensor_step": [0, 8, 47, 62, 64], "tensor_step_pos_clique_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_fwd": [0, 8, 17], "tensor_step_acc_fwd": [0, 8, 17], "tensor_step_acc_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_bwd": [0, 8, 17], "tensor_step_cu": [0, 8], "step_acceler": [0, 8, 18], "step_acceleration_idx": [0, 8, 18], "step_idx_position2": [0, 8, 18], "step_posit": [0, 8, 18], "step_position2": [0, 8, 18], "step_position_backward": [0, 8, 18], "step_position_backward2": [0, 8, 18], "util_fil": [0, 8, 104, 113, 115, 117], "get_cpp_path": [0, 8, 19, 89, 104], "join_path": [0, 8, 19, 89, 104, 113, 115, 117], "add_cpp_path": [0, 8, 19, 89, 104], "sdf": [0, 20, 48, 49, 92, 94, 97, 115, 116, 117], "cv": [0, 20], "sphere_fit": [0, 20, 115], "spherefittyp": [0, 20, 27, 30, 32, 98, 115], "sample_even_fit_mesh": [0, 20, 30], "get_voxel_pitch": [0, 20, 30], "voxel_fit_surface_mesh": [0, 20, 30], "get_voxelgrid_from_mesh": [0, 20, 30], "voxel_fit_mesh": [0, 20, 30], "voxel_fit_volume_sample_surface_mesh": [0, 20, 30], "voxel_fit_volume_inside_mesh": [0, 20, 30], "fit_spheres_to_mesh": [0, 20, 30], "transform_point": [0, 20, 31, 68, 72], "batch_transform_point": [0, 20, 31, 68, 72], "cuda_matrix_to_quaternion": [0, 20, 31], "quaternion_to_matrix": [0, 20, 31], "torch_quaternion_to_matrix": [0, 20, 31], "pose_to_matrix": [0, 20, 31], "pose_multipli": [0, 20, 31], "pose_invers": [0, 20, 31], "transformpoint": [0, 20, 31], "batchtransformpoint": [0, 20, 31], "batchtransformpos": [0, 20, 31], "transformpos": [0, 20, 31], "poseinvers": [0, 20, 31], "quattomatrix": [0, 20, 31], "matrixtoquaternion": [0, 20, 31], "materi": [0, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 31, 32, 51, 53, 61, 63, 72, 86], "obstacl": [0, 20, 26, 27, 28, 29, 32, 56, 86, 97, 98, 99, 100, 105, 114, 115, 116, 117, 118, 120, 123, 128, 129, 131], "cuboid": [0, 20, 26, 27, 28, 29, 32, 86, 97, 98, 99, 100, 105, 112, 113, 114, 115, 118, 123, 129, 131], "capsul": [0, 20, 32, 115], "cylind": [0, 20, 32, 86, 115], "sphere": [0, 1, 2, 3, 5, 20, 27, 30, 32, 56, 86, 97, 98, 100, 105, 106, 108, 112, 113, 114, 116, 117, 123, 128, 139], "mesh": [0, 2, 3, 4, 5, 7, 20, 22, 26, 27, 28, 29, 30, 32, 86, 92, 94, 97, 98, 99, 100, 105, 112, 113, 114, 115, 116, 117, 118, 123, 128, 129, 131, 139], "bloxmap": [0, 20, 32], "pointcloud": [0, 20, 22, 32, 70, 92, 94, 108], "voxelgrid": [0, 20, 26, 27, 28, 29, 32], "worldconfig": [0, 20, 26, 27, 28, 29, 32, 34, 36, 48, 49, 86, 92, 94, 97, 98, 99, 100, 113, 114, 115, 117], "tensor_spher": [0, 20, 26, 27, 28, 29, 32], "tensor_capsul": [0, 20, 32], "tensor_cub": [0, 20, 32], "batch_tensor_cub": [0, 20, 32], "graph_bas": [0, 33], "graphresult": [0, 33, 34, 36, 98], "graphconfig": [0, 33, 34, 36], "graphplanbas": [0, 33, 34, 36, 98], "graph_nx": [0, 33], "networkxgraph": [0, 33, 35], "prm": [0, 33], "prmstar": [0, 33, 36], "newton": [0, 37, 41, 43, 44, 45, 98, 100, 126], "particl": [0, 37, 39, 40, 41, 97, 98, 99, 100, 132], "opt_bas": [0, 37, 102], "optimizerconfig": [0, 37, 39, 40, 41, 43, 44, 45], "dynamics_model": [0, 47, 48, 49, 59, 113], "arm_bas": [0, 47, 49, 88, 126], "armcostconfig": [0, 47, 48, 49], "armbaseconfig": [0, 47, 48, 49], "armbas": [0, 47, 48, 49, 126], "arm_reach": [0, 47], "armreachermetr": [0, 47, 49], "armreachercostconfig": [0, 47, 49], "armreacherconfig": [0, 47, 49], "armreach": [0, 47, 49, 97, 99, 100], "rollout_bas": [0, 34, 39, 40, 41, 43, 44, 45, 47, 49, 102, 113], "rolloutmetr": [0, 34, 47, 48, 49, 67, 97, 98, 100, 102, 103], "goal": [0, 34, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 55, 67, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 113, 114, 117, 128, 137, 138], "rolloutconfig": [0, 47, 48, 49, 67], "rolloutbas": [0, 34, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 67, 98, 100, 102, 103], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 80, 81, 82, 85, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 111, 113, 114, 115, 116, 119, 125, 129, 132, 133, 136, 139], "tensordevicetyp": [0, 2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 113, 115], "camera": [0, 68, 97, 98, 108, 115, 118, 120, 122, 123, 131], "enum": [0, 5, 26, 30, 40, 44, 45, 46, 51, 53, 55, 57, 64, 66, 68, 82, 85, 98, 101], "statetyp": [0, 64, 68, 71, 82], "math": [0, 68, 112, 113, 114, 115, 117], "quat_multipli": [0, 68, 72], "orientationerror": [0, 68, 72], "nnconfig": [0, 68, 73], "robotconfig": [0, 34, 36, 48, 49, 64, 68, 73, 86, 92, 94, 97, 98, 99, 100, 113], "state": [0, 34, 36, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 82, 96, 97, 98, 99, 100, 101, 102, 103, 108, 113, 114, 117, 132, 138], "filtercoeff": [0, 68, 74, 82], "fn_get_index": [0, 68, 74], "tensor": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 70, 72, 74, 77, 81, 82, 83, 85, 86, 88, 92, 94, 96, 97, 98, 100, 101, 102, 103, 105, 112, 113, 115, 117, 120, 123, 133, 136], "t_dof": [0, 5, 36, 51, 68, 74, 75], "t_bdof": [0, 68, 75], "t_bhdof_float": [0, 67, 68, 75], "t_hdof_float": [0, 68, 75], "t_bvalue_float": [0, 49, 67, 68, 75], "t_bhvalue_float": [0, 67, 68, 75], "t_bvalue_bool": [0, 49, 67, 68, 75], "t_bvalue_int": [0, 68, 75], "t_bposit": [0, 68, 75], "t_bquaternion": [0, 68, 75], "t_brotat": [0, 68, 75], "error_metr": [0, 76], "rotation_error_quaternion": [0, 76, 77], "rotation_error_matrix": [0, 76, 77], "helper": [0, 39, 40, 41, 43, 44, 45, 76, 97, 98, 115], "default_to_regular": [0, 76, 78], "list_idx_if_not_non": [0, 76, 78], "logger": [0, 76], "setup_logg": [0, 76, 79], "setup_curobo_logg": [0, 76, 79], "log_warn": [0, 76, 79], "log_info": [0, 76, 79], "log_error": [0, 76, 79, 100], "metric": [0, 33, 34, 48, 49, 55, 56, 72, 76, 90, 95, 97, 98, 99, 100, 102, 113, 118, 123], "curobometr": [0, 76, 80], "curobogroupmetr": [0, 76, 80], "sample_lib": [0, 43, 44, 76, 92, 94], "sampleconfig": [0, 43, 44, 76, 81], "basesamplelib": [0, 76, 81], "haltonsamplelib": [0, 76, 81], "bspline": [0, 76, 81], "knotsamplelib": [0, 76, 81], "randomsamplelib": [0, 76, 81], "sinesamplelib": [0, 76, 81], "stompsamplelib": [0, 76, 81], "samplelib": [0, 76, 81], "get_ranged_halton_sampl": [0, 76, 81], "haltongener": [0, 76, 81, 92, 94], "generate_nois": [0, 42, 43, 44, 76, 81], "generate_noise_np": [0, 76, 81], "generate_prime_numb": [0, 76, 81], "generate_van_der_corput_sampl": [0, 76, 81], "generate_van_der_corput_samples_batch": [0, 76, 81], "generate_halton_sampl": [0, 76, 81], "generate_gaussian_halton_sampl": [0, 76, 81], "generate_gaussian_sobol_sampl": [0, 76, 81], "state_filt": [0, 64, 76], "filterconfig": [0, 64, 76, 82], "jointstatefilt": [0, 76, 82], "tensor_util": [0, 76], "check_tensor_shap": [0, 76, 83], "copy_tensor": [0, 76, 83], "copy_if_not_non": [0, 76, 83], "clone_if_not_non": [0, 76, 83], "tensor_repeat_se": [0, 76, 83], "torch_util": [0, 76], "find_first_idx": [0, 76, 84], "find_last_idx": [0, 76, 84], "is_cuda_graph_avail": [0, 76, 84], "is_torch_compile_avail": [0, 76, 84], "get_torch_compile_opt": [0, 76, 84], "disable_torch_compile_glob": [0, 76, 84], "set_torch_compile_global_opt": [0, 76, 84], "get_torch_jit_decor": [0, 76, 84], "empty_decor": [0, 76, 84], "interpolatetyp": [0, 34, 36, 76, 85, 98, 100], "get_linear_traj": [0, 76, 85], "get_smooth_trajectori": [0, 76, 85], "get_spline_interpolated_trajectori": [0, 76, 85], "get_batch_interpolated_trajectori": [0, 76, 85], "get_cpu_linear_interpol": [0, 76, 85], "get_cpu_kunz_stilman_interpol": [0, 76, 85], "get_interpolated_trajectori": [0, 33, 34, 36, 76, 85, 95, 100], "linear_smooth": [0, 76, 85], "usd_help": [0, 76, 114, 117], "set_prim_transl": [0, 76, 86], "set_prim_transform": [0, 76, 86], "get_prim_world_pos": [0, 76, 86], "get_transform": [0, 76, 86], "get_position_quat": [0, 76, 86], "set_geom_mesh_attr": [0, 76, 86], "set_geom_cube_attr": [0, 76, 86], "set_geom_cylinder_attr": [0, 76, 86], "set_geom_sphere_attr": [0, 76, 86], "set_cylinder_attr": [0, 76, 86], "get_cylinder_attr": [0, 76, 86], "get_capsule_attr": [0, 76, 86], "get_cube_attr": [0, 76, 86], "get_sphere_attr": [0, 76, 86], "get_mesh_attr": [0, 76, 86], "create_stag": [0, 76, 86], "usdhelp": [0, 76, 86, 114, 117], "warp": [0, 28, 76, 85, 88, 115, 123, 128], "init_warp": [0, 76, 87], "warp_interpol": [0, 76], "get_cuda_linear_interpol": [0, 76, 85, 88], "wrap_bas": [0, 90], "wrapconfig": [0, 90, 102, 103], "wrapresult": [0, 90, 97, 99, 100, 102], "wrapbas": [0, 90, 97, 100, 102, 103], "wrap_mpc": [0, 90], "wrapmpc": [0, 90, 99, 103], "get_module_path": [0, 89, 104], "get_root_path": [0, 89, 104], "get_content_path": [0, 89, 104], "get_configs_path": [0, 89, 104], "get_assets_path": [0, 89, 104, 115, 117], "get_weights_path": [0, 89, 104], "load_yaml": [0, 89, 104, 113, 117], "write_yaml": [0, 89, 104], "get_robot_path": [0, 89, 104, 113], "get_task_configs_path": [0, 89, 104], "get_robot_configs_path": [0, 89, 104, 113], "get_world_configs_path": [0, 89, 104, 113, 117], "get_debug_path": [0, 89, 104], "copy_file_to_path": [0, 89, 104], "get_filenam": [0, 89, 104], "get_path_of_dir": [0, 89, 104], "get_files_from_dir": [0, 89, 104], "file_exist": [0, 89, 104], "get_motion_gen_robot_list": [0, 89, 104], "get_robot_list": [0, 89, 104], "get_multi_arm_robot_list": [0, 89, 104], "code": [1, 20, 22, 114, 118, 119, 123, 124, 131], "current": [1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 28, 31, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 72, 92, 94, 97, 98, 99, 100, 101, 105, 106, 107, 108, 113, 114, 115, 123, 131], "support": [1, 2, 3, 9, 11, 16, 23, 25, 27, 30, 31, 32, 39, 40, 41, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 92, 94, 97, 98, 99, 100, 105, 107, 110, 111, 112, 114, 116, 118, 120, 123, 124, 131, 137], "singl": [1, 27, 28, 29, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 95, 97, 98, 99, 100, 101, 105, 107, 114, 116, 125, 137], "axi": [1, 2, 7, 55, 107], "actuat": [1, 5, 120], "joint": [1, 2, 5, 6, 7, 74, 92, 94, 96, 97, 98, 99, 100, 101, 108, 113, 114, 117, 120, 123, 124, 131, 139], "where": [1, 34, 36, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 97, 98, 100, 101, 105, 107, 111, 115, 116, 117, 119, 126, 128, 139], "prismat": 1, "revolut": [1, 98, 100], "continu": [1, 115, 117], "ar": [1, 3, 5, 7, 9, 11, 16, 23, 25, 27, 30, 31, 34, 36, 37, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 105, 106, 108, 111, 112, 113, 114, 115, 118, 119, 125, 129, 139], "approxim": [1, 30, 37, 98, 106, 112, 117, 123], "limit": [1, 2, 5, 96, 97, 98, 99, 100, 113, 120, 139], "6": [1, 5, 66, 107, 111, 113, 115, 118, 123, 124, 131], "radian": [1, 98, 100], "mimic": [1, 120, 123, 124, 131], "so": [1, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 99, 113, 114, 115, 116, 119, 126, 128, 139], "convert": [1, 2, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 108, 113, 114, 115, 120, 139], "independ": [1, 120], "load": [1, 2, 3, 26, 27, 28, 29, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 73, 97, 98, 99, 100, 107, 111, 112, 113, 114, 115, 116, 118, 120, 129, 139], "": [1, 5, 9, 11, 16, 23, 25, 27, 28, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 83, 92, 94, 97, 98, 100, 101, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 128, 129, 131, 132, 133, 136, 139], "tree": [1, 2, 4, 6, 7, 112], "from": [1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 79, 92, 94, 96, 97, 98, 99, 100, 101, 106, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 126, 128, 131, 138, 139], "config": [1, 2, 3, 24, 26, 27, 28, 29, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 92, 94, 96, 97, 98, 99, 100, 102, 103, 113, 117, 139], "A": [1, 5, 7, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 106, 107, 114, 115, 116, 133, 136], "parser": [1, 2, 7], "kinematicspar": 1, "help": [1, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79], "pars": [1, 114], "standard": [1, 39, 40, 41, 43, 44, 45, 98, 117, 120], "format": [1, 3, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 70, 112], "urdf": [1, 2, 3, 5, 7, 112, 113, 120, 139], "an": [1, 3, 5, 7, 9, 11, 16, 23, 25, 31, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 71, 72, 85, 97, 98, 99, 100, 101, 106, 107, 111, 113, 114, 115, 117, 120, 123, 125, 126, 128, 129, 132, 139], "experiment": [1, 7, 99, 112, 113, 114, 129], "usd": [1, 2, 5, 7, 86, 106, 110, 112, 117, 123, 139], "miss": [1, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 88], "addit": [1, 2, 5, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 111, 114, 115, 116, 123, 125], "between": [1, 2, 5, 20, 22, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 97, 98, 99, 100, 106, 107, 108, 112, 113, 114, 115, 116, 117, 120, 123, 124, 128, 131], "origin": [1, 97, 98], "link": [1, 2, 3, 4, 5, 6, 7, 72, 97, 98, 100, 101, 106, 112, 113, 114, 120, 139], "might": [1, 27, 98, 99, 111, 113, 139], "work": [1, 30, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 99, 100, 111, 113, 114, 115, 116, 119, 120, 128, 133, 136], "all": [1, 3, 5, 7, 9, 11, 16, 23, 25, 26, 27, 30, 31, 32, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 96, 97, 98, 100, 106, 111, 112, 113, 114, 115, 116, 118, 126, 128, 129, 139], "In": [1, 9, 11, 16, 23, 25, 27, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 100, 111, 113, 114, 115, 116, 125, 139], "file": [1, 3, 7, 32, 97, 98, 99, 100, 101, 108, 111, 112, 113, 114, 115, 118, 119, 123, 125], "also": [1, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 128, 129, 131, 132, 139], "need": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 99, 100, 114, 115, 116, 118, 119, 128, 139], "represent": [1, 26, 27, 29, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 97, 98, 99, 100, 110, 112, 113, 114, 116, 122, 123], "volum": [1, 2, 30, 32, 98, 115, 132], "other": [1, 5, 9, 11, 16, 23, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 100, 101, 111, 114, 115, 128], "paramet": [1, 2, 3, 4, 5, 6, 7, 9, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 72, 74, 79, 83, 86, 88, 92, 94, 96, 97, 98, 99, 100, 101, 115, 117], "repres": [1, 2, 3, 5, 9, 11, 16, 23, 25, 26, 31, 32, 51, 53, 61, 63, 72, 97, 98, 100, 106, 108, 112, 114, 115, 118, 120, 123, 125, 129, 131], "tutori": [1, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 73, 97, 114, 115, 123], "set": [1, 2, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 105, 107, 113, 114, 115, 119, 120, 128, 130, 137, 139], "up": [1, 7, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 79, 98, 100, 139], "configur": [1, 2, 3, 5, 7, 41, 56, 73, 92, 94, 96, 97, 98, 99, 100, 101, 107, 108, 111, 112, 113, 114, 115, 117, 123, 140], "new": [1, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 73, 79, 97, 98, 99, 100, 101, 112, 113, 114, 115, 116, 117, 119, 123, 124, 128, 131, 140], "onc": [1, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 106, 107, 108, 111, 112, 113, 114, 116, 120, 139], "setup": [1, 26, 105, 114, 115, 119], "you": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 107, 108, 111, 112, 113, 114, 115, 116, 118, 119, 128, 139], "pass": [1, 5, 9, 11, 16, 23, 25, 28, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 107, 108, 111, 114, 115, 116, 117, 118, 128], "configuraiton": [1, 139], "take": [1, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 97, 98, 107, 111, 113, 115, 116, 117, 118, 126], "access": [1, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 111, 113, 114], "creat": [1, 2, 3, 27, 32, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 79, 86, 96, 97, 98, 99, 100, 101, 105, 111, 113, 114, 115, 116, 117, 119, 123, 128], "memori": [1, 2, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 97, 98, 120, 128], "while": [1, 7, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 97, 98, 99, 106, 107, 111, 113, 114, 115, 116, 118, 120, 128, 139], "onli": [1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 27, 28, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 105, 113, 114, 115, 116, 118, 119, 133, 136], "To": [1, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 101, 107, 111, 113, 114, 115, 118, 128, 129, 132, 139], "reduc": [1, 97, 98, 108, 115, 127, 128, 139], "overhead": [1, 97, 108], "one": [1, 9, 11, 16, 23, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 96, 97, 98, 99, 106, 114, 115, 120, 128, 139], "mani": [1, 3, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 72, 97, 98, 100, 114, 115, 116, 120, 123, 131, 132], "base_link": [1, 2, 3, 4, 5, 6, 7, 73, 91, 93, 113, 139], "ee_link": [1, 2, 3, 4, 5, 6, 7, 67, 72, 73, 113, 139], "tensor_arg": [1, 2, 3, 5, 7, 20, 22, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 73, 74, 76, 81, 82, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 115], "link_nam": [1, 2, 3, 4, 5, 6, 7, 55, 62, 64, 86, 97, 98, 100, 101, 139], "collision_link_nam": [1, 2, 139], "collision_spher": [1, 2, 139], "collision_sphere_buff": [1, 2, 93, 139], "compute_jacobian": [1, 2, 3], "self_collision_buff": [1, 2, 139], "self_collision_ignor": [1, 2, 139], "debug": [1, 2, 5, 34, 36, 39, 40, 41, 43, 44, 45, 47, 67, 79, 90, 97, 98, 99, 100, 102], "use_global_cumul": [1, 2, 3, 11, 139], "asset_root_path": [1, 2, 139], "mesh_link_nam": [1, 2, 5, 139], "load_link_names_with_mesh": [1, 2], "urdf_path": [1, 2, 3, 6, 20, 32, 73, 113, 139], "usd_path": [1, 2, 3, 7, 139], "usd_robot_root": [1, 2, 3, 7, 139], "isaac_usd_path": [1, 2, 139], "use_usd_kinemat": [1, 2, 139], "usd_flip_joint": [1, 2, 139], "usd_flip_joint_limit": [1, 2, 139], "lock_joint": [1, 2, 74, 98, 139], "extra_link": [1, 2, 4, 6, 7, 139], "add_object_link": [1, 2], "use_external_asset": [1, 2], "external_asset_path": [1, 2], "external_robot_configs_path": [1, 2], "extra_collision_spher": [1, 2, 139], "cspace": [1, 2, 3, 5, 68, 73, 99, 139], "load_mesh": [1, 2, 6], "kinematics_config": [1, 2, 3, 98, 117], "self_collision_config": [1, 2, 3], "initialize_tensor": [1, 2], "add_link": [1, 2], "add_fixed_link": [1, 2], "_build_chain": [1, 2], "_get_mimic_joint_data": [1, 2], "_build_kinematics_tensor": [1, 2], "_build_kinemat": [1, 2], "_build_kinematics_with_lock_joint": [1, 2], "_build_collision_model": [1, 2], "_create_self_collision_thread_data": [1, 2], "_add_body_to_tre": [1, 2], "_get_joint_link": [1, 2], "_get_link_pos": [1, 2], "get_joint_limit": [1, 2, 3], "_get_joint_position_velocity_limit": [1, 2], "_update_joint_limit": [1, 2], "generator_config": [1, 3], "from_basic_urdf": [1, 3], "from_basic_usd": [1, 3], "from_robot_yaml_fil": [1, 3], "from_data_dict": [1, 3, 5], "from_config": [1, 3], "dof": [1, 3, 17, 33, 34, 36, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 74, 81, 92, 94, 95, 96, 97, 98, 100, 120, 126], "ee_posit": [1, 3, 113, 117], "ee_quaternion": [1, 3, 113, 117], "lin_jacobian": [1, 3], "ang_jacobian": [1, 3], "links_posit": [1, 3], "links_quaternion": [1, 3], "link_spheres_tensor": [1, 3, 11, 117], "ee_pos": [1, 3, 62, 64, 113, 117], "get_link_spher": [1, 3, 5], "link_pos": [1, 3, 62, 64, 86, 97, 98, 100, 101], "update_batch_s": [1, 3, 50, 51, 53, 55, 57, 58, 62, 64, 66, 95, 98], "get_stat": [1, 3, 113], "get_robot_link_mesh": [1, 3], "get_robot_as_mesh": [1, 3], "get_robot_as_spher": [1, 3], "get_link_pos": [1, 3], "_cuda_forward": [1, 3], "all_articulated_joint_nam": [1, 3], "get_self_collision_config": [1, 3], "get_link_mesh": [1, 3, 4, 6, 7], "get_link_transform": [1, 3], "get_all_link_transform": [1, 3], "get_dof": [1, 3, 113, 117], "joint_nam": [1, 2, 3, 4, 5, 47, 48, 49, 68, 74, 86, 90, 95, 97, 99, 102, 103, 113, 139], "total_spher": [1, 3, 5], "lock_jointst": [1, 3, 5], "get_full_j": [1, 3, 95, 97, 98, 100], "get_mimic_j": [1, 3], "robot_spher": [1, 3, 9, 11, 58, 62, 64], "update_kinematics_config": [1, 3], "retract_config": [1, 3, 5, 51, 62, 64, 95, 97, 98, 100, 101, 113, 139], "joint_typ": [1, 4, 139], "fixed_transform": [1, 4, 5, 11, 139], "parent_link_nam": [1, 2, 4, 139], "joint_limit": [1, 4, 5, 50, 51], "joint_axi": [1, 4], "joint_id": [1, 4], "joint_velocity_limit": [1, 4], "joint_offset": [1, 4], "mimic_joint_nam": [1, 4], "from_dict": [1, 4, 20, 32, 33, 34, 36, 47, 48, 49, 62, 64, 68, 73, 76, 82, 113, 117], "build_link_par": [1, 4, 6, 7], "get_chain": [1, 4, 6, 7], "_get_from_extra_link": [1, 4, 6, 7], "get_link_paramet": [1, 4, 6, 7], "add_absolute_path_to_link_mesh": [1, 4, 6, 7], "fix": [1, 2, 5, 97, 98, 100, 113, 114, 116, 120, 139], "x_prism": [1, 5], "y_prism": [1, 5], "z_prism": [1, 5], "x_rot": [1, 5], "y_rot": [1, 5], "z_rot": [1, 5], "x_prism_neg": [1, 5], "y_prism_neg": [1, 5], "z_prism_neg": [1, 5], "x_rot_neg": [1, 5], "y_rot_neg": [1, 5], "z_rot_neg": [1, 5], "posit": [1, 2, 3, 5, 18, 20, 26, 27, 28, 29, 30, 31, 32, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 71, 72, 74, 85, 92, 94, 96, 97, 98, 100, 108, 113, 114, 115, 117, 118], "veloc": [1, 5, 48, 49, 56, 62, 66, 68, 71, 74, 85, 96, 98, 100], "jerk": [1, 5, 51, 62, 66, 68, 71, 74, 76, 80, 96, 98, 100, 118, 123, 131, 135], "effort": [1, 5], "clone": [1, 5, 9, 11, 16, 20, 22, 23, 25, 26, 31, 32, 47, 49, 50, 51, 53, 55, 61, 63, 67, 68, 70, 72, 74, 83, 90, 95, 98, 101, 102, 111, 113, 117, 119, 139], "copy_": [1, 5, 47, 67, 68, 70, 72, 74, 99, 113], "cspace_distance_weight": [1, 5, 50, 51, 62, 64, 96, 139], "null_space_weight": [1, 5, 50, 51, 62, 64, 97, 139], "max_acceler": [1, 5, 62, 64, 85, 139], "max_jerk": [1, 5, 62, 64, 85, 95, 96, 139], "velocity_scal": [1, 5, 98], "acceleration_scal": [1, 5, 98], "jerk_scal": [1, 5, 98], "position_limit_clip": [1, 5], "inplace_reindex": [1, 5, 68, 74], "scale_joint_limit": [1, 5], "load_from_joint_limit": [1, 5], "link_map": [1, 5, 11], "joint_map": [1, 5, 11], "joint_map_typ": [1, 5, 11], "joint_offset_map": [1, 5, 11], "store_link_map": [1, 5, 11], "link_chain_map": [1, 5, 11], "non_fixed_joint_nam": [1, 5], "n_dof": [1, 5, 63], "mimic_joint": [1, 5], "link_spher": [1, 5, 86, 117], "link_sphere_idx_map": [1, 5, 11], "link_name_to_idx_map": [1, 5], "ee_idx": [1, 5], "reference_link_spher": [1, 5], "load_cspace_cfg_from_kinemat": [1, 5], "get_sphere_index_from_link_nam": [1, 5], "update_link_spher": [1, 5], "get_reference_link_spher": [1, 5], "attach_object": [1, 5], "detach_object": [1, 5], "get_number_of_spher": [1, 5], "disable_link_spher": [1, 5], "enable_link_spher": [1, 5], "offset": [1, 5, 55, 63, 72, 98, 107, 139], "distance_threshold": [1, 5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 93], "thread_loc": [1, 5, 9], "thread_max": [1, 5], "collision_matrix": [1, 5], "experimental_kernel": [1, 5, 9], "checks_per_thread": [1, 5, 9], "_get_joint_nam": [1, 6], "_get_joint_limit": [1, 6], "get_urdf_str": [1, 6], "root_link": [1, 6], "get_controlled_joint_nam": [1, 6], "robot_prim_root": [1, 7], "_get_joint_transform": [1, 7], "str": [2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 30, 32, 34, 36, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 69, 70, 72, 74, 79, 81, 86, 89, 92, 93, 94, 97, 98, 99, 100, 101, 117, 139], "devic": [2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 68, 69, 70, 72, 73, 74, 77, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 113, 115, 127, 128], "index": [2, 3, 5, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 55, 61, 62, 63, 64, 67, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 115, 128], "0": [2, 3, 5, 7, 9, 11, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 77, 80, 81, 82, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 107, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 128, 129, 130, 131, 139], "dtype": [2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101, 113, 115], "torch": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 69, 70, 72, 73, 74, 77, 81, 82, 83, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 111, 113, 115, 117, 118, 130], "float32": [2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 55, 63, 64, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101], "collision_geometry_dtyp": [2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101], "collision_gradient_dtyp": [2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101], "collision_distance_dtyp": [2, 3, 5, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 55, 64, 68, 69, 72, 73, 74, 81, 82, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99, 100, 101], "list": [2, 3, 4, 5, 6, 7, 10, 12, 13, 14, 18, 26, 27, 28, 29, 30, 32, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 70, 72, 74, 78, 80, 81, 85, 86, 89, 92, 94, 97, 98, 100, 101, 102, 103, 112, 115, 139], "none": [2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 70, 72, 73, 74, 80, 81, 82, 83, 85, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 113, 117], "dict": [2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 81, 84, 86, 89, 92, 93, 94, 97, 98, 99, 100, 101, 139], "ani": [2, 3, 5, 9, 11, 16, 23, 25, 27, 29, 31, 32, 34, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 73, 97, 98, 100, 102, 108, 112, 113, 114, 115, 120, 128, 130], "float": [2, 4, 5, 13, 14, 15, 26, 27, 28, 29, 30, 32, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 70, 72, 74, 75, 80, 81, 82, 85, 86, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 139], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 72, 75, 80, 81, 82, 84, 85, 86, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "fals": [2, 3, 4, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 72, 74, 79, 80, 81, 82, 84, 86, 89, 96, 97, 98, 99, 100, 101, 102, 103, 107, 111, 113, 115, 117, 139], "true": [2, 3, 5, 9, 11, 16, 17, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 79, 80, 81, 82, 84, 85, 86, 87, 92, 93, 94, 97, 98, 99, 100, 111, 113, 139], "int": [2, 3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 72, 74, 75, 78, 79, 80, 81, 85, 86, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 117], "object": [2, 3, 4, 5, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 31, 32, 34, 35, 41, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 81, 82, 86, 93, 94, 96, 97, 98, 99, 100, 101, 102, 113, 114, 115, 116, 123], "name": [2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 70, 72, 74, 79, 86, 97, 98, 99, 100, 101, 115, 117, 119, 139], "end": [2, 3, 4, 5, 6, 7, 34, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 101, 113, 114, 115, 125, 138, 139], "effector": [2, 3, 4, 5, 6, 7, 97, 98, 99, 100, 101, 113, 114, 125, 138, 139], "fill": [2, 4, 6, 7, 139], "occupi": 2, "http": [2, 46, 111, 116, 118, 119, 128, 129, 139], "doc": [2, 129], "omnivers": [2, 120, 128, 129], "nvidia": [2, 27, 28, 113, 114, 115, 123, 128, 129, 131, 139], "com": [2, 46, 111, 116, 118, 119, 128, 129, 139], "app_isaacsim": 2, "advanced_tutori": 2, "tutorial_motion_generation_robot_description_editor": 2, "html": [2, 129], "radiu": [2, 3, 20, 32, 34, 36, 86, 97, 98, 100, 113, 115, 139], "buffer": [2, 26, 39, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 72, 97, 98, 99, 100, 101, 113, 115, 123, 139], "pad": [2, 98, 101], "jacobian": [2, 3, 57], "self": [2, 4, 5, 6, 7, 10, 20, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 97, 98, 99, 100, 113, 114, 117, 123], "some": [2, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 97, 107, 111, 113, 114, 115, 116, 118, 119, 120, 128, 129, 139], "larg": [2, 98, 101, 113, 114, 115], "avoid": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 99, 100, 114, 115, 116, 118, 123, 128, 129, 131, 139], "github": [2, 46, 111, 116, 118, 119, 128, 139], "ro": [2, 46, 132, 135, 139], "panda_moveit_config": 2, "pull": 2, "35": [2, 72, 118], "issuecom": 2, "671333863": 2, "ignor": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 139], "enabl": [2, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 76, 82, 97, 98, 99, 100, 105, 106, 107, 112, 113, 114, 115, 116, 119, 126, 128, 130, 139], "flag": [2, 7, 39, 40, 41, 43, 44, 45, 56, 72, 96, 97, 98, 101, 115, 120], "write": [2, 5, 129], "out": [2, 5, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 86, 97, 98, 100, 108, 113, 115], "cumul": 2, "matrix": [2, 12, 26, 27, 28, 29, 31, 32, 39, 40, 41, 43, 44, 45, 46, 72, 86], "global": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 99, 100, 113, 120, 123, 128, 131, 132], "allow": [2, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 97, 98, 99, 100, 101, 113, 116, 123, 128, 129, 131], "reus": [2, 97], "dure": [2, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 48, 49, 51, 53, 61, 63, 72, 97, 98, 99, 100, 101, 107, 112, 115, 116, 119, 139], "15": [2, 85, 96, 98, 100, 139], "speedup": [2, 97], "over": [2, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 113, 115, 117, 126, 132], "recomput": [2, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "path": [2, 3, 34, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 85, 89, 96, 97, 98, 99, 100, 107, 111, 113, 114, 118, 119, 129, 139], "we": [2, 3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 88, 98, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 129, 132, 133, 138, 139], "visual": [2, 32, 98, 114, 115, 116, 117], "export": [2, 111, 118, 119, 128], "when": [2, 28, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 97, 98, 99, 100, 106, 112, 113, 114, 115, 116, 119, 120, 126, 128, 139], "root": [2, 5, 86], "prim": [2, 7, 86, 129], "isaac": [2, 106, 112, 115, 116, 119, 122, 123, 124, 131, 139], "server": 2, "chain": [2, 3, 5, 114, 120, 126, 128, 129], "flip": 2, "lock": [2, 48, 49, 55, 97, 98, 100, 107, 123, 124, 131], "activ": [2, 5, 55, 56, 96, 97, 98, 99, 100, 107, 115, 116], "angl": [2, 11, 117], "dictionari": [2, 3, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 101, 113, 115, 139], "deprec": [2, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 97, 98, 100, 123], "n": [2, 3, 26, 27, 28, 29, 32, 34, 36, 39, 40, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 72, 81, 85, 92, 94, 97, 115, 137], "properti": [2, 3, 6, 7, 32, 43, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 70, 72, 73, 74, 93, 97, 98, 99, 100, 102, 103], "link_param": 2, "other_link": 2, "chain_link_nam": 2, "_type_": [2, 26, 32, 39, 40, 48, 49, 67, 74, 83, 88], "_description_": [2, 5, 9, 26, 27, 28, 29, 30, 32, 39, 48, 49, 64, 67, 72, 74, 83, 86, 88, 89, 92, 94, 100, 117], "option": [2, 3, 4, 5, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 36, 39, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 70, 72, 73, 74, 79, 81, 88, 97, 98, 100, 115, 116, 117, 118, 123, 124, 131], "default": [2, 3, 5, 7, 9, 11, 16, 23, 25, 27, 28, 29, 30, 31, 32, 36, 39, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 86, 88, 97, 98, 99, 100, 107, 115, 119, 129, 139], "collision_threshold": 2, "q": [2, 3, 15, 16, 39, 40, 46, 52, 54, 56, 72, 77, 92, 93, 94, 97, 98, 100, 113, 117], "static": [3, 4, 5, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 53, 61, 63, 64, 69, 72, 73, 74, 82, 86, 92, 93, 94, 96, 97, 98, 99, 100, 114, 116], "doe": [3, 5, 7, 27, 39, 40, 41, 43, 44, 45, 48, 49, 64, 92, 94, 97, 98, 99, 100, 107, 113, 114, 115, 120, 139], "queri": [3, 26, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 105, 108, 112, 113, 114, 115, 116, 120, 125, 128, 132], "return": [3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 27, 29, 30, 31, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 77, 83, 88, 89, 92, 94, 96, 97, 98, 99, 100, 101, 108, 113, 114, 115, 116, 117], "file_path": [3, 20, 32, 73, 86, 89, 113, 115, 117], "data_dict": [3, 32, 39, 40, 41, 43, 44, 45, 48, 49], "store": [3, 5, 9, 11, 16, 23, 25, 26, 27, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 111, 113, 115, 117, 128], "inform": [3, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 112, 113, 125, 130], "x": [3, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 39, 40, 41, 43, 44, 45, 46, 51, 53, 55, 61, 63, 72, 83, 85, 98, 100, 107, 113, 125], "y": [3, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 51, 53, 55, 61, 63, 72, 85, 98, 100, 107, 111, 113, 119, 125, 137, 139], "z": [3, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 51, 53, 55, 61, 63, 72, 98, 100, 107, 113, 125, 139], "meter": [3, 32, 55, 72, 97, 98, 99, 100, 107], "b": [3, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 36, 39, 51, 53, 61, 63, 72, 92, 94, 111], "3": [3, 5, 26, 27, 28, 29, 31, 44, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 71, 72, 75, 81, 88, 92, 94, 98, 100, 101, 111, 113, 115, 117, 118, 123, 124, 131, 139], "defin": [3, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 138], "orientaiton": 3, "quaternion": [3, 12, 31, 67, 68, 72, 97, 98, 100, 112, 117], "qw": [3, 31, 32, 113], "qx": [3, 31, 32, 113], "qy": [3, 31, 32, 113], "qz": [3, 31, 32, 113], "4": [3, 5, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 51, 53, 56, 61, 63, 66, 72, 75, 86, 92, 94, 97, 98, 101, 111, 113, 115, 118, 119, 123, 126, 131, 139], "linear": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 76, 85, 88, 98, 100, 107, 117, 125], "angular": [3, 72, 107], "specifi": [3, 7, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 107, 113, 114, 115], "r": [3, 9, 11, 16, 23, 25, 31, 32, 51, 53, 61, 63, 72, 77, 98, 100, 108, 115], "each": [3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 29, 31, 32, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 96, 97, 98, 99, 100, 101, 105, 106, 112, 115, 128, 129, 139], "correspond": [3, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "get": [3, 4, 5, 6, 7, 30, 32, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 92, 94, 97, 98, 99, 100, 101, 111, 114, 117, 119, 123, 128, 129], "e": [3, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 92, 94, 97, 98, 99, 107, 111, 114, 116, 117, 120, 128, 129, 139], "g": [3, 9, 11, 16, 23, 25, 31, 32, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 92, 94, 97, 98, 107, 114, 115, 116, 117, 120, 128, 129, 139], "serial": [3, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "correct": [3, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "issu": [3, 97, 122, 123, 128, 139], "cover": 3, "full": [3, 9, 11, 16, 23, 25, 31, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 113, 114], "batch_siz": [3, 9, 11, 16, 17, 23, 25, 31, 51, 53, 55, 61, 62, 63, 64, 66, 67, 72, 95, 99, 100, 101, 117], "force_upd": [3, 64, 66], "reset_buff": [3, 33, 34, 36], "calculate_jacobian": 3, "filter_valid": 3, "j": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 86, 96, 117], "new_kin_config": 3, "numpi": [4, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 117], "ndarrai": [4, 30, 32, 43, 44, 45, 46, 72, 74], "factori": [4, 32, 81], "dict_data": 4, "parent": [4, 5, 6, 7], "note": [4, 5, 6, 7, 9, 11, 16, 23, 25, 31, 32, 37, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 88, 92, 94, 98, 100, 115, 123], "function": [4, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 29, 31, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 84, 92, 94, 97, 98, 99, 100, 101, 108, 111, 113, 115, 117, 128], "_parent_map": [4, 6, 7], "attach": [4, 6, 7, 97, 98, 100, 112, 115, 123, 139], "start": [4, 6, 7, 32, 34, 36, 39, 40, 41, 43, 44, 45, 49, 55, 64, 67, 72, 74, 97, 98, 99, 100, 101, 106, 107, 111, 113, 114, 115, 116, 119, 123, 139], "mesh_dir": [4, 6, 7], "valu": [5, 7, 9, 11, 16, 23, 25, 26, 30, 31, 32, 39, 40, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 71, 72, 74, 79, 84, 85, 96, 97, 98, 99, 100, 101, 111, 113, 115, 118, 139], "enumer": [5, 40, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 71, 85], "1": [5, 9, 11, 16, 17, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 37, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 71, 72, 75, 77, 80, 81, 85, 86, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 107, 111, 113, 115, 117, 118, 119, 120, 123, 124, 126, 128, 129, 130, 131, 137, 139], "2": [5, 9, 11, 16, 23, 25, 31, 37, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 71, 72, 79, 81, 92, 94, 97, 98, 100, 101, 107, 111, 113, 115, 117, 118, 119, 123, 124, 131, 139], "5": [5, 34, 36, 64, 66, 85, 88, 98, 100, 101, 113, 115, 117, 118, 119, 123, 131, 139], "7": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 74, 111, 115, 117, 118, 123, 124, 125, 131], "8": [5, 55, 85, 115, 117, 118, 119, 128], "9": [5, 98, 106, 118, 139], "10": [5, 34, 36, 39, 63, 85, 92, 94, 97, 98, 99, 100, 111, 113, 115, 117, 132], "11": [5, 111, 118, 119], "new_jl": 5, "union": [5, 26, 32, 39, 40, 43, 44, 45, 48, 49, 53, 55, 57, 74, 98], "500": [5, 96, 115, 117, 139], "new_config": 5, "joint_position_upp": 5, "joint_position_low": 5, "homogen": [5, 32], "child": [5, 7, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100], "n_link": 5, "n_store_link": 5, "everi": [5, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 114, 116, 128], "part": [5, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 117], "form": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 123, 131], "anoth": [5, 67, 72, 106, 126], "whose": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "number": [5, 9, 11, 16, 23, 25, 26, 31, 32, 39, 40, 41, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 96, 97, 98, 99, 100, 101, 115, 120, 132], "along": [5, 30, 39, 40, 41, 43, 44, 45, 64, 97, 98, 100, 107, 108, 114, 115], "dimens": [5, 9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 32, 51, 53, 61, 63, 72, 120], "have": [5, 9, 11, 16, 23, 25, 31, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 105, 107, 111, 113, 114, 115, 119, 120, 128, 129, 133, 139], "render": [5, 116, 118, 129], "total": [5, 39, 40, 41, 43, 44, 45, 96, 97, 98, 100, 101], "were": [5, 9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 118], "cartesian": [5, 48, 97, 98, 99, 100, 113, 139], "copi": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 72, 74, 98, 99, 101, 139], "refer": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 101, 108, 111, 115, 119, 126], "case": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 98, 100, 114, 115], "modifi": [5, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "runtim": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 119], "sphere_position_radiu": 5, "start_sph_idx": 5, "updat": [5, 13, 14, 26, 27, 28, 29, 39, 40, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 97, 98, 99, 100, 101, 106, 111, 114, 115, 116, 119, 139], "distanc": [5, 10, 20, 22, 26, 27, 28, 29, 33, 34, 36, 55, 56, 57, 68, 70, 72, 92, 94, 97, 98, 99, 100, 108, 112, 113, 114, 115, 116, 117, 118, 128], "sphere_radiu": [5, 30, 97, 98, 100], "sphere_tensor": [5, 97, 98, 100], "attached_object": [5, 97, 98, 100, 139], "_summary_": 5, "rais": [5, 9, 11, 16, 23, 25, 31, 32, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 79, 97, 98, 100], "valueerror": [5, 32, 48, 49, 64, 67, 72, 74, 79, 97, 98, 100], "detach": [5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 74, 97, 98, 100, 106], "32": [5, 9, 98, 100], "attribut": [5, 9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98], "mesh_root": 6, "build_scene_graph": 6, "idx": [6, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 74, 78, 81, 98], "flip_joint": 7, "flip_joint_limit": 7, "more": [7, 9, 11, 16, 23, 25, 27, 30, 31, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 112, 113, 114, 115, 139], "complet": [7, 97, 106], "solut": [7, 39, 40, 41, 43, 44, 45, 88, 95, 97, 98, 99, 100, 113, 114, 117, 118, 123, 126, 131], "avail": [7, 28, 89, 97, 98, 99, 100, 108, 111, 113, 114, 115, 116, 119, 128], "futur": [7, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 114], "releas": [7, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 114, 115, 123, 124, 131, 132], "account": [7, 26, 27, 28, 29, 96, 98, 115, 116, 119], "after": [7, 9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 100, 106, 114, 116], "stage": [7, 86, 106, 114], "specif": [7, 26, 27, 28, 29, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 98, 100, 111, 114, 128, 139], "uniform": 7, "token": 7, "physic": 7, "match": [7, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 101, 139], "becaus": 7, "assum": [7, 26, 27, 28, 29, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 93, 98, 114, 128, 129], "obtain": [7, 97, 98, 108, 113, 114, 118, 123, 131], "tupl": [7, 9, 11, 16, 23, 25, 30, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 74, 92, 94, 96, 100, 101], "body0_rel_target": 7, "body1_rel_target": 7, "_backward_cl": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_get_compiled_autograd_symint": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_is_compiled_autograd_trac": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_materialize_non_diff_grad": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_raw_saved_tensor": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_register_hook": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_register_hook_dict": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_sequence_nr": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "appli": [8, 9, 11, 16, 20, 22, 23, 25, 31, 32, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 72, 98], "dirty_tensor": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "generate_vmap_rul": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "is_trac": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "jvp": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "mark_dirti": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "mark_non_differenti": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "mark_shared_storag": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "materialize_grad": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "maybe_clear_saved_tensor": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "metadata": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 72], "needs_input_grad": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "next_funct": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "non_differenti": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "register_hook": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "register_prehook": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "requires_grad": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 72], "save_for_backward": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "save_for_forward": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "saved_for_forward": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "saved_tensor": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "saved_vari": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "set_materialize_grad": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "setup_context": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "to_sav": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "vjp": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "vmap": [8, 9, 11, 16, 20, 22, 23, 25, 31, 50, 51, 53, 61, 62, 63, 68, 72], "_call_backward_cuda": [8, 11], "out_dist": 9, "out_vec": 9, "sparse_index": 9, "collision_offset": 9, "weight": [9, 25, 26, 27, 28, 29, 35, 39, 40, 41, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 97, 98, 100, 113, 114, 115], "coll_matrix": 9, "thread_siz": 9, "b_size": 9, "nsphere": 9, "compute_grad": 9, "arg": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 72, 79, 117], "kwarg": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 81], "ctx": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "sparse_idx": 9, "sphere_offset": 9, "max_thread": 9, "return_loss": [9, 25, 26, 27, 28, 29, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "overridden": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "subclass": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 117], "There": [9, 11, 16, 23, 25, 27, 31, 51, 53, 61, 63, 72, 88, 115], "two": [9, 11, 16, 23, 25, 27, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 97, 98, 100, 105, 107, 114, 115, 116, 125, 128, 139], "wai": [9, 11, 16, 23, 25, 27, 31, 37, 51, 53, 61, 63, 67, 72, 115], "usag": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98], "combin": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 115, 123, 131, 132], "staticmethod": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "def": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 117], "It": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 113], "must": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "accept": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "context": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 128], "first": [9, 11, 16, 23, 25, 26, 31, 32, 39, 40, 41, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 96, 97, 98, 100, 101, 107, 108, 115, 116, 117], "argument": [9, 11, 16, 23, 25, 31, 32, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 67, 72, 74, 97, 98, 100, 116, 128], "follow": [9, 11, 16, 23, 25, 31, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 85, 97, 99, 106, 108, 111, 112, 113, 114, 116, 117, 118, 119, 123, 131, 139], "see": [9, 11, 16, 23, 25, 30, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 106, 107, 113, 114, 116, 123, 124, 131, 133, 139], "separ": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "detail": [9, 11, 16, 23, 25, 30, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 112, 113, 114, 119, 123, 124, 131, 139], "input": [9, 11, 16, 23, 25, 30, 31, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 108, 115, 116, 117, 126, 128], "output": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 113, 115, 117, 126], "longer": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 118], "instead": [9, 11, 16, 23, 25, 31, 32, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 92, 94, 97, 98, 100, 107, 113, 114, 115, 120, 128], "overrid": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100], "autograd": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "handl": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 139], "extend": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "arbitrari": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 113], "retriev": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "should": [9, 11, 16, 23, 25, 31, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 115, 128, 139], "directli": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 72, 111, 113, 114, 139], "though": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "enforc": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 100], "compat": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100], "save": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 76, 86, 98, 115, 118], "either": [9, 11, 16, 23, 25, 31, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 100, 111, 129], "thei": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98], "intend": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "equival": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "grad_out_dist": 9, "formula": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "differenti": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 92, 94, 117], "oper": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 108], "mode": [9, 11, 16, 17, 23, 25, 27, 31, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 105, 114, 120], "automat": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 106, 107], "alia": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 111], "non": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 114], "gradient": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 114, 116, 123, 126, 131], "w": [9, 11, 16, 23, 25, 31, 43, 44, 51, 53, 61, 63, 72, 108, 115, 133, 136], "t": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 77, 97, 98, 100, 101, 108, 115, 116, 117], "If": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 97, 98, 99, 100, 101, 111, 112, 113, 115, 116, 119, 128, 130, 139], "requir": [9, 11, 16, 23, 25, 26, 28, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 101, 115, 116, 119, 123, 139], "grad": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "just": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 139], "boolean": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97], "whether": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "selfcollisiondistancebackward": 9, "backward_hook": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "hook": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "classmethod": [9, 11, 16, 23, 25, 26, 27, 28, 29, 31, 48, 49, 51, 53, 55, 61, 63, 67, 72, 80], "pytorch": [9, 11, 16, 23, 25, 27, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 72, 92, 94, 112, 116, 119, 120, 123, 128], "attempt": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 76, 80, 95, 98, 99], "autogener": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "mai": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "exist": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 101, 119, 120, 123, 128, 131, 139], "written": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 128], "otherwis": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100], "pleas": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 123, 131], "func": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "grad_input": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "got": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "respect": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 107, 114, 115], "mark": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "place": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 106, 107, 114, 115, 116, 123, 131], "call": [9, 11, 16, 23, 25, 26, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 101, 105, 106, 112, 113, 114, 120, 123, 124, 128, 131, 137], "most": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 100, 119], "insid": [9, 11, 16, 23, 25, 30, 31, 51, 53, 61, 63, 72, 115, 119, 120, 126], "been": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 100, 111, 114], "ensur": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100], "our": [9, 11, 16, 23, 25, 31, 51, 53, 56, 61, 63, 72, 88, 114, 115, 123, 128, 131, 132], "doesn": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "matter": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "befor": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 111, 113, 114, 118, 119, 126, 128, 139], "modif": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "exampl": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 98, 99, 100, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 119, 120, 123, 126, 129, 131, 139], "xdoctest": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "env": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 137], "torch_doctest_autograd": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "inplac": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "x_npy": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "share": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97, 98, 100, 111, 119], "storag": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "once_differenti": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "grad_output": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "doubl": [9, 11, 16, 23, 25, 31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "would": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 115, 118], "lead": [9, 11, 16, 23, 25, 31, 51, 53, 56, 61, 63, 72, 97, 112, 132], "wrong": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "engin": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "know": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 115], "unless": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "skip": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 76, 80, 96, 111, 112, 119, 139], "runtimeerror": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "variabl": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 64, 72, 97, 98, 100, 110, 111, 123, 128, 133, 136], "increas": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97, 98, 99, 100, 120, 128], "effici": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97], "still": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97], "alwai": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "go": [9, 11, 16, 23, 25, 31, 46, 51, 53, 61, 63, 72, 98, 107, 113, 116, 117], "zero": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 68, 72, 74, 98, 100, 113, 115], "same": [9, 11, 16, 23, 25, 27, 28, 29, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 88, 96, 97, 98, 100], "shape": [9, 11, 16, 22, 23, 25, 26, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 68, 70, 72, 74, 75, 77, 81, 96, 97, 100, 101, 112, 113, 115, 117], "indic": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 101, 114, 116, 126], "sort": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "g1": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "g2": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "zeros_lik": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "index_add_": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "pair": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 67, 72, 139], "oppos": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "prevent": [9, 11, 16, 23, 25, 31, 51, 53, 56, 61, 63, 72, 98, 100, 113], "incorrect": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "leak": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "saved_tensors_hook": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "intermediari": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "neither": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "nor": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "your": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 98, 100, 111, 112, 113, 114, 115, 116, 117, 120, 123, 128, 139], "do": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 113, 114, 115, 119, 139], "decor": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "error": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 79, 95, 97, 98, 111, 113, 118, 120], "d": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 78, 113, 115, 119], "through": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 53, 56, 61, 63, 72, 97, 98, 100, 107, 108, 111, 114, 115, 116, 117], "made": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 105], "weren": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "content": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 119, 139], "op": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 100], "how": [9, 11, 16, 23, 25, 31, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 111, 112, 113, 114, 115, 117], "grad_out": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "gx": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "gy": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "gz": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 111], "c": [9, 11, 15, 16, 23, 25, 31, 51, 53, 61, 63, 72, 111, 132, 135], "x_t": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "y_t": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "_": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 116], "fwad": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "dual_level": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "a_dual": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "make_du": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "undefin": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "expand": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "prior": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "simplefunc": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "No": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 137], "necessari": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "now": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 98, 100, 107, 116, 128, 139], "induc": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "signatur": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72], "happen": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "info": [9, 11, 16, 23, 25, 31, 42, 43, 44, 45, 46, 51, 53, 61, 63, 72, 79, 111], "in_dim": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "rule": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "behavior": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 107, 139], "underneath": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "For": [9, 11, 16, 23, 25, 26, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 72, 97, 98, 100, 107, 114, 115, 116, 118, 123, 131, 133], "both": [9, 11, 16, 23, 25, 27, 31, 34, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 99, 105, 139], "choos": [9, 11, 16, 23, 25, 31, 37, 43, 44, 45, 51, 53, 61, 63, 72], "size": [9, 11, 16, 23, 25, 26, 31, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 74, 97, 98, 99, 100, 112, 113, 115, 116, 118, 120], "being": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 97, 105, 106, 114, 116], "random": [9, 11, 16, 23, 25, 31, 32, 42, 44, 51, 53, 61, 63, 72, 97, 98, 100, 113, 115, 126], "second": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 97, 98, 100, 107, 108, 114, 115], "integ": [9, 11, 16, 23, 25, 31, 32, 49, 51, 53, 61, 63, 64, 67, 72, 74, 97, 100], "what": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 111, 115], "out_dim": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72], "similar": [9, 11, 16, 23, 25, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 113, 114, 139], "structur": [9, 11, 16, 23, 25, 31, 51, 53, 61, 63, 72, 75, 117], "per": [9, 11, 16, 23, 25, 31, 39, 40, 41, 43, 44, 45, 51, 53, 61, 63, 72, 97, 98, 100, 101, 114, 115, 128], "selfcollisiondistancelossbackward": 9, "out_position_dist": 9, "out_rotation_dist": 9, "out_p_vec": 9, "out_q_vec": 9, "out_idx": 9, "current_posit": 9, "goal_posit": 9, "current_quat": [9, 72], "goal_quat": [9, 72], "vec_weight": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "vec_converg": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "run_weight": [9, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "run_vec_weight": [9, 50, 55], "offset_waypoint": [9, 50, 55], "offset_tstep_fract": [9, 50, 55], "batch_pose_idx": [9, 47, 55, 67], "horizon": [9, 17, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 57, 59, 62, 63, 64, 66, 67, 75, 76, 81, 88, 92, 94, 96, 99, 100, 106, 113, 115, 126], "num_goal": [9, 55], "write_grad": 9, "write_dist": 9, "use_metr": [9, 50, 55], "project_dist": [9, 50, 55], "out_grad_p": 9, "out_grad_q": 9, "grad_dist": 9, "grad_p_dist": 9, "grad_q_dist": 9, "pose_weight": [9, 92, 94, 117], "grad_p_vec": 9, "grad_q_vec": 9, "use_dist": 9, "out_r_vec": 9, "out_p_grad": 9, "out_q_grad": 9, "grad_g_dist": 9, "grad_r_err": 9, "grad_out_idx": 9, "poseerrordistancebackward": 9, "_extended_summary_": [9, 27, 29], "poseerrorbackward": 9, "query_spher": [9, 25, 26, 27, 28, 29, 115, 128], "out_buff": [9, 72], "grad_out_buff": 9, "sparsity_idx": [9, 25], "activation_dist": [9, 25, 26, 27, 28, 29, 50, 51, 56], "max_dist": [9, 22, 25, 26, 27, 28, 29], "box_accel": 9, "box_dim": 9, "box_pos": 9, "box_en": 9, "n_env_obb": 9, "env_query_idx": [9, 25, 26, 27, 28, 29, 56, 92, 94, 115], "max_nob": 9, "n_sphere": [9, 27, 30, 32, 92, 94, 113, 115], "transform_back": 9, "compute_dist": 9, "use_batch_env": [9, 34, 36, 48, 49, 97], "sum_collis": [9, 26, 27, 28, 29, 50, 56], "compute_esdf": [9, 25, 26, 27, 28, 29], "sdfsphereobbbackward": 9, "speed_dt": [9, 25, 26, 27, 28, 29, 50, 56], "sweep_step": [9, 25, 26, 27, 28, 29, 50, 56], "enable_speed_metr": [9, 25, 26, 27, 28, 29], "sdfsweptsphereobbbackward": 9, "grid_featur": 9, "grid_param": 9, "grid_pos": 9, "grid_en": 9, "n_env_grid": 9, "sdfspherevoxelbackward": 9, "sdfsweptspherevoxelbackward": 9, "arg0": [10, 12, 13, 14, 18], "arg1": [10, 12, 13, 14, 18], "arg2": [10, 12, 13, 14, 18], "arg3": [10, 12, 13, 14, 18], "arg4": [10, 12, 13, 14, 18], "arg5": [10, 12, 13, 14, 18], "arg6": [10, 12, 13, 14, 18], "arg7": [10, 12, 13, 14, 18], "arg8": [10, 12, 13, 14, 18], "arg9": [10, 12, 13, 14, 18], "arg10": [10, 12, 13, 14, 18], "arg11": [10, 12, 13, 14, 18], "arg12": [10, 12, 13, 14, 18], "arg13": [10, 12, 13, 14, 18], "arg14": [10, 12, 14], "arg15": [10, 12, 14], "arg16": [10, 12], "arg17": [10, 12], "arg18": [10, 12], "arg19": [10, 12], "arg20": 10, "arg21": 10, "closest": [10, 97, 98, 115, 120], "point": [10, 20, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 92, 94, 97, 98, 100, 108, 114, 115, 120], "obb": [10, 26, 32, 98, 99, 100, 115], "voxel": [10, 20, 22, 26, 27, 29, 30, 32, 98, 115, 116, 120, 123, 124, 131], "arg22": 10, "arg23": 10, "arg24": 10, "arg25": 10, "swept": 10, "swpet": 10, "in_mat": [11, 31], "out_quat": [11, 31], "link_po": 11, "link_quat": 11, "b_robot_spher": 11, "global_cumul_mat": 11, "joint_seq": 11, "link_sphere_map": 11, "grad_out_link_po": 11, "grad_out_link_quat": 11, "grad_out_spher": 11, "link_pos_out": 11, "link_quat_out": 11, "robot_sphere_out": 11, "sparsity_opt": 11, "kinematicsfusedfunctionbackward": 11, "link_pos_seq": [11, 62, 64], "link_quat_seq": [11, 62, 64], "batch_robot_spher": 11, "q_in": [11, 117], "grad_out_q": [11, 31], "fuse": 12, "rotat": [12, 26, 27, 28, 29, 31, 67, 68, 72, 97, 98, 100, 125], "bfg": [13, 98, 99, 100, 123, 131, 132], "step": [13, 18, 43, 44, 45, 63, 64, 81, 88, 95, 96, 98, 99, 100, 107, 108, 113, 114, 116, 117, 119, 126, 132, 139], "line": [14, 37, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 107, 119, 126, 132], "best": [14, 30, 42, 43, 44, 45, 98, 100, 126], "best_x": 15, "best_c": 15, "best_grad": 15, "g_x": 15, "x_set": [15, 34, 36], "sv": 15, "c_idx": 15, "c_1": 15, "c_2": 15, "al": 15, "sw": 15, "aw": 15, "best_cost": 15, "best_q": 15, "best_iter": 15, "current_iter": 15, "d_opt": [15, 39], "iter": [15, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 112, 113, 115, 116], "delta_threshold": 15, "1e": [15, 100, 117], "05": [15, 34, 36, 85, 93, 97, 98, 100, 113, 118, 139], "relative_threshold": 15, "999": [15, 39, 40], "step_vec": 16, "rho_buff": [16, 39], "y_buffer": [16, 39], "s_buffer": [16, 39], "grad_q": [16, 39, 40], "x_0": 16, "grad_0": 16, "epsilon": [16, 38, 39, 100], "stable_mod": [16, 38, 39], "use_shared_buff": 16, "lbfgscubackward": 16, "out_posit": [17, 31, 63], "out_veloc": [17, 63], "out_acceler": [17, 63], "out_jerk": [17, 63], "u_posit": 17, "start_posit": [17, 63], "start_veloc": [17, 63], "start_acceler": [17, 63], "start_idx": [17, 34, 36, 63, 74], "traj_dt": [17, 63, 96], "u_acc": 17, "use_rk2": 17, "out_grad_posit": [17, 63], "grad_posit": 17, "grad_veloc": 17, "grad_acceler": 17, "grad_jerk": 17, "path1": [19, 89], "path2": [19, 89], "sourc": [19, 28, 72, 89, 98, 111, 123, 124, 131], "analyt": [20, 22, 26, 27, 28, 29], "sign": [20, 22, 26, 27, 28, 29, 97, 113, 114, 115, 116, 117, 118], "environ": [20, 22, 26, 27, 28, 29, 67, 92, 94, 97, 98, 99, 100, 101, 109, 110, 111, 116, 120, 123, 139], "These": [20, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 97, 105, 115, 118], "sdf_grid": [20, 22], "lookup_dist": [20, 22, 23], "compute_sdf_gradi": [20, 22, 23], "sdfgrid": [20, 22, 23], "create_collision_check": [20, 22, 24], "warp_primit": [20, 22], "sdfmeshwarppi": [20, 22, 25], "sweptsdfmeshwarppi": [20, 22, 25], "collisionbuff": [20, 22, 26, 128], "collisionquerybuff": [20, 22, 26, 27, 28, 29, 115], "collisioncheckertyp": [20, 22, 26, 27, 28, 29, 92, 94, 97, 98, 99, 100], "worldcollisionconfig": [20, 22, 24, 26, 27, 28, 29, 115], "worldcollis": [20, 22, 26, 34, 36, 48, 49, 56, 92, 94, 97, 98, 99, 100, 115], "worldprimitivecollis": [20, 22, 26, 28, 115], "world_blox": [20, 22, 115, 116], "worldbloxcollis": [20, 22, 27, 98, 115, 116], "world_mesh": [20, 22, 115], "warpmeshdata": [20, 22, 27, 28, 29], "worldmeshcollis": [20, 22, 28, 29, 115], "world_voxel": [20, 22], "worldvoxelcollis": [20, 22, 27, 29], "sample_surfac": [20, 30, 115], "voxel_surfac": [20, 30, 115], "voxel_volum": [20, 30, 115], "voxel_volume_insid": [20, 30, 115], "voxel_volume_sample_surfac": [20, 27, 30, 32, 98, 115], "metal": [20, 26, 27, 28, 29, 32, 86], "rough": [20, 26, 27, 28, 29, 32, 86, 128], "scale": [20, 26, 27, 28, 29, 32, 56, 68, 74, 86, 96, 98, 100, 115, 126], "color": [20, 26, 27, 28, 29, 32, 86, 105, 114, 115, 117], "texture_id": [20, 26, 27, 28, 29, 32], "textur": [20, 26, 27, 28, 29, 32], "get_trimesh_mesh": [20, 32], "save_as_mesh": [20, 32], "get_cuboid": [20, 32], "get_mesh": [20, 32], "get_transform_matrix": [20, 32], "get_spher": [20, 32], "get_bounding_spher": [20, 22, 27, 32, 100, 115], "dim": [20, 26, 27, 28, 29, 32, 70, 72, 74, 86, 113, 115, 117], "tip": [20, 32, 115], "height": [20, 26, 27, 28, 29, 32, 86, 115], "file_str": [20, 32], "vertic": [20, 22, 28, 32], "face": [20, 22, 28, 32], "vertex_color": [20, 32], "vertex_norm": [20, 32], "face_color": [20, 32], "update_materi": [20, 32], "get_mesh_data": [20, 32], "from_pointcloud": [20, 32], "map_path": [20, 32], "voxel_s": [20, 26, 27, 28, 29, 32], "integrator_typ": [20, 32], "mesh_file_path": [20, 32], "mapper_inst": [20, 32], "points_featur": [20, 32], "from_camera_observ": [20, 32], "feature_tensor": [20, 32], "xyzr_tensor": [20, 32], "feature_dtyp": [20, 32], "get_grid_shap": [20, 32], "create_xyzr_tensor": [20, 32], "get_occupied_voxel": [20, 32], "blox": [20, 22, 26, 32, 98], "create_obb_world": [20, 32, 115], "create_mesh_world": [20, 32], "create_collision_support_world": [20, 32, 115], "get_scene_graph": [20, 32], "create_merged_mesh_world": [20, 32], "get_obb_world": [20, 32], "get_mesh_world": [20, 32], "get_collision_check_world": [20, 32], "save_world_as_mesh": [20, 32, 115], "get_cache_dict": [20, 32], "add_obstacl": [20, 32, 117], "randomize_color": [20, 32, 115], "add_color": [20, 32], "add_materi": [20, 32, 76, 86], "get_obstacl": [20, 32], "remove_obstacl": [20, 32], "remove_absolute_path": [20, 32], "_abc_impl": [20, 32, 47, 49, 62, 64, 65, 67, 68, 72, 74, 95, 97, 100], "_is_protocol": [20, 32, 47, 49, 62, 64, 67, 68, 72, 74, 95, 97, 100], "count": [20, 32, 47, 49, 62, 64, 67, 68, 72, 74, 95, 97, 100], "neural": [22, 97, 98, 100, 113, 122, 123], "network": [22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 100, 113, 118, 122, 123, 131], "learn": [22, 97, 98, 99, 100, 113], "field": [22, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 116], "distance_buff": [22, 26], "grad_distance_buff": [22, 26], "sparsity_index_buff": [22, 26], "initialize_from_shap": [22, 26, 115], "_update_from_shap": [22, 26], "update_buffer_shap": [22, 26], "primitive_collision_buff": [22, 26], "mesh_collision_buff": [22, 26], "blox_collision_buff": [22, 26], "voxel_collision_buff": [22, 26], "create_from_shap": [22, 26], "get_gradient_buff": [22, 26, 50, 56], "primit": [22, 26, 27, 28, 29, 56, 114, 115, 116, 128], "world_model": [22, 26, 27, 28, 29, 34, 36, 86, 91, 92, 94, 95, 97, 98, 99, 100, 115, 117], "cach": [22, 26, 27, 28, 29, 86, 97, 98, 99, 100, 101, 115], "n_env": [22, 26, 27, 28, 29, 92, 94, 95, 101, 128], "checker_typ": [22, 26, 27, 28, 29], "max_esdf_dist": [22, 26, 27, 28, 29], "load_from_dict": [22, 26, 27, 28, 29], "load_collision_model": [22, 26, 27, 28, 29], "get_sphere_dist": [22, 26, 27, 28, 29, 115], "get_sphere_collis": [22, 26, 27, 28, 29], "get_swept_sphere_dist": [22, 26, 27, 28, 29], "get_swept_sphere_collis": [22, 26, 27, 28, 29], "get_sphere_trac": [22, 26, 27, 28, 29], "get_voxels_in_bounding_box": [22, 26, 27, 28, 29], "clear_voxelization_cach": [22, 26, 27, 28, 29], "update_cache_voxel": [22, 26, 27, 28, 29], "get_occupancy_in_bounding_box": [22, 26, 27, 28, 29], "get_esdf_in_bounding_box": [22, 26, 27, 28, 29], "get_mesh_in_bounding_box": [22, 26, 27, 28, 29], "_init_cach": [22, 26, 27, 28, 29], "load_batch_collision_model": [22, 26, 27, 28, 29], "_load_collision_model_in_cach": [22, 26, 27, 28, 29], "_create_obb_cach": [22, 26, 27, 28, 29], "add_obb_from_raw": [22, 26, 27, 28, 29], "add_obb": [22, 26, 27, 28, 29], "update_obb_dim": [22, 26, 27, 28, 29], "enable_obstacl": [22, 26, 27, 28, 29, 115], "enable_obb": [22, 26, 27, 28, 29], "update_obstacle_pos": [22, 26, 27, 28, 29, 115], "update_obb_pos": [22, 26, 27, 28, 29], "_get_obstacle_pos": [22, 26, 27, 28, 29], "get_obb_idx": [22, 26, 27, 28, 29], "clear_cach": [22, 26, 27, 28, 29], "clear_blox_lay": [22, 27], "_get_blox_sdf": [22, 27], "_get_blox_swept_sdf": [22, 27], "enable_blox": [22, 27], "update_blox_pos": [22, 27], "clear_bounding_box": [22, 27], "add_camera_fram": [22, 27, 95, 98], "process_camera_fram": [22, 27, 95, 98], "update_blox_hash": [22, 27], "update_blox_esdf": [22, 27], "update_blox_mesh": [22, 27], "get_mesh_from_blox_lay": [22, 27], "save_lay": [22, 27], "decay_lay": [22, 27], "_batch_tensor_voxel": [22, 27, 29], "_create_mesh_cach": [22, 27, 28, 29], "_create_voxel_cach": [22, 27, 29], "_get_sdf": [22, 27, 28, 29], "_get_swept_sdf": [22, 27, 28, 29], "_load_batch_mesh_to_warp": [22, 27, 28, 29], "_load_mesh_into_cach": [22, 27, 28, 29], "_load_mesh_to_warp": [22, 27, 28, 29], "_load_voxel_collision_model_in_cach": [22, 27, 29], "add_mesh": [22, 27, 28, 29, 115], "create_collision_cach": [22, 27, 28, 29, 115], "enable_mesh": [22, 27, 28, 29], "enable_voxel": [22, 27, 29], "get_mesh_idx": [22, 27, 28, 29], "get_voxel_grid": [22, 27, 29], "get_voxel_grid_shap": [22, 27, 29], "get_voxel_idx": [22, 27, 29], "update_all_mesh_pos": [22, 27, 28, 29], "update_mesh_from_warp": [22, 27, 28, 29], "update_mesh_pos": [22, 27, 28, 29], "update_mesh_pose_env": [22, 27, 28, 29], "update_voxel_data": [22, 27, 29], "update_voxel_featur": [22, 27, 29], "update_voxel_pos": [22, 27, 29], "m_id": [22, 28], "pt": [23, 32, 34, 36], "dist_matrix_flat": 23, "num_voxel": 23, "dist": 23, "sdfgridbackward": 23, "out_cost": [25, 51, 53], "out_grad": 25, "mesh_idx": 25, "mesh_pose_invers": 25, "mesh_en": 25, "n_env_mesh": 25, "sdfmeshwarppybackward": 25, "sweptsdfmeshwarppybackward": 25, "three": [26, 115, 125, 139], "main": [26, 98, 100, 115], "initi": [26, 36, 39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 96, 97, 98, 99, 100, 108, 113, 115, 117, 132, 139], "collision_typ": [26, 115], "checker": [26, 97, 98, 99, 100, 113, 114, 116, 123, 124, 128, 131], "param": [26, 31, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74], "nonetyp": [26, 51, 52, 53, 54, 55, 57, 58, 59], "100": [26, 27, 28, 29, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 81, 97, 98, 113, 115, 117, 118], "world_coll_checker_dict": [26, 27, 28, 29, 48, 49], "world_model_dict": [26, 27, 28, 29, 48, 49], "collision_query_buff": [26, 27, 28, 29], "via": [26, 27, 28, 29], "don": [26, 27, 28, 29, 116], "test": [26, 27, 28, 29, 111, 113, 114, 123], "02": [26, 27, 28, 29, 32, 34, 36, 85, 86, 98], "new_grid": [26, 27, 28, 29], "orient": [26, 32, 55, 72, 98, 100, 107, 114, 115, 118], "bound": [26, 32, 33, 34, 36, 39, 40, 41, 43, 44, 45, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 81, 85, 106, 115], "box": [26, 32, 114, 115], "speed": [26, 56, 98, 100, 115, 123, 124, 131, 139], "maximum": [26, 96, 98, 99, 100], "instanti": 26, "read": [26, 100, 106, 112, 113, 114, 123], "world_config": [26, 27, 28, 29, 86, 92, 94, 113, 115], "env_idx": [26, 27, 28, 29, 115], "fix_cache_refer": [26, 27, 28, 29], "world_config_list": [26, 27, 28, 29], "obb_cach": [26, 27, 28, 29], "w_obj_pos": [26, 27, 28, 29], "obj_w_pos": [26, 27, 28, 29], "lenght": [26, 27, 28, 29], "width": [26, 27, 28, 29], "3x3": [26, 27, 28, 29, 72], "obj_dim": [26, 27, 28, 29], "env_obj_idx": [26, 27, 28, 29], "give": [26, 27, 28, 29, 97, 113, 114], "obj_idx": [26, 27, 28, 29], "grid": [26, 27, 28, 29, 30, 97, 114, 117, 123, 124, 131], "representaiton": 27, "nvblox": [27, 32, 97, 98, 105, 112, 113, 114, 115, 116, 118, 123, 131], "depend": [27, 97, 111], "wrapper": [27, 98, 100, 116, 117, 129], "addition": [27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 129], "disk": [27, 97, 113, 116], "onlin": [27, 123], "than": [27, 56, 96, 97, 98, 99, 100, 101, 112, 113, 115, 116, 118, 123, 131, 132, 139], "against": [27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "facilit": 27, "creation": [27, 30, 98, 100], "layer_nam": 27, "bounding_box": [27, 98], "obstacle_nam": [27, 98], "surface_sphere_radiu": [27, 30, 32, 98], "002": [27, 32, 139], "fit_typ": [27, 30, 32], "voxelize_method": [27, 30, 32, 98], "rai": [27, 30, 32, 98], "pre_transform_pos": [27, 32], "clear_region": 27, "camera_observ": [27, 98], "process_aux": [27, 98], "file_nam": [27, 118], "mesh_cach": [27, 28, 29], "voxel_cach": [27, 29], "mesh_list": [27, 28, 29], "todo": [27, 29, 48, 49, 64, 83], "new_mesh": [27, 28, 29, 115], "env_mesh_idx": [27, 28, 29], "obs_idx": [27, 29], "warp_mesh_idx": [27, 28, 29], "new_voxel": [27, 29], "featur": [27, 29, 92, 94, 106, 107, 117, 123, 124, 131], "arrai": [28, 84, 85], "int64": 28, "compil": [28, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 118, 119, 120, 127, 128, 130], "load_obb_ob": 28, "euclidean": [29, 97, 116], "fit": [30, 32, 98, 100, 115], "here": [30, 39, 40, 46, 107, 111, 113, 115, 133, 139], "sampl": [30, 39, 40, 41, 42, 43, 44, 45, 46, 81, 91, 92, 94, 97, 98, 100, 113, 114, 115, 117], "surfac": [30, 98, 115], "intersect": [30, 115], "ocupio": [30, 115], "trimesh": [30, 32, 98], "n_cube": 30, "01": [30, 39, 56, 70, 96, 97, 98, 99, 100, 113, 120, 139], "out_point": 31, "out_gp": [31, 51, 53], "out_gq": 31, "out_gpt": 31, "adj_matrix": 31, "matric": 31, "real": [31, 98, 99, 100, 113, 114], "out_mat": 31, "adj_quaternion": 31, "out_matrix": [31, 72], "position2": 31, "quaternion2": 31, "out_quaternion": 31, "adj_po": 31, "adj_quat": 31, "adj_pos2": 31, "adj_quat2": 31, "adj_posit": 31, "adj_point": 31, "transformpointbackward": 31, "batchtransformpointbackward": 31, "adj_position2": 31, "adj_quaternion2": 31, "grad_out_posit": 31, "grad_out_quaternion": 31, "batchtransformposebackward": 31, "transformposebackward": 31, "poseinversebackward": 31, "grad_out_mat": 31, "quattomatrixbackward": 31, "adj_mat": 31, "matrixtoquaternionbackward": 31, "uniqu": [32, 97], "process_color": 32, "notimplementederror": [32, 67], "deriv": [32, 39, 40, 41, 48, 49, 98, 100], "transform_with_pos": 32, "np": [32, 43, 44, 45, 46, 74, 117], "x_length": 32, "y_length": 32, "z_length": 32, "pitch": 32, "world_pc": 32, "filter_close_point": 32, "tsdf": 32, "occup": [32, 116], "integr": [32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 98, 99, 115, 116, 120], "camera_ob": [32, 93], "pc_obstacl": 32, "transform_to_origin": 32, "feature_threshold": 32, "sequenc": [32, 43, 44, 45, 46, 48, 49, 64, 67, 72, 74, 97, 100, 106, 107], "current_world": 32, "merge_mesh": 32, "mesh_process": 32, "save_as_scene_graph": 32, "within": [32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 100, 108, 111, 115, 116, 123, 131, 132], "rang": [32, 72, 115, 117], "rgba": 32, "_abc": [32, 49, 64, 65, 67, 72, 74, 97, 100], "_abc_data": [32, 49, 64, 65, 67, 72, 74, 97, 100], "occurr": [32, 49, 64, 67, 72, 74, 97, 100], "stop": [32, 49, 55, 64, 67, 72, 74, 97, 100, 107, 114], "present": [32, 49, 64, 67, 72, 74, 97, 100], "recommend": [32, 49, 64, 67, 72, 74, 97, 98, 99, 100, 111], "success": [33, 34, 76, 80, 95, 96, 97, 98, 100, 113, 118], "start_q": [33, 34], "goal_q": [33, 34], "path_length": [33, 34], "solve_tim": [33, 34, 76, 80, 90, 95, 97, 98, 100, 102], "interpolated_plan": [33, 34, 95, 98], "valid_queri": [33, 34, 95, 98], "debug_info": [33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 95, 97, 98, 100], "optimized_dt": [33, 34, 95, 98, 100, 113], "path_buffer_last_tstep": [33, 34, 95, 98, 100], "node": [33, 34, 36], "edg": [33, 34, 36], "connect": [33, 34, 36], "shortest_path_length": [33, 34], "set_shortest_path_length": [33, 34], "get_node_dist": [33, 34], "max_nod": [33, 34, 36], "steer_delta_buff": [33, 34, 36], "sample_pt": [33, 34, 36], "node_similarity_dist": [33, 34, 36], "rejection_ratio": [33, 34, 36, 91, 92, 94, 97], "k_nn": [33, 34, 36], "c_max": [33, 34, 36], "vertex_n": [33, 34, 36], "graph_max_attempt": [33, 34, 36], "graph_min_attempt": [33, 34, 36], "init_nod": [33, 34, 36], "use_bias_nod": [33, 34, 36], "rollout_fn": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 67, 90, 95, 97, 99, 100, 102, 103, 113], "safety_rollout_fn": [33, 34, 36], "max_buff": [33, 34, 36], "max_cg_buff": [33, 34, 36], "compute_metr": [33, 34, 36, 90, 99, 102, 103], "interpolation_typ": [33, 34, 36, 95, 98, 100], "interpolation_step": [33, 34, 36, 86, 95, 98, 100], "seed": [33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 76, 81, 95, 97, 98, 99, 100, 101, 102, 103, 120, 123, 126, 131, 132], "use_cuda_graph_mask_sampl": [33, 34, 36], "distance_weight": [33, 34, 36], "bias_nod": [33, 34, 36, 95, 100], "interpolation_dt": [33, 34, 36, 85, 95, 98, 100, 113], "interpolation_devi": [33, 34, 36], "interpolation_acceleration_scal": [33, 34, 36], "load_from_robot_config": [33, 34, 36, 95, 97, 98, 99, 100, 107, 113], "check_feas": [33, 34, 36], "get_feasible_sample_set": [33, 34, 36], "mask_sampl": [33, 34, 36], "_mask_samples_cuda_graph": [33, 34, 36], "_mask_sampl": [33, 34, 36], "_cuda_graph_rollout_constraint": [33, 34, 36], "get_sampl": [33, 34, 36, 76, 81], "_sample_pt": [33, 34, 36], "get_biased_vertex_set": [33, 34, 36], "_compute_rotation_fram": [33, 34, 36], "get_new_vertex_set": [33, 34, 36], "validate_graph": [33, 34, 36], "get_graph_edg": [33, 34, 36], "get_graph": [33, 34, 36], "_validate_graph": [33, 34, 36], "_get_graph_shortest_path": [33, 34, 36], "batch_get_graph_shortest_path": [33, 34, 36], "batch_shortcut_path": [33, 34, 36], "get_node_idx": [33, 34, 36], "get_path_length": [33, 34, 35, 36], "get_graph_shortest_path_length": [33, 34, 36], "path_exist": [33, 34, 35, 36], "batch_path_exist": [33, 34, 36], "find_path": [33, 34, 36], "_find_path": [33, 34, 36], "compute_path_length": [33, 34, 36], "reset_graph": [33, 34, 35, 36], "_distanc": [33, 34, 36], "_hybrid_nearest": [33, 34, 36], "_nearest": [33, 34, 36], "_k_nearest": [33, 34, 36], "_batch_k_nearest": [33, 34, 36], "_near": [33, 34, 36], "_batch_steer_and_connect": [33, 34, 36], "_batch_steer": [33, 34, 36], "_add_batch_edges_to_graph": [33, 34, 36], "add_nodes_to_graph": [33, 34, 36], "_add_unique_nodes_to_graph": [33, 34, 36], "connect_nod": [33, 34, 36], "get_path": [33, 34, 36, 95, 98], "get_metr": [33, 34, 36, 47, 48, 49, 67, 90, 102, 103], "reset_se": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 67, 90, 95, 97, 98, 100, 102, 103], "reset_cuda_graph": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 67, 90, 95, 97, 99, 100, 102, 103], "get_all_rollout_inst": [33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 90, 95, 97, 98, 100, 102, 103], "warmup": [33, 34, 36, 95, 98, 113], "add_nod": [33, 35], "add_edg": [33, 35], "update_graph": [33, 35, 98], "get_edg": [33, 35], "get_shortest_path": [33, 35], "_add_bias_graph": [33, 36], "_find_one_path": [33, 36], "_find_all_path": [33, 36], "build_graph": [33, 36], "graph_dict": [34, 36], "use_cuda_graph": [34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 93, 95, 97, 98, 99, 100, 102, 103, 113], "robot_cfg": [34, 36, 48, 49, 64, 95, 97, 98, 99, 100, 113, 139], "world_coll_check": [34, 36, 47, 48, 49, 50, 56, 95, 97, 98, 99, 100], "base_cfg_fil": [34, 36, 97, 98, 100], "base_cfg": [34, 36, 97, 98, 99, 100], "yml": [34, 36, 92, 94, 97, 98, 99, 100, 111, 113, 114, 117, 118, 125, 139], "graph_fil": [34, 36, 98], "self_collision_check": [34, 36, 97, 98, 99, 100, 113], "x_sampl": [34, 36], "n_sampl": [34, 36], "unit_bal": [34, 36], "123": [34, 36, 81, 118], "x_start": [34, 36], "x_goal": [34, 36], "c_min": [34, 36], "lazi": [34, 36], "locat": [34, 36, 106, 115, 116, 128, 139], "start_node_idx": [34, 35, 36], "goal_node_idx": [34, 35, 36], "return_length": [34, 35, 36], "start_idx_list": [34, 36], "goal_idx_list": [34, 36], "g_path": [34, 36], "goal_idx": [34, 36, 53, 57], "goal_stat": [34, 36, 47, 67, 98, 99, 100, 101, 113], "exact": [34, 36, 55, 97, 107, 127], "all_path": [34, 36], "x_init": [34, 36], "abstract": [34, 41, 43, 44, 45, 48, 49, 65, 66, 67, 115], "x_search": 34, "c_search": 34, "batch_pt": [34, 36], "norm": [34, 36, 77, 97, 100, 117], "sample_nod": [34, 36], "k_n": [34, 36], "sample_point": [34, 36], "current_graph": [34, 36], "k": [34, 36], "start_nod": [34, 36], "goal_nod": [34, 36], "add_steer_pt": [34, 36], "add_exact_nod": [34, 36], "descript": [34, 36, 72, 119, 139], "desired_nod": [34, 36], "steer_radiu": [34, 36], "new_nod": [34, 36], "skip_unique_check": [34, 36], "connect_mod": [34, 36], "knn": [34, 36], "edge_set": [34, 36], "path_list": [34, 36], "edge_list": 35, "node_list": 35, "start_i": 35, "end_i": 35, "attribu": 35, "x_init_batch": 36, "x_goal_batch": 36, "node_set_batch": 36, "node_set": 36, "find": [36, 39, 40, 41, 43, 44, 45, 67, 96, 97, 98, 100, 114, 115, 123, 126, 131], "return_path_length": 36, "h": [36, 63, 64, 100], "number_of_nod": 36, "bias_sampl": 36, "lazy_nod": 36, "opim": 37, "popular": 37, "particle_opt_bas": [37, 42, 43, 44], "particleoptbas": [37, 42, 44, 45, 102, 103], "quasi": [37, 38, 39, 40, 41, 43, 44, 45], "newton_bas": [37, 38, 39, 126], "newtonoptbas": [37, 38, 39, 40, 102, 103, 126], "scheme": [37, 132], "tri": [37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 113, 114, 115], "differ": [37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 97, 98, 99, 100, 101, 107, 111, 113, 115, 116, 123, 128, 131, 139], "magnitud": [37, 39, 40, 41, 43, 44, 45], "parallel": [37, 39, 40, 41, 42, 43, 44, 45, 67, 97, 98, 99, 114, 115, 123, 126, 131, 135], "largest": [37, 98], "satisfi": [37, 98, 100, 114], "condit": 37, "lbfg": [37, 38, 97, 100, 126], "jit_lbfgs_compute_step_direct": [37, 38, 39], "lbfgsoptconfig": [37, 38, 39, 100], "lbfgsopt": [37, 38, 39], "linesearchtyp": [37, 38, 39, 40], "newtonoptconfig": [37, 38, 39, 40], "parallel_": [37, 42], "parallelesconfig": [37, 42, 43], "parallel_mppi": [37, 42, 43], "baseactiontyp": [37, 42, 43, 44], "covtyp": [37, 42, 43, 44], "parallelmppiconfig": [37, 42, 43, 44], "parallelmppi": [37, 42, 43, 44], "samplemod": [37, 42, 43, 44, 45], "particleoptinfo": [37, 42, 45], "particleoptconfig": [37, 42, 44, 45], "particle_opt_util": [37, 42, 43, 44], "squashtyp": [37, 42, 43, 44, 46], "scale_ctrl": [37, 42, 46], "get_stomp_cov": [37, 42, 46], "gaussian_logprob": [37, 42, 46], "gaussian_logprobgrad": [37, 42, 46], "gaussian_entropi": [37, 42, 46], "gaussian_kl": [37, 42, 46], "cost_to_go": [37, 42, 46], "cost_to_go_np": [37, 42, 46], "matrix_choleski": [37, 42, 46], "batch_choleski": [37, 42, 46], "d_action": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 67, 76, 81], "action_low": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "action_high": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "action_horizon": [37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 62, 64, 67, 95, 100], "n_iter": [37, 38, 39, 40, 41, 42, 43, 44, 45], "cold_start_n_it": [37, 38, 39, 40, 41, 42, 43, 44, 45], "store_debug": [37, 38, 39, 40, 41, 42, 43, 44, 45, 97, 100], "n_problem": [37, 38, 39, 40, 41, 42, 43, 44, 45, 102, 103], "num_particl": [37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 81], "sync_cuda_tim": [37, 38, 39, 40, 41, 42, 43, 44, 45, 90, 95, 97, 98, 99, 100, 102, 103], "use_coo_spars": [37, 38, 39, 40, 41, 42, 43, 44, 45], "create_data_dict": [37, 38, 39, 40, 41, 42, 43, 44, 45], "update_param": [37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 67, 90, 102, 103], "reset": [37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 76, 81, 82, 90, 95, 97, 98, 99, 100, 102, 103, 120], "update_nproblem": [37, 38, 39, 40, 41, 42, 43, 44, 45, 90, 102, 103], "get_nproblem_tensor": [37, 38, 39, 40, 41, 42, 43, 44, 45], "reset_shap": [37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 67, 90, 95, 97, 100, 102, 103], "_optim": [37, 38, 39, 40, 41, 42, 43, 44, 45], "_shift": [37, 38, 39, 40, 41, 42, 43, 44, 45, 90, 103], "_update_problem_kernel": [37, 38, 39, 40, 41, 42, 43, 44, 45], "histori": [38, 39, 116], "use_cuda_kernel": [38, 39], "use_shared_buffers_kernel": [38, 39], "cost_relative_threshold": [38, 39, 40], "last_best": [38, 39, 40], "use_temporal_smooth": [38, 39, 40], "line_search_scal": [38, 39, 40], "cost_converg": [38, 39, 40], "cost_delta_threshold": [38, 39, 40], "fixed_it": [38, 39, 40, 100], "inner_it": [38, 39, 40, 100], "line_search_typ": [38, 39, 40], "use_cuda_line_search_kernel": [38, 39, 40], "use_cuda_update_best_kernel": [38, 39, 40], "min_it": [38, 39, 40], "step_scal": [38, 39, 40], "init_hessian": [38, 39], "_get_step_direct": [38, 39, 40], "_update_q": [38, 39], "_update_r": [38, 39], "_update_buff": [38, 39], "_shift_buff": [38, 39], "_approx_line_search": [38, 39, 40], "_armijo_line_search": [38, 39, 40], "_call_opt_iters_graph": [38, 39, 40], "_compute_cost_gradi": [38, 39, 40], "_create_box_line_search": [38, 39, 40], "_create_opt_iters_graph": [38, 39, 40], "_greedy_line_search": [38, 39, 40], "_initialize_opt_iters_graph": [38, 39, 40], "_opt_it": [38, 39, 40], "_opt_step": [38, 39, 40], "_update_best": [38, 39, 40], "_wolfe_line_search": [38, 39, 40], "check_converg": [38, 39, 40, 42, 43, 44, 45], "clip_bound": [38, 39, 40], "project_bound": [38, 39, 40], "scale_step_direct": [38, 39, 40], "greedi": [38, 40], "armijo": [38, 40], "wolf": [38, 40], "strong_wolf": [38, 40], "approx_wolf": [38, 40], "alpha_buff": 39, "m": [39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 116, 118, 139], "child_dict": [39, 40, 41, 43, 44, 45], "timestep": [39, 40, 41, 43, 44, 45, 55, 56, 86, 88, 98, 100, 107, 113, 120], "lower": [39, 40, 41, 43, 44, 45, 97, 98, 113, 114, 118], "higher": [39, 40, 41, 43, 44, 45, 97, 98, 100, 118, 123, 124, 131], "run": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 111, 112, 113, 114, 116, 117, 119, 123, 126, 130, 131, 139], "cold": [39, 40, 41, 43, 44, 45], "few": [39, 40, 41, 43, 44, 45, 107, 113, 114, 126], "warm": [39, 40, 41, 43, 44, 45], "captur": [39, 40, 41, 43, 44, 45, 97, 99, 100, 112, 113], "replai": [39, 40, 41, 43, 44, 45, 98, 100, 112], "eager": [39, 40, 41, 43, 44, 45], "execut": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 114, 118], "make": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 88, 97, 111, 113, 119], "10x": [39, 40, 41, 43, 44, 45, 97, 98, 100, 112, 113], "faster": [39, 40, 41, 43, 44, 45, 98, 100, 112, 115, 118, 123, 131, 132], "But": [39, 40, 41, 43, 44, 45, 120], "chang": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100, 101, 105, 107, 111, 112, 113, 114, 116, 118, 120, 123, 124, 131], "flow": [39, 40, 41, 43, 44, 45, 115], "problem": [39, 40, 41, 43, 44, 45, 97, 98, 99, 100, 101, 107, 112, 113, 115, 118, 120, 128, 132, 137], "record": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 112, 113], "disabl": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 106, 128, 130], "mppi": [39, 40, 41, 43, 44, 45, 97, 98, 99, 100, 113, 116, 123, 126, 131, 133, 136], "roll": [39, 40, 41, 43, 44, 45], "mean": [39, 40, 41, 42, 43, 44, 45, 46, 113, 117, 118], "synchron": [39, 40, 41, 43, 44, 45, 97, 98, 99, 100], "time": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 76, 80, 85, 96, 97, 98, 99, 100, 113, 114, 115, 118, 123, 124, 128, 131], "matmul": [39, 40, 41, 43, 44, 45], "spars": [39, 40, 41, 43, 44, 45, 98, 120], "version": [39, 40, 41, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 119], "coo": [39, 40, 41, 43, 44, 45], "profil": [39, 40, 41, 43, 44, 45, 122, 123], "reimplement": [39, 40], "descent": [39, 40, 97, 98, 100, 123, 126, 131], "r_init": 39, "shift_step": [39, 40, 41, 43, 44, 45, 48, 49, 64, 67, 99, 102, 103], "shift": [39, 40, 41, 43, 44, 45, 63, 99], "shift_d": 39, "step_direct": [39, 40], "opt_tensor": [39, 40, 41, 43, 44, 45], "n_particl": [39, 40, 41, 43, 44, 45], "workaround": [39, 40, 41, 43, 44, 45], "reiniti": [39, 40, 41, 43, 44, 45, 120], "dx": [39, 40], "hotstart": [40, 41, 43, 44, 45], "next": [40, 41, 43, 44, 45, 99, 112, 114, 116, 117, 139], "learning_r": [42, 43], "init_mean": [42, 43, 44], "init_cov": [42, 43, 44], "base_act": [42, 43, 44], "step_size_mean": [42, 43, 44], "step_size_cov": [42, 43, 44], "null_act_frac": [42, 43, 44], "squash_fn": [42, 43, 44, 46], "cov_typ": [42, 43, 44, 46], "sample_param": [42, 43, 44], "update_cov": [42, 43, 44], "random_mean": [42, 43, 44], "beta": [42, 43, 44], "alpha": [42, 43, 44], "gamma": [42, 43, 44, 45], "kappa": [42, 43, 44], "sample_per_problem": [42, 43, 44], "sample_mod": [42, 43, 44, 45], "calculate_valu": [42, 43, 44, 45], "store_rollout": [42, 43, 44, 45, 99, 113], "_compute_mean": [42, 43, 44], "_exp_util_from_cost": [42, 43, 44], "_exp_util": [42, 43, 44], "_compute_mean_covari": [42, 43, 44], "_update_distribut": [42, 43, 44, 45], "_calc_val": [42, 43, 44, 45], "_call_cuda_opt_it": [42, 43, 44, 45], "_compute_covari": [42, 43, 44], "_compute_total_cost": [42, 43, 44], "_get_action_seq": [42, 43, 44, 45], "_initialize_cuda_graph": [42, 43, 44, 45], "_run_opt_it": [42, 43, 44, 45], "_update_cov_scal": [42, 43, 44], "entropi": [42, 43, 44, 46], "full_cov": [42, 43, 44], "full_inv_cov": [42, 43, 44], "full_scale_tril": [42, 43, 44], "generate_rollout": [42, 43, 44, 45], "get_rollout": [42, 43, 44, 90, 103], "reset_covari": [42, 43, 44], "reset_distribut": [42, 43, 44], "reset_mean": [42, 43, 44], "sample_act": [42, 43, 44, 45], "squashed_mean": [42, 43, 44], "update_init_mean": [42, 43, 44], "update_num_particles_per_problem": [42, 43, 44, 45], "update_sampl": [42, 43, 44], "update_se": [42, 43, 44, 45], "repeat": [42, 44, 68, 72, 100, 107, 117, 128], "null": [42, 44, 57, 139], "sigma_i": [42, 44], "diag_a": [42, 44], "full_a": [42, 44], "full_ha": [42, 44], "clamp": [42, 46, 100], "clamp_rescal": [42, 46], "tanh": [42, 46, 117], "ident": [42, 46, 50, 57], "total_cost": [43, 44], "distribut": [43, 44, 45], "observ": [43, 44, 45, 98], "calcul": [43, 44, 45, 46, 98, 99, 100, 118], "polici": [43, 44, 45, 118, 123, 131], "init_act": [43, 44, 45], "exponenti": [43, 44], "system": [43, 44, 45, 85, 123, 133, 136], "plai": [43, 44, 45, 107, 111, 114, 116, 139], "calc_val": [43, 44, 45], "estim": [43, 44, 45, 98, 132], "side": [43, 44, 45], "new_cov": [43, 44], "converg": [43, 44, 45, 97, 98, 99, 100], "base_se": [43, 44, 81], "correl": [43, 44, 81], "noisi": [43, 44, 81, 98, 132], "autoregress": [43, 44, 81], "result": [43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 86, 97, 98, 99, 100, 105, 113, 115, 123, 131], "simul": [43, 44, 45, 48, 49, 113, 114, 116], "num_particles_per_problem": [43, 44, 45], "ctrl": 46, "cov_mod": [46, 76, 81], "acc": [46, 51, 74], "return_m": 46, "covari": 46, "stomp": 46, "planner": [46, 56, 98, 105, 123, 131, 132, 137], "coeffici": 46, "en": 46, "wikipedia": 46, "org": [46, 111, 139], "wiki": [46, 139], "finite_difference_coeffici": 46, "industri": [46, 139], "stomp_ro": 46, "blob": 46, "7fe40fbe6ad446459d8d4889916c64e276dbf882": 46, "stomp_cor": 46, "src": [46, 139], "cpp": 46, "l36": 46, "cov": [46, 81], "gaussian": [46, 81], "log": [46, 79, 86, 117, 118], "prob": 46, "num_sampl": [46, 81], "log_prob": 46, "probabl": 46, "multivari": 46, "choleski": 46, "decomposit": 46, "mean0": 46, "cov0": 46, "mean1": 46, "cov1": 46, "kl": 46, "diverg": 46, "p": [46, 111, 118], "e_": [46, 117], "cost_seq": 46, "gamma_seq": 46, "only_first": 46, "discount": 46, "bound_cost": [47, 48, 49, 50, 91, 92, 94], "boundcosttyp": [47, 50, 51], "boundcostconfig": [47, 48, 49, 50, 51], "boundcost": [47, 50, 51, 92, 94], "warpboundsmoothfunct": [47, 50, 51], "warpboundfunct": [47, 50, 51], "warpboundposfunct": [47, 50, 51], "warpboundposloss": [47, 50, 51], "cost_bas": [47, 49, 50], "costconfig": [47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "costbas": [47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61], "dist_cost": [47, 48, 49, 50, 57], "disttyp": [47, 50, 53, 57], "distcostconfig": [47, 48, 49, 50, 53, 57], "l2distfunct": [47, 50, 53], "distcost": [47, 49, 50, 53, 57], "manipulability_cost": [47, 48, 49, 50], "manipulabilitycostconfig": [47, 48, 49, 50, 54], "manipulabilitycost": [47, 50, 54], "pose_cost": [47, 49, 50, 91, 92, 94, 98, 107], "poseerrortyp": [47, 50, 55], "posecostconfig": [47, 49, 50, 55], "posecostmetr": [47, 49, 50, 55, 97, 98, 100, 107], "posecost": [47, 49, 50, 55, 92, 94], "primitive_collision_cost": [47, 48, 49, 50, 92, 94, 115], "primitivecollisioncostconfig": [47, 48, 49, 50, 56, 115], "primitivecollisioncost": [47, 50, 56, 92, 94], "projected_dist_cost": [47, 50], "projtyp": [47, 50, 57], "projecteddistcostconfig": [47, 50, 57], "projecteddistcost": [47, 50, 57], "self_collision_cost": [47, 48, 49, 50, 91, 92, 94, 117], "selfcollisioncostconfig": [47, 48, 49, 50, 58], "selfcollisioncost": [47, 50, 58, 92, 94], "stop_cost": [47, 48, 49, 50], "stopcostconfig": [47, 48, 49, 50, 59], "stopcost": [47, 50, 59], "straight_line_cost": [47, 50], "straightlinecost": [47, 50, 60], "zero_cost": [47, 50], "squaredsum": [47, 50, 61], "runsquaredsum": [47, 50, 61], "zerocost": [47, 50, 61], "integration_util": [47, 62], "build_clique_matrix": [47, 62, 63], "build_fd_matrix": [47, 62, 63], "build_int_matrix": [47, 62, 63], "build_start_state_mask": [47, 62, 63], "tensor_step_jerk": [47, 62, 63], "euler_integr": [47, 62, 63], "tensor_step_acc": [47, 62, 63], "cliquetensorstep": [47, 62, 63], "cliquetensorstepkernel": [47, 62, 63], "cliquetensorstepidxkernel": [47, 62, 63], "cliquetensorstepcentraldifferencekernel": [47, 62, 63], "cliquetensorstepidxcentraldifferencekernel": [47, 62, 63], "cliquetensorstepcoalescekernel": [47, 62, 63], "accelerationtensorstepkernel": [47, 62, 63], "accelerationtensorstepidxkernel": [47, 62, 63], "tensor_step_pos_cliqu": [47, 62, 63], "step_acc_semi_eul": [47, 62, 63], "tensor_step_acc_semi_eul": [47, 62, 63], "tensor_step_vel": [47, 62, 63], "tensor_step_po": [47, 62, 63], "tensor_step_pos_ik": [47, 62, 63], "tensor_linspac": [47, 62, 63], "sum_matrix": [47, 62, 63], "interpolate_kernel": [47, 62, 63], "action_interpolate_kernel": [47, 62, 63], "kinematic_model": [47, 48, 49, 59, 62], "timetrajconfig": [47, 59, 62, 64], "kinematicmodelst": [47, 48, 49, 62, 64, 98], "kinematicmodelconfig": [47, 48, 49, 62, 64], "kinematicmodel": [47, 62, 64], "model_bas": [47, 62], "dynamicsmodelbas": [47, 62, 65], "tensorsteptyp": [47, 62, 66], "tensorstepbas": [47, 62, 66], "tensorstepacceler": [47, 62, 66], "tensorsteppositionteleport": [47, 62, 66], "tensorstepposit": [47, 62, 66], "tensorsteppositioncliqu": [47, 62, 66], "tensorstepaccelerationkernel": [47, 62, 66], "tensorsteppositioncliquekernel": [47, 62, 66], "bound_cfg": [47, 48, 49, 97], "null_space_cfg": [47, 48, 49, 97], "manipulability_cfg": [47, 48, 49], "stop_cfg": [47, 48, 49], "self_collision_cfg": [47, 48, 49], "primitive_collision_cfg": [47, 48, 49], "_get_base_kei": [47, 48, 49], "_get_formatted_dict": [47, 48, 49], "model_cfg": [47, 48, 49], "cost_cfg": [47, 48, 49], "constraint_cfg": [47, 48, 49], "convergence_cfg": [47, 48, 49], "model_from_dict": [47, 48, 49], "cost_from_dict": [47, 48, 49], "world_coll_checker_from_dict": [47, 48, 49], "sampler_se": [47, 48, 49, 67], "sum_horizon": [47, 48, 49, 67], "_init_after_config_load": [47, 48, 49, 67], "cost_fn": [47, 48, 49, 67], "constraint_fn": [47, 48, 49, 67], "get_metrics_cuda_graph": [47, 48, 49, 67], "convergence_fn": [47, 48, 49, 67], "_get_augmented_st": [47, 48, 49], "compute_kinemat": [47, 48, 49, 95, 98, 113], "rollout_constraint": [47, 48, 49, 67], "rollout_constraint_cuda_graph": [47, 48, 49], "get_ee_pos": [47, 48, 49], "current_cost": [47, 48, 49, 67], "filter_robot_st": [47, 48, 49, 62, 64, 65, 67], "get_robot_command": [47, 48, 49, 62, 64, 65, 67], "action_bound_low": [47, 48, 49, 62, 64, 67], "action_bound_high": [47, 48, 49, 62, 64, 67], "state_bound": [47, 48, 49, 67], "dt": [47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 74, 76, 82, 85, 86, 96, 98, 99, 100, 113, 114, 117], "get_init_action_seq": [47, 48, 49, 67], "get_action_from_st": [47, 48, 49, 62, 64, 67], "get_state_from_act": [47, 48, 49, 62, 64, 67], "cspace_config": [47, 48, 49, 67], "get_full_dof_from_solut": [47, 48, 49, 67], "retract_st": [47, 48, 49, 67], "update_traj_dt": [47, 48, 49, 62, 64], "update_cost_dt": [47, 48, 49], "action_bound": [47, 48, 49, 67], "sample_random_act": [47, 48, 49, 67], "update_start_st": [47, 48, 49, 67], "cspace_error": [47, 49, 95, 98, 100], "position_error": [47, 49, 76, 80, 95, 97, 98, 100], "rotation_error": [47, 49, 95, 97, 98, 100], "pose_error": [47, 49, 100, 113], "goalset_index": [47, 49, 95, 97, 98, 100], "null_space_error": [47, 49], "constraint": [47, 49, 55, 67, 97, 98, 99, 100, 107, 112, 113, 114], "feasibl": [47, 49, 67, 97, 98], "pose_cfg": [47, 49], "cspace_cfg": [47, 49], "straight_line_cfg": [47, 49], "zero_acc_cfg": [47, 49], "zero_vel_cfg": [47, 49], "zero_jerk_cfg": [47, 49], "link_pose_cfg": [47, 49], "enable_pose_cost": [47, 49, 95, 99, 113], "enable_cspace_cost": [47, 49, 95, 99, 113], "get_pose_cost": [47, 49], "update_pose_cost_metr": [47, 49, 95, 97, 98, 100], "goal_pos": [47, 55, 67, 86, 95, 97, 98, 99, 100, 101, 113], "links_goal_pos": [47, 67], "current_st": [47, 48, 49, 64, 65, 67, 81, 99, 113], "batch_goal_state_idx": [47, 67], "batch_retract_state_idx": [47, 67], "batch_current_state_idx": [47, 67], "batch_enable_idx": [47, 67], "batch_world_idx": [47, 67], "update_batch_idx_buff": [47, 67], "n_goalset": [47, 67, 68, 72, 95, 98, 101], "_update_batch_s": [47, 67, 95, 99], "repeat_se": [47, 67, 68, 72, 74], "_tensor_repeat_se": [47, 67], "apply_kernel": [47, 67, 68, 72, 74], "_copy_buff": [47, 67], "_copy_tensor": [47, 67], "get_batch_goal_st": [47, 67], "create_index_buff": [47, 67], "create_idx": [47, 67], "robot_config": [48, 49, 62, 64, 92, 94, 95, 97, 100], "cost_key_list": [48, 49], "1312": [48, 49, 67], "model_data_dict": [48, 49], "cost_data_dict": [48, 49], "constraint_data_dict": [48, 49], "convergence_data_dict": [48, 49], "declar": [48, 49], "reach": [48, 55, 97, 98, 99, 100, 101, 107, 113, 114, 116, 138], "action_batch": [48, 49], "return_list": 48, "out_metr": [48, 49, 67], "urdfmodelst": [48, 49], "act_seq": [48, 49, 64, 65, 67, 102, 103], "encount": [48, 49], "action_seq": [48, 49], "d_act": [48, 49], "target": [48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 97, 98, 99, 100, 101, 105, 107, 111, 114, 116], "no_col": [48, 49], "return_st": [48, 49], "state_idx": [48, 49, 64, 67], "start_stat": [48, 49, 64, 65, 66, 67, 86, 98, 100, 113], "q_j": [48, 49, 67], "q_sol": [48, 49], "base_dt": [48, 49, 62, 64, 100], "max_dt": [48, 49, 62, 64, 85, 95, 96, 98, 100], "base_ratio": [48, 49, 62, 64, 100], "clone_st": [49, 67], "term": [49, 97, 98, 100, 113, 114, 126], "dynam": [49, 84, 99, 116], "include_link_pos": 49, "include_converg": 49, "bounds_smooth": [50, 51], "smooth_weight": [50, 51, 98, 100], "run_weight_veloc": [50, 51], "run_weight_acceler": [50, 51], "run_weight_jerk": [50, 51], "cost_typ": [50, 51, 55], "state_finite_difference_mod": [50, 51, 62, 64, 98, 100], "set_bound": [50, 51], "classifi": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "hinge_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "max_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "termin": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 100, 114], "threshold_valu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "update_vec_weight": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "update_dt": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66], "t_destin": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_appli": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_call_impl": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_compiled_call_impl": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_get_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_get_backward_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_get_nam": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_init_post_config": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_load_from_state_dict": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_maybe_warn_non_full_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_named_memb": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_register_load_state_dict_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_register_state_dict_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_replicate_for_data_parallel": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_save_to_state_dict": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_slow_forward": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_version": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_wrapped_call_impl": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "add_modul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bfloat16": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "call_super_init": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "children": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "cpu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 68, 69, 81, 85], "disable_cost": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "dump_patch": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "enable_cost": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "eval": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "extra_repr": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_buff": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_extra_st": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_paramet": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_submodul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "half": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "ipu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "load_state_dict": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "named_buff": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "named_children": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "named_modul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "named_paramet": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_buff": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_forward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_forward_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_full_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_full_backward_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_load_state_dict_post_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_modul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_paramet": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_state_dict_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "requires_grad_": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "set_extra_st": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "share_memori": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "state_dict": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "to_empti": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "train": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "update_weight": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "xpu": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "zero_grad": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "_paramet": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_buffer": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_non_persistent_buffers_set": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_backward_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_is_full_backward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_forward_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_forward_hooks_with_kwarg": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_forward_hooks_always_cal": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_forward_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_forward_pre_hooks_with_kwarg": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_state_dict_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_load_state_dict_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_state_dict_pre_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_load_state_dict_post_hook": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_modul": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "l1": [50, 53], "l2": [50, 53, 57, 98, 100, 101], "squared_l2": [50, 53], "dist_typ": [50, 53, 57], "use_null_spac": [50, 53, 57], "forward_target": [50, 53, 57], "forward_target_idx": [50, 53, 57], "use_joint_limit": [50, 54], "manipul": [50, 54, 98, 106, 115, 116, 123, 131, 132, 133, 136], "joint_limited_manipulability_delta": [50, 54], "single_go": [50, 55], "batch_goal": [50, 55], "goalset": [50, 55, 72, 95, 97, 98, 99, 100, 101], "batch_goalset": [50, 55, 95, 101], "use_projected_dist": [50, 55], "hold_partial_pos": [50, 55], "release_partial_pos": [50, 55], "hold_vec_weight": [50, 55, 107], "reach_partial_pos": [50, 55], "reach_full_pos": [50, 55], "reach_vec_weight": [50, 55], "offset_posit": [50, 55, 107], "offset_rot": [50, 55], "remove_offset_waypoint": [50, 55], "create_grasp_approach_metr": [50, 55, 107], "reset_metr": [50, 55], "update_metr": [50, 55], "update_offset_waypoint": [50, 55], "update_run_weight": [50, 55], "initialize_run_weight_vec": [50, 55], "goalset_index_buff": [50, 55], "_forward_goal_distribut": [50, 55], "_forward_single_go": [50, 55], "_forward_pytorch": [50, 55], "_update_cost_typ": [50, 55], "forward_out_dist": [50, 55], "forward_pos": [50, 55], "use_sweep": [50, 56], "use_sweep_kernel": [50, 56], "use_speed_metr": [50, 56], "sum_dist": [50, 56], "sweep_kernel_fn": [50, 56], "sweep_fn": [50, 56], "discrete_fn": [50, 56], "pseudo_invers": [50, 57], "ep": [50, 57, 81], "proj_typ": [50, 57], "get_pinv_null_disp": [50, 57], "self_collision_kin_config": [50, 58], "max_limit": [50, 59], "max_nlimit": [50, 59], "dt_traj_param": [50, 59, 62, 64], "teleport_mod": [51, 62, 64, 76, 82], "state_batch": 51, "retract_idx": 51, "although": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "recip": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "afterward": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "sinc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 114, 115, 116], "former": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "care": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "regist": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "latter": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "silent": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "fn": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "recurs": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "callabl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "prefix": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111], "local_metadata": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "strict": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "missing_kei": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "unexpected_kei": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "error_msg": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "its": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 106, 132], "descend": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "submodul": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 104], "without": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 107, 108, 115, 132], "empti": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 100], "achiev": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 108, 132], "kei": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 106, 139], "assign_to_params_buff": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "assign": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 115], "persist": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "strictli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "unexpect": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "messag": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79], "ad": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 107, 114, 123, 124, 131], "report": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 100, 115, 118, 123, 124, 131, 134], "togeth": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 126, 139], "grad_fn": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "get_members_fn": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "remove_dupl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "yield": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "variou": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "member": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "with_modul": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "pre": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 96, 98, 100, 107, 116], "exactli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "those": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98], "invok": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "guarante": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 113, 114], "destin": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "keep_var": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "rare": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "logic": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "better": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 115, 118], "bc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "_metadata": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "thu": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "pickl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "convent": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "remov": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79, 98, 100, 139], "shall": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bump": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "compar": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 113, 114], "appropri": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "well": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 107, 120, 128, 139], "typic": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "nn": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "init": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "no_grad": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "init_weight": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "print": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 111, 113, 114], "fill_": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "net": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "sequenti": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "in_featur": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117], "out_featur": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bia": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100], "cast": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "datatyp": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "direct": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 126, 132, 139], "var": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 113, 115, 119], "buf": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "20l": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "1l": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "5l": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "immedi": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "__call__": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "move": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 98, 100, 105, 106, 107, 111, 114, 116, 128, 139], "gpu": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 88, 97, 108, 111, 114, 115, 120, 128, 132], "associ": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "construct": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "live": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 115], "evalu": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 90, 95, 98, 100, 118], "effect": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 115, 132], "certain": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "document": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 123, 124, 131], "particular": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "affect": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 88], "dropout": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "batchnorm": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "etc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 119], "local": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 99, 100, 111, 114, 115, 119, 120], "comparison": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 123, 131], "mechan": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "confus": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "extra": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98], "re": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 100, 123, 124, 131], "own": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 105, 112, 123], "multi": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 101, 123, 125], "string": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "throw": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "docstr": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "explan": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "correctli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "fulli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 139], "qualifi": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "look": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 111, 114, 115, 119, 128, 129, 139], "referenc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 112], "attributeerror": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "invalid": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98], "resolv": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "someth": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "picklabl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "break": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 101, 115], "let": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "sai": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "net_b": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "net_c": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "conv": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "conv2d": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "16": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98], "33": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 118], "kernel_s": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "stride": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "200": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 117], "diagram": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "show": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 115, 116, 117, 132], "nest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "itself": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 115], "degre": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 75, 76, 81, 85, 97, 98, 100], "o": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 139], "transit": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "simpl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 117, 132], "abov": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 113, 114, 118, 119], "item": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 113, 117, 128], "preserv": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "namedtupl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "duplic": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 128, 139], "prepend": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "running_var": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "conv4": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "conv5": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "memo": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "alreadi": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 115, 119], "removablehandl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "favor": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "consid": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "running_mean": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "alongsid": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "num_featur": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "with_kwarg": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "always_cal": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "keyword": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "won": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "expect": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "possibli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "fire": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_module_forward_hook": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "regardless": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "except": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79], "And": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "forward_pr": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_module_forward_pre_hook": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "subsequ": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 101, 112], "entri": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "technic": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 100, 115, 123, 124, 131, 134], "reason": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106], "receiv": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "view": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 113, 115, 117], "similarli": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106], "caller": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_module_full_backward_hook": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "backward_pr": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "register_module_full_backward_pre_hook": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "post": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 115], "incompatible_kei": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "consist": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106], "thrown": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "clear": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 100, 120], "freez": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "finetun": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98], "individu": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "gan": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "found": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 100, 111, 115, 120, 128, 139], "share_memory_": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "whole": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "averag": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 118, 132], "shallow": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "order": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 74, 97, 98, 99, 100], "howev": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 113, 114, 115], "design": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 116, 120], "ordereddict": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "compos": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "non_block": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "memory_format": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "channels_last": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "Its": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "complex": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 115], "unchang": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "asynchron": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "host": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 97, 98, 99, 100], "possibl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98, 113, 115, 116, 129], "pin": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 119], "below": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 106, 107, 111, 113, 114, 115, 116, 117, 118, 119, 126, 128, 132, 139], "desir": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 79], "4d": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "ignore_w": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "determinist": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 98], "1913": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "3420": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "5113": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "2325": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "float64": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "torch_doctest_cuda1": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "gpu1": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "1914": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "5112": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "2324": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "float16": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "cdoubl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "3741": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "2382": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "5593": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "4443": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "complex128": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "ones": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "6122": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "1150": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "dst_type": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "set_to_non": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "under": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 114, 129], "po": [51, 53], "vel": [51, 59, 81], "p_b": 51, "v_b": 51, "a_b": 51, "j_b": 51, "cspace_weight": 51, "run_weight_vel": 51, "run_weight_acc": 51, "out_gv": 51, "out_ga": 51, "out_gj": 51, "grad_out_cost": [51, 53, 61], "warpboundsmoothfunctionbackward": 51, "warpboundfunctionbackward": 51, "p_l": 51, "warpboundposfunctionbackward": 51, "warpboundposlossbackward": 51, "target_idx": 53, "out_cost_v": 53, "l2distfunctionbackward": 53, "disp_vec": [53, 57], "return_goal_dist": [53, 57], "goal_vec": [53, 57], "current_vec": [53, 57], "jac_batch": [54, 57], "qdot": 54, "pairwis": 55, "shortest": 55, "linear_axi": [55, 107], "tstep_fract": [55, 107], "pregrasp": 55, "movement": 55, "final": [55, 98, 107, 108], "grasp": [55, 98, 106, 115, 123], "try": [55, 98, 107, 114, 116, 128], "blend": [55, 68, 74, 107], "fraction": [55, 107], "75": [55, 118], "run_tstep_fract": 55, "ee_pos_batch": [55, 60], "ee_rot_batch": 55, "ee_goal_po": 55, "ee_goal_rot": 55, "query_pos": 55, "sweep": 56, "chomp": [56, 115], "icra": [56, 132, 133, 136], "09": 56, "minim": [56, 97, 98, 100], "encourag": [56, 97, 100, 123, 131], "around": [56, 114, 116], "central": [56, 98, 100], "less": [56, 96, 97, 98, 115, 116, 120, 139], "outsid": [56, 98, 113, 115], "slowli": 56, "interpol": [56, 85, 88, 98, 100, 114], "hit": [56, 120], "sum": [56, 97, 98, 115, 116], "collid": [56, 116], "across": [56, 96, 97, 98, 99, 100, 101, 105, 107, 115, 116, 123, 128, 131], "max": 56, "formul": [56, 107, 132], "robot_spheres_in": 56, "project": [57, 97, 98, 100, 115, 133], "space": [57, 98, 100, 117, 123, 124, 131], "0001": 57, "cost_vec": 61, "squaredsumbackward": 61, "runsquaredsumbackward": 61, "goal_dist": 61, "get_dt_arrai": [62, 64], "state_seq": [62, 63, 64], "ee_pos_seq": [62, 64], "ee_quat_seq": [62, 64], "lin_jac_seq": [62, 64], "ang_jac_seq": [62, 64], "vel_scal": [62, 64], "state_estimation_vari": [62, 64], "control_spac": [62, 64, 76, 82], "state_filter_cfg": [62, 64], "return_full_act_buff": [62, 64], "filter_robot_command": [62, 64, 98, 100], "get_next_st": [62, 64, 65], "robot_cmd_tensor_step": [62, 64], "update_cmd_batch_s": [62, 64], "integrate_act": [62, 64], "integrate_action_step": [62, 64], "init_action_mean": [62, 64], "get_state_bound": [62, 64], "position_teleport": [62, 66], "position_clique_kernel": [62, 66], "acceleration_kernel": [62, 66], "position_cliqu": [62, 66], "filter_sign": [62, 66], "prev_stat": 63, "full_rank": 63, "diagon": 63, "act": [63, 64, 65, 67], "dt_h": [63, 66], "integrate_matrix": 63, "fd_matrix": 63, "q_0": 63, "u": [63, 116], "diag_dt": 63, "u_act": [63, 66], "mask": [63, 108], "n_mask": 63, "fd_1": 63, "fd_2": 63, "fd_3": 63, "grad_out_p": 63, "grad_out_v": 63, "grad_out_a": 63, "grad_out_j": 63, "cliquetensorstepbackward": 63, "cliquetensorstepkernelbackward": 63, "cliquetensorstepidxkernelbackward": 63, "cliquetensorstepcentraldifferencekernelbackward": 63, "cliquetensorstepidxcentraldifferencekernelbackward": 63, "cliquetensorstepcoalescekernelbackward": 63, "accelerationtensorstepkernelbackward": 63, "accelerationtensorstepidxkernelbackward": 63, "mask_matrix": 63, "integrate_matrix_po": 63, "start_tensor": 63, "end_tensor": 63, "int_step": 63, "num_point": 64, "all_dt": 64, "data_dict_in": [64, 73], "kinematic_model_config": 64, "curr_stat": 64, "next_stat": 64, "tensorstep": 64, "start_state_idx": [64, 66], "abc": 65, "currend_st": 65, "out_state_seq": 66, "finite_difference_mod": 66, "filter_veloc": 66, "filter_acceler": 66, "filter_jerk": 66, "signal": 66, "normalize_rot": [67, 68, 72], "solv": [67, 88, 90, 95, 97, 98, 99, 100, 101, 102, 103, 114, 132, 137], "address": 67, "keep": [67, 98, 114, 115, 128, 133, 139], "num_se": [67, 72, 74, 83, 95, 97, 98, 99, 100, 101, 113], "kernel_mat": [67, 72, 74], "update_idx_buff": 67, "ref_buff": 67, "batch_env": [67, 95, 101], "batch_retract": [67, 95, 101], "pose_batch_s": 67, "from_bas": [68, 69, 73, 95, 96, 113], "to_devic": [68, 69, 115], "to_int8_devic": [68, 69], "as_torch_dict": [68, 69], "rgb_imag": [68, 70], "depth_imag": [68, 70, 108], "image_segment": [68, 70], "projection_matrix": [68, 70], "projection_rai": [68, 70], "resolut": [68, 70, 116], "intrins": [68, 70, 108], "timestamp": [68, 70], "filter_depth": [68, 70], "get_pointcloud": [68, 70], "get_image_from_pointcloud": [68, 70], "update_projection_rai": [68, 70], "stack": [68, 70, 72, 74, 79, 109, 123], "from_matrix": [68, 72], "get_rot": [68, 72], "unsqueez": [68, 72, 74, 113, 117], "get_index": [68, 72], "from_list": [68, 72, 74, 76, 80, 113, 115], "from_batch_list": [68, 72], "to_list": [68, 72], "tolist": [68, 72, 117], "get_matrix": [68, 72], "get_numpy_matrix": [68, 72], "get_pose_vector": [68, 72], "cat": [68, 72, 117], "angular_dist": [68, 72], "linear_dist": [68, 72], "multipli": [68, 72], "compute_offset_pos": [68, 72], "compute_local_pos": [68, 72], "contigu": [68, 72], "geodesic_dist": [68, 72], "ik_seed": [68, 73], "write_config": [68, 73], "get_state_tensor": [68, 74], "from_numpi": [68, 74], "from_posit": [68, 74, 113], "from_state_tensor": [68, 74], "copy_at_index": [68, 74], "copy_data": [68, 74], "_same_shap": [68, 74], "squeez": [68, 74], "calculate_fd_from_posit": [68, 74], "get_ordered_joint_st": [68, 74], "get_augmented_joint_st": [68, 74], "append_joint": [68, 74], "trim_trajectori": [68, 74], "scale_by_dt": [68, 74], "index_dof": [68, 74], "dev_id": 69, "data_tensor": 69, "camera_imag": 70, "rgb": [70, 116, 133, 136], "imag": [70, 72, 93, 108, 112, 115, 116, 118, 123, 131], "bxhxwxchannel": 70, "new_data": 70, "output_imag": 70, "new_observ": 70, "normal": 72, "come": [72, 113, 114], "extern": [72, 98], "send": [72, 99, 113, 114, 116, 126], "other_pos": 72, "q_xyzw": 72, "pose_list": 72, "use_phi3": 72, "phi_3": 72, "huynh": 72, "du": 72, "3d": 72, "analysi": [72, 114], "journal": 72, "mathemat": 72, "vision": [72, 133, 136], "2009": 72, "155": 72, "164": [72, 139], "gp_out": 72, "gq_out": 72, "gpt_out": 72, "world_pos": 72, "q1": 72, "q2": [72, 123, 131], "q_re": 72, "quat_r": 72, "orientationerrorbackward": 72, "coeff": 74, "new_stat": [74, 99], "ndarri": 74, "state_tensor": 74, "in_joint_st": 74, "new_j": 74, "ordered_joint_nam": 74, "end_idx": 74, "new_dt": 74, "alias": 75, "improv": [75, 97, 100, 118, 123, 124, 131], "readabl": 75, "freedom": [75, 97, 98, 100], "cspace_path_length": [76, 80], "perception_success": [76, 80], "perception_interpolated_success": [76, 80], "perception_tim": [76, 80], "eef_orientation_path_length": [76, 80], "eef_position_path_length": [76, 80], "joint_limit_viol": [76, 80], "motion_tim": [76, 80, 95, 98], "orientation_error": [76, 80], "physical_viol": [76, 80], "self_collis": [76, 80], "trajectory_length": [76, 80], "print_summari": [76, 80], "group_siz": [76, 80], "env_collision_r": [76, 80], "self_collision_r": [76, 80], "joint_violation_r": [76, 80], "physical_violation_r": [76, 80], "within_one_cm_r": [76, 80], "within_five_cm_r": [76, 80], "within_fifteen_deg_r": [76, 80], "within_thirty_deg_r": [76, 80], "solve_time_per_step": [76, 80], "fixed_sampl": [76, 81], "sample_ratio": [76, 81], "filter_coeff": [76, 81, 82], "n_knot": [76, 81], "scale_tril": [76, 81], "covariance_matrix": [76, 81], "sample_method": [76, 81], "sine_period": [76, 81], "filter_sampl": [76, 81], "filter_smooth": [76, 81], "generate_sine_wav": [76, 81], "fast_forward": [76, 81], "_get_sampl": [76, 81], "get_gaussian_sampl": [76, 81], "filter_joint_st": [76, 82], "integrate_jerk": [76, 82], "integrate_acc": [76, 82], "integrate_vel": [76, 82], "integrate_po": [76, 82], "cubic": [76, 85, 98, 100], "quintic": [76, 85, 98, 100], "linear_cuda": [76, 85, 98, 100], "kunz_stilman_optim": [76, 85], "add_subroot": [76, 86], "load_stage_from_fil": [76, 86], "load_stag": [76, 86], "get_pos": [76, 86], "get_obstacles_from_stag": [76, 86], "add_world_to_stag": [76, 86], "get_prim_from_obstacl": [76, 86], "add_cuboid_to_stag": [76, 86], "add_cylinder_to_stag": [76, 86], "add_sphere_to_stag": [76, 86], "add_mesh_to_stag": [76, 86], "get_obstacle_from_prim": [76, 86], "write_stage_to_fil": [76, 86], "create_anim": [76, 86], "create_obstacle_anim": [76, 86], "create_linkpose_robot_anim": [76, 86], "write_trajectory_anim": [76, 86], "load_robot": [76, 86], "write_trajectory_animation_with_robot_usd": [76, 86, 117], "create_grid_usd": [76, 86, 117], "load_robot_usd": [76, 86], "get_robot_prim": [76, 86], "update_robot_joint_st": [76, 86], "write_motion_gen_log": [76, 86], "q_de": [77, 82, 97], "r_de": 77, "px": 77, "py": [77, 100, 105, 107, 108, 111, 114, 116, 117, 118, 119, 129, 139], "pz": 77, "current_px": 77, "current_pi": 77, "current_pz": 77, "des_px": 77, "des_pi": 77, "des_pz": 77, "d_list": 78, "packag": [79, 104, 111, 117, 118, 121, 132, 139], "logger_nam": 79, "warn": 79, "txt": 79, "exc_info": 79, "stack_info": 79, "stacklevel": 79, "convei": 79, "stacktrack": 79, "trace": [79, 118], "inf": 80, "trajectorymetr": 80, "robometr": [80, 118], "statist": 80, "trajectorygroupmetr": 80, "group": 80, "built": [81, 92, 94, 111, 112, 113, 115, 119], "0x7f99a838dfe0": [], "halton": 81, "sample_config": [81, 95, 97, 113], "sample_shap": 81, "c_arr": 81, "t_arr": 81, "up_bound": 81, "low_bound": 81, "ndim": 81, "store_buff": 81, "2000": [81, 118], "fast": [81, 115], "sampler": [81, 91, 92, 94], "varianc": 81, "num": 81, "idx_batch": 81, "use_scipy_halton": 81, "coeff_dict": 82, "filter_config": 82, "raw_joint_st": 82, "qddd_de": 82, "cmd_joint_stat": 82, "qdd_de": 82, "qd_de": 82, "new_tensor": 83, "mem_tensor": 83, "ref_tensor": 83, "renam": 83, "equal": [84, 97], "force_jit": 84, "only_valid_for_compil": 84, "scipi": 85, "lang": 85, "meth": [85, 97, 100], "scienc": 85, "viii": 85, "2012": 85, "kunz": 85, "stillman": 85, "durat": 85, "20": [85, 111, 113], "max_traj_pt": 85, "compute_dynam": 85, "raw_traj": [85, 88], "des_horizon": 85, "raw_dt": [85, 88], "max_vel": [85, 96], "max_acc": [85, 95, 96], "kind": 85, "out_traj_st": 85, "max_devi": 85, "min_dt": [85, 95, 96], "optimize_dt": [85, 95, 98, 100], "traj_step": 85, "opt_dt": [85, 88, 96, 100], "max_veloc": 85, "last_step": 85, "translat": 86, "use_float": 86, "xformcach": 86, "mesh_geom": 86, "ob": 86, "cube_geom": 86, "cube": [86, 105, 106, 107, 111, 114, 116, 139], "sphere_geom": 86, "curobo_stag": 86, "base_fram": [86, 117], "sub_root": 86, "prim_path": 86, "timecod": [86, 129], "only_path": 86, "ignore_path": 86, "only_substr": 86, "ignore_substr": 86, "reference_prim_path": 86, "obstacles_fram": 86, "base_t_obstacle_pos": 86, "enable_phys": 86, "flatten": 86, "robot_world_cfg": 86, "robot_fram": 86, "anim": [86, 117, 129], "prim_nam": 86, "n_mesh": [86, 92, 94], "robot_bas": 86, "robot_usd_path": 86, "robot_base_fram": 86, "local_asset_path": [86, 117], "asset": [86, 114, 123], "write_robot_usd_path": 86, "robot_asset_prim_path": 86, "panda": [86, 105, 112, 113, 114, 118, 125, 139], "material_nam": 86, "object_path": 86, "obj_prim": 86, "robot_model_fil": 86, "q_start": 86, "q_traj": [86, 117], "save_path": [86, 117, 118], "kin_model": [86, 113], "visualize_robot_spher": [86, 117], "robot_color": 86, "flatten_usd": 86, "robot_usd_local_refer": 86, "usds_path": 86, "max_env": [86, 117], "max_timecod": [86, 117], "x_space": [86, 117], "y_space": [86, 117], "x_per_row": [86, 117], "prefix_str": 86, "write_asset_path": 86, "robot_base_path": 86, "joint_prim": 86, "motiongenresult": [86, 90, 95, 98, 100], "robot_fil": [86, 93, 113, 117], "save_prefix": 86, "write_ik": 86, "write_trajopt": 86, "write_graph": 86, "goal_object": 86, "overlay_ik": 86, "overlay_trajopt": 86, "grid_spac": 86, "fp": 86, "24": 86, "quiet": 87, "traj_tstep": [88, 95, 100], "out_traj": 88, "bug": 88, "last": [88, 96, 98, 100, 113], "source_fil": 89, "destination_path": 89, "remove_extens": 89, "dir_path": 89, "extens": 89, "curobo_robot_world": [90, 91], "curoborobotworldconfig": [90, 91, 92], "curoborobotworld": [90, 91, 92], "robot_segment": [90, 91, 108], "robotsegment": [90, 91, 93, 108], "robot_world": [90, 91, 93, 113, 117], "robotworldconfig": [90, 91, 92, 94, 113, 117], "robotworld": [90, 91, 92, 93, 94, 113, 117], "trajevaluatorconfig": [90, 95, 96, 98, 100], "trajevalu": [90, 95, 96, 98, 100], "iksolverconfig": [90, 95, 97, 113], "ikresult": [90, 95, 97, 98, 113], "iksolv": [90, 95, 97, 98, 113, 114, 123, 124, 126, 131], "motiongenconfig": [90, 95, 97, 98, 107, 113], "motiongenplanconfig": [90, 95, 98, 107, 113], "motiongenstatu": [90, 95, 98], "motiongen": [90, 95, 97, 98, 99, 100, 113, 123, 124, 131], "mpcsolverconfig": [90, 95, 99, 113], "mpcsolver": [90, 95, 99, 113], "trajoptsolverconfig": [90, 95, 100], "trajoptresult": [90, 95, 98, 100], "trajresult": [90, 95, 100], "trajoptsolv": [90, 95, 98, 100, 126], "jit_trajopt_best_select": [90, 95, 100], "reachersolvetyp": [90, 95, 97, 98, 100, 101], "reachersolvest": [90, 95, 97, 98, 99, 100, 101], "motiongensolverst": [90, 95, 101], "get_padded_goalset": [90, 95, 101], "safety_rollout": [90, 102, 103], "use_cuda_graph_metr": [90, 95, 99, 100, 102, 103], "js_action": [90, 102], "raw_act": [90, 95, 100, 102], "get_debug_data": [90, 102, 103], "get_debug_cost": [90, 102, 103], "get_init_act": [90, 102, 103], "newton_optim": [90, 102, 103], "particle_optim": [90, 102, 103], "_get_rollout_instances_from_optim": [90, 102, 103], "update_init_se": [90, 103], "collision_constraint": [91, 92, 94, 117], "collision_cost": [91, 92, 94], "contact_dist": [91, 92, 94], "load_from_config": [91, 92, 94, 113, 117], "bound_scal": [91, 92, 94, 117], "clear_world_cach": [91, 92, 94, 95, 98], "get_active_j": [91, 92, 94, 95, 97, 98, 99, 100], "get_bound": [91, 92, 94], "get_collision_constraint": [91, 92, 94], "get_collision_dist": [91, 92, 94, 113, 117], "get_collision_vector": [91, 92, 94], "get_kinemat": [91, 92, 94, 113, 117], "get_point_robot_dist": [91, 92, 94], "get_self_collis": [91, 92, 94], "get_world_self_collision_distance_from_joint_trajectori": [91, 92, 94], "get_world_self_collision_distance_from_joint": [91, 92, 94, 113], "sample_trajectori": [91, 92, 94], "update_world": [91, 92, 94, 95, 97, 98, 99], "valid": [91, 92, 94, 101, 117], "validate_trajectori": [91, 92, 94], "from_robot_fil": [91, 93], "get_pointcloud_from_depth": [91, 93], "update_camera_project": [91, 93], "get_robot_mask": [91, 93], "get_robot_mask_from_active_j": [91, 93], "_create_cg_graph": [91, 93], "_call_op": [91, 93], "_mask_op": [91, 93], "layer": [92, 94, 98, 116, 117], "core": [92, 94, 111, 113, 114], "franka": [92, 94, 105, 112, 113, 114, 117, 118, 125, 139], "50": [92, 94, 97, 98, 115], "n_cuboid": [92, 94], "collision_activation_dist": [92, 94, 97, 98, 99, 100, 113], "self_collision_activation_dist": [92, 94], "max_collision_dist": [92, 94], "collision_checker_typ": [92, 94, 97, 98, 99, 100], "world_collision_check": [92, 94], "full_j": [92, 94], "x_sph": [92, 94, 115], "done": [92, 94, 98, 126], "easili": [92, 94], "x_de": [92, 94, 117], "x_current": [92, 94], "mask_valid": [92, 94, 113], "ops_dtyp": 93, "depth_to_met": 93, "001": [93, 96, 97, 98, 139], "joint_stat": [93, 98], "depth": [93, 97, 108, 112, 113, 115, 118, 122, 123, 131], "active_joint_st": 93, "cam_ob": 93, "commonli": 95, "cost_weight": [95, 96], "_compute_path_length": [95, 96], "_check_smooth": [95, 96], "evaluate_interpolated_smooth": [95, 96], "evaluate_from_posit": [95, 96], "position_threshold": [95, 97, 98, 100, 113], "rotation_threshold": [95, 97, 98, 100, 113], "ik_nn_seed": [95, 97], "sample_rejection_ratio": [95, 97], "js_solut": [95, 97], "get_unique_solut": [95, 97], "get_batch_unique_solut": [95, 97], "_update_goal_buff": [95, 97], "solve_singl": [95, 97, 100], "solve_goalset": [95, 97, 100], "solve_batch": [95, 97, 100, 113], "solve_batch_goalset": [95, 97, 100], "solve_batch_env": [95, 97, 100], "solve_batch_env_goalset": [95, 97, 100], "_solve_from_solve_st": [95, 97, 99, 100], "_get_result": [95, 97, 100], "get_se": [95, 97, 100], "solve_ani": [95, 97, 100], "batch_env_solv": [95, 97, 137], "_get_success": [95, 97], "generate_se": [95, 97], "check_constraint": [95, 97, 98], "get_all_kinematics_inst": [95, 97, 98, 100], "fk": [95, 97, 100, 113, 117], "attach_object_to_robot": [95, 97], "detach_object_from_robot": [95, 97, 98], "get_retract_config": [95, 97, 98, 113], "ik_se": [95, 98], "graph_se": [95, 98], "trajopt_se": [95, 98], "noisy_trajopt_se": [95, 98], "batch_ik_se": [95, 98], "batch_trajopt_se": [95, 98], "graph_plann": [95, 98], "trajopt_solv": [95, 98], "js_trajopt_solv": [95, 98], "finetune_trajopt_solv": [95, 98], "partial_ik_it": [95, 98], "graph_trajopt_it": [95, 98], "store_debug_in_result": [95, 98, 100], "finetune_dt_scal": [95, 98], "enable_graph": [95, 98], "enable_opt": [95, 98], "use_nn_ik_se": [95, 98], "need_graph_success": [95, 98], "max_attempt": [95, 98, 99, 113], "timeout": [95, 98], "enable_graph_attempt": [95, 98], "disable_graph_attempt": [95, 98], "ik_fail_return": [95, 98], "partial_ik_opt": [95, 98], "num_ik_se": [95, 98, 101], "num_graph_se": [95, 98, 101], "num_trajopt_se": [95, 98, 101], "success_ratio": [95, 98], "fail_on_invalid_queri": [95, 98], "use_start_state_as_retract": [95, 98], "pose_cost_metr": [95, 98, 107], "enable_finetune_trajopt": [95, 98], "parallel_finetun": [95, 98], "finetune_attempt": [95, 98], "finetune_dt_decai": [95, 98], "time_dilation_factor": [95, 98], "ik_fail": [95, 98], "graph_fail": [95, 98], "trajopt_fail": [95, 98], "finetune_trajopt_fail": [95, 98], "invalid_queri": [95, 98], "not_attempt": [95, 98], "optimized_plan": [95, 98], "ik_tim": [95, 98], "graph_tim": [95, 98], "trajopt_tim": [95, 98], "finetune_tim": [95, 98], "total_tim": [95, 98], "statu": [95, 98, 111], "trajopt_attempt": [95, 98], "used_graph": [95, 98], "graph_plan": [95, 98], "copy_idx": [95, 98], "get_successful_path": [95, 98], "get_interpolated_plan": [95, 98, 113], "retime_trajectori": [95, 98], "_check_none_and_copy_idx": [95, 98], "solve_ik": [95, 98], "graph_search": [95, 98], "plan_singl": [95, 98, 113], "plan_goalset": [95, 98], "plan_batch": [95, 98], "plan_batch_goalset": [95, 98], "plan_batch_env": [95, 98, 100], "plan_batch_env_goalset": [95, 98, 100], "collision_cach": [95, 97, 98, 99, 100], "plan_single_j": [95, 98], "solve_trajopt": [95, 98], "get_all_solver_rollout_inst": [95, 98], "get_all_pose_solver_rollout_inst": [95, 98], "attach_objects_to_robot": [95, 98], "attach_external_objects_to_robot": [95, 98], "attach_bounding_box_from_blox_to_robot": [95, 98], "attach_new_object_to_robot": [95, 98], "attach_spheres_to_robot": [95, 98, 100], "detach_spheres_from_robot": [95, 98, 100], "world_collis": [95, 98, 99], "project_pose_to_goal_fram": [95, 97, 98, 100, 107], "update_interpolation_typ": [95, 98], "update_locked_joint": [95, 98], "_solve_ik_from_solve_st": [95, 98], "_solve_trajopt_from_solve_st": [95, 98], "_get_solve_st": [95, 98], "_plan_attempt": [95, 98], "_plan_batch_attempt": [95, 98], "_plan_from_solve_st": [95, 98], "_plan_js_from_solve_st": [95, 98], "_plan_from_solve_state_batch": [95, 98], "batch_plan": [95, 98], "use_cuda_graph_full_step": [95, 99], "setup_solve_singl": [95, 99, 113], "setup_solve_goalset": [95, 99], "setup_solve_batch": [95, 99], "setup_solve_batch_goalset": [95, 99], "setup_solve_batch_env": [95, 99], "setup_solve_batch_env_goalset": [95, 99], "update_go": [95, 99, 101, 113, 117], "get_visual_rollout": [95, 99], "_step_onc": [95, 99], "_update_solve_state_and_goal_buff": [95, 99, 100], "_mpc_step": [95, 99], "_initialize_cuda_graph_step": [95, 99], "use_cspace_se": [95, 100], "seed_ratio": [95, 100], "traj_evaluator_config": [95, 98, 100], "traj_evalu": [95, 98, 100], "evaluate_interpolated_trajectori": [95, 98, 100], "cspace_threshold": [95, 98, 100], "interpolate_rollout": [95, 100], "trim_step": [95, 98, 100], "interpolated_solut": [95, 100], "smooth_error": [95, 100], "smooth_label": [95, 100], "raw_solut": [95, 100], "optimized_se": [95, 100], "batch_solv": [95, 100, 137], "get_linear_se": [95, 100], "get_start_se": [95, 100], "_get_seed_numb": [95, 100], "get_seed_set": [95, 100], "get_bias_se": [95, 100], "calculate_trajectory_dt": [95, 100], "solver_dt": [95, 100], "solver_dt_tensor": [95, 100], "minimum_trajectory_dt": [95, 98, 100], "update_solver_dt": [95, 100], "newton_it": [95, 97, 98, 100], "batch_env_goalset": [95, 101], "solve_typ": [95, 97, 98, 100, 101], "batch_mod": [95, 100, 101], "num_mpc_se": [95, 101], "get_batch_s": [95, 101], "get_ik_batch_s": [95, 101], "create_goal_buff": [95, 101], "update_goal_buff": [95, 101], "ik_solve_st": [95, 101], "trajopt_solve_st": [95, 101], "heurist": 96, "score": 96, "minimum": [96, 98, 100, 123, 135], "reject": [96, 97], "greater": [96, 99, 113], "smooth": [96, 98, 100], "length": [96, 98, 100, 118, 139], "basic": [96, 116, 122, 123], "treat": [96, 98, 100, 108, 139], "waypoint": [96, 98, 100], "factor": [96, 98], "push": [96, 98, 115], "least": [96, 111], "label": [96, 108], "skip_last_tstep": 96, "ik": [97, 98, 100, 101, 113, 114, 117, 118, 132], "demo": [97, 114, 123], "reachabl": [97, 123], "1531": [97, 98], "threshold": [97, 98, 100, 108], "measur": [97, 98, 100, 118], "geodes": 97, "good": [97, 98, 99, 100], "accuraci": [97, 118], "pose_distance_kernel": 97, "cu": 97, "auxillari": [97, 98], "undevelop": 97, "ratio": [97, 98, 100], "did": 97, "precis": [97, 98, 99, 100, 101, 123, 124, 131, 133, 136], "launch": [97, 105, 107, 114, 116, 119, 139], "upto": [97, 98, 100, 113], "pseudorandom": 97, "005": [97, 98, 100, 113, 139], "particle_fil": [97, 100], "particle_ik": [97, 98], "gradient_fil": [97, 100], "gradient_ik": [97, 98], "self_collision_opt": [97, 98, 100, 113], "grad_it": 97, "use_particle_opt": [97, 100], "use_gradient_desc": [97, 98, 100], "n_collision_env": [97, 98, 99, 100], "ee_link_nam": [97, 98], "use_": [97, 99, 100], "es_learning_r": [97, 99, 100], "use_fixed_sampl": [97, 100], "regular": [97, 98, 100, 101], "high_precis": [97, 98], "yaml": [97, 98, 99, 100, 113, 139], "esdf": [97, 116, 123, 124, 131], "discuss": [97, 112], "multipl": [97, 98, 100, 101], "evolut": [97, 99, 100], "strategi": [97, 98, 99, 100], "rate": [97, 98, 99, 100, 113, 114], "significantli": [97, 123, 128, 131], "slow": [97, 98, 115], "down": [97, 98, 114], "1cm": 97, "1mm": [97, 98, 118, 123, 124, 131], "wa": [97, 98, 111, 115, 132], "select": [97, 98, 100, 114], "filter": [97, 98, 100, 108], "successfulli": 97, "roughli": 97, "sqrt": [97, 117], "taken": [97, 98, 99], "tune": [97, 98, 110, 113, 114, 123], "identifi": 97, "roundoff_decim": 97, "return_se": [97, 98], "filer": 97, "decim": 97, "round": 97, "off": [97, 111], "loop": [97, 113, 133, 136], "bimanu": 97, "cudagraph": [97, 98, 112, 113, 114, 115, 120], "veri": [97, 98, 100, 115, 120, 133, 139], "As": [97, 117, 139], "ikproblem": 97, "caus": [97, 98, 120], "exit": [97, 98, 100], "slowdown": 97, "solve_st": [97, 98, 99, 100, 101], "retract": [97, 98, 100, 101], "intern": [97, 98, 99, 100, 108, 115, 126, 132], "goal_buff": [97, 99, 113], "seed_config": [97, 98], "use_nn_se": [97, 98, 100], "servo": 97, "sure": [97, 119], "suffici": [97, 139], "close": [97, 98, 106, 107, 116, 139], "closer": 97, "stai": [97, 98, 99, 100, 116], "remain": [97, 107, 123, 131], "randomli": 97, "yet": 97, "determin": [97, 98, 114, 115], "about": [97, 99, 106, 114, 125], "Not": [97, 98], "pseudo": 97, "recreat": [97, 115], "sample_from_ik_seed": 97, "seeder": 97, "active_j": [97, 98, 100], "append": [97, 98, 100, 117], "in_j": [97, 98, 99, 100], "interfac": [98, 99, 115, 116, 123], "fallback": 98, "request": [98, 114], "availbl": 98, "fine": 98, "dens": [98, 100], "reduct": 98, "fail": 98, "again": 98, "until": [98, 107, 114], "num_batch_ik_se": 98, "num_batch_trajopt_se": 98, "num_trajopt_noisy_se": 98, "particle_ik_fil": 98, "gradient_ik_fil": 98, "particle_trajopt_fil": 98, "particle_trajopt": [98, 100], "gradient_trajopt_fil": 98, "gradient_trajopt": [98, 100], "finetune_trajopt_fil": 98, "trajopt_tstep": [98, 100], "5000": [98, 100, 113], "grad_trajopt_it": [98, 100], "trajopt_seed_ratio": 98, "ik_opt_it": 98, "ik_particle_opt": 98, "trajopt_particle_opt": [98, 100], "minimize_jerk": [98, 100], "use_es_ik": 98, "use_es_trajopt": 98, "es_ik_learning_r": 98, "es_trajopt_learning_r": 98, "use_ik_fixed_sampl": 98, "use_trajopt_fixed_sampl": 98, "fixed_iters_trajopt": 98, "store_ik_debug": [98, 100], "store_trajopt_debug": [98, 100], "collision_max_outside_dist": 98, "trajopt_dt": [98, 100], "js_trajopt_dt": 98, "js_trajopt_tstep": 98, "finetune_trajopt_it": 98, "finetune_smooth_weight": 98, "maximum_trajectory_tim": 98, "maximum_trajectory_dt": 98, "augment": [98, 99, 100], "nois": 98, "conjunct": 98, "easi": [98, 100], "interpret": [98, 100], "intuit": [98, 100], "leav": [98, 99, 100, 114, 115], "attr": [98, 100], "criteria": [98, 100], "want": [98, 100, 111, 112, 113, 115, 118, 119, 128, 139], "choic": [98, 100], "suitabl": [98, 100], "failur": [98, 100, 120], "mid": [98, 100], "trajopt_noisy_se": 98, "region": 98, "minima": [98, 100, 114], "awai": [98, 99, 100, 115], "bad": [98, 100], "optimizaiton": [98, 100], "finit": [98, 100], "artifact": [98, 100], "cannot": [98, 100, 112, 113, 120], "evolutionari": 98, "algorithm": [98, 115, 123, 131], "unstabl": 98, "thin": [98, 100, 115], "partial": [98, 123, 124, 131], "computation": [98, 100], "cheaper": [98, 100], "robust": [98, 100], "outlier": [98, 100], "requird": 98, "qualiti": [98, 113, 114, 118, 123, 124, 131], "further": [98, 99, 100, 107, 132], "trim": [98, 100], "implicitli": [98, 100], "five": [98, 100, 115], "stencil": [98, 100], "accur": [98, 100, 115], "slower": [98, 113], "retun": 98, "constrain": [98, 100, 109, 123, 124, 131], "ax": [98, 100, 107, 123, 131], "025": 98, "5mm": [98, 100], "60": [98, 116], "85": [98, 118], "low": 98, "unreach": 98, "trajecrtori": 98, "larger": [98, 99], "chanigng": 98, "12": 98, "met": 98, "plane": [98, 107], "hold": [98, 117], "shorter": [98, 123, 131], "smoother": [98, 123, 124, 131], "interest": 98, "couldn": 98, "previou": [98, 99], "smaller": [98, 100], "decai": [98, 116], "dilat": 98, "q_g": 98, "source_result": 98, "unsuccess": 98, "interpolate_trajectori": 98, "interpolation_kind": 98, "create_interpolation_buff": 98, "retim": 98, "enough": 98, "current_tensor": 98, "source_tensor": 98, "start_config": 98, "goal_config": 98, "plan_config": 98, "long": [98, 99, 106, 128], "roadmap": 98, "consum": [98, 113], "sub": [98, 129], "home": [98, 100, 111, 119], "warmup_js_trajopt": 98, "batch_env_mod": 98, "warmup_joint_index": 98, "warmup_joint_delta": 98, "perturb": 98, "delta": 98, "act_se": 98, "return_all_solut": [98, 100], "compon": [98, 100, 111, 113], "object_nam": 98, "sphere_fit_typ": 98, "world_objects_pose_offset": 98, "remove_obstacles_from_world_config": 98, "assumpt": 98, "contact": 98, "external_object": 98, "blox_layer_nam": 98, "alloc": [98, 100], "update_trajopt": 98, "robot_config_dict": 98, "seed_success": [98, 100], "trajopt_inst": 98, "num_seeds_overrid": 98, "track": [98, 114, 128, 133], "stuck": [99, 114], "behind": [99, 114], "highli": 99, "particle_opt_it": 99, "step_dt": [99, 113], "use_lbfg": 99, "use_mppi": 99, "reliabl": [99, 120], "particle_mpc": 99, "gradient_mpc": 99, "frequenc": 99, "command": [99, 113, 114, 118, 119], "Then": [99, 100, 107, 108, 114, 116], "new_pos": [99, 113, 115], "seed_traj": [99, 100], "setup_solv": 99, "One": [99, 112, 114], "refin": 100, "squar": 100, "1000": 100, "10000": [100, 117], "aux_rollout": 100, "auxiliari": 100, "linearli": 100, "outer": 100, "25": [100, 118], "inner": 100, "outer_it": 100, "dofseed_success": 100, "n_seedsnum_se": 100, "traj_stat": 100, "06": 100, "small": 100, "stabil": 100, "smooth_cost": 100, "col": 100, "jit": [100, 127], "deep": 101, "altern": [101, 115], "current_solve_st": 101, "current_goal_buff": 101, "new_goal_pos": 101, "fewer": 101, "subpackag": 104, "curobo": [105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 128, 129, 130, 134, 135, 136, 139], "omni_python": [105, 107, 111, 114, 116, 139], "isaac_sim": [105, 107, 111, 114, 119, 139], "batch_collision_check": 105, "fashion": 105, "batch_motion_gen_reach": 105, "trigger": [105, 114, 139], "leverag": [106, 112, 113, 114, 115, 116, 118, 123, 129, 131, 133, 136], "front": [106, 116], "tower": 106, "seen": [106, 107, 108, 126], "componenet": 106, "pick": [106, 107, 114, 115, 123, 131], "shown": [106, 107, 108, 112, 114, 115, 116], "gripper": [106, 139], "top": 106, "open": [106, 116, 120, 139], "delet": 106, "placement": 106, "reprensent": 106, "sim": [106, 112, 115, 116, 119, 122, 123, 124, 131, 139], "constrained_reach": 107, "click": [107, 111, 114, 116, 139], "restrict": 107, "red": [107, 114, 116, 139], "turn": [107, 114, 116], "green": [107, 114, 116, 126], "upright": 107, "throughout": 107, "penal": [107, 123, 131], "visibl": [107, 108], "highlight": [107, 123, 131], "script": [107, 111, 118, 120, 139], "By": 107, "tradition": 107, "goe": 107, "portion": 107, "t_step_fract": 107, "runn": 107, "simple_stack": 107, "constrain_grasp_approach": 107, "scene": [108, 113, 114, 115, 116, 133, 136], "left": [108, 115, 123, 131], "yellow": 108, "orang": 108, "third": [108, 113, 117], "subtract": 108, "fourth": 108, "rightmost": 108, "back": 108, "initialz": 108, "robot_image_segmentation_exampl": 108, "3000hz": 108, "4090": [108, 113, 114, 118], "480x480": 108, "middl": 108, "right": [108, 115], "block": [109, 123, 126], "segment": [109, 116, 123, 124, 131], "instruct": [111, 116, 118, 119, 139], "develop": [111, 114, 116, 120, 122, 123, 132], "ubuntu": 111, "04": [111, 139], "22": 111, "linux": 111, "volta": 111, "newer": [111, 119], "architectur": 111, "gb": 111, "vram": 111, "orin": [111, 123, 131], "git": [111, 118, 119], "lf": 111, "sudo": [111, 119], "apt": [111, 119, 120], "repositori": [111, 119], "nvlab": [111, 116, 119], "pip": [111, 116, 118, 139], "isol": [111, 139], "minut": 111, "python3": [111, 119], "pytest": 111, "verifi": 111, "unit": 111, "2022": [111, 119], "2023": [111, 119, 123, 124, 131, 132, 133, 135, 136], "isaac_sim_workstation_instal": 111, "cuda_instruct": 111, "usr": [111, 119], "bin": [111, 119], "bashrc": 111, "echo": 111, "ov": 111, "pkg": [111, 119], "sh": [111, 119, 139], "accordingli": 111, "tomli": 111, "wheel": 111, "ninja": 111, "isaacsim": 111, "motion_gen_reach": [111, 114, 139], "stabl": 111, "instabl": 111, "heavili": 111, "ur5": [111, 113, 118, 123, 125], "nativ": [111, 112, 119, 120], "proceed": 111, "d_glibcxx_use_cxx11_abi": 111, "ngc": [111, 119], "import": [111, 113, 115, 117], "_c": 111, "_glibcxx_use_cxx11_abi": 111, "detect": [111, 114, 120], "glibcxx_use_cxx11_abi": 111, "dependenic": 111, "libgoogl": 111, "glog": [111, 120], "dev": 111, "libgtest": 111, "libsqlite3": 111, "curl": 111, "tcl": 111, "libbenchmark": 111, "valtsbluki": 111, "cd": [111, 118, 119], "mkdir": [111, 118, 119, 139], "cmake": [111, 120], "dpre_cxx11_abi_link": 111, "ON": 111, "dbuild_test": 111, "j32": 111, "nvblox_torch": [111, 116, 118], "cmake_prefix_path": 111, "opencv": 111, "pyrealsense2": [111, 116], "transforms3d": 111, "pre_cxx11_abi": 111, "shell": 111, "torch_cxx11": 111, "pkgs_path": 111, "wget": [111, 119], "v3": 111, "27": 111, "tar": 111, "xvzf": 111, "essenti": 111, "checkinstal": 111, "zlib1g": 111, "libssl": 111, "bootstrap": 111, "j8": 111, "sqlite3": 111, "sqlite": 111, "39": [111, 139], "cflag": 111, "fpic": 111, "googl": [111, 133], "v0": [111, 118, 123, 124, 131], "dcmake_position_independent_cod": 111, "dcmake_install_prefix": 111, "dwith_gflag": 111, "dwith_gtest": 111, "dbuild_shared_lib": 111, "dcmake_cxx_flag": 111, "gflag": 111, "v2": 111, "dgflags_build_static_lib": 111, "dbuild_redistribut": 111, "dsqlite3_base_path": 111, "dglog_base_path": 111, "dgflags_base_path": 111, "dcmake_cuda_flag": 111, "ld_library_path": 111, "lib": 111, "glu": 111, "freeglut3": 111, "pipelin": [112, 113, 117, 118], "wxyz": 112, "aricl": 112, "blog": 112, "caveat": 112, "henc": [112, 113, 115, 120, 129], "tool": [112, 115], "crash": [112, 120], "snippet": 113, "parti": [113, 117], "conveni": 113, "config_fil": 113, "urdf_fil": 113, "rand": 113, "explain": [113, 115], "page": [113, 115, 132, 133], "dive": [113, 115, 128], "quick": 113, "tabl": [113, 119], "cube_1": [113, 115], "080": 113, "043": [113, 115, 139], "471": [113, 115], "284": [113, 115], "834": [113, 115], "srl_ur10_bin": [113, 115], "obj": [113, 115], "world_fil": [113, 117], "curobo_fn": [113, 117], "q_sph": 113, "randn": 113, "q_": 113, "d_world": 113, "d_self": [113, 117], "penetr": 113, "safeti": [113, 114, 139], "ik_config": 113, "q_sampl": 113, "kin_stat": [113, 117], "q_solut": 113, "collision_cag": 113, "world_cfg": 113, "base_scen": 113, "motion_gen_config": 113, "retract_cfg": 113, "shoulder_pan_joint": [113, 139], "shoulder_lift_joint": [113, 139], "elbow_joint": [113, 139], "wrist_1_joint": [113, 139], "wrist_2_joint": [113, 139], "wrist_3_joint": [113, 139], "traj": 113, "programmat": 113, "framework": [113, 114], "storm": [113, 114], "advanc": [113, 114, 123], "500hz": [113, 114], "rtx": [113, 114, 118], "125hz": [113, 114], "mpc_config": 113, "03": [113, 139], "kinematics_st": 113, "infinit": 113, "new_goal_st": 113, "your_robot_api": 113, "send_command": 113, "comment": 113, "put": [113, 114], "advis": [113, 114], "deploi": [113, 114], "meshe": 114, "even": [114, 126], "becom": 114, "awar": 114, "1hz": 114, "interact": [114, 116], "marker": 114, "teleport": 114, "reactiv": [114, 116], "tf": 114, "window": [114, 116], "button": 114, "drag": [114, 115, 116], "drop": [114, 115, 116], "browser": 114, "articul": [114, 139], "ycb": [114, 115], "prop": 114, "dropdown": 114, "section": [114, 139], "tab": 114, "300": 114, "wait": 114, "collision_checker_exampl": 114, "blue": [114, 116], "vector": [114, 116, 123, 139], "ui": 114, "gif": 114, "With": 114, "xyz": 114, "ik_reach": 114, "video": [114, 139], "mpc_exampl": 114, "trail": 114, "pitcher": 114, "explor": [114, 132], "modular": 114, "dual": 114, "multi_arm_reach": 114, "dual_ur10": [114, 118, 125], "univers": [114, 125], "ur10": [114, 118, 123, 125, 131], "describ": [115, 117, 119], "later": [115, 119], "overview": 115, "illustr": [115, 126], "obstacle_1": 115, "mesh_fil": 115, "obstacle_2": 115, "mesh_1": 115, "obstacle_3": 115, "obstacle_4": 115, "cylinder_1": 115, "obstacle_5": 115, "sphere_1": 115, "viewer": [115, 116], "meshlab": 115, "debug_mesh": 115, "cuboid_world": 115, "debug_collision_cuboid": 115, "visula": 115, "bottom": 115, "row": 115, "collision_supported_world": 115, "collision_support_world": 115, "debug_collision_mesh": 115, "4x": 115, "bvh": 115, "travers": 115, "inherit": 115, "entiti": 115, "world_ccheck": 115, "test_mesh": 115, "collision_buff": 115, "act_dist": 115, "therebi": 115, "world_collision_config": 115, "new_cuboid": 115, "add_cuboid": 115, "toggl": 115, "short": 115, "thorough": 115, "suit": [115, 123, 131], "world_config_1": 115, "cube_env_1": 115, "world_config_2": 115, "cube_env_2": 115, "world_coll_config": 115, "query_buff": 115, "assert": 115, "int32": 115, "abl": [115, 128], "acheiv": 115, "chart": 115, "hierarchi": 115, "contribut": [115, 132], "welcom": 115, "eta": 115, "far": [115, 128], "motiv": 115, "equat": 115, "neg": 115, "text": 115, "begin": 115, "leq": 115, "frac": 115, "introduc": [115, 132], "discret": 115, "benefit": 115, "wall": 115, "rush": 115, "overal": 115, "incur": 115, "often": 115, "reloc": 115, "techniqu": [115, 116, 132], "rather": 115, "manual": 115, "obstacle_capsul": 115, "sph": 115, "bounding_spher": 115, "ideal": 116, "expos": 116, "walk": 116, "instal": [116, 118, 119, 120, 122, 123, 128, 139], "precxx11_abi": [116, 123], "collision_check": 116, "insert": 116, "motion_gen_reacher_nvblox": 116, "mpc_nvblox_exampl": 116, "realsens": 116, "monitor": 116, "clip": 116, "stream": [116, 120], "realsense_collis": 116, "appear": 116, "realsense_reach": 116, "hq_voxel": 116, "machin": 116, "framer": 116, "realsense_mpc": 116, "loss": 117, "friendli": 117, "world_config_fil": 117, "swap": 117, "collision_t": 117, "curobo_wrapp": 117, "torch_layers_exampl": 117, "uuid": 117, "tensorboard": 117, "summarywrit": 117, "tqdm": 117, "curobotorch": 117, "__init__": 117, "q_current": 117, "q_out": 117, "super": 117, "feature_dim": 117, "q_feature_dim": 117, "final_feature_dim": 117, "output_dim": 117, "_robot_world": 117, "_feature_mlp": 117, "512": 117, "relu6": 117, "_final_mlp": 117, "256": [117, 118], "64": 117, "get_featur": 117, "q_sdf": 117, "q_self": 117, "mlp": 117, "q_mid": 117, "q_scale": 117, "mid_featur": 117, "d_sdf": 117, "linalg": 117, "val_loss": 117, "validatin": 117, "__name__": 117, "__main__": 117, "write_usd": 117, "writer": 117, "uuid4": 117, "q_train": 117, "q_val": 117, "2048": 117, "usd_list": 117, "adam": [117, 132, 135], "lr": 117, "weight_decai": 117, "batch_start": 117, "arang": 117, "x_des_train": 117, "x_des_val": 117, "q_debug": 117, "bar": 117, "x_train": 117, "x_des_batch": 117, "add_scalar": 117, "q_pred": 117, "set_descript": 117, "len": 117, "gripper_mesh": 117, "target_gripp": 117, "franka_descript": [117, 139], "hand_ee_link": 117, "dae": 117, "save_nam": 117, "rand_perm": 117, "randperm": 117, "epoch_grid": 117, "arxiv": [118, 123, 131, 132, 135], "paper": [118, 132, 133], "signific": 118, "15m": 118, "fusion": [118, 130], "10m": 118, "april": [118, 123, 124, 131], "2024": [118, 123, 124, 128, 131], "2600": 118, "benchmak": 118, "99": 118, "81": 118, "038": 118, "035": 118, "median": 118, "029": [118, 139], "032": 118, "98": 118, "158": 118, "109": 118, "304": 118, "096": 118, "261": 118, "966": 118, "rad": 118, "151": 118, "010": 118, "251": 118, "782": 118, "122": 118, "752": 118, "38": 118, "177": 118, "126": 118, "037": 118, "146": 118, "268": 118, "191": 118, "507": 118, "mm": 118, "255": 118, "584": 118, "078": [118, 139], "192": 118, "571": 118, "800": 118, "00": [118, 139], "042": 118, "044": 118, "030": 118, "274": 118, "273": 118, "233": 118, "309": 118, "237": 118, "814": 118, "667": 118, "698": 118, "229": 118, "402": 118, "106": 118, "040": 118, "414": 118, "116": 118, "845": 118, "770": 118, "311": 118, "183": 118, "345": 118, "088": 118, "185": 118, "117": 118, "1800": 118, "72": 118, "288": 118, "998": 118, "196": 118, "720": 118, "854": 118, "997": 118, "863": 118, "505": 118, "974": 118, "131": 118, "689": 118, "37": 118, "506": 118, "134": [118, 139], "606": 118, "156": 118, "066": 118, "194": 118, "174": 118, "287": 118, "661": 118, "072": [118, 139], "914": 118, "curobo_benchmark": 118, "88": 118, "065": [118, 139], "046": [118, 139], "054": 118, "069": 118, "170": 118, "102": 118, "291": 118, "836": 118, "136": 118, "003": [118, 139], "243": 118, "124": 118, "223": 118, "793": 118, "219": 118, "147": 118, "475": 118, "190": 118, "144": 118, "245": 118, "564": 118, "077": [118, 139], "178": 118, "376": [118, 139], "98th": 118, "percentil": 118, "ik_benchmark": 118, "0239108": 118, "105928": 118, "00567964": 118, "03334e": 118, "0079604": 118, "04873e": 118, "0214932": 118, "0488772": 118, "65": 118, "00416377": 118, "00176e": 118, "00489288": 118, "03361e": 118, "0215468": 118, "043004": 118, "00431679": 118, "03305e": 118, "00866652": 118, "13802e": 118, "tm12": [118, 125], "0215514": 118, "0503777": 118, "00535555": 118, "04348e": 118, "0112364": 118, "45993e": 118, "jaco7": [118, 125], "0231285": 118, "0833737": 118, "00291714": 118, "02833e": 118, "00411957": 118, "04493e": 118, "kinova_gen3": [118, 125], "0230068": 118, "0570858": 118, "00309421": 118, "03153e": 118, "0034506": 118, "04602e": 118, "iiwa": [118, 125], "0229251": 118, "0454897": 118, "00305969": 118, "01236e": 118, "0032995": 118, "0446e": 118, "iiwa_allegro": [118, 125], "0648178": 118, "208883": 118, "95": 118, "00330207": 118, "0406e": 118, "00525135": 118, "04795e": 118, "0393165": 118, "094734": 118, "0048302": 118, "03297e": 118, "0121227": 118, "89246e": 118, "csv": 118, "fishbot": 118, "kinematics_benchmark": 118, "pyrend": 118, "sensor": 118, "generate_nvblox_imag": 118, "curobo_nvblox_benchmark": 118, "robometrics_benchmark": 118, "who": 118, "understand": 118, "analyz": 118, "bottleneck": [118, 128], "dump": 118, "json": [118, 119], "chrome": 118, "curobo_profil": 118, "curobo_nvblox_profil": 118, "curobo_python_profil": 118, "cprofil": 118, "dockerfil": [119, 123, 124, 131], "tag": [119, 139], "x86": [119, 123, 124, 131], "aarch64": [119, 123, 124, 131], "isaac_sim_vers": 119, "vulkan": 119, "gui": 119, "headless": [119, 120], "replac": [119, 128, 139], "edit": 119, "daemon": 119, "runtimearg": 119, "bash": 119, "build_dock": 119, "column": 119, "start_dock": 119, "mount": 119, "folder": [119, 139], "build_dev_dock": 119, "start_dev_dock": 119, "pypi": 119, "anymor": 119, "ship": [119, 123, 131], "download": 119, "repo": 119, "ubuntu2004": 119, "arm64": 119, "mv": 119, "prefer": 119, "600": 119, "local_instal": 119, "tegra": 119, "local_11": 119, "1_arm64": 119, "deb": 119, "dpkg": 119, "cp": [119, 139], "keyr": 119, "gpg": 119, "cuda_hom": 119, "build_lib": 119, "no_standalon": 119, "toolkit": 119, "percept": 120, "research": [120, 123, 131, 136], "densiti": 120, "occlus": 120, "regener": 120, "redistribut": 120, "cxx11_abi": [120, 123], "cm": 120, "quickli": 120, "mapper": 120, "client": 120, "headless_mod": 120, "websocket": 120, "webrtc": 120, "docker": [120, 122, 123], "benchmark": [122, 123], "known": [122, 123], "gtc": [123, 128, 131], "talk": [123, 131], "pdf": [123, 131, 132], "preview": [123, 131], "cumot": [123, 131], "busi": [123, 131], "inquiri": [123, 131], "submit": [123, 131], "licens": [123, 131], "march": [123, 124, 131], "feb": [123, 124, 131], "dec": [123, 124, 131], "nov": [123, 124, 131], "oct": [123, 124, 131], "changelog": [123, 124, 131], "30m": [123, 131], "100m": [123, 131], "jetson": [123, 131], "birrt": [123, 131], "phase": [123, 131], "motionbenchmak": [123, 131], "dataset": [123, 131], "citat": 123, "arm": [123, 125, 133, 136], "latest": [123, 133], "approach": 123, "prequisit": 123, "prepar": 123, "io": 123, "techman": 125, "kinova": 125, "jaco": 125, "gen3": 125, "kuka": 125, "allegro": 125, "hand": [125, 133, 136], "franka_mobil": 125, "mobil": 125, "tri_ur10": 125, "quad_ur10": 125, "four": 125, "cccccc": 126, "capabl": [127, 128], "mangl": 128, "templat": [128, 139], "75025": 128, "blindli": 128, "reccommend": 128, "torch_cuda_arch_list": 128, "ptx": 128, "batch_env_idx": 128, "n_batch": 128, "enable_obs_env": 128, "n_ob": 128, "out_buffer_prim": 128, "out_buffer_mesh": 128, "usd_exampl": 129, "substr": 129, "accident": 129, "coordin": 129, "xform": 129, "computelocaltoworldtransform": 129, "prod_kit": 129, "programmer_ref": 129, "w_t_o": 129, "w_t_r": 129, "rel": 129, "r_t_o": 129, "curobo_torch_compile_dis": 130, "curobo_torch_compile_forc": 130, "forc": 130, "bypass": 130, "balakumar": [132, 133, 135, 136], "sundaralingam": [132, 133, 135, 136], "siva": [132, 133, 135, 136], "kumar": [132, 133, 135, 136], "sastri": [132, 133, 135, 136], "hari": [132, 133, 135, 136], "fishman": [132, 135], "caelan": [132, 135], "garrett": [132, 135], "karl": [132, 133, 135, 136], "van": [132, 133, 135, 136], "wyk": [132, 133, 135, 136], "valt": [132, 135], "bluki": [132, 135], "alexand": [132, 133, 135, 136], "millan": [132, 135], "helen": [132, 135], "oleynikova": [132, 135], "ankur": [132, 135], "handa": [132, 135], "fabio": [132, 135], "ramo": [132, 135], "nathan": [132, 135], "ratliff": [132, 135], "dieter": [132, 133, 135, 136], "fox": [132, 133, 135, 136], "demonstr": 132, "massiv": 132, "difficult": 132, "50m": 132, "60x": 132, "art": 132, "sota": 132, "novel": 132, "aid": 132, "101x": 132, "rrtconnect": 132, "7000": 132, "enrich": 132, "commun": 132, "misc": [132, 135], "curobo_report23": [132, 135], "titl": [132, 135], "author": [132, 135], "year": [132, 135], "eprint": [132, 135], "2310": [132, 135], "17274": [132, 135], "archiveprefix": [132, 135], "primaryclass": [132, 135], "publish": 132, "inproceed": 132, "curobo_icra23": 132, "booktitl": 132, "ieee": 132, "confer": 132, "autom": 132, "8112": 132, "8119": 132, "doi": 132, "1109": 132, "icra48891": 132, "10160765": 132, "beyond": 133, "scholar": 133, "studi": [133, 136], "aspect": [133, 136], "vapr": [133, 136], "yu": [133, 136], "shun": [133, 136], "hsiao": [133, 136], "jason": [133, 136], "yik": [133, 136], "thierri": [133, 136], "tamb": [133, 136], "charbel": [133, 136], "sakr": [133, 136], "stephen": [133, 136], "keckler": [133, 136], "vijai": [133, 136], "janapa": [133, 136], "reddi": [133, 136], "iro": [133, 136], "reconstruct": [133, 136], "tabletop": [133, 136], "zhenggang": [133, 136], "tang": [133, 136], "jonathan": [133, 136], "tremblai": [133, 136], "bowen": [133, 136], "wen": [133, 136], "ye": [133, 136], "yuan": [133, 136], "tyre": [133, 136], "charl": [133, 136], "schwing": [133, 136], "stan": [133, 136], "birchfield": [133, 136], "anyteleop": [133, 136], "dexter": [133, 136], "teleoper": [133, 136], "yuzh": [133, 136], "qin": [133, 136], "wei": [133, 136], "yang": [133, 136], "binghao": [133, 136], "huang": [133, 136], "hao": [133, 136], "su": [133, 136], "xiaolong": [133, 136], "wang": [133, 136], "chao": [133, 136], "rss": [133, 136], "goalset_solv": 137, "batch_goalset_solv": 137, "batch_goalset_env_solv": 137, "displai": 139, "fill_thi": 139, "franka_panda_met": 139, "usda": 139, "panda_joint1": 139, "panda_joint2": 139, "panda_joint3": 139, "panda_joint4": 139, "panda_joint5": 139, "panda_joint6": 139, "panda_joint7": 139, "panda_finger_joint1": 139, "panda_finger_joint2": 139, "franka_panda": 139, "panda_hand": 139, "panda_link0": 139, "panda_link1": 139, "panda_link2": 139, "panda_link3": 139, "panda_link4": 139, "panda_link5": 139, "panda_link6": 139, "panda_link7": 139, "panda_leftfing": 139, "panda_rightfing": 139, "franka_mesh": 139, "panda_link8": 139, "attach_joint": 139, "ur_descript": 139, "universal_robot": 139, "catkin": 139, "workspac": 139, "xacro": 139, "rosrun": 139, "weigh": 139, "tool0": 139, "57": 139, "383": 139, "usual": 139, "isaac_sim_path": 139, "convert_urdf_to_usd": 139, "save_usd": 139, "lula": 139, "editor": 139, "stand": 139, "ground": 139, "shoulder_link": 139, "upper_arm_link": 139, "forearm_link": 139, "wrist_1_link": 139, "wrist_2_link": 139, "wrist_3_link": 139, "center": 139, "416": 139, "143": 139, "015": 139, "14": 139, "138": 139, "062": 139, "285": 139, "139": 139, "061": 139, "222": 139, "055": 139, "008": 139, "07": 139, "076": 139, "031": 139, "387": 139, "014": 139, "057": 139, "121": 139, "006": 139, "206": 139, "007": 139, "312": 139, "056": 139, "266": 139, "397": 139, "018": 139, "052": 139, "009": 139, "047": 139, "027": 139, "045": 139, "036": 139, "consecut": 139, "neccessari": 139, "conserv": 139, "frankaemika": 139, "franka_ro": 139, "finger": 139, "visualize_spher": 139, "0x7fca5f38dfe0": 81}, "objects": {"": [[0, 0, 0, "-", "curobo"]], "curobo": [[1, 0, 0, "-", "cuda_robot_model"], [8, 0, 0, "-", "curobolib"], [20, 0, 0, "-", "geom"], [33, 0, 0, "-", "graph"], [37, 0, 0, "-", "opt"], [47, 0, 0, "-", "rollout"], [68, 0, 0, "-", "types"], [76, 0, 0, "-", "util"], [89, 0, 0, "-", "util_file"], [90, 0, 0, "-", "wrap"]], "curobo.cuda_robot_model": [[2, 0, 0, "-", "cuda_robot_generator"], [3, 0, 0, "-", "cuda_robot_model"], [4, 0, 0, "-", "kinematics_parser"], [5, 0, 0, "-", "types"], [6, 0, 0, "-", "urdf_kinematics_parser"], [7, 0, 0, "-", "usd_kinematics_parser"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, 1, 1, "", "CudaRobotGenerator"], [2, 1, 1, "", "CudaRobotGeneratorConfig"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator": [[2, 2, 1, "", "_add_body_to_tree"], [2, 2, 1, "", "_build_chain"], [2, 2, 1, "", "_build_collision_model"], [2, 2, 1, "", "_build_kinematics"], [2, 2, 1, "", "_build_kinematics_tensors"], [2, 2, 1, "", "_build_kinematics_with_lock_joints"], [2, 2, 1, "", "_create_self_collision_thread_data"], [2, 2, 1, "", "_get_joint_links"], [2, 2, 1, "", "_get_joint_position_velocity_limits"], [2, 2, 1, "", "_get_link_poses"], [2, 2, 1, "", "_get_mimic_joint_data"], [2, 2, 1, "", "_update_joint_limits"], [2, 2, 1, "", "add_fixed_link"], [2, 2, 1, "", "add_link"], [2, 3, 1, "", "add_object_link"], [2, 3, 1, "", "asset_root_path"], [2, 3, 1, "", "base_link"], [2, 3, 1, "", "collision_link_names"], [2, 3, 1, "", "collision_sphere_buffer"], [2, 3, 1, "", "collision_spheres"], [2, 3, 1, "", "compute_jacobian"], [2, 3, 1, "", "cspace"], [2, 3, 1, "", "debug"], [2, 3, 1, "", "ee_link"], [2, 3, 1, "", "external_asset_path"], [2, 3, 1, "", "external_robot_configs_path"], [2, 3, 1, "", "extra_collision_spheres"], [2, 3, 1, "", "extra_links"], [2, 4, 1, "", "get_joint_limits"], [2, 2, 1, "", "initialize_tensors"], [2, 3, 1, "", "isaac_usd_path"], [2, 4, 1, "", "kinematics_config"], [2, 4, 1, "", "kinematics_parser"], [2, 3, 1, "", "link_names"], [2, 3, 1, "", "load_link_names_with_mesh"], [2, 3, 1, "", "load_meshes"], [2, 3, 1, "", "lock_joints"], [2, 3, 1, "", "mesh_link_names"], [2, 3, 1, "", "self_collision_buffer"], [2, 4, 1, "", "self_collision_config"], [2, 3, 1, "", "self_collision_ignore"], [2, 3, 1, "", "tensor_args"], [2, 3, 1, "", "urdf_path"], [2, 3, 1, "", "usd_flip_joint_limits"], [2, 3, 1, "", "usd_flip_joints"], [2, 3, 1, "", "usd_path"], [2, 3, 1, "", "usd_robot_root"], [2, 3, 1, "", "use_external_assets"], [2, 3, 1, "", "use_global_cumul"], [2, 3, 1, "", "use_usd_kinematics"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig": [[2, 3, 1, "", "add_object_link"], [2, 3, 1, "", "asset_root_path"], [2, 3, 1, "", "base_link"], [2, 3, 1, "", "collision_link_names"], [2, 3, 1, "", "collision_sphere_buffer"], [2, 3, 1, "", "collision_spheres"], [2, 3, 1, "", "compute_jacobian"], [2, 3, 1, "", "cspace"], [2, 3, 1, "", "debug"], [2, 3, 1, "", "ee_link"], [2, 3, 1, "", "external_asset_path"], [2, 3, 1, "", "external_robot_configs_path"], [2, 3, 1, "", "extra_collision_spheres"], [2, 3, 1, "", "extra_links"], [2, 3, 1, "", "isaac_usd_path"], [2, 3, 1, "", "link_names"], [2, 3, 1, "", "load_link_names_with_mesh"], [2, 3, 1, "", "load_meshes"], [2, 3, 1, "", "lock_joints"], [2, 3, 1, "", "mesh_link_names"], [2, 3, 1, "", "self_collision_buffer"], [2, 3, 1, "", "self_collision_ignore"], [2, 3, 1, "", "tensor_args"], [2, 3, 1, "", "urdf_path"], [2, 3, 1, "", "usd_flip_joint_limits"], [2, 3, 1, "", "usd_flip_joints"], [2, 3, 1, "", "usd_path"], [2, 3, 1, "", "usd_robot_root"], [2, 3, 1, "", "use_external_assets"], [2, 3, 1, "", "use_global_cumul"], [2, 3, 1, "", "use_usd_kinematics"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, 1, 1, "", "CudaRobotModel"], [3, 1, 1, "", "CudaRobotModelConfig"], [3, 1, 1, "", "CudaRobotModelState"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel": [[3, 2, 1, "", "_cuda_forward"], [3, 4, 1, "", "all_articulated_joint_names"], [3, 4, 1, "", "base_link"], [3, 3, 1, "", "compute_jacobian"], [3, 4, 1, "", "cspace"], [3, 4, 1, "", "dof"], [3, 4, 1, "", "ee_link"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "from_basic_urdf"], [3, 2, 1, "", "from_basic_usd"], [3, 2, 1, "", "from_config"], [3, 2, 1, "", "from_data_dict"], [3, 2, 1, "", "from_robot_yaml_file"], [3, 3, 1, "", "generator_config"], [3, 2, 1, "", "get_all_link_transforms"], [3, 2, 1, "", "get_dof"], [3, 2, 1, "", "get_full_js"], [3, 2, 1, "", "get_joint_limits"], [3, 2, 1, "", "get_link_mesh"], [3, 2, 1, "", "get_link_poses"], [3, 2, 1, "", "get_link_transform"], [3, 2, 1, "", "get_mimic_js"], [3, 2, 1, "", "get_robot_as_mesh"], [3, 2, 1, "", "get_robot_as_spheres"], [3, 2, 1, "", "get_robot_link_meshes"], [3, 2, 1, "", "get_self_collision_config"], [3, 2, 1, "", "get_state"], [3, 4, 1, "", "joint_names"], [3, 3, 1, "", "kinematics_config"], [3, 3, 1, "", "kinematics_parser"], [3, 3, 1, "", "link_names"], [3, 4, 1, "", "lock_jointstate"], [3, 4, 1, "", "retract_config"], [3, 4, 1, "", "robot_spheres"], [3, 3, 1, "", "self_collision_config"], [3, 3, 1, "", "tensor_args"], [3, 4, 1, "", "total_spheres"], [3, 2, 1, "", "update_batch_size"], [3, 2, 1, "", "update_kinematics_config"], [3, 3, 1, "", "use_global_cumul"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig": [[3, 3, 1, "", "compute_jacobian"], [3, 4, 1, "", "cspace"], [3, 4, 1, "", "dof"], [3, 2, 1, "", "from_basic_urdf"], [3, 2, 1, "", "from_basic_usd"], [3, 2, 1, "", "from_config"], [3, 2, 1, "", "from_data_dict"], [3, 2, 1, "", "from_robot_yaml_file"], [3, 3, 1, "", "generator_config"], [3, 2, 1, "", "get_joint_limits"], [3, 3, 1, "", "kinematics_config"], [3, 3, 1, "", "kinematics_parser"], [3, 3, 1, "", "link_names"], [3, 3, 1, "", "self_collision_config"], [3, 3, 1, "", "tensor_args"], [3, 3, 1, "", "use_global_cumul"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState": [[3, 3, 1, "", "ang_jacobian"], [3, 4, 1, "", "ee_pose"], [3, 3, 1, "", "ee_position"], [3, 3, 1, "", "ee_quaternion"], [3, 2, 1, "", "get_link_spheres"], [3, 3, 1, "", "lin_jacobian"], [3, 3, 1, "", "link_names"], [3, 4, 1, "", "link_pose"], [3, 3, 1, "", "link_spheres_tensor"], [3, 3, 1, "", "links_position"], [3, 3, 1, "", "links_quaternion"]], "curobo.cuda_robot_model.kinematics_parser": [[4, 1, 1, "", "KinematicsParser"], [4, 1, 1, "", "LinkParams"]], "curobo.cuda_robot_model.kinematics_parser.KinematicsParser": [[4, 2, 1, "", "_get_from_extra_links"], [4, 2, 1, "", "add_absolute_path_to_link_meshes"], [4, 2, 1, "", "build_link_parent"], [4, 2, 1, "", "get_chain"], [4, 2, 1, "", "get_link_mesh"], [4, 2, 1, "", "get_link_parameters"]], "curobo.cuda_robot_model.kinematics_parser.LinkParams": [[4, 3, 1, "", "fixed_transform"], [4, 2, 1, "", "from_dict"], [4, 3, 1, "", "joint_axis"], [4, 3, 1, "", "joint_id"], [4, 3, 1, "", "joint_limits"], [4, 3, 1, "", "joint_name"], [4, 3, 1, "", "joint_offset"], [4, 3, 1, "", "joint_type"], [4, 3, 1, "", "joint_velocity_limits"], [4, 3, 1, "", "link_name"], [4, 3, 1, "", "mimic_joint_name"], [4, 3, 1, "", "parent_link_name"]], "curobo.cuda_robot_model.types": [[5, 1, 1, "", "CSpaceConfig"], [5, 1, 1, "", "JointLimits"], [5, 1, 1, "", "JointType"], [5, 1, 1, "", "KinematicsTensorConfig"], [5, 1, 1, "", "SelfCollisionKinematicsConfig"]], "curobo.cuda_robot_model.types.CSpaceConfig": [[5, 3, 1, "", "acceleration_scale"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 3, 1, "", "cspace_distance_weight"], [5, 2, 1, "", "inplace_reindex"], [5, 3, 1, "", "jerk_scale"], [5, 3, 1, "", "joint_names"], [5, 2, 1, "", "load_from_joint_limits"], [5, 3, 1, "", "max_acceleration"], [5, 3, 1, "", "max_jerk"], [5, 3, 1, "", "null_space_weight"], [5, 3, 1, "", "position_limit_clip"], [5, 3, 1, "", "retract_config"], [5, 2, 1, "", "scale_joint_limits"], [5, 3, 1, "", "tensor_args"], [5, 3, 1, "", "velocity_scale"]], "curobo.cuda_robot_model.types.JointLimits": [[5, 3, 1, "", "acceleration"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 3, 1, "", "effort"], [5, 2, 1, "", "from_data_dict"], [5, 3, 1, "", "jerk"], [5, 3, 1, "", "joint_names"], [5, 3, 1, "", "position"], [5, 3, 1, "", "tensor_args"], [5, 3, 1, "", "velocity"]], "curobo.cuda_robot_model.types.JointType": [[5, 3, 1, "", "FIXED"], [5, 3, 1, "", "X_PRISM"], [5, 3, 1, "", "X_PRISM_NEG"], [5, 3, 1, "", "X_ROT"], [5, 3, 1, "", "X_ROT_NEG"], [5, 3, 1, "", "Y_PRISM"], [5, 3, 1, "", "Y_PRISM_NEG"], [5, 3, 1, "", "Y_ROT"], [5, 3, 1, "", "Y_ROT_NEG"], [5, 3, 1, "", "Z_PRISM"], [5, 3, 1, "", "Z_PRISM_NEG"], [5, 3, 1, "", "Z_ROT"], [5, 3, 1, "", "Z_ROT_NEG"]], "curobo.cuda_robot_model.types.KinematicsTensorConfig": [[5, 2, 1, "", "attach_object"], [5, 3, 1, "", "base_link"], [5, 2, 1, "", "copy_"], [5, 3, 1, "", "cspace"], [5, 3, 1, "", "debug"], [5, 2, 1, "", "detach_object"], [5, 2, 1, "", "disable_link_spheres"], [5, 3, 1, "", "ee_idx"], [5, 3, 1, "", "ee_link"], [5, 2, 1, "", "enable_link_spheres"], [5, 3, 1, "", "fixed_transforms"], [5, 2, 1, "", "get_link_spheres"], [5, 2, 1, "", "get_number_of_spheres"], [5, 2, 1, "", "get_reference_link_spheres"], [5, 2, 1, "", "get_sphere_index_from_link_name"], [5, 3, 1, "", "joint_limits"], [5, 3, 1, "", "joint_map"], [5, 3, 1, "", "joint_map_type"], [5, 3, 1, "", "joint_names"], [5, 3, 1, "", "joint_offset_map"], [5, 3, 1, "", "link_chain_map"], [5, 3, 1, "", "link_map"], [5, 3, 1, "", "link_name_to_idx_map"], [5, 3, 1, "", "link_names"], [5, 3, 1, "", "link_sphere_idx_map"], [5, 3, 1, "", "link_spheres"], [5, 2, 1, "", "load_cspace_cfg_from_kinematics"], [5, 3, 1, "", "lock_jointstate"], [5, 3, 1, "", "mesh_link_names"], [5, 3, 1, "", "mimic_joints"], [5, 3, 1, "", "n_dof"], [5, 3, 1, "", "non_fixed_joint_names"], [5, 3, 1, "", "reference_link_spheres"], [5, 3, 1, "", "store_link_map"], [5, 3, 1, "", "total_spheres"], [5, 2, 1, "", "update_link_spheres"]], "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig": [[5, 3, 1, "", "checks_per_thread"], [5, 3, 1, "", "collision_matrix"], [5, 3, 1, "", "distance_threshold"], [5, 3, 1, "", "experimental_kernel"], [5, 3, 1, "", "offset"], [5, 3, 1, "", "thread_location"], [5, 3, 1, "", "thread_max"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, 1, 1, "", "UrdfKinematicsParser"]], "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser": [[6, 2, 1, "", "_get_from_extra_links"], [6, 2, 1, "", "_get_joint_limits"], [6, 2, 1, "", "_get_joint_name"], [6, 2, 1, "", "add_absolute_path_to_link_meshes"], [6, 2, 1, "", "build_link_parent"], [6, 2, 1, "", "get_chain"], [6, 2, 1, "", "get_controlled_joint_names"], [6, 2, 1, "", "get_link_mesh"], [6, 2, 1, "", "get_link_parameters"], [6, 2, 1, "", "get_urdf_string"], [6, 4, 1, "", "root_link"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, 1, 1, "", "UsdKinematicsParser"], [7, 5, 1, "", "get_links_for_joint"]], "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser": [[7, 2, 1, "", "_get_from_extra_links"], [7, 2, 1, "", "_get_joint_transform"], [7, 2, 1, "", "add_absolute_path_to_link_meshes"], [7, 2, 1, "", "build_link_parent"], [7, 2, 1, "", "get_chain"], [7, 2, 1, "", "get_link_mesh"], [7, 2, 1, "", "get_link_parameters"], [7, 4, 1, "", "robot_prim_root"]], "curobo.curobolib": [[9, 0, 0, "-", "geom"], [10, 0, 0, "-", "geom_cu"], [11, 0, 0, "-", "kinematics"], [12, 0, 0, "-", "kinematics_fused_cu"], [13, 0, 0, "-", "lbfgs_step_cu"], [14, 0, 0, "-", "line_search_cu"], [15, 0, 0, "-", "ls"], [16, 0, 0, "-", "opt"], [17, 0, 0, "-", "tensor_step"], [18, 0, 0, "-", "tensor_step_cu"], [19, 0, 0, "-", "util_file"]], "curobo.curobolib.geom": [[9, 1, 1, "", "PoseError"], [9, 1, 1, "", "PoseErrorDistance"], [9, 1, 1, "", "SdfSphereOBB"], [9, 1, 1, "", "SdfSphereVoxel"], [9, 1, 1, "", "SdfSweptSphereOBB"], [9, 1, 1, "", "SdfSweptSphereVoxel"], [9, 1, 1, "", "SelfCollisionDistance"], [9, 1, 1, "", "SelfCollisionDistanceLoss"], [9, 5, 1, "", "get_pose_distance"], [9, 5, 1, "", "get_pose_distance_backward"], [9, 5, 1, "", "get_self_collision_distance"]], "curobo.curobolib.geom.PoseError": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.PoseErrorDistance": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SdfSphereOBB": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SdfSphereVoxel": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SdfSweptSphereOBB": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SdfSweptSphereVoxel": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SelfCollisionDistance": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom.SelfCollisionDistanceLoss": [[9, 3, 1, "", "_backward_cls"], [9, 2, 1, "", "_get_compiled_autograd_symints"], [9, 2, 1, "", "_is_compiled_autograd_tracing"], [9, 3, 1, "", "_materialize_non_diff_grads"], [9, 3, 1, "", "_raw_saved_tensors"], [9, 2, 1, "", "_register_hook"], [9, 2, 1, "", "_register_hook_dict"], [9, 2, 1, "", "_sequence_nr"], [9, 2, 1, "", "apply"], [9, 2, 1, "", "backward"], [9, 3, 1, "", "dirty_tensors"], [9, 2, 1, "", "forward"], [9, 3, 1, "", "generate_vmap_rule"], [9, 3, 1, "", "is_traceable"], [9, 2, 1, "", "jvp"], [9, 2, 1, "", "mark_dirty"], [9, 2, 1, "", "mark_non_differentiable"], [9, 2, 1, "", "mark_shared_storage"], [9, 3, 1, "", "materialize_grads"], [9, 2, 1, "", "maybe_clear_saved_tensors"], [9, 3, 1, "", "metadata"], [9, 2, 1, "", "name"], [9, 3, 1, "", "needs_input_grad"], [9, 3, 1, "", "next_functions"], [9, 3, 1, "", "non_differentiable"], [9, 2, 1, "", "register_hook"], [9, 2, 1, "", "register_prehook"], [9, 3, 1, "", "requires_grad"], [9, 2, 1, "", "save_for_backward"], [9, 2, 1, "", "save_for_forward"], [9, 3, 1, "", "saved_for_forward"], [9, 3, 1, "", "saved_tensors"], [9, 3, 1, "", "saved_variables"], [9, 2, 1, "", "set_materialize_grads"], [9, 2, 1, "", "setup_context"], [9, 3, 1, "", "to_save"], [9, 2, 1, "", "vjp"], [9, 2, 1, "", "vmap"]], "curobo.curobolib.geom_cu": [[10, 5, 1, "", "closest_point"], [10, 5, 1, "", "closest_point_voxel"], [10, 5, 1, "", "pose_distance"], [10, 5, 1, "", "pose_distance_backward"], [10, 5, 1, "", "self_collision_distance"], [10, 5, 1, "", "swept_closest_point"], [10, 5, 1, "", "swept_closest_point_voxel"]], "curobo.curobolib.kinematics": [[11, 1, 1, "", "KinematicsFusedFunction"], [11, 5, 1, "", "get_cuda_kinematics"], [11, 5, 1, "", "rotation_matrix_to_quaternion"]], "curobo.curobolib.kinematics.KinematicsFusedFunction": [[11, 3, 1, "", "_backward_cls"], [11, 2, 1, "", "_call_backward_cuda"], [11, 2, 1, "", "_get_compiled_autograd_symints"], [11, 2, 1, "", "_is_compiled_autograd_tracing"], [11, 3, 1, "", "_materialize_non_diff_grads"], [11, 3, 1, "", "_raw_saved_tensors"], [11, 2, 1, "", "_register_hook"], [11, 2, 1, "", "_register_hook_dict"], [11, 2, 1, "", "_sequence_nr"], [11, 2, 1, "", "apply"], [11, 2, 1, "", "backward"], [11, 3, 1, "", "dirty_tensors"], [11, 2, 1, "", "forward"], [11, 3, 1, "", "generate_vmap_rule"], [11, 3, 1, "", "is_traceable"], [11, 2, 1, "", "jvp"], [11, 2, 1, "", "mark_dirty"], [11, 2, 1, "", "mark_non_differentiable"], [11, 2, 1, "", "mark_shared_storage"], [11, 3, 1, "", "materialize_grads"], [11, 2, 1, "", "maybe_clear_saved_tensors"], [11, 3, 1, "", "metadata"], [11, 2, 1, "", "name"], [11, 3, 1, "", "needs_input_grad"], [11, 3, 1, "", "next_functions"], [11, 3, 1, "", "non_differentiable"], [11, 2, 1, "", "register_hook"], [11, 2, 1, "", "register_prehook"], [11, 3, 1, "", "requires_grad"], [11, 2, 1, "", "save_for_backward"], [11, 2, 1, "", "save_for_forward"], [11, 3, 1, "", "saved_for_forward"], [11, 3, 1, "", "saved_tensors"], [11, 3, 1, "", "saved_variables"], [11, 2, 1, "", "set_materialize_grads"], [11, 2, 1, "", "setup_context"], [11, 3, 1, "", "to_save"], [11, 2, 1, "", "vjp"], [11, 2, 1, "", "vmap"]], "curobo.curobolib.kinematics_fused_cu": [[12, 5, 1, "", "backward"], [12, 5, 1, "", "forward"], [12, 5, 1, "", "matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, 5, 1, "", "forward"]], "curobo.curobolib.line_search_cu": [[14, 5, 1, "", "line_search"], [14, 5, 1, "", "update_best"]], "curobo.curobolib.ls": [[15, 5, 1, "", "update_best"], [15, 5, 1, "", "wolfe_line_search"]], "curobo.curobolib.opt": [[16, 1, 1, "", "LBFGScu"]], "curobo.curobolib.opt.LBFGScu": [[16, 3, 1, "", "_backward_cls"], [16, 2, 1, "", "_get_compiled_autograd_symints"], [16, 2, 1, "", "_is_compiled_autograd_tracing"], [16, 3, 1, "", "_materialize_non_diff_grads"], [16, 3, 1, "", "_raw_saved_tensors"], [16, 2, 1, "", "_register_hook"], [16, 2, 1, "", "_register_hook_dict"], [16, 2, 1, "", "_sequence_nr"], [16, 2, 1, "", "apply"], [16, 2, 1, "", "backward"], [16, 3, 1, "", "dirty_tensors"], [16, 2, 1, "", "forward"], [16, 3, 1, "", "generate_vmap_rule"], [16, 3, 1, "", "is_traceable"], [16, 2, 1, "", "jvp"], [16, 2, 1, "", "mark_dirty"], [16, 2, 1, "", "mark_non_differentiable"], [16, 2, 1, "", "mark_shared_storage"], [16, 3, 1, "", "materialize_grads"], [16, 2, 1, "", "maybe_clear_saved_tensors"], [16, 3, 1, "", "metadata"], [16, 2, 1, "", "name"], [16, 3, 1, "", "needs_input_grad"], [16, 3, 1, "", "next_functions"], [16, 3, 1, "", "non_differentiable"], [16, 2, 1, "", "register_hook"], [16, 2, 1, "", "register_prehook"], [16, 3, 1, "", "requires_grad"], [16, 2, 1, "", "save_for_backward"], [16, 2, 1, "", "save_for_forward"], [16, 3, 1, "", "saved_for_forward"], [16, 3, 1, "", "saved_tensors"], [16, 3, 1, "", "saved_variables"], [16, 2, 1, "", "set_materialize_grads"], [16, 2, 1, "", "setup_context"], [16, 3, 1, "", "to_save"], [16, 2, 1, "", "vjp"], [16, 2, 1, "", "vmap"]], "curobo.curobolib.tensor_step": [[17, 5, 1, "", "tensor_step_acc_fwd"], [17, 5, 1, "", "tensor_step_acc_idx_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_bwd"], [17, 5, 1, "", "tensor_step_pos_clique_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, 5, 1, "", "step_acceleration"], [18, 5, 1, "", "step_acceleration_idx"], [18, 5, 1, "", "step_idx_position2"], [18, 5, 1, "", "step_position"], [18, 5, 1, "", "step_position2"], [18, 5, 1, "", "step_position_backward"], [18, 5, 1, "", "step_position_backward2"]], "curobo.curobolib.util_file": [[19, 5, 1, "", "add_cpp_path"], [19, 5, 1, "", "get_cpp_path"], [19, 5, 1, "", "join_path"]], "curobo.geom": [[21, 0, 0, "-", "cv"], [22, 0, 0, "-", "sdf"], [30, 0, 0, "-", "sphere_fit"], [31, 0, 0, "-", "transform"], [32, 0, 0, "-", "types"]], "curobo.geom.sdf": [[23, 0, 0, "-", "sdf_grid"], [24, 0, 0, "-", "utils"], [25, 0, 0, "-", "warp_primitives"], [26, 0, 0, "-", "world"], [27, 0, 0, "-", "world_blox"], [28, 0, 0, "-", "world_mesh"], [29, 0, 0, "-", "world_voxel"]], "curobo.geom.sdf.sdf_grid": [[23, 1, 1, "", "SDFGrid"], [23, 5, 1, "", "compute_sdf_gradient"], [23, 5, 1, "", "lookup_distance"]], "curobo.geom.sdf.sdf_grid.SDFGrid": [[23, 3, 1, "", "_backward_cls"], [23, 2, 1, "", "_get_compiled_autograd_symints"], [23, 2, 1, "", "_is_compiled_autograd_tracing"], [23, 3, 1, "", "_materialize_non_diff_grads"], [23, 3, 1, "", "_raw_saved_tensors"], [23, 2, 1, "", "_register_hook"], [23, 2, 1, "", "_register_hook_dict"], [23, 2, 1, "", "_sequence_nr"], [23, 2, 1, "", "apply"], [23, 2, 1, "", "backward"], [23, 3, 1, "", "dirty_tensors"], [23, 2, 1, "", "forward"], [23, 3, 1, "", "generate_vmap_rule"], [23, 3, 1, "", "is_traceable"], [23, 2, 1, "", "jvp"], [23, 2, 1, "", "mark_dirty"], [23, 2, 1, "", "mark_non_differentiable"], [23, 2, 1, "", "mark_shared_storage"], [23, 3, 1, "", "materialize_grads"], [23, 2, 1, "", "maybe_clear_saved_tensors"], [23, 3, 1, "", "metadata"], [23, 2, 1, "", "name"], [23, 3, 1, "", "needs_input_grad"], [23, 3, 1, "", "next_functions"], [23, 3, 1, "", "non_differentiable"], [23, 2, 1, "", "register_hook"], [23, 2, 1, "", "register_prehook"], [23, 3, 1, "", "requires_grad"], [23, 2, 1, "", "save_for_backward"], [23, 2, 1, "", "save_for_forward"], [23, 3, 1, "", "saved_for_forward"], [23, 3, 1, "", "saved_tensors"], [23, 3, 1, "", "saved_variables"], [23, 2, 1, "", "set_materialize_grads"], [23, 2, 1, "", "setup_context"], [23, 3, 1, "", "to_save"], [23, 2, 1, "", "vjp"], [23, 2, 1, "", "vmap"]], "curobo.geom.sdf.utils": [[24, 5, 1, "", "create_collision_checker"]], "curobo.geom.sdf.warp_primitives": [[25, 1, 1, "", "SdfMeshWarpPy"], [25, 1, 1, "", "SweptSdfMeshWarpPy"]], "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy": [[25, 3, 1, "", "_backward_cls"], [25, 2, 1, "", "_get_compiled_autograd_symints"], [25, 2, 1, "", "_is_compiled_autograd_tracing"], [25, 3, 1, "", "_materialize_non_diff_grads"], [25, 3, 1, "", "_raw_saved_tensors"], [25, 2, 1, "", "_register_hook"], [25, 2, 1, "", "_register_hook_dict"], [25, 2, 1, "", "_sequence_nr"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "backward"], [25, 3, 1, "", "dirty_tensors"], [25, 2, 1, "", "forward"], [25, 3, 1, "", "generate_vmap_rule"], [25, 3, 1, "", "is_traceable"], [25, 2, 1, "", "jvp"], [25, 2, 1, "", "mark_dirty"], [25, 2, 1, "", "mark_non_differentiable"], [25, 2, 1, "", "mark_shared_storage"], [25, 3, 1, "", "materialize_grads"], [25, 2, 1, "", "maybe_clear_saved_tensors"], [25, 3, 1, "", "metadata"], [25, 2, 1, "", "name"], [25, 3, 1, "", "needs_input_grad"], [25, 3, 1, "", "next_functions"], [25, 3, 1, "", "non_differentiable"], [25, 2, 1, "", "register_hook"], [25, 2, 1, "", "register_prehook"], [25, 3, 1, "", "requires_grad"], [25, 2, 1, "", "save_for_backward"], [25, 2, 1, "", "save_for_forward"], [25, 3, 1, "", "saved_for_forward"], [25, 3, 1, "", "saved_tensors"], [25, 3, 1, "", "saved_variables"], [25, 2, 1, "", "set_materialize_grads"], [25, 2, 1, "", "setup_context"], [25, 3, 1, "", "to_save"], [25, 2, 1, "", "vjp"], [25, 2, 1, "", "vmap"]], "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy": [[25, 3, 1, "", "_backward_cls"], [25, 2, 1, "", "_get_compiled_autograd_symints"], [25, 2, 1, "", "_is_compiled_autograd_tracing"], [25, 3, 1, "", "_materialize_non_diff_grads"], [25, 3, 1, "", "_raw_saved_tensors"], [25, 2, 1, "", "_register_hook"], [25, 2, 1, "", "_register_hook_dict"], [25, 2, 1, "", "_sequence_nr"], [25, 2, 1, "", "apply"], [25, 2, 1, "", "backward"], [25, 3, 1, "", "dirty_tensors"], [25, 2, 1, "", "forward"], [25, 3, 1, "", "generate_vmap_rule"], [25, 3, 1, "", "is_traceable"], [25, 2, 1, "", "jvp"], [25, 2, 1, "", "mark_dirty"], [25, 2, 1, "", "mark_non_differentiable"], [25, 2, 1, "", "mark_shared_storage"], [25, 3, 1, "", "materialize_grads"], [25, 2, 1, "", "maybe_clear_saved_tensors"], [25, 3, 1, "", "metadata"], [25, 2, 1, "", "name"], [25, 3, 1, "", "needs_input_grad"], [25, 3, 1, "", "next_functions"], [25, 3, 1, "", "non_differentiable"], [25, 2, 1, "", "register_hook"], [25, 2, 1, "", "register_prehook"], [25, 3, 1, "", "requires_grad"], [25, 2, 1, "", "save_for_backward"], [25, 2, 1, "", "save_for_forward"], [25, 3, 1, "", "saved_for_forward"], [25, 3, 1, "", "saved_tensors"], [25, 3, 1, "", "saved_variables"], [25, 2, 1, "", "set_materialize_grads"], [25, 2, 1, "", "setup_context"], [25, 3, 1, "", "to_save"], [25, 2, 1, "", "vjp"], [25, 2, 1, "", "vmap"]], "curobo.geom.sdf.world": [[26, 1, 1, "", "CollisionBuffer"], [26, 1, 1, "", "CollisionCheckerType"], [26, 1, 1, "", "CollisionQueryBuffer"], [26, 1, 1, "", "WorldCollision"], [26, 1, 1, "", "WorldCollisionConfig"], [26, 1, 1, "", "WorldPrimitiveCollision"]], "curobo.geom.sdf.world.CollisionBuffer": [[26, 2, 1, "", "_update_from_shape"], [26, 2, 1, "", "clone"], [26, 3, 1, "", "distance_buffer"], [26, 3, 1, "", "grad_distance_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 3, 1, "", "shape"], [26, 3, 1, "", "sparsity_index_buffer"], [26, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.CollisionCheckerType": [[26, 3, 1, "", "BLOX"], [26, 3, 1, "", "MESH"], [26, 3, 1, "", "PRIMITIVE"], [26, 3, 1, "", "VOXEL"]], "curobo.geom.sdf.world.CollisionQueryBuffer": [[26, 3, 1, "", "blox_collision_buffer"], [26, 2, 1, "", "clone"], [26, 2, 1, "", "create_from_shape"], [26, 2, 1, "", "get_gradient_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 3, 1, "", "mesh_collision_buffer"], [26, 3, 1, "", "primitive_collision_buffer"], [26, 3, 1, "", "shape"], [26, 2, 1, "", "update_buffer_shape"], [26, 3, 1, "", "voxel_collision_buffer"]], "curobo.geom.sdf.world.WorldCollision": [[26, 3, 1, "", "cache"], [26, 3, 1, "", "checker_type"], [26, 2, 1, "", "clear_voxelization_cache"], [26, 2, 1, "", "get_esdf_in_bounding_box"], [26, 2, 1, "", "get_mesh_in_bounding_box"], [26, 2, 1, "", "get_occupancy_in_bounding_box"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_sphere_trace"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "get_voxels_in_bounding_box"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "load_from_dict"], [26, 3, 1, "", "max_distance"], [26, 3, 1, "", "max_esdf_distance"], [26, 3, 1, "", "n_envs"], [26, 3, 1, "", "tensor_args"], [26, 2, 1, "", "update_cache_voxelization"], [26, 3, 1, "", "world_model"]], "curobo.geom.sdf.world.WorldCollisionConfig": [[26, 3, 1, "", "cache"], [26, 3, 1, "", "checker_type"], [26, 2, 1, "", "load_from_dict"], [26, 3, 1, "", "max_distance"], [26, 3, 1, "", "max_esdf_distance"], [26, 3, 1, "", "n_envs"], [26, 3, 1, "", "tensor_args"], [26, 3, 1, "", "world_model"]], "curobo.geom.sdf.world.WorldPrimitiveCollision": [[26, 2, 1, "", "_create_obb_cache"], [26, 2, 1, "", "_get_obstacle_poses"], [26, 2, 1, "", "_init_cache"], [26, 2, 1, "", "_load_collision_model_in_cache"], [26, 2, 1, "", "add_obb"], [26, 2, 1, "", "add_obb_from_raw"], [26, 3, 1, "", "cache"], [26, 3, 1, "", "checker_type"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "clear_voxelization_cache"], [26, 2, 1, "", "enable_obb"], [26, 2, 1, "", "enable_obstacle"], [26, 2, 1, "", "get_esdf_in_bounding_box"], [26, 2, 1, "", "get_mesh_in_bounding_box"], [26, 2, 1, "", "get_obb_idx"], [26, 2, 1, "", "get_occupancy_in_bounding_box"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_sphere_trace"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "get_voxels_in_bounding_box"], [26, 2, 1, "", "load_batch_collision_model"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "load_from_dict"], [26, 3, 1, "", "max_distance"], [26, 3, 1, "", "max_esdf_distance"], [26, 3, 1, "", "n_envs"], [26, 3, 1, "", "tensor_args"], [26, 2, 1, "", "update_cache_voxelization"], [26, 2, 1, "", "update_obb_dims"], [26, 2, 1, "", "update_obb_pose"], [26, 2, 1, "", "update_obstacle_pose"], [26, 3, 1, "", "world_model"]], "curobo.geom.sdf.world_blox": [[27, 1, 1, "", "WorldBloxCollision"]], "curobo.geom.sdf.world_blox.WorldBloxCollision": [[27, 2, 1, "", "_batch_tensor_voxel"], [27, 2, 1, "", "_create_mesh_cache"], [27, 2, 1, "", "_create_obb_cache"], [27, 2, 1, "", "_create_voxel_cache"], [27, 2, 1, "", "_get_blox_sdf"], [27, 2, 1, "", "_get_blox_swept_sdf"], [27, 2, 1, "", "_get_obstacle_poses"], [27, 2, 1, "", "_get_sdf"], [27, 2, 1, "", "_get_swept_sdf"], [27, 2, 1, "", "_init_cache"], [27, 2, 1, "", "_load_batch_mesh_to_warp"], [27, 2, 1, "", "_load_collision_model_in_cache"], [27, 2, 1, "", "_load_mesh_into_cache"], [27, 2, 1, "", "_load_mesh_to_warp"], [27, 2, 1, "", "_load_voxel_collision_model_in_cache"], [27, 2, 1, "", "add_camera_frame"], [27, 2, 1, "", "add_mesh"], [27, 2, 1, "", "add_obb"], [27, 2, 1, "", "add_obb_from_raw"], [27, 3, 1, "", "cache"], [27, 3, 1, "", "checker_type"], [27, 2, 1, "", "clear_blox_layer"], [27, 2, 1, "", "clear_bounding_box"], [27, 2, 1, "", "clear_cache"], [27, 2, 1, "", "clear_voxelization_cache"], [27, 2, 1, "", "create_collision_cache"], [27, 2, 1, "", "decay_layer"], [27, 2, 1, "", "enable_blox"], [27, 2, 1, "", "enable_mesh"], [27, 2, 1, "", "enable_obb"], [27, 2, 1, "", "enable_obstacle"], [27, 2, 1, "", "enable_voxel"], [27, 2, 1, "", "get_bounding_spheres"], [27, 2, 1, "", "get_esdf_in_bounding_box"], [27, 2, 1, "", "get_mesh_from_blox_layer"], [27, 2, 1, "", "get_mesh_idx"], [27, 2, 1, "", "get_mesh_in_bounding_box"], [27, 2, 1, "", "get_obb_idx"], [27, 2, 1, "", "get_occupancy_in_bounding_box"], [27, 2, 1, "", "get_sphere_collision"], [27, 2, 1, "", "get_sphere_distance"], [27, 2, 1, "", "get_sphere_trace"], [27, 2, 1, "", "get_swept_sphere_collision"], [27, 2, 1, "", "get_swept_sphere_distance"], [27, 2, 1, "", "get_voxel_grid"], [27, 2, 1, "", "get_voxel_grid_shape"], [27, 2, 1, "", "get_voxel_idx"], [27, 2, 1, "", "get_voxels_in_bounding_box"], [27, 2, 1, "", "load_batch_collision_model"], [27, 2, 1, "", "load_collision_model"], [27, 2, 1, "", "load_from_dict"], [27, 3, 1, "", "max_distance"], [27, 3, 1, "", "max_esdf_distance"], [27, 3, 1, "", "n_envs"], [27, 2, 1, "", "process_camera_frames"], [27, 2, 1, "", "save_layer"], [27, 3, 1, "", "tensor_args"], [27, 2, 1, "", "update_all_mesh_pose"], [27, 2, 1, "", "update_blox_esdf"], [27, 2, 1, "", "update_blox_hashes"], [27, 2, 1, "", "update_blox_mesh"], [27, 2, 1, "", "update_blox_pose"], [27, 2, 1, "", "update_cache_voxelization"], [27, 2, 1, "", "update_mesh_from_warp"], [27, 2, 1, "", "update_mesh_pose"], [27, 2, 1, "", "update_mesh_pose_env"], [27, 2, 1, "", "update_obb_dims"], [27, 2, 1, "", "update_obb_pose"], [27, 2, 1, "", "update_obstacle_pose"], [27, 2, 1, "", "update_voxel_data"], [27, 2, 1, "", "update_voxel_features"], [27, 2, 1, "", "update_voxel_pose"], [27, 3, 1, "", "world_model"]], "curobo.geom.sdf.world_mesh": [[28, 1, 1, "", "WarpMeshData"], [28, 1, 1, "", "WorldMeshCollision"]], "curobo.geom.sdf.world_mesh.WarpMeshData": [[28, 3, 1, "", "faces"], [28, 3, 1, "", "m_id"], [28, 3, 1, "", "mesh"], [28, 3, 1, "", "name"], [28, 3, 1, "", "vertices"]], "curobo.geom.sdf.world_mesh.WorldMeshCollision": [[28, 2, 1, "", "_create_mesh_cache"], [28, 2, 1, "", "_create_obb_cache"], [28, 2, 1, "", "_get_obstacle_poses"], [28, 2, 1, "", "_get_sdf"], [28, 2, 1, "", "_get_swept_sdf"], [28, 2, 1, "", "_init_cache"], [28, 2, 1, "", "_load_batch_mesh_to_warp"], [28, 2, 1, "", "_load_collision_model_in_cache"], [28, 2, 1, "", "_load_mesh_into_cache"], [28, 2, 1, "", "_load_mesh_to_warp"], [28, 2, 1, "", "add_mesh"], [28, 2, 1, "", "add_obb"], [28, 2, 1, "", "add_obb_from_raw"], [28, 3, 1, "", "cache"], [28, 3, 1, "", "checker_type"], [28, 2, 1, "", "clear_cache"], [28, 2, 1, "", "clear_voxelization_cache"], [28, 2, 1, "", "create_collision_cache"], [28, 2, 1, "", "enable_mesh"], [28, 2, 1, "", "enable_obb"], [28, 2, 1, "", "enable_obstacle"], [28, 2, 1, "", "get_esdf_in_bounding_box"], [28, 2, 1, "", "get_mesh_idx"], [28, 2, 1, "", "get_mesh_in_bounding_box"], [28, 2, 1, "", "get_obb_idx"], [28, 2, 1, "", "get_occupancy_in_bounding_box"], [28, 2, 1, "", "get_sphere_collision"], [28, 2, 1, "", "get_sphere_distance"], [28, 2, 1, "", "get_sphere_trace"], [28, 2, 1, "", "get_swept_sphere_collision"], [28, 2, 1, "", "get_swept_sphere_distance"], [28, 2, 1, "", "get_voxels_in_bounding_box"], [28, 2, 1, "", "load_batch_collision_model"], [28, 2, 1, "", "load_collision_model"], [28, 2, 1, "", "load_from_dict"], [28, 3, 1, "", "max_distance"], [28, 3, 1, "", "max_esdf_distance"], [28, 3, 1, "", "n_envs"], [28, 3, 1, "", "tensor_args"], [28, 2, 1, "", "update_all_mesh_pose"], [28, 2, 1, "", "update_cache_voxelization"], [28, 2, 1, "", "update_mesh_from_warp"], [28, 2, 1, "", "update_mesh_pose"], [28, 2, 1, "", "update_mesh_pose_env"], [28, 2, 1, "", "update_obb_dims"], [28, 2, 1, "", "update_obb_pose"], [28, 2, 1, "", "update_obstacle_pose"], [28, 3, 1, "", "world_model"]], "curobo.geom.sdf.world_voxel": [[29, 1, 1, "", "WorldVoxelCollision"]], "curobo.geom.sdf.world_voxel.WorldVoxelCollision": [[29, 2, 1, "", "_batch_tensor_voxel"], [29, 2, 1, "", "_create_mesh_cache"], [29, 2, 1, "", "_create_obb_cache"], [29, 2, 1, "", "_create_voxel_cache"], [29, 2, 1, "", "_get_obstacle_poses"], [29, 2, 1, "", "_get_sdf"], [29, 2, 1, "", "_get_swept_sdf"], [29, 2, 1, "", "_init_cache"], [29, 2, 1, "", "_load_batch_mesh_to_warp"], [29, 2, 1, "", "_load_collision_model_in_cache"], [29, 2, 1, "", "_load_mesh_into_cache"], [29, 2, 1, "", "_load_mesh_to_warp"], [29, 2, 1, "", "_load_voxel_collision_model_in_cache"], [29, 2, 1, "", "add_mesh"], [29, 2, 1, "", "add_obb"], [29, 2, 1, "", "add_obb_from_raw"], [29, 3, 1, "", "cache"], [29, 3, 1, "", "checker_type"], [29, 2, 1, "", "clear_cache"], [29, 2, 1, "", "clear_voxelization_cache"], [29, 2, 1, "", "create_collision_cache"], [29, 2, 1, "", "enable_mesh"], [29, 2, 1, "", "enable_obb"], [29, 2, 1, "", "enable_obstacle"], [29, 2, 1, "", "enable_voxel"], [29, 2, 1, "", "get_esdf_in_bounding_box"], [29, 2, 1, "", "get_mesh_idx"], [29, 2, 1, "", "get_mesh_in_bounding_box"], [29, 2, 1, "", "get_obb_idx"], [29, 2, 1, "", "get_occupancy_in_bounding_box"], [29, 2, 1, "", "get_sphere_collision"], [29, 2, 1, "", "get_sphere_distance"], [29, 2, 1, "", "get_sphere_trace"], [29, 2, 1, "", "get_swept_sphere_collision"], [29, 2, 1, "", "get_swept_sphere_distance"], [29, 2, 1, "", "get_voxel_grid"], [29, 2, 1, "", "get_voxel_grid_shape"], [29, 2, 1, "", "get_voxel_idx"], [29, 2, 1, "", "get_voxels_in_bounding_box"], [29, 2, 1, "", "load_batch_collision_model"], [29, 2, 1, "", "load_collision_model"], [29, 2, 1, "", "load_from_dict"], [29, 3, 1, "", "max_distance"], [29, 3, 1, "", "max_esdf_distance"], [29, 3, 1, "", "n_envs"], [29, 3, 1, "", "tensor_args"], [29, 2, 1, "", "update_all_mesh_pose"], [29, 2, 1, "", "update_cache_voxelization"], [29, 2, 1, "", "update_mesh_from_warp"], [29, 2, 1, "", "update_mesh_pose"], [29, 2, 1, "", "update_mesh_pose_env"], [29, 2, 1, "", "update_obb_dims"], [29, 2, 1, "", "update_obb_pose"], [29, 2, 1, "", "update_obstacle_pose"], [29, 2, 1, "", "update_voxel_data"], [29, 2, 1, "", "update_voxel_features"], [29, 2, 1, "", "update_voxel_pose"], [29, 3, 1, "", "world_model"]], "curobo.geom.sphere_fit": [[30, 1, 1, "", "SphereFitType"], [30, 5, 1, "", "fit_spheres_to_mesh"], [30, 5, 1, "", "get_voxel_pitch"], [30, 5, 1, "", "get_voxelgrid_from_mesh"], [30, 5, 1, "", "sample_even_fit_mesh"], [30, 5, 1, "", "voxel_fit_mesh"], [30, 5, 1, "", "voxel_fit_surface_mesh"], [30, 5, 1, "", "voxel_fit_volume_inside_mesh"], [30, 5, 1, "", "voxel_fit_volume_sample_surface_mesh"]], "curobo.geom.sphere_fit.SphereFitType": [[30, 3, 1, "", "SAMPLE_SURFACE"], [30, 3, 1, "", "VOXEL_SURFACE"], [30, 3, 1, "", "VOXEL_VOLUME"], [30, 3, 1, "", "VOXEL_VOLUME_INSIDE"], [30, 3, 1, "", "VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.transform": [[31, 1, 1, "", "BatchTransformPoint"], [31, 1, 1, "", "BatchTransformPose"], [31, 1, 1, "", "MatrixToQuaternion"], [31, 1, 1, "", "PoseInverse"], [31, 1, 1, "", "QuatToMatrix"], [31, 1, 1, "", "TransformPoint"], [31, 1, 1, "", "TransformPose"], [31, 5, 1, "", "batch_transform_points"], [31, 5, 1, "", "cuda_matrix_to_quaternion"], [31, 5, 1, "", "matrix_to_quaternion"], [31, 5, 1, "", "pose_inverse"], [31, 5, 1, "", "pose_multiply"], [31, 5, 1, "", "pose_to_matrix"], [31, 5, 1, "", "quaternion_to_matrix"], [31, 5, 1, "", "torch_quaternion_to_matrix"], [31, 5, 1, "", "transform_points"]], "curobo.geom.transform.BatchTransformPoint": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.BatchTransformPose": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.MatrixToQuaternion": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.PoseInverse": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.QuatToMatrix": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.TransformPoint": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.transform.TransformPose": [[31, 3, 1, "", "_backward_cls"], [31, 2, 1, "", "_get_compiled_autograd_symints"], [31, 2, 1, "", "_is_compiled_autograd_tracing"], [31, 3, 1, "", "_materialize_non_diff_grads"], [31, 3, 1, "", "_raw_saved_tensors"], [31, 2, 1, "", "_register_hook"], [31, 2, 1, "", "_register_hook_dict"], [31, 2, 1, "", "_sequence_nr"], [31, 2, 1, "", "apply"], [31, 2, 1, "", "backward"], [31, 3, 1, "", "dirty_tensors"], [31, 2, 1, "", "forward"], [31, 3, 1, "", "generate_vmap_rule"], [31, 3, 1, "", "is_traceable"], [31, 2, 1, "", "jvp"], [31, 2, 1, "", "mark_dirty"], [31, 2, 1, "", "mark_non_differentiable"], [31, 2, 1, "", "mark_shared_storage"], [31, 3, 1, "", "materialize_grads"], [31, 2, 1, "", "maybe_clear_saved_tensors"], [31, 3, 1, "", "metadata"], [31, 2, 1, "", "name"], [31, 3, 1, "", "needs_input_grad"], [31, 3, 1, "", "next_functions"], [31, 3, 1, "", "non_differentiable"], [31, 2, 1, "", "register_hook"], [31, 2, 1, "", "register_prehook"], [31, 3, 1, "", "requires_grad"], [31, 2, 1, "", "save_for_backward"], [31, 2, 1, "", "save_for_forward"], [31, 3, 1, "", "saved_for_forward"], [31, 3, 1, "", "saved_tensors"], [31, 3, 1, "", "saved_variables"], [31, 2, 1, "", "set_materialize_grads"], [31, 2, 1, "", "setup_context"], [31, 3, 1, "", "to_save"], [31, 2, 1, "", "vjp"], [31, 2, 1, "", "vmap"]], "curobo.geom.types": [[32, 1, 1, "", "BloxMap"], [32, 1, 1, "", "Capsule"], [32, 1, 1, "", "Cuboid"], [32, 1, 1, "", "Cylinder"], [32, 1, 1, "", "Material"], [32, 1, 1, "", "Mesh"], [32, 1, 1, "", "Obstacle"], [32, 1, 1, "", "PointCloud"], [32, 1, 1, "", "Sphere"], [32, 1, 1, "", "VoxelGrid"], [32, 1, 1, "", "WorldConfig"], [32, 5, 1, "", "batch_tensor_cube"], [32, 5, 1, "", "tensor_capsule"], [32, 5, 1, "", "tensor_cube"], [32, 5, 1, "", "tensor_sphere"]], "curobo.geom.types.BloxMap": [[32, 3, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "integrator_type"], [32, 3, 1, "", "map_path"], [32, 3, 1, "", "mapper_instance"], [32, 3, 1, "", "material"], [32, 3, 1, "", "mesh"], [32, 3, 1, "", "mesh_file_path"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"], [32, 3, 1, "", "voxel_size"]], "curobo.geom.types.Capsule": [[32, 3, 1, "", "base"], [32, 3, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 3, 1, "", "radius"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"], [32, 3, 1, "", "tip"]], "curobo.geom.types.Cuboid": [[32, 3, 1, "", "color"], [32, 3, 1, "", "dims"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"]], "curobo.geom.types.Cylinder": [[32, 3, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "height"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 3, 1, "", "radius"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"]], "curobo.geom.types.Material": [[32, 3, 1, "", "metallic"], [32, 3, 1, "", "roughness"]], "curobo.geom.types.Mesh": [[32, 3, 1, "", "color"], [32, 3, 1, "", "face_colors"], [32, 3, 1, "", "faces"], [32, 3, 1, "", "file_path"], [32, 3, 1, "", "file_string"], [32, 2, 1, "", "from_pointcloud"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_mesh_data"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"], [32, 2, 1, "", "update_material"], [32, 3, 1, "", "urdf_path"], [32, 3, 1, "", "vertex_colors"], [32, 3, 1, "", "vertex_normals"], [32, 3, 1, "", "vertices"]], "curobo.geom.types.Obstacle": [[32, 3, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"]], "curobo.geom.types.PointCloud": [[32, 3, 1, "", "color"], [32, 2, 1, "", "from_camera_observation"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_mesh_data"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "points"], [32, 3, 1, "", "points_features"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"]], "curobo.geom.types.Sphere": [[32, 3, 1, "", "color"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 3, 1, "", "position"], [32, 3, 1, "", "radius"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"]], "curobo.geom.types.VoxelGrid": [[32, 2, 1, "", "clone"], [32, 3, 1, "", "color"], [32, 2, 1, "", "create_xyzr_tensor"], [32, 3, 1, "", "dims"], [32, 3, 1, "", "feature_dtype"], [32, 3, 1, "", "feature_tensor"], [32, 2, 1, "", "get_bounding_spheres"], [32, 2, 1, "", "get_cuboid"], [32, 2, 1, "", "get_grid_shape"], [32, 2, 1, "", "get_mesh"], [32, 2, 1, "", "get_occupied_voxels"], [32, 2, 1, "", "get_sphere"], [32, 2, 1, "", "get_transform_matrix"], [32, 2, 1, "", "get_trimesh_mesh"], [32, 3, 1, "", "material"], [32, 3, 1, "", "name"], [32, 3, 1, "", "pose"], [32, 2, 1, "", "save_as_mesh"], [32, 3, 1, "", "scale"], [32, 3, 1, "", "tensor_args"], [32, 3, 1, "", "texture"], [32, 3, 1, "", "texture_id"], [32, 3, 1, "", "voxel_size"], [32, 3, 1, "", "xyzr_tensor"]], "curobo.geom.types.WorldConfig": [[32, 3, 1, "", "_abc_impl"], [32, 3, 1, "", "_is_protocol"], [32, 2, 1, "", "add_color"], [32, 2, 1, "", "add_material"], [32, 2, 1, "", "add_obstacle"], [32, 3, 1, "", "blox"], [32, 3, 1, "", "capsule"], [32, 2, 1, "", "clone"], [32, 2, 1, "", "count"], [32, 2, 1, "", "create_collision_support_world"], [32, 2, 1, "", "create_merged_mesh_world"], [32, 2, 1, "", "create_mesh_world"], [32, 2, 1, "", "create_obb_world"], [32, 3, 1, "", "cuboid"], [32, 3, 1, "", "cylinder"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "get_cache_dict"], [32, 2, 1, "", "get_collision_check_world"], [32, 2, 1, "", "get_mesh_world"], [32, 2, 1, "", "get_obb_world"], [32, 2, 1, "", "get_obstacle"], [32, 2, 1, "", "get_scene_graph"], [32, 2, 1, "", "index"], [32, 3, 1, "", "mesh"], [32, 3, 1, "", "objects"], [32, 2, 1, "", "randomize_color"], [32, 2, 1, "", "remove_absolute_paths"], [32, 2, 1, "", "remove_obstacle"], [32, 2, 1, "", "save_world_as_mesh"], [32, 3, 1, "", "sphere"], [32, 3, 1, "", "voxel"]], "curobo.graph": [[34, 0, 0, "-", "graph_base"], [35, 0, 0, "-", "graph_nx"], [36, 0, 0, "-", "prm"]], "curobo.graph.graph_base": [[34, 1, 1, "", "Graph"], [34, 1, 1, "", "GraphConfig"], [34, 1, 1, "", "GraphPlanBase"], [34, 1, 1, "", "GraphResult"]], "curobo.graph.graph_base.Graph": [[34, 3, 1, "", "connectivity"], [34, 3, 1, "", "edges"], [34, 2, 1, "", "get_node_distance"], [34, 3, 1, "", "nodes"], [34, 2, 1, "", "set_shortest_path_lengths"], [34, 3, 1, "", "shortest_path_lengths"]], "curobo.graph.graph_base.GraphConfig": [[34, 3, 1, "", "bias_node"], [34, 3, 1, "", "bounds"], [34, 3, 1, "", "c_max"], [34, 3, 1, "", "compute_metrics"], [34, 3, 1, "", "distance_weight"], [34, 3, 1, "", "dof"], [34, 2, 1, "", "from_dict"], [34, 3, 1, "", "graph_max_attempts"], [34, 3, 1, "", "graph_min_attempts"], [34, 3, 1, "", "init_nodes"], [34, 3, 1, "", "interpolation_acceleration_scale"], [34, 3, 1, "", "interpolation_deviation"], [34, 3, 1, "", "interpolation_dt"], [34, 3, 1, "", "interpolation_steps"], [34, 3, 1, "", "interpolation_type"], [34, 3, 1, "", "k_nn"], [34, 2, 1, "", "load_from_robot_config"], [34, 3, 1, "", "max_buffer"], [34, 3, 1, "", "max_cg_buffer"], [34, 3, 1, "", "max_nodes"], [34, 3, 1, "", "node_similarity_distance"], [34, 3, 1, "", "rejection_ratio"], [34, 3, 1, "", "rollout_fn"], [34, 3, 1, "", "safety_rollout_fn"], [34, 3, 1, "", "sample_pts"], [34, 3, 1, "", "seed"], [34, 3, 1, "", "steer_delta_buffer"], [34, 3, 1, "", "tensor_args"], [34, 3, 1, "", "use_bias_node"], [34, 3, 1, "", "use_cuda_graph_mask_samples"], [34, 3, 1, "", "vertex_n"]], "curobo.graph.graph_base.GraphPlanBase": [[34, 2, 1, "", "_add_batch_edges_to_graph"], [34, 2, 1, "", "_add_unique_nodes_to_graph"], [34, 2, 1, "", "_batch_k_nearest"], [34, 2, 1, "", "_batch_steer"], [34, 2, 1, "", "_batch_steer_and_connect"], [34, 2, 1, "", "_compute_rotation_frame"], [34, 2, 1, "", "_cuda_graph_rollout_constraint"], [34, 2, 1, "", "_distance"], [34, 2, 1, "", "_find_paths"], [34, 2, 1, "", "_get_graph_shortest_path"], [34, 2, 1, "", "_hybrid_nearest"], [34, 2, 1, "", "_k_nearest"], [34, 2, 1, "", "_mask_samples"], [34, 2, 1, "", "_mask_samples_cuda_graph"], [34, 2, 1, "", "_near"], [34, 2, 1, "", "_nearest"], [34, 2, 1, "", "_sample_pts"], [34, 2, 1, "", "_validate_graph"], [34, 2, 1, "", "add_nodes_to_graph"], [34, 2, 1, "", "batch_get_graph_shortest_path"], [34, 2, 1, "", "batch_path_exists"], [34, 2, 1, "", "batch_shortcut_path"], [34, 3, 1, "", "bias_node"], [34, 3, 1, "", "bounds"], [34, 3, 1, "", "c_max"], [34, 2, 1, "", "check_feasibility"], [34, 3, 1, "", "compute_metrics"], [34, 2, 1, "", "compute_path_length"], [34, 2, 1, "", "connect_nodes"], [34, 2, 1, "", "distance"], [34, 3, 1, "", "distance_weight"], [34, 3, 1, "", "dof"], [34, 2, 1, "", "find_paths"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "get_all_rollout_instances"], [34, 2, 1, "", "get_biased_vertex_set"], [34, 2, 1, "", "get_feasible_sample_set"], [34, 2, 1, "", "get_graph"], [34, 2, 1, "", "get_graph_edges"], [34, 2, 1, "", "get_graph_shortest_path_lengths"], [34, 2, 1, "", "get_interpolated_trajectory"], [34, 2, 1, "", "get_metrics"], [34, 2, 1, "", "get_new_vertex_set"], [34, 2, 1, "", "get_node_idx"], [34, 2, 1, "", "get_path_lengths"], [34, 2, 1, "", "get_paths"], [34, 2, 1, "", "get_samples"], [34, 3, 1, "", "graph_max_attempts"], [34, 3, 1, "", "graph_min_attempts"], [34, 3, 1, "", "init_nodes"], [34, 3, 1, "", "interpolation_acceleration_scale"], [34, 3, 1, "", "interpolation_deviation"], [34, 3, 1, "", "interpolation_dt"], [34, 3, 1, "", "interpolation_steps"], [34, 3, 1, "", "interpolation_type"], [34, 3, 1, "", "k_nn"], [34, 2, 1, "", "load_from_robot_config"], [34, 2, 1, "", "mask_samples"], [34, 3, 1, "", "max_buffer"], [34, 3, 1, "", "max_cg_buffer"], [34, 3, 1, "", "max_nodes"], [34, 3, 1, "", "node_similarity_distance"], [34, 2, 1, "", "path_exists"], [34, 3, 1, "", "rejection_ratio"], [34, 2, 1, "", "reset_buffer"], [34, 2, 1, "", "reset_cuda_graph"], [34, 2, 1, "", "reset_graph"], [34, 2, 1, "", "reset_seed"], [34, 3, 1, "", "rollout_fn"], [34, 3, 1, "", "safety_rollout_fn"], [34, 3, 1, "", "sample_pts"], [34, 3, 1, "", "seed"], [34, 3, 1, "", "steer_delta_buffer"], [34, 3, 1, "", "tensor_args"], [34, 3, 1, "", "use_bias_node"], [34, 3, 1, "", "use_cuda_graph_mask_samples"], [34, 2, 1, "", "validate_graph"], [34, 3, 1, "", "vertex_n"], [34, 2, 1, "", "warmup"]], "curobo.graph.graph_base.GraphResult": [[34, 3, 1, "", "debug_info"], [34, 3, 1, "", "goal_q"], [34, 3, 1, "", "interpolated_plan"], [34, 3, 1, "", "metrics"], [34, 3, 1, "", "optimized_dt"], [34, 3, 1, "", "path_buffer_last_tstep"], [34, 3, 1, "", "path_length"], [34, 3, 1, "", "plan"], [34, 3, 1, "", "solve_time"], [34, 3, 1, "", "start_q"], [34, 3, 1, "", "success"], [34, 3, 1, "", "valid_query"]], "curobo.graph.graph_nx": [[35, 1, 1, "", "NetworkxGraph"]], "curobo.graph.graph_nx.NetworkxGraph": [[35, 2, 1, "", "add_edge"], [35, 2, 1, "", "add_edges"], [35, 2, 1, "", "add_node"], [35, 2, 1, "", "add_nodes"], [35, 2, 1, "", "get_edges"], [35, 2, 1, "", "get_path_lengths"], [35, 2, 1, "", "get_shortest_path"], [35, 2, 1, "", "path_exists"], [35, 2, 1, "", "reset_graph"], [35, 2, 1, "", "update_graph"]], "curobo.graph.prm": [[36, 1, 1, "", "PRMStar"]], "curobo.graph.prm.PRMStar": [[36, 2, 1, "", "_add_batch_edges_to_graph"], [36, 2, 1, "", "_add_bias_graph"], [36, 2, 1, "", "_add_unique_nodes_to_graph"], [36, 2, 1, "", "_batch_k_nearest"], [36, 2, 1, "", "_batch_steer"], [36, 2, 1, "", "_batch_steer_and_connect"], [36, 2, 1, "", "_compute_rotation_frame"], [36, 2, 1, "", "_cuda_graph_rollout_constraint"], [36, 2, 1, "", "_distance"], [36, 2, 1, "", "_find_all_path"], [36, 2, 1, "", "_find_one_path"], [36, 2, 1, "", "_find_paths"], [36, 2, 1, "", "_get_graph_shortest_path"], [36, 2, 1, "", "_hybrid_nearest"], [36, 2, 1, "", "_k_nearest"], [36, 2, 1, "", "_mask_samples"], [36, 2, 1, "", "_mask_samples_cuda_graph"], [36, 2, 1, "", "_near"], [36, 2, 1, "", "_nearest"], [36, 2, 1, "", "_sample_pts"], [36, 2, 1, "", "_validate_graph"], [36, 2, 1, "", "add_nodes_to_graph"], [36, 2, 1, "", "batch_get_graph_shortest_path"], [36, 2, 1, "", "batch_path_exists"], [36, 2, 1, "", "batch_shortcut_path"], [36, 3, 1, "", "bias_node"], [36, 3, 1, "", "bounds"], [36, 2, 1, "", "build_graph"], [36, 3, 1, "", "c_max"], [36, 2, 1, "", "check_feasibility"], [36, 3, 1, "", "compute_metrics"], [36, 2, 1, "", "compute_path_length"], [36, 2, 1, "", "connect_nodes"], [36, 2, 1, "", "distance"], [36, 3, 1, "", "distance_weight"], [36, 3, 1, "", "dof"], [36, 2, 1, "", "find_paths"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "get_all_rollout_instances"], [36, 2, 1, "", "get_biased_vertex_set"], [36, 2, 1, "", "get_feasible_sample_set"], [36, 2, 1, "", "get_graph"], [36, 2, 1, "", "get_graph_edges"], [36, 2, 1, "", "get_graph_shortest_path_lengths"], [36, 2, 1, "", "get_interpolated_trajectory"], [36, 2, 1, "", "get_metrics"], [36, 2, 1, "", "get_new_vertex_set"], [36, 2, 1, "", "get_node_idx"], [36, 2, 1, "", "get_path_lengths"], [36, 2, 1, "", "get_paths"], [36, 2, 1, "", "get_samples"], [36, 3, 1, "", "graph_max_attempts"], [36, 3, 1, "", "graph_min_attempts"], [36, 3, 1, "", "init_nodes"], [36, 3, 1, "", "interpolation_acceleration_scale"], [36, 3, 1, "", "interpolation_deviation"], [36, 3, 1, "", "interpolation_dt"], [36, 3, 1, "", "interpolation_steps"], [36, 3, 1, "", "interpolation_type"], [36, 3, 1, "", "k_nn"], [36, 2, 1, "", "load_from_robot_config"], [36, 2, 1, "", "mask_samples"], [36, 3, 1, "", "max_buffer"], [36, 3, 1, "", "max_cg_buffer"], [36, 3, 1, "", "max_nodes"], [36, 3, 1, "", "node_similarity_distance"], [36, 2, 1, "", "path_exists"], [36, 3, 1, "", "rejection_ratio"], [36, 2, 1, "", "reset_buffer"], [36, 2, 1, "", "reset_cuda_graph"], [36, 2, 1, "", "reset_graph"], [36, 2, 1, "", "reset_seed"], [36, 3, 1, "", "rollout_fn"], [36, 3, 1, "", "safety_rollout_fn"], [36, 3, 1, "", "sample_pts"], [36, 3, 1, "", "seed"], [36, 3, 1, "", "steer_delta_buffer"], [36, 3, 1, "", "tensor_args"], [36, 3, 1, "", "use_bias_node"], [36, 3, 1, "", "use_cuda_graph_mask_samples"], [36, 2, 1, "", "validate_graph"], [36, 3, 1, "", "vertex_n"], [36, 2, 1, "", "warmup"]], "curobo.opt": [[38, 0, 0, "-", "newton"], [41, 0, 0, "-", "opt_base"], [42, 0, 0, "-", "particle"]], "curobo.opt.newton": [[39, 0, 0, "-", "lbfgs"], [40, 0, 0, "-", "newton_base"]], "curobo.opt.newton.lbfgs": [[39, 1, 1, "", "LBFGSOpt"], [39, 1, 1, "", "LBFGSOptConfig"], [39, 5, 1, "", "jit_lbfgs_compute_step_direction"]], "curobo.opt.newton.lbfgs.LBFGSOpt": [[39, 2, 1, "", "_approx_line_search"], [39, 2, 1, "", "_armijo_line_search"], [39, 2, 1, "", "_call_opt_iters_graph"], [39, 2, 1, "", "_compute_cost_gradient"], [39, 2, 1, "", "_create_box_line_search"], [39, 2, 1, "", "_create_opt_iters_graph"], [39, 2, 1, "", "_get_step_direction"], [39, 2, 1, "", "_greedy_line_search"], [39, 2, 1, "", "_initialize_opt_iters_graph"], [39, 2, 1, "", "_opt_iters"], [39, 2, 1, "", "_opt_step"], [39, 2, 1, "", "_optimize"], [39, 2, 1, "", "_shift"], [39, 2, 1, "", "_shift_buffer"], [39, 2, 1, "", "_update_best"], [39, 2, 1, "", "_update_buffers"], [39, 2, 1, "", "_update_problem_kernel"], [39, 2, 1, "", "_update_q"], [39, 2, 1, "", "_update_r"], [39, 2, 1, "", "_wolfe_line_search"], [39, 3, 1, "", "action_highs"], [39, 3, 1, "", "action_horizon"], [39, 3, 1, "", "action_lows"], [39, 2, 1, "", "check_convergence"], [39, 2, 1, "", "clip_bounds"], [39, 3, 1, "", "cold_start_n_iters"], [39, 3, 1, "", "cost_convergence"], [39, 3, 1, "", "cost_delta_threshold"], [39, 3, 1, "", "cost_relative_threshold"], [39, 2, 1, "", "create_data_dict"], [39, 3, 1, "", "d_action"], [39, 3, 1, "", "debug_info"], [39, 3, 1, "", "epsilon"], [39, 3, 1, "", "fixed_iters"], [39, 2, 1, "", "get_all_rollout_instances"], [39, 2, 1, "", "get_nproblem_tensor"], [39, 3, 1, "", "history"], [39, 3, 1, "", "horizon"], [39, 2, 1, "", "init_hessian"], [39, 3, 1, "", "inner_iters"], [39, 3, 1, "", "last_best"], [39, 3, 1, "", "line_search_scale"], [39, 3, 1, "", "line_search_type"], [39, 3, 1, "", "min_iters"], [39, 3, 1, "", "n_iters"], [39, 3, 1, "", "n_problems"], [39, 3, 1, "", "num_particles"], [39, 2, 1, "", "optimize"], [39, 2, 1, "", "project_bounds"], [39, 2, 1, "", "reset"], [39, 2, 1, "", "reset_cuda_graph"], [39, 2, 1, "", "reset_seed"], [39, 2, 1, "", "reset_shape"], [39, 3, 1, "", "rollout_fn"], [39, 2, 1, "", "scale_step_direction"], [39, 3, 1, "", "stable_mode"], [39, 3, 1, "", "step_scale"], [39, 3, 1, "", "store_debug"], [39, 3, 1, "", "sync_cuda_time"], [39, 3, 1, "", "tensor_args"], [39, 2, 1, "", "update_nproblems"], [39, 2, 1, "", "update_params"], [39, 3, 1, "", "use_coo_sparse"], [39, 3, 1, "", "use_cuda_graph"], [39, 3, 1, "", "use_cuda_kernel"], [39, 3, 1, "", "use_cuda_line_search_kernel"], [39, 3, 1, "", "use_cuda_update_best_kernel"], [39, 3, 1, "", "use_shared_buffers_kernel"], [39, 3, 1, "", "use_temporal_smooth"]], "curobo.opt.newton.lbfgs.LBFGSOptConfig": [[39, 3, 1, "", "action_highs"], [39, 3, 1, "", "action_horizon"], [39, 3, 1, "", "action_lows"], [39, 3, 1, "", "cold_start_n_iters"], [39, 3, 1, "", "cost_convergence"], [39, 3, 1, "", "cost_delta_threshold"], [39, 3, 1, "", "cost_relative_threshold"], [39, 2, 1, "", "create_data_dict"], [39, 3, 1, "", "d_action"], [39, 3, 1, "", "debug_info"], [39, 3, 1, "", "epsilon"], [39, 3, 1, "", "fixed_iters"], [39, 3, 1, "", "history"], [39, 3, 1, "", "horizon"], [39, 3, 1, "", "inner_iters"], [39, 3, 1, "", "last_best"], [39, 3, 1, "", "line_search_scale"], [39, 3, 1, "", "line_search_type"], [39, 3, 1, "", "min_iters"], [39, 3, 1, "", "n_iters"], [39, 3, 1, "", "n_problems"], [39, 3, 1, "", "num_particles"], [39, 3, 1, "", "rollout_fn"], [39, 3, 1, "", "stable_mode"], [39, 3, 1, "", "step_scale"], [39, 3, 1, "", "store_debug"], [39, 3, 1, "", "sync_cuda_time"], [39, 3, 1, "", "tensor_args"], [39, 3, 1, "", "use_coo_sparse"], [39, 3, 1, "", "use_cuda_graph"], [39, 3, 1, "", "use_cuda_kernel"], [39, 3, 1, "", "use_cuda_line_search_kernel"], [39, 3, 1, "", "use_cuda_update_best_kernel"], [39, 3, 1, "", "use_shared_buffers_kernel"], [39, 3, 1, "", "use_temporal_smooth"]], "curobo.opt.newton.newton_base": [[40, 1, 1, "", "LineSearchType"], [40, 1, 1, "", "NewtonOptBase"], [40, 1, 1, "", "NewtonOptConfig"]], "curobo.opt.newton.newton_base.LineSearchType": [[40, 3, 1, "", "APPROX_WOLFE"], [40, 3, 1, "", "ARMIJO"], [40, 3, 1, "", "GREEDY"], [40, 3, 1, "", "STRONG_WOLFE"], [40, 3, 1, "", "WOLFE"]], "curobo.opt.newton.newton_base.NewtonOptBase": [[40, 2, 1, "", "_approx_line_search"], [40, 2, 1, "", "_armijo_line_search"], [40, 2, 1, "", "_call_opt_iters_graph"], [40, 2, 1, "", "_compute_cost_gradient"], [40, 2, 1, "", "_create_box_line_search"], [40, 2, 1, "", "_create_opt_iters_graph"], [40, 2, 1, "", "_get_step_direction"], [40, 2, 1, "", "_greedy_line_search"], [40, 2, 1, "", "_initialize_opt_iters_graph"], [40, 2, 1, "", "_opt_iters"], [40, 2, 1, "", "_opt_step"], [40, 2, 1, "", "_optimize"], [40, 2, 1, "", "_shift"], [40, 2, 1, "", "_update_best"], [40, 2, 1, "", "_update_problem_kernel"], [40, 2, 1, "", "_wolfe_line_search"], [40, 3, 1, "", "action_highs"], [40, 3, 1, "", "action_horizon"], [40, 3, 1, "", "action_lows"], [40, 2, 1, "", "check_convergence"], [40, 2, 1, "", "clip_bounds"], [40, 3, 1, "", "cold_start_n_iters"], [40, 3, 1, "", "cost_convergence"], [40, 3, 1, "", "cost_delta_threshold"], [40, 3, 1, "", "cost_relative_threshold"], [40, 2, 1, "", "create_data_dict"], [40, 3, 1, "", "d_action"], [40, 3, 1, "", "debug_info"], [40, 3, 1, "", "fixed_iters"], [40, 2, 1, "", "get_all_rollout_instances"], [40, 2, 1, "", "get_nproblem_tensor"], [40, 3, 1, "", "horizon"], [40, 3, 1, "", "inner_iters"], [40, 3, 1, "", "last_best"], [40, 3, 1, "", "line_search_scale"], [40, 3, 1, "", "line_search_type"], [40, 3, 1, "", "min_iters"], [40, 3, 1, "", "n_iters"], [40, 3, 1, "", "n_problems"], [40, 3, 1, "", "num_particles"], [40, 2, 1, "", "optimize"], [40, 2, 1, "", "project_bounds"], [40, 2, 1, "", "reset"], [40, 2, 1, "", "reset_cuda_graph"], [40, 2, 1, "", "reset_seed"], [40, 2, 1, "", "reset_shape"], [40, 3, 1, "", "rollout_fn"], [40, 2, 1, "", "scale_step_direction"], [40, 3, 1, "", "step_scale"], [40, 3, 1, "", "store_debug"], [40, 3, 1, "", "sync_cuda_time"], [40, 3, 1, "", "tensor_args"], [40, 2, 1, "", "update_nproblems"], [40, 2, 1, "", "update_params"], [40, 3, 1, "", "use_coo_sparse"], [40, 3, 1, "", "use_cuda_graph"], [40, 3, 1, "", "use_cuda_line_search_kernel"], [40, 3, 1, "", "use_cuda_update_best_kernel"], [40, 3, 1, "", "use_temporal_smooth"]], "curobo.opt.newton.newton_base.NewtonOptConfig": [[40, 3, 1, "", "action_highs"], [40, 3, 1, "", "action_horizon"], [40, 3, 1, "", "action_lows"], [40, 3, 1, "", "cold_start_n_iters"], [40, 3, 1, "", "cost_convergence"], [40, 3, 1, "", "cost_delta_threshold"], [40, 3, 1, "", "cost_relative_threshold"], [40, 2, 1, "", "create_data_dict"], [40, 3, 1, "", "d_action"], [40, 3, 1, "", "debug_info"], [40, 3, 1, "", "fixed_iters"], [40, 3, 1, "", "horizon"], [40, 3, 1, "", "inner_iters"], [40, 3, 1, "", "last_best"], [40, 3, 1, "", "line_search_scale"], [40, 3, 1, "", "line_search_type"], [40, 3, 1, "", "min_iters"], [40, 3, 1, "", "n_iters"], [40, 3, 1, "", "n_problems"], [40, 3, 1, "", "num_particles"], [40, 3, 1, "", "rollout_fn"], [40, 3, 1, "", "step_scale"], [40, 3, 1, "", "store_debug"], [40, 3, 1, "", "sync_cuda_time"], [40, 3, 1, "", "tensor_args"], [40, 3, 1, "", "use_coo_sparse"], [40, 3, 1, "", "use_cuda_graph"], [40, 3, 1, "", "use_cuda_line_search_kernel"], [40, 3, 1, "", "use_cuda_update_best_kernel"], [40, 3, 1, "", "use_temporal_smooth"]], "curobo.opt.opt_base": [[41, 1, 1, "", "Optimizer"], [41, 1, 1, "", "OptimizerConfig"]], "curobo.opt.opt_base.Optimizer": [[41, 2, 1, "", "_optimize"], [41, 2, 1, "", "_shift"], [41, 2, 1, "", "_update_problem_kernel"], [41, 3, 1, "", "action_highs"], [41, 3, 1, "", "action_horizon"], [41, 3, 1, "", "action_lows"], [41, 3, 1, "", "cold_start_n_iters"], [41, 2, 1, "", "create_data_dict"], [41, 3, 1, "", "d_action"], [41, 3, 1, "", "debug_info"], [41, 2, 1, "", "get_all_rollout_instances"], [41, 2, 1, "", "get_nproblem_tensor"], [41, 3, 1, "", "horizon"], [41, 3, 1, "", "n_iters"], [41, 3, 1, "", "n_problems"], [41, 3, 1, "", "num_particles"], [41, 2, 1, "", "optimize"], [41, 2, 1, "", "reset"], [41, 2, 1, "", "reset_cuda_graph"], [41, 2, 1, "", "reset_seed"], [41, 2, 1, "", "reset_shape"], [41, 3, 1, "", "rollout_fn"], [41, 3, 1, "", "store_debug"], [41, 3, 1, "", "sync_cuda_time"], [41, 3, 1, "", "tensor_args"], [41, 2, 1, "", "update_nproblems"], [41, 2, 1, "", "update_params"], [41, 3, 1, "", "use_coo_sparse"], [41, 3, 1, "", "use_cuda_graph"]], "curobo.opt.opt_base.OptimizerConfig": [[41, 3, 1, "", "action_highs"], [41, 3, 1, "", "action_horizon"], [41, 3, 1, "", "action_lows"], [41, 3, 1, "", "cold_start_n_iters"], [41, 2, 1, "", "create_data_dict"], [41, 3, 1, "", "d_action"], [41, 3, 1, "", "debug_info"], [41, 3, 1, "", "horizon"], [41, 3, 1, "", "n_iters"], [41, 3, 1, "", "n_problems"], [41, 3, 1, "", "num_particles"], [41, 3, 1, "", "rollout_fn"], [41, 3, 1, "", "store_debug"], [41, 3, 1, "", "sync_cuda_time"], [41, 3, 1, "", "tensor_args"], [41, 3, 1, "", "use_coo_sparse"], [41, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle": [[43, 0, 0, "-", "parallel_es"], [44, 0, 0, "-", "parallel_mppi"], [45, 0, 0, "-", "particle_opt_base"], [46, 0, 0, "-", "particle_opt_utils"]], "curobo.opt.particle.parallel_es": [[43, 1, 1, "", "ParallelES"], [43, 1, 1, "", "ParallelESConfig"]], "curobo.opt.particle.parallel_es.ParallelES": [[43, 2, 1, "", "_calc_val"], [43, 2, 1, "", "_call_cuda_opt_iters"], [43, 2, 1, "", "_compute_covariance"], [43, 2, 1, "", "_compute_mean"], [43, 2, 1, "", "_compute_mean_covariance"], [43, 2, 1, "", "_compute_total_cost"], [43, 2, 1, "", "_exp_util"], [43, 2, 1, "", "_exp_util_from_costs"], [43, 2, 1, "", "_get_action_seq"], [43, 2, 1, "", "_initialize_cuda_graph"], [43, 2, 1, "", "_optimize"], [43, 2, 1, "", "_run_opt_iters"], [43, 2, 1, "", "_shift"], [43, 2, 1, "", "_update_cov_scale"], [43, 2, 1, "", "_update_distribution"], [43, 2, 1, "", "_update_problem_kernel"], [43, 3, 1, "", "action_highs"], [43, 3, 1, "", "action_horizon"], [43, 3, 1, "", "action_lows"], [43, 3, 1, "", "alpha"], [43, 3, 1, "", "base_action"], [43, 3, 1, "", "beta"], [43, 3, 1, "", "calculate_value"], [43, 2, 1, "", "check_convergence"], [43, 3, 1, "", "cold_start_n_iters"], [43, 3, 1, "", "cov_type"], [43, 2, 1, "", "create_data_dict"], [43, 3, 1, "", "d_action"], [43, 3, 1, "", "debug_info"], [43, 4, 1, "", "entropy"], [43, 4, 1, "", "full_cov"], [43, 4, 1, "", "full_inv_cov"], [43, 4, 1, "", "full_scale_tril"], [43, 3, 1, "", "gamma"], [43, 2, 1, "", "generate_noise"], [43, 2, 1, "", "generate_rollouts"], [43, 2, 1, "", "get_all_rollout_instances"], [43, 2, 1, "", "get_nproblem_tensor"], [43, 2, 1, "", "get_rollouts"], [43, 3, 1, "", "horizon"], [43, 3, 1, "", "init_cov"], [43, 3, 1, "", "init_mean"], [43, 3, 1, "", "kappa"], [43, 3, 1, "", "learning_rate"], [43, 3, 1, "", "n_iters"], [43, 3, 1, "", "n_problems"], [43, 3, 1, "", "null_act_frac"], [43, 3, 1, "", "num_particles"], [43, 2, 1, "", "optimize"], [43, 3, 1, "", "random_mean"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "reset_covariance"], [43, 2, 1, "", "reset_cuda_graph"], [43, 2, 1, "", "reset_distribution"], [43, 2, 1, "", "reset_mean"], [43, 2, 1, "", "reset_seed"], [43, 2, 1, "", "reset_shape"], [43, 3, 1, "", "rollout_fn"], [43, 2, 1, "", "sample_actions"], [43, 3, 1, "", "sample_mode"], [43, 3, 1, "", "sample_params"], [43, 3, 1, "", "sample_per_problem"], [43, 3, 1, "", "seed"], [43, 3, 1, "", "squash_fn"], [43, 4, 1, "", "squashed_mean"], [43, 3, 1, "", "step_size_cov"], [43, 3, 1, "", "step_size_mean"], [43, 3, 1, "", "store_debug"], [43, 3, 1, "", "store_rollouts"], [43, 3, 1, "", "sync_cuda_time"], [43, 3, 1, "", "tensor_args"], [43, 3, 1, "", "update_cov"], [43, 2, 1, "", "update_init_mean"], [43, 2, 1, "", "update_nproblems"], [43, 2, 1, "", "update_num_particles_per_problem"], [43, 2, 1, "", "update_params"], [43, 2, 1, "", "update_samples"], [43, 2, 1, "", "update_seed"], [43, 3, 1, "", "use_coo_sparse"], [43, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.parallel_es.ParallelESConfig": [[43, 3, 1, "", "action_highs"], [43, 3, 1, "", "action_horizon"], [43, 3, 1, "", "action_lows"], [43, 3, 1, "", "alpha"], [43, 3, 1, "", "base_action"], [43, 3, 1, "", "beta"], [43, 3, 1, "", "calculate_value"], [43, 3, 1, "", "cold_start_n_iters"], [43, 3, 1, "", "cov_type"], [43, 2, 1, "", "create_data_dict"], [43, 3, 1, "", "d_action"], [43, 3, 1, "", "debug_info"], [43, 3, 1, "", "gamma"], [43, 3, 1, "", "horizon"], [43, 3, 1, "", "init_cov"], [43, 3, 1, "", "init_mean"], [43, 3, 1, "", "kappa"], [43, 3, 1, "", "learning_rate"], [43, 3, 1, "", "n_iters"], [43, 3, 1, "", "n_problems"], [43, 3, 1, "", "null_act_frac"], [43, 3, 1, "", "num_particles"], [43, 3, 1, "", "random_mean"], [43, 3, 1, "", "rollout_fn"], [43, 3, 1, "", "sample_mode"], [43, 3, 1, "", "sample_params"], [43, 3, 1, "", "sample_per_problem"], [43, 3, 1, "", "seed"], [43, 3, 1, "", "squash_fn"], [43, 3, 1, "", "step_size_cov"], [43, 3, 1, "", "step_size_mean"], [43, 3, 1, "", "store_debug"], [43, 3, 1, "", "store_rollouts"], [43, 3, 1, "", "sync_cuda_time"], [43, 3, 1, "", "tensor_args"], [43, 3, 1, "", "update_cov"], [43, 3, 1, "", "use_coo_sparse"], [43, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.parallel_mppi": [[44, 1, 1, "", "BaseActionType"], [44, 1, 1, "", "CovType"], [44, 1, 1, "", "ParallelMPPI"], [44, 1, 1, "", "ParallelMPPIConfig"]], "curobo.opt.particle.parallel_mppi.BaseActionType": [[44, 3, 1, "", "NULL"], [44, 3, 1, "", "RANDOM"], [44, 3, 1, "", "REPEAT"]], "curobo.opt.particle.parallel_mppi.CovType": [[44, 3, 1, "", "DIAG_A"], [44, 3, 1, "", "FULL_A"], [44, 3, 1, "", "FULL_HA"], [44, 3, 1, "", "SIGMA_I"]], "curobo.opt.particle.parallel_mppi.ParallelMPPI": [[44, 2, 1, "", "_calc_val"], [44, 2, 1, "", "_call_cuda_opt_iters"], [44, 2, 1, "", "_compute_covariance"], [44, 2, 1, "", "_compute_mean"], [44, 2, 1, "", "_compute_mean_covariance"], [44, 2, 1, "", "_compute_total_cost"], [44, 2, 1, "", "_exp_util"], [44, 2, 1, "", "_exp_util_from_costs"], [44, 2, 1, "", "_get_action_seq"], [44, 2, 1, "", "_initialize_cuda_graph"], [44, 2, 1, "", "_optimize"], [44, 2, 1, "", "_run_opt_iters"], [44, 2, 1, "", "_shift"], [44, 2, 1, "", "_update_cov_scale"], [44, 2, 1, "", "_update_distribution"], [44, 2, 1, "", "_update_problem_kernel"], [44, 3, 1, "", "action_highs"], [44, 3, 1, "", "action_horizon"], [44, 3, 1, "", "action_lows"], [44, 3, 1, "", "alpha"], [44, 3, 1, "", "base_action"], [44, 3, 1, "", "beta"], [44, 3, 1, "", "calculate_value"], [44, 2, 1, "", "check_convergence"], [44, 3, 1, "", "cold_start_n_iters"], [44, 3, 1, "", "cov_type"], [44, 2, 1, "", "create_data_dict"], [44, 3, 1, "", "d_action"], [44, 3, 1, "", "debug_info"], [44, 4, 1, "", "entropy"], [44, 4, 1, "", "full_cov"], [44, 4, 1, "", "full_inv_cov"], [44, 4, 1, "", "full_scale_tril"], [44, 3, 1, "", "gamma"], [44, 2, 1, "", "generate_noise"], [44, 2, 1, "", "generate_rollouts"], [44, 2, 1, "", "get_all_rollout_instances"], [44, 2, 1, "", "get_nproblem_tensor"], [44, 2, 1, "", "get_rollouts"], [44, 3, 1, "", "horizon"], [44, 3, 1, "", "init_cov"], [44, 3, 1, "", "init_mean"], [44, 3, 1, "", "kappa"], [44, 3, 1, "", "n_iters"], [44, 3, 1, "", "n_problems"], [44, 3, 1, "", "null_act_frac"], [44, 3, 1, "", "num_particles"], [44, 2, 1, "", "optimize"], [44, 3, 1, "", "random_mean"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "reset_covariance"], [44, 2, 1, "", "reset_cuda_graph"], [44, 2, 1, "", "reset_distribution"], [44, 2, 1, "", "reset_mean"], [44, 2, 1, "", "reset_seed"], [44, 2, 1, "", "reset_shape"], [44, 3, 1, "", "rollout_fn"], [44, 2, 1, "", "sample_actions"], [44, 3, 1, "", "sample_mode"], [44, 3, 1, "", "sample_params"], [44, 3, 1, "", "sample_per_problem"], [44, 3, 1, "", "seed"], [44, 3, 1, "", "squash_fn"], [44, 4, 1, "", "squashed_mean"], [44, 3, 1, "", "step_size_cov"], [44, 3, 1, "", "step_size_mean"], [44, 3, 1, "", "store_debug"], [44, 3, 1, "", "store_rollouts"], [44, 3, 1, "", "sync_cuda_time"], [44, 3, 1, "", "tensor_args"], [44, 3, 1, "", "update_cov"], [44, 2, 1, "", "update_init_mean"], [44, 2, 1, "", "update_nproblems"], [44, 2, 1, "", "update_num_particles_per_problem"], [44, 2, 1, "", "update_params"], [44, 2, 1, "", "update_samples"], [44, 2, 1, "", "update_seed"], [44, 3, 1, "", "use_coo_sparse"], [44, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig": [[44, 3, 1, "", "action_highs"], [44, 3, 1, "", "action_horizon"], [44, 3, 1, "", "action_lows"], [44, 3, 1, "", "alpha"], [44, 3, 1, "", "base_action"], [44, 3, 1, "", "beta"], [44, 3, 1, "", "calculate_value"], [44, 3, 1, "", "cold_start_n_iters"], [44, 3, 1, "", "cov_type"], [44, 2, 1, "", "create_data_dict"], [44, 3, 1, "", "d_action"], [44, 3, 1, "", "debug_info"], [44, 3, 1, "", "gamma"], [44, 3, 1, "", "horizon"], [44, 3, 1, "", "init_cov"], [44, 3, 1, "", "init_mean"], [44, 3, 1, "", "kappa"], [44, 3, 1, "", "n_iters"], [44, 3, 1, "", "n_problems"], [44, 3, 1, "", "null_act_frac"], [44, 3, 1, "", "num_particles"], [44, 3, 1, "", "random_mean"], [44, 3, 1, "", "rollout_fn"], [44, 3, 1, "", "sample_mode"], [44, 3, 1, "", "sample_params"], [44, 3, 1, "", "sample_per_problem"], [44, 3, 1, "", "seed"], [44, 3, 1, "", "squash_fn"], [44, 3, 1, "", "step_size_cov"], [44, 3, 1, "", "step_size_mean"], [44, 3, 1, "", "store_debug"], [44, 3, 1, "", "store_rollouts"], [44, 3, 1, "", "sync_cuda_time"], [44, 3, 1, "", "tensor_args"], [44, 3, 1, "", "update_cov"], [44, 3, 1, "", "use_coo_sparse"], [44, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.particle_opt_base": [[45, 1, 1, "", "ParticleOptBase"], [45, 1, 1, "", "ParticleOptConfig"], [45, 1, 1, "", "ParticleOptInfo"], [45, 1, 1, "", "SampleMode"]], "curobo.opt.particle.particle_opt_base.ParticleOptBase": [[45, 2, 1, "", "_calc_val"], [45, 2, 1, "", "_call_cuda_opt_iters"], [45, 2, 1, "", "_get_action_seq"], [45, 2, 1, "", "_initialize_cuda_graph"], [45, 2, 1, "", "_optimize"], [45, 2, 1, "", "_run_opt_iters"], [45, 2, 1, "", "_shift"], [45, 2, 1, "", "_update_distribution"], [45, 2, 1, "", "_update_problem_kernel"], [45, 3, 1, "", "action_highs"], [45, 3, 1, "", "action_horizon"], [45, 3, 1, "", "action_lows"], [45, 3, 1, "", "calculate_value"], [45, 2, 1, "", "check_convergence"], [45, 3, 1, "", "cold_start_n_iters"], [45, 2, 1, "", "create_data_dict"], [45, 3, 1, "", "d_action"], [45, 3, 1, "", "debug_info"], [45, 3, 1, "", "gamma"], [45, 2, 1, "", "generate_rollouts"], [45, 2, 1, "", "get_all_rollout_instances"], [45, 2, 1, "", "get_nproblem_tensor"], [45, 3, 1, "", "horizon"], [45, 3, 1, "", "n_iters"], [45, 3, 1, "", "n_problems"], [45, 3, 1, "", "num_particles"], [45, 2, 1, "", "optimize"], [45, 2, 1, "", "reset"], [45, 2, 1, "", "reset_cuda_graph"], [45, 2, 1, "", "reset_seed"], [45, 2, 1, "", "reset_shape"], [45, 3, 1, "", "rollout_fn"], [45, 2, 1, "", "sample_actions"], [45, 3, 1, "", "sample_mode"], [45, 3, 1, "", "seed"], [45, 3, 1, "", "store_debug"], [45, 3, 1, "", "store_rollouts"], [45, 3, 1, "", "sync_cuda_time"], [45, 3, 1, "", "tensor_args"], [45, 2, 1, "", "update_nproblems"], [45, 2, 1, "", "update_num_particles_per_problem"], [45, 2, 1, "", "update_params"], [45, 2, 1, "", "update_seed"], [45, 3, 1, "", "use_coo_sparse"], [45, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.particle_opt_base.ParticleOptConfig": [[45, 3, 1, "", "action_highs"], [45, 3, 1, "", "action_horizon"], [45, 3, 1, "", "action_lows"], [45, 3, 1, "", "calculate_value"], [45, 3, 1, "", "cold_start_n_iters"], [45, 2, 1, "", "create_data_dict"], [45, 3, 1, "", "d_action"], [45, 3, 1, "", "debug_info"], [45, 3, 1, "", "gamma"], [45, 3, 1, "", "horizon"], [45, 3, 1, "", "n_iters"], [45, 3, 1, "", "n_problems"], [45, 3, 1, "", "num_particles"], [45, 3, 1, "", "rollout_fn"], [45, 3, 1, "", "sample_mode"], [45, 3, 1, "", "seed"], [45, 3, 1, "", "store_debug"], [45, 3, 1, "", "store_rollouts"], [45, 3, 1, "", "sync_cuda_time"], [45, 3, 1, "", "tensor_args"], [45, 3, 1, "", "use_coo_sparse"], [45, 3, 1, "", "use_cuda_graph"]], "curobo.opt.particle.particle_opt_base.ParticleOptInfo": [[45, 3, 1, "", "info"]], "curobo.opt.particle.particle_opt_base.SampleMode": [[45, 3, 1, "", "BEST"], [45, 3, 1, "", "MEAN"], [45, 3, 1, "", "SAMPLE"]], "curobo.opt.particle.particle_opt_utils": [[46, 1, 1, "", "SquashType"], [46, 5, 1, "", "batch_cholesky"], [46, 5, 1, "", "cost_to_go"], [46, 5, 1, "", "cost_to_go_np"], [46, 5, 1, "", "gaussian_entropy"], [46, 5, 1, "", "gaussian_kl"], [46, 5, 1, "", "gaussian_logprob"], [46, 5, 1, "", "gaussian_logprobgrad"], [46, 5, 1, "", "get_stomp_cov"], [46, 5, 1, "", "matrix_cholesky"], [46, 5, 1, "", "scale_ctrl"]], "curobo.opt.particle.particle_opt_utils.SquashType": [[46, 3, 1, "", "CLAMP"], [46, 3, 1, "", "CLAMP_RESCALE"], [46, 3, 1, "", "IDENTITY"], [46, 3, 1, "", "TANH"]], "curobo.rollout": [[48, 0, 0, "-", "arm_base"], [49, 0, 0, "-", "arm_reacher"], [50, 0, 0, "-", "cost"], [62, 0, 0, "-", "dynamics_model"], [67, 0, 0, "-", "rollout_base"]], "curobo.rollout.arm_base": [[48, 1, 1, "", "ArmBase"], [48, 1, 1, "", "ArmBaseConfig"], [48, 1, 1, "", "ArmCostConfig"]], "curobo.rollout.arm_base.ArmBase": [[48, 2, 1, "", "_get_augmented_state"], [48, 2, 1, "", "_init_after_config_load"], [48, 4, 1, "", "action_bound_highs"], [48, 4, 1, "", "action_bound_lows"], [48, 4, 1, "", "action_bounds"], [48, 4, 1, "", "action_horizon"], [48, 2, 1, "", "compute_kinematics"], [48, 3, 1, "", "constraint_cfg"], [48, 2, 1, "", "constraint_fn"], [48, 3, 1, "", "convergence_cfg"], [48, 2, 1, "", "convergence_fn"], [48, 3, 1, "", "cost_cfg"], [48, 2, 1, "", "cost_fn"], [48, 2, 1, "", "cost_from_dict"], [48, 4, 1, "", "cspace_config"], [48, 2, 1, "", "current_cost"], [48, 4, 1, "", "d_action"], [48, 4, 1, "", "dt"], [48, 2, 1, "", "filter_robot_state"], [48, 2, 1, "", "from_dict"], [48, 2, 1, "", "get_action_from_state"], [48, 2, 1, "", "get_ee_pose"], [48, 2, 1, "", "get_full_dof_from_solution"], [48, 2, 1, "", "get_init_action_seq"], [48, 2, 1, "", "get_metrics"], [48, 2, 1, "", "get_metrics_cuda_graph"], [48, 2, 1, "", "get_robot_command"], [48, 2, 1, "", "get_state_from_action"], [48, 4, 1, "", "horizon"], [48, 4, 1, "", "joint_names"], [48, 4, 1, "", "kinematics"], [48, 3, 1, "", "model_cfg"], [48, 2, 1, "", "model_from_dict"], [48, 2, 1, "", "reset"], [48, 2, 1, "", "reset_cuda_graph"], [48, 2, 1, "", "reset_seed"], [48, 2, 1, "", "reset_shape"], [48, 4, 1, "", "retract_state"], [48, 2, 1, "", "rollout_constraint"], [48, 2, 1, "", "rollout_constraint_cuda_graph"], [48, 2, 1, "", "rollout_fn"], [48, 2, 1, "", "sample_random_actions"], [48, 3, 1, "", "sampler_seed"], [48, 4, 1, "", "state_bounds"], [48, 3, 1, "", "sum_horizon"], [48, 3, 1, "", "tensor_args"], [48, 2, 1, "", "update_cost_dt"], [48, 2, 1, "", "update_params"], [48, 2, 1, "", "update_start_state"], [48, 2, 1, "", "update_traj_dt"], [48, 3, 1, "", "world_coll_checker"], [48, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_base.ArmBaseConfig": [[48, 3, 1, "", "constraint_cfg"], [48, 3, 1, "", "convergence_cfg"], [48, 3, 1, "", "cost_cfg"], [48, 2, 1, "", "cost_from_dict"], [48, 2, 1, "", "from_dict"], [48, 3, 1, "", "model_cfg"], [48, 2, 1, "", "model_from_dict"], [48, 3, 1, "", "sampler_seed"], [48, 3, 1, "", "sum_horizon"], [48, 3, 1, "", "tensor_args"], [48, 3, 1, "", "world_coll_checker"], [48, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_base.ArmCostConfig": [[48, 2, 1, "", "_get_base_keys"], [48, 2, 1, "", "_get_formatted_dict"], [48, 3, 1, "", "bound_cfg"], [48, 2, 1, "", "from_dict"], [48, 3, 1, "", "manipulability_cfg"], [48, 3, 1, "", "null_space_cfg"], [48, 3, 1, "", "primitive_collision_cfg"], [48, 3, 1, "", "self_collision_cfg"], [48, 3, 1, "", "stop_cfg"]], "curobo.rollout.arm_reacher": [[49, 1, 1, "", "ArmReacher"], [49, 1, 1, "", "ArmReacherConfig"], [49, 1, 1, "", "ArmReacherCostConfig"], [49, 1, 1, "", "ArmReacherMetrics"]], "curobo.rollout.arm_reacher.ArmReacher": [[49, 2, 1, "", "_get_augmented_state"], [49, 2, 1, "", "_init_after_config_load"], [49, 4, 1, "", "action_bound_highs"], [49, 4, 1, "", "action_bound_lows"], [49, 4, 1, "", "action_bounds"], [49, 4, 1, "", "action_horizon"], [49, 2, 1, "", "compute_kinematics"], [49, 3, 1, "", "constraint_cfg"], [49, 2, 1, "", "constraint_fn"], [49, 3, 1, "", "convergence_cfg"], [49, 2, 1, "", "convergence_fn"], [49, 3, 1, "", "cost_cfg"], [49, 2, 1, "", "cost_fn"], [49, 2, 1, "", "cost_from_dict"], [49, 4, 1, "", "cspace_config"], [49, 2, 1, "", "current_cost"], [49, 4, 1, "", "d_action"], [49, 4, 1, "", "dt"], [49, 2, 1, "", "enable_cspace_cost"], [49, 2, 1, "", "enable_pose_cost"], [49, 2, 1, "", "filter_robot_state"], [49, 2, 1, "", "from_dict"], [49, 2, 1, "", "get_action_from_state"], [49, 2, 1, "", "get_ee_pose"], [49, 2, 1, "", "get_full_dof_from_solution"], [49, 2, 1, "", "get_init_action_seq"], [49, 2, 1, "", "get_metrics"], [49, 2, 1, "", "get_metrics_cuda_graph"], [49, 2, 1, "", "get_pose_costs"], [49, 2, 1, "", "get_robot_command"], [49, 2, 1, "", "get_state_from_action"], [49, 4, 1, "", "horizon"], [49, 4, 1, "", "joint_names"], [49, 4, 1, "", "kinematics"], [49, 3, 1, "", "model_cfg"], [49, 2, 1, "", "model_from_dict"], [49, 2, 1, "", "reset"], [49, 2, 1, "", "reset_cuda_graph"], [49, 2, 1, "", "reset_seed"], [49, 2, 1, "", "reset_shape"], [49, 4, 1, "", "retract_state"], [49, 2, 1, "", "rollout_constraint"], [49, 2, 1, "", "rollout_constraint_cuda_graph"], [49, 2, 1, "", "rollout_fn"], [49, 2, 1, "", "sample_random_actions"], [49, 3, 1, "", "sampler_seed"], [49, 4, 1, "", "state_bounds"], [49, 3, 1, "", "sum_horizon"], [49, 3, 1, "", "tensor_args"], [49, 2, 1, "", "update_cost_dt"], [49, 2, 1, "", "update_params"], [49, 2, 1, "", "update_pose_cost_metric"], [49, 2, 1, "", "update_start_state"], [49, 2, 1, "", "update_traj_dt"], [49, 3, 1, "", "world_coll_checker"], [49, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_reacher.ArmReacherConfig": [[49, 3, 1, "", "constraint_cfg"], [49, 3, 1, "", "convergence_cfg"], [49, 3, 1, "", "cost_cfg"], [49, 2, 1, "", "cost_from_dict"], [49, 2, 1, "", "from_dict"], [49, 3, 1, "", "model_cfg"], [49, 2, 1, "", "model_from_dict"], [49, 3, 1, "", "sampler_seed"], [49, 3, 1, "", "sum_horizon"], [49, 3, 1, "", "tensor_args"], [49, 3, 1, "", "world_coll_checker"], [49, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_reacher.ArmReacherCostConfig": [[49, 2, 1, "", "_get_base_keys"], [49, 2, 1, "", "_get_formatted_dict"], [49, 3, 1, "", "bound_cfg"], [49, 3, 1, "", "cspace_cfg"], [49, 2, 1, "", "from_dict"], [49, 3, 1, "", "link_pose_cfg"], [49, 3, 1, "", "manipulability_cfg"], [49, 3, 1, "", "null_space_cfg"], [49, 3, 1, "", "pose_cfg"], [49, 3, 1, "", "primitive_collision_cfg"], [49, 3, 1, "", "self_collision_cfg"], [49, 3, 1, "", "stop_cfg"], [49, 3, 1, "", "straight_line_cfg"], [49, 3, 1, "", "zero_acc_cfg"], [49, 3, 1, "", "zero_jerk_cfg"], [49, 3, 1, "", "zero_vel_cfg"]], "curobo.rollout.arm_reacher.ArmReacherMetrics": [[49, 3, 1, "", "_abc_impl"], [49, 3, 1, "", "_is_protocol"], [49, 2, 1, "", "clone"], [49, 3, 1, "", "constraint"], [49, 3, 1, "", "cost"], [49, 2, 1, "", "count"], [49, 3, 1, "", "cspace_error"], [49, 3, 1, "", "feasible"], [49, 3, 1, "", "goalset_index"], [49, 2, 1, "", "index"], [49, 3, 1, "", "null_space_error"], [49, 3, 1, "", "pose_error"], [49, 3, 1, "", "position_error"], [49, 3, 1, "", "rotation_error"], [49, 3, 1, "", "state"]], "curobo.rollout.cost": [[51, 0, 0, "-", "bound_cost"], [52, 0, 0, "-", "cost_base"], [53, 0, 0, "-", "dist_cost"], [54, 0, 0, "-", "manipulability_cost"], [55, 0, 0, "-", "pose_cost"], [56, 0, 0, "-", "primitive_collision_cost"], [57, 0, 0, "-", "projected_dist_cost"], [58, 0, 0, "-", "self_collision_cost"], [59, 0, 0, "-", "stop_cost"], [60, 0, 0, "-", "straight_line_cost"], [61, 0, 0, "-", "zero_cost"]], "curobo.rollout.cost.bound_cost": [[51, 1, 1, "", "BoundCost"], [51, 1, 1, "", "BoundCostConfig"], [51, 1, 1, "", "BoundCostType"], [51, 1, 1, "", "WarpBoundFunction"], [51, 1, 1, "", "WarpBoundPosFunction"], [51, 1, 1, "", "WarpBoundPosLoss"], [51, 1, 1, "", "WarpBoundSmoothFunction"]], "curobo.rollout.cost.bound_cost.BoundCost": [[51, 3, 1, "", "T_destination"], [51, 2, 1, "", "_apply"], [51, 3, 1, "", "_backward_hooks"], [51, 3, 1, "", "_backward_pre_hooks"], [51, 3, 1, "", "_buffers"], [51, 2, 1, "", "_call_impl"], [51, 3, 1, "", "_compiled_call_impl"], [51, 3, 1, "", "_forward_hooks"], [51, 3, 1, "", "_forward_hooks_always_called"], [51, 3, 1, "", "_forward_hooks_with_kwargs"], [51, 3, 1, "", "_forward_pre_hooks"], [51, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [51, 2, 1, "", "_get_backward_hooks"], [51, 2, 1, "", "_get_backward_pre_hooks"], [51, 2, 1, "", "_get_name"], [51, 2, 1, "", "_init_post_config"], [51, 3, 1, "", "_is_full_backward_hook"], [51, 2, 1, "", "_load_from_state_dict"], [51, 3, 1, "", "_load_state_dict_post_hooks"], [51, 3, 1, "", "_load_state_dict_pre_hooks"], [51, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [51, 3, 1, "", "_modules"], [51, 2, 1, "", "_named_members"], [51, 3, 1, "", "_non_persistent_buffers_set"], [51, 3, 1, "", "_parameters"], [51, 2, 1, "", "_register_load_state_dict_pre_hook"], [51, 2, 1, "", "_register_state_dict_hook"], [51, 2, 1, "", "_replicate_for_data_parallel"], [51, 2, 1, "", "_save_to_state_dict"], [51, 2, 1, "", "_slow_forward"], [51, 3, 1, "", "_state_dict_hooks"], [51, 3, 1, "", "_state_dict_pre_hooks"], [51, 3, 1, "", "_version"], [51, 2, 1, "", "_wrapped_call_impl"], [51, 3, 1, "", "activation_distance"], [51, 2, 1, "", "add_module"], [51, 2, 1, "", "apply"], [51, 2, 1, "", "bfloat16"], [51, 2, 1, "", "buffers"], [51, 3, 1, "", "call_super_init"], [51, 2, 1, "", "children"], [51, 3, 1, "", "classify"], [51, 2, 1, "", "compile"], [51, 3, 1, "", "cost_type"], [51, 2, 1, "", "cpu"], [51, 3, 1, "", "cspace_distance_weight"], [51, 2, 1, "", "cuda"], [51, 2, 1, "", "disable_cost"], [51, 3, 1, "", "distance_threshold"], [51, 3, 1, "", "dof"], [51, 2, 1, "", "double"], [51, 3, 1, "", "dump_patches"], [51, 2, 1, "", "enable_cost"], [51, 4, 1, "", "enabled"], [51, 2, 1, "", "eval"], [51, 2, 1, "", "extra_repr"], [51, 2, 1, "", "float"], [51, 2, 1, "", "forward"], [51, 2, 1, "", "get_buffer"], [51, 2, 1, "", "get_extra_state"], [51, 2, 1, "", "get_parameter"], [51, 2, 1, "", "get_submodule"], [51, 2, 1, "", "half"], [51, 3, 1, "", "hinge_value"], [51, 2, 1, "", "ipu"], [51, 3, 1, "", "joint_limits"], [51, 2, 1, "", "load_state_dict"], [51, 3, 1, "", "max_value"], [51, 2, 1, "", "modules"], [51, 2, 1, "", "named_buffers"], [51, 2, 1, "", "named_children"], [51, 2, 1, "", "named_modules"], [51, 2, 1, "", "named_parameters"], [51, 3, 1, "", "null_space_weight"], [51, 2, 1, "", "parameters"], [51, 2, 1, "", "register_backward_hook"], [51, 2, 1, "", "register_buffer"], [51, 2, 1, "", "register_forward_hook"], [51, 2, 1, "", "register_forward_pre_hook"], [51, 2, 1, "", "register_full_backward_hook"], [51, 2, 1, "", "register_full_backward_pre_hook"], [51, 2, 1, "", "register_load_state_dict_post_hook"], [51, 2, 1, "", "register_module"], [51, 2, 1, "", "register_parameter"], [51, 2, 1, "", "register_state_dict_pre_hook"], [51, 2, 1, "", "requires_grad_"], [51, 3, 1, "", "return_loss"], [51, 3, 1, "", "run_weight"], [51, 3, 1, "", "run_weight_acceleration"], [51, 3, 1, "", "run_weight_jerk"], [51, 3, 1, "", "run_weight_velocity"], [51, 2, 1, "", "set_bounds"], [51, 2, 1, "", "set_extra_state"], [51, 2, 1, "", "share_memory"], [51, 3, 1, "", "smooth_weight"], [51, 2, 1, "", "state_dict"], [51, 3, 1, "", "state_finite_difference_mode"], [51, 3, 1, "", "tensor_args"], [51, 3, 1, "", "terminal"], [51, 3, 1, "", "threshold_value"], [51, 2, 1, "", "to"], [51, 2, 1, "", "to_empty"], [51, 2, 1, "", "train"], [51, 3, 1, "", "training"], [51, 2, 1, "", "type"], [51, 2, 1, "", "update_batch_size"], [51, 2, 1, "", "update_dt"], [51, 2, 1, "", "update_vec_weight"], [51, 2, 1, "", "update_weight"], [51, 3, 1, "", "vec_convergence"], [51, 3, 1, "", "vec_weight"], [51, 3, 1, "", "weight"], [51, 2, 1, "", "xpu"], [51, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.bound_cost.BoundCostConfig": [[51, 3, 1, "", "activation_distance"], [51, 3, 1, "", "classify"], [51, 3, 1, "", "cost_type"], [51, 3, 1, "", "cspace_distance_weight"], [51, 3, 1, "", "distance_threshold"], [51, 3, 1, "", "dof"], [51, 3, 1, "", "hinge_value"], [51, 3, 1, "", "joint_limits"], [51, 3, 1, "", "max_value"], [51, 3, 1, "", "null_space_weight"], [51, 3, 1, "", "return_loss"], [51, 3, 1, "", "run_weight"], [51, 3, 1, "", "run_weight_acceleration"], [51, 3, 1, "", "run_weight_jerk"], [51, 3, 1, "", "run_weight_velocity"], [51, 2, 1, "", "set_bounds"], [51, 3, 1, "", "smooth_weight"], [51, 3, 1, "", "state_finite_difference_mode"], [51, 3, 1, "", "tensor_args"], [51, 3, 1, "", "terminal"], [51, 3, 1, "", "threshold_value"], [51, 2, 1, "", "update_vec_weight"], [51, 3, 1, "", "vec_convergence"], [51, 3, 1, "", "vec_weight"], [51, 3, 1, "", "weight"]], "curobo.rollout.cost.bound_cost.BoundCostType": [[51, 3, 1, "", "BOUNDS"], [51, 3, 1, "", "BOUNDS_SMOOTH"], [51, 3, 1, "", "POSITION"]], "curobo.rollout.cost.bound_cost.WarpBoundFunction": [[51, 3, 1, "", "_backward_cls"], [51, 2, 1, "", "_get_compiled_autograd_symints"], [51, 2, 1, "", "_is_compiled_autograd_tracing"], [51, 3, 1, "", "_materialize_non_diff_grads"], [51, 3, 1, "", "_raw_saved_tensors"], [51, 2, 1, "", "_register_hook"], [51, 2, 1, "", "_register_hook_dict"], [51, 2, 1, "", "_sequence_nr"], [51, 2, 1, "", "apply"], [51, 2, 1, "", "backward"], [51, 3, 1, "", "dirty_tensors"], [51, 2, 1, "", "forward"], [51, 3, 1, "", "generate_vmap_rule"], [51, 3, 1, "", "is_traceable"], [51, 2, 1, "", "jvp"], [51, 2, 1, "", "mark_dirty"], [51, 2, 1, "", "mark_non_differentiable"], [51, 2, 1, "", "mark_shared_storage"], [51, 3, 1, "", "materialize_grads"], [51, 2, 1, "", "maybe_clear_saved_tensors"], [51, 3, 1, "", "metadata"], [51, 2, 1, "", "name"], [51, 3, 1, "", "needs_input_grad"], [51, 3, 1, "", "next_functions"], [51, 3, 1, "", "non_differentiable"], [51, 2, 1, "", "register_hook"], [51, 2, 1, "", "register_prehook"], [51, 3, 1, "", "requires_grad"], [51, 2, 1, "", "save_for_backward"], [51, 2, 1, "", "save_for_forward"], [51, 3, 1, "", "saved_for_forward"], [51, 3, 1, "", "saved_tensors"], [51, 3, 1, "", "saved_variables"], [51, 2, 1, "", "set_materialize_grads"], [51, 2, 1, "", "setup_context"], [51, 3, 1, "", "to_save"], [51, 2, 1, "", "vjp"], [51, 2, 1, "", "vmap"]], "curobo.rollout.cost.bound_cost.WarpBoundPosFunction": [[51, 3, 1, "", "_backward_cls"], [51, 2, 1, "", "_get_compiled_autograd_symints"], [51, 2, 1, "", "_is_compiled_autograd_tracing"], [51, 3, 1, "", "_materialize_non_diff_grads"], [51, 3, 1, "", "_raw_saved_tensors"], [51, 2, 1, "", "_register_hook"], [51, 2, 1, "", "_register_hook_dict"], [51, 2, 1, "", "_sequence_nr"], [51, 2, 1, "", "apply"], [51, 2, 1, "", "backward"], [51, 3, 1, "", "dirty_tensors"], [51, 2, 1, "", "forward"], [51, 3, 1, "", "generate_vmap_rule"], [51, 3, 1, "", "is_traceable"], [51, 2, 1, "", "jvp"], [51, 2, 1, "", "mark_dirty"], [51, 2, 1, "", "mark_non_differentiable"], [51, 2, 1, "", "mark_shared_storage"], [51, 3, 1, "", "materialize_grads"], [51, 2, 1, "", "maybe_clear_saved_tensors"], [51, 3, 1, "", "metadata"], [51, 2, 1, "", "name"], [51, 3, 1, "", "needs_input_grad"], [51, 3, 1, "", "next_functions"], [51, 3, 1, "", "non_differentiable"], [51, 2, 1, "", "register_hook"], [51, 2, 1, "", "register_prehook"], [51, 3, 1, "", "requires_grad"], [51, 2, 1, "", "save_for_backward"], [51, 2, 1, "", "save_for_forward"], [51, 3, 1, "", "saved_for_forward"], [51, 3, 1, "", "saved_tensors"], [51, 3, 1, "", "saved_variables"], [51, 2, 1, "", "set_materialize_grads"], [51, 2, 1, "", "setup_context"], [51, 3, 1, "", "to_save"], [51, 2, 1, "", "vjp"], [51, 2, 1, "", "vmap"]], "curobo.rollout.cost.bound_cost.WarpBoundPosLoss": [[51, 3, 1, "", "_backward_cls"], [51, 2, 1, "", "_get_compiled_autograd_symints"], [51, 2, 1, "", "_is_compiled_autograd_tracing"], [51, 3, 1, "", "_materialize_non_diff_grads"], [51, 3, 1, "", "_raw_saved_tensors"], [51, 2, 1, "", "_register_hook"], [51, 2, 1, "", "_register_hook_dict"], [51, 2, 1, "", "_sequence_nr"], [51, 2, 1, "", "apply"], [51, 2, 1, "", "backward"], [51, 3, 1, "", "dirty_tensors"], [51, 2, 1, "", "forward"], [51, 3, 1, "", "generate_vmap_rule"], [51, 3, 1, "", "is_traceable"], [51, 2, 1, "", "jvp"], [51, 2, 1, "", "mark_dirty"], [51, 2, 1, "", "mark_non_differentiable"], [51, 2, 1, "", "mark_shared_storage"], [51, 3, 1, "", "materialize_grads"], [51, 2, 1, "", "maybe_clear_saved_tensors"], [51, 3, 1, "", "metadata"], [51, 2, 1, "", "name"], [51, 3, 1, "", "needs_input_grad"], [51, 3, 1, "", "next_functions"], [51, 3, 1, "", "non_differentiable"], [51, 2, 1, "", "register_hook"], [51, 2, 1, "", "register_prehook"], [51, 3, 1, "", "requires_grad"], [51, 2, 1, "", "save_for_backward"], [51, 2, 1, "", "save_for_forward"], [51, 3, 1, "", "saved_for_forward"], [51, 3, 1, "", "saved_tensors"], [51, 3, 1, "", "saved_variables"], [51, 2, 1, "", "set_materialize_grads"], [51, 2, 1, "", "setup_context"], [51, 3, 1, "", "to_save"], [51, 2, 1, "", "vjp"], [51, 2, 1, "", "vmap"]], "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction": [[51, 3, 1, "", "_backward_cls"], [51, 2, 1, "", "_get_compiled_autograd_symints"], [51, 2, 1, "", "_is_compiled_autograd_tracing"], [51, 3, 1, "", "_materialize_non_diff_grads"], [51, 3, 1, "", "_raw_saved_tensors"], [51, 2, 1, "", "_register_hook"], [51, 2, 1, "", "_register_hook_dict"], [51, 2, 1, "", "_sequence_nr"], [51, 2, 1, "", "apply"], [51, 2, 1, "", "backward"], [51, 3, 1, "", "dirty_tensors"], [51, 2, 1, "", "forward"], [51, 3, 1, "", "generate_vmap_rule"], [51, 3, 1, "", "is_traceable"], [51, 2, 1, "", "jvp"], [51, 2, 1, "", "mark_dirty"], [51, 2, 1, "", "mark_non_differentiable"], [51, 2, 1, "", "mark_shared_storage"], [51, 3, 1, "", "materialize_grads"], [51, 2, 1, "", "maybe_clear_saved_tensors"], [51, 3, 1, "", "metadata"], [51, 2, 1, "", "name"], [51, 3, 1, "", "needs_input_grad"], [51, 3, 1, "", "next_functions"], [51, 3, 1, "", "non_differentiable"], [51, 2, 1, "", "register_hook"], [51, 2, 1, "", "register_prehook"], [51, 3, 1, "", "requires_grad"], [51, 2, 1, "", "save_for_backward"], [51, 2, 1, "", "save_for_forward"], [51, 3, 1, "", "saved_for_forward"], [51, 3, 1, "", "saved_tensors"], [51, 3, 1, "", "saved_variables"], [51, 2, 1, "", "set_materialize_grads"], [51, 2, 1, "", "setup_context"], [51, 3, 1, "", "to_save"], [51, 2, 1, "", "vjp"], [51, 2, 1, "", "vmap"]], "curobo.rollout.cost.cost_base": [[52, 1, 1, "", "CostBase"], [52, 1, 1, "", "CostConfig"]], "curobo.rollout.cost.cost_base.CostBase": [[52, 3, 1, "", "T_destination"], [52, 2, 1, "", "_apply"], [52, 3, 1, "", "_backward_hooks"], [52, 3, 1, "", "_backward_pre_hooks"], [52, 3, 1, "", "_buffers"], [52, 2, 1, "", "_call_impl"], [52, 3, 1, "", "_compiled_call_impl"], [52, 3, 1, "", "_forward_hooks"], [52, 3, 1, "", "_forward_hooks_always_called"], [52, 3, 1, "", "_forward_hooks_with_kwargs"], [52, 3, 1, "", "_forward_pre_hooks"], [52, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [52, 2, 1, "", "_get_backward_hooks"], [52, 2, 1, "", "_get_backward_pre_hooks"], [52, 2, 1, "", "_get_name"], [52, 2, 1, "", "_init_post_config"], [52, 3, 1, "", "_is_full_backward_hook"], [52, 2, 1, "", "_load_from_state_dict"], [52, 3, 1, "", "_load_state_dict_post_hooks"], [52, 3, 1, "", "_load_state_dict_pre_hooks"], [52, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [52, 3, 1, "", "_modules"], [52, 2, 1, "", "_named_members"], [52, 3, 1, "", "_non_persistent_buffers_set"], [52, 3, 1, "", "_parameters"], [52, 2, 1, "", "_register_load_state_dict_pre_hook"], [52, 2, 1, "", "_register_state_dict_hook"], [52, 2, 1, "", "_replicate_for_data_parallel"], [52, 2, 1, "", "_save_to_state_dict"], [52, 2, 1, "", "_slow_forward"], [52, 3, 1, "", "_state_dict_hooks"], [52, 3, 1, "", "_state_dict_pre_hooks"], [52, 3, 1, "", "_version"], [52, 2, 1, "", "_wrapped_call_impl"], [52, 2, 1, "", "add_module"], [52, 2, 1, "", "apply"], [52, 2, 1, "", "bfloat16"], [52, 2, 1, "", "buffers"], [52, 3, 1, "", "call_super_init"], [52, 2, 1, "", "children"], [52, 3, 1, "", "classify"], [52, 2, 1, "", "compile"], [52, 2, 1, "", "cpu"], [52, 2, 1, "", "cuda"], [52, 2, 1, "", "disable_cost"], [52, 3, 1, "", "distance_threshold"], [52, 3, 1, "", "dof"], [52, 2, 1, "", "double"], [52, 3, 1, "", "dump_patches"], [52, 2, 1, "", "enable_cost"], [52, 4, 1, "", "enabled"], [52, 2, 1, "", "eval"], [52, 2, 1, "", "extra_repr"], [52, 2, 1, "", "float"], [52, 2, 1, "", "forward"], [52, 2, 1, "", "get_buffer"], [52, 2, 1, "", "get_extra_state"], [52, 2, 1, "", "get_parameter"], [52, 2, 1, "", "get_submodule"], [52, 2, 1, "", "half"], [52, 3, 1, "", "hinge_value"], [52, 2, 1, "", "ipu"], [52, 2, 1, "", "load_state_dict"], [52, 3, 1, "", "max_value"], [52, 2, 1, "", "modules"], [52, 2, 1, "", "named_buffers"], [52, 2, 1, "", "named_children"], [52, 2, 1, "", "named_modules"], [52, 2, 1, "", "named_parameters"], [52, 2, 1, "", "parameters"], [52, 2, 1, "", "register_backward_hook"], [52, 2, 1, "", "register_buffer"], [52, 2, 1, "", "register_forward_hook"], [52, 2, 1, "", "register_forward_pre_hook"], [52, 2, 1, "", "register_full_backward_hook"], [52, 2, 1, "", "register_full_backward_pre_hook"], [52, 2, 1, "", "register_load_state_dict_post_hook"], [52, 2, 1, "", "register_module"], [52, 2, 1, "", "register_parameter"], [52, 2, 1, "", "register_state_dict_pre_hook"], [52, 2, 1, "", "requires_grad_"], [52, 3, 1, "", "return_loss"], [52, 3, 1, "", "run_weight"], [52, 2, 1, "", "set_extra_state"], [52, 2, 1, "", "share_memory"], [52, 2, 1, "", "state_dict"], [52, 3, 1, "", "tensor_args"], [52, 3, 1, "", "terminal"], [52, 3, 1, "", "threshold_value"], [52, 2, 1, "", "to"], [52, 2, 1, "", "to_empty"], [52, 2, 1, "", "train"], [52, 3, 1, "", "training"], [52, 2, 1, "", "type"], [52, 2, 1, "", "update_dt"], [52, 2, 1, "", "update_vec_weight"], [52, 2, 1, "", "update_weight"], [52, 3, 1, "", "vec_convergence"], [52, 3, 1, "", "vec_weight"], [52, 3, 1, "", "weight"], [52, 2, 1, "", "xpu"], [52, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.cost_base.CostConfig": [[52, 3, 1, "", "classify"], [52, 3, 1, "", "distance_threshold"], [52, 3, 1, "", "dof"], [52, 3, 1, "", "hinge_value"], [52, 3, 1, "", "max_value"], [52, 3, 1, "", "return_loss"], [52, 3, 1, "", "run_weight"], [52, 3, 1, "", "tensor_args"], [52, 3, 1, "", "terminal"], [52, 3, 1, "", "threshold_value"], [52, 2, 1, "", "update_vec_weight"], [52, 3, 1, "", "vec_convergence"], [52, 3, 1, "", "vec_weight"], [52, 3, 1, "", "weight"]], "curobo.rollout.cost.dist_cost": [[53, 1, 1, "", "DistCost"], [53, 1, 1, "", "DistCostConfig"], [53, 1, 1, "", "DistType"], [53, 1, 1, "", "L2DistFunction"]], "curobo.rollout.cost.dist_cost.DistCost": [[53, 3, 1, "", "T_destination"], [53, 2, 1, "", "_apply"], [53, 3, 1, "", "_backward_hooks"], [53, 3, 1, "", "_backward_pre_hooks"], [53, 3, 1, "", "_buffers"], [53, 2, 1, "", "_call_impl"], [53, 3, 1, "", "_compiled_call_impl"], [53, 3, 1, "", "_forward_hooks"], [53, 3, 1, "", "_forward_hooks_always_called"], [53, 3, 1, "", "_forward_hooks_with_kwargs"], [53, 3, 1, "", "_forward_pre_hooks"], [53, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [53, 2, 1, "", "_get_backward_hooks"], [53, 2, 1, "", "_get_backward_pre_hooks"], [53, 2, 1, "", "_get_name"], [53, 2, 1, "", "_init_post_config"], [53, 3, 1, "", "_is_full_backward_hook"], [53, 2, 1, "", "_load_from_state_dict"], [53, 3, 1, "", "_load_state_dict_post_hooks"], [53, 3, 1, "", "_load_state_dict_pre_hooks"], [53, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [53, 3, 1, "", "_modules"], [53, 2, 1, "", "_named_members"], [53, 3, 1, "", "_non_persistent_buffers_set"], [53, 3, 1, "", "_parameters"], [53, 2, 1, "", "_register_load_state_dict_pre_hook"], [53, 2, 1, "", "_register_state_dict_hook"], [53, 2, 1, "", "_replicate_for_data_parallel"], [53, 2, 1, "", "_save_to_state_dict"], [53, 2, 1, "", "_slow_forward"], [53, 3, 1, "", "_state_dict_hooks"], [53, 3, 1, "", "_state_dict_pre_hooks"], [53, 3, 1, "", "_version"], [53, 2, 1, "", "_wrapped_call_impl"], [53, 2, 1, "", "add_module"], [53, 2, 1, "", "apply"], [53, 2, 1, "", "bfloat16"], [53, 2, 1, "", "buffers"], [53, 3, 1, "", "call_super_init"], [53, 2, 1, "", "children"], [53, 3, 1, "", "classify"], [53, 2, 1, "", "compile"], [53, 2, 1, "", "cpu"], [53, 2, 1, "", "cuda"], [53, 2, 1, "", "disable_cost"], [53, 3, 1, "", "dist_type"], [53, 3, 1, "", "distance_threshold"], [53, 3, 1, "", "dof"], [53, 2, 1, "", "double"], [53, 3, 1, "", "dump_patches"], [53, 2, 1, "", "enable_cost"], [53, 4, 1, "", "enabled"], [53, 2, 1, "", "eval"], [53, 2, 1, "", "extra_repr"], [53, 2, 1, "", "float"], [53, 2, 1, "", "forward"], [53, 2, 1, "", "forward_target"], [53, 2, 1, "", "forward_target_idx"], [53, 2, 1, "", "get_buffer"], [53, 2, 1, "", "get_extra_state"], [53, 2, 1, "", "get_parameter"], [53, 2, 1, "", "get_submodule"], [53, 2, 1, "", "half"], [53, 3, 1, "", "hinge_value"], [53, 2, 1, "", "ipu"], [53, 2, 1, "", "load_state_dict"], [53, 3, 1, "", "max_value"], [53, 2, 1, "", "modules"], [53, 2, 1, "", "named_buffers"], [53, 2, 1, "", "named_children"], [53, 2, 1, "", "named_modules"], [53, 2, 1, "", "named_parameters"], [53, 2, 1, "", "parameters"], [53, 2, 1, "", "register_backward_hook"], [53, 2, 1, "", "register_buffer"], [53, 2, 1, "", "register_forward_hook"], [53, 2, 1, "", "register_forward_pre_hook"], [53, 2, 1, "", "register_full_backward_hook"], [53, 2, 1, "", "register_full_backward_pre_hook"], [53, 2, 1, "", "register_load_state_dict_post_hook"], [53, 2, 1, "", "register_module"], [53, 2, 1, "", "register_parameter"], [53, 2, 1, "", "register_state_dict_pre_hook"], [53, 2, 1, "", "requires_grad_"], [53, 3, 1, "", "return_loss"], [53, 3, 1, "", "run_weight"], [53, 2, 1, "", "set_extra_state"], [53, 2, 1, "", "share_memory"], [53, 2, 1, "", "state_dict"], [53, 3, 1, "", "tensor_args"], [53, 3, 1, "", "terminal"], [53, 3, 1, "", "threshold_value"], [53, 2, 1, "", "to"], [53, 2, 1, "", "to_empty"], [53, 2, 1, "", "train"], [53, 3, 1, "", "training"], [53, 2, 1, "", "type"], [53, 2, 1, "", "update_batch_size"], [53, 2, 1, "", "update_dt"], [53, 2, 1, "", "update_vec_weight"], [53, 2, 1, "", "update_weight"], [53, 3, 1, "", "use_null_space"], [53, 3, 1, "", "vec_convergence"], [53, 3, 1, "", "vec_weight"], [53, 3, 1, "", "weight"], [53, 2, 1, "", "xpu"], [53, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.dist_cost.DistCostConfig": [[53, 3, 1, "", "classify"], [53, 3, 1, "", "dist_type"], [53, 3, 1, "", "distance_threshold"], [53, 3, 1, "", "dof"], [53, 3, 1, "", "hinge_value"], [53, 3, 1, "", "max_value"], [53, 3, 1, "", "return_loss"], [53, 3, 1, "", "run_weight"], [53, 3, 1, "", "tensor_args"], [53, 3, 1, "", "terminal"], [53, 3, 1, "", "threshold_value"], [53, 2, 1, "", "update_vec_weight"], [53, 3, 1, "", "use_null_space"], [53, 3, 1, "", "vec_convergence"], [53, 3, 1, "", "vec_weight"], [53, 3, 1, "", "weight"]], "curobo.rollout.cost.dist_cost.DistType": [[53, 3, 1, "", "L1"], [53, 3, 1, "", "L2"], [53, 3, 1, "", "SQUARED_L2"]], "curobo.rollout.cost.dist_cost.L2DistFunction": [[53, 3, 1, "", "_backward_cls"], [53, 2, 1, "", "_get_compiled_autograd_symints"], [53, 2, 1, "", "_is_compiled_autograd_tracing"], [53, 3, 1, "", "_materialize_non_diff_grads"], [53, 3, 1, "", "_raw_saved_tensors"], [53, 2, 1, "", "_register_hook"], [53, 2, 1, "", "_register_hook_dict"], [53, 2, 1, "", "_sequence_nr"], [53, 2, 1, "", "apply"], [53, 2, 1, "", "backward"], [53, 3, 1, "", "dirty_tensors"], [53, 2, 1, "", "forward"], [53, 3, 1, "", "generate_vmap_rule"], [53, 3, 1, "", "is_traceable"], [53, 2, 1, "", "jvp"], [53, 2, 1, "", "mark_dirty"], [53, 2, 1, "", "mark_non_differentiable"], [53, 2, 1, "", "mark_shared_storage"], [53, 3, 1, "", "materialize_grads"], [53, 2, 1, "", "maybe_clear_saved_tensors"], [53, 3, 1, "", "metadata"], [53, 2, 1, "", "name"], [53, 3, 1, "", "needs_input_grad"], [53, 3, 1, "", "next_functions"], [53, 3, 1, "", "non_differentiable"], [53, 2, 1, "", "register_hook"], [53, 2, 1, "", "register_prehook"], [53, 3, 1, "", "requires_grad"], [53, 2, 1, "", "save_for_backward"], [53, 2, 1, "", "save_for_forward"], [53, 3, 1, "", "saved_for_forward"], [53, 3, 1, "", "saved_tensors"], [53, 3, 1, "", "saved_variables"], [53, 2, 1, "", "set_materialize_grads"], [53, 2, 1, "", "setup_context"], [53, 3, 1, "", "to_save"], [53, 2, 1, "", "vjp"], [53, 2, 1, "", "vmap"]], "curobo.rollout.cost.manipulability_cost": [[54, 1, 1, "", "ManipulabilityCost"], [54, 1, 1, "", "ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCost": [[54, 3, 1, "", "T_destination"], [54, 2, 1, "", "_apply"], [54, 3, 1, "", "_backward_hooks"], [54, 3, 1, "", "_backward_pre_hooks"], [54, 3, 1, "", "_buffers"], [54, 2, 1, "", "_call_impl"], [54, 3, 1, "", "_compiled_call_impl"], [54, 3, 1, "", "_forward_hooks"], [54, 3, 1, "", "_forward_hooks_always_called"], [54, 3, 1, "", "_forward_hooks_with_kwargs"], [54, 3, 1, "", "_forward_pre_hooks"], [54, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [54, 2, 1, "", "_get_backward_hooks"], [54, 2, 1, "", "_get_backward_pre_hooks"], [54, 2, 1, "", "_get_name"], [54, 2, 1, "", "_init_post_config"], [54, 3, 1, "", "_is_full_backward_hook"], [54, 2, 1, "", "_load_from_state_dict"], [54, 3, 1, "", "_load_state_dict_post_hooks"], [54, 3, 1, "", "_load_state_dict_pre_hooks"], [54, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [54, 3, 1, "", "_modules"], [54, 2, 1, "", "_named_members"], [54, 3, 1, "", "_non_persistent_buffers_set"], [54, 3, 1, "", "_parameters"], [54, 2, 1, "", "_register_load_state_dict_pre_hook"], [54, 2, 1, "", "_register_state_dict_hook"], [54, 2, 1, "", "_replicate_for_data_parallel"], [54, 2, 1, "", "_save_to_state_dict"], [54, 2, 1, "", "_slow_forward"], [54, 3, 1, "", "_state_dict_hooks"], [54, 3, 1, "", "_state_dict_pre_hooks"], [54, 3, 1, "", "_version"], [54, 2, 1, "", "_wrapped_call_impl"], [54, 2, 1, "", "add_module"], [54, 2, 1, "", "apply"], [54, 2, 1, "", "bfloat16"], [54, 2, 1, "", "buffers"], [54, 3, 1, "", "call_super_init"], [54, 2, 1, "", "children"], [54, 3, 1, "", "classify"], [54, 2, 1, "", "compile"], [54, 2, 1, "", "cpu"], [54, 2, 1, "", "cuda"], [54, 2, 1, "", "disable_cost"], [54, 3, 1, "", "distance_threshold"], [54, 3, 1, "", "dof"], [54, 2, 1, "", "double"], [54, 3, 1, "", "dump_patches"], [54, 2, 1, "", "enable_cost"], [54, 4, 1, "", "enabled"], [54, 2, 1, "", "eval"], [54, 2, 1, "", "extra_repr"], [54, 2, 1, "", "float"], [54, 2, 1, "", "forward"], [54, 2, 1, "", "get_buffer"], [54, 2, 1, "", "get_extra_state"], [54, 2, 1, "", "get_parameter"], [54, 2, 1, "", "get_submodule"], [54, 2, 1, "", "half"], [54, 3, 1, "", "hinge_value"], [54, 2, 1, "", "ipu"], [54, 2, 1, "", "joint_limited_manipulability_delta"], [54, 2, 1, "", "load_state_dict"], [54, 2, 1, "", "manipulability"], [54, 3, 1, "", "max_value"], [54, 2, 1, "", "modules"], [54, 2, 1, "", "named_buffers"], [54, 2, 1, "", "named_children"], [54, 2, 1, "", "named_modules"], [54, 2, 1, "", "named_parameters"], [54, 2, 1, "", "parameters"], [54, 2, 1, "", "register_backward_hook"], [54, 2, 1, "", "register_buffer"], [54, 2, 1, "", "register_forward_hook"], [54, 2, 1, "", "register_forward_pre_hook"], [54, 2, 1, "", "register_full_backward_hook"], [54, 2, 1, "", "register_full_backward_pre_hook"], [54, 2, 1, "", "register_load_state_dict_post_hook"], [54, 2, 1, "", "register_module"], [54, 2, 1, "", "register_parameter"], [54, 2, 1, "", "register_state_dict_pre_hook"], [54, 2, 1, "", "requires_grad_"], [54, 3, 1, "", "return_loss"], [54, 3, 1, "", "run_weight"], [54, 2, 1, "", "set_extra_state"], [54, 2, 1, "", "share_memory"], [54, 2, 1, "", "state_dict"], [54, 3, 1, "", "tensor_args"], [54, 3, 1, "", "terminal"], [54, 3, 1, "", "threshold_value"], [54, 2, 1, "", "to"], [54, 2, 1, "", "to_empty"], [54, 2, 1, "", "train"], [54, 3, 1, "", "training"], [54, 2, 1, "", "type"], [54, 2, 1, "", "update_dt"], [54, 2, 1, "", "update_vec_weight"], [54, 2, 1, "", "update_weight"], [54, 3, 1, "", "use_joint_limits"], [54, 3, 1, "", "vec_convergence"], [54, 3, 1, "", "vec_weight"], [54, 3, 1, "", "weight"], [54, 2, 1, "", "xpu"], [54, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig": [[54, 3, 1, "", "classify"], [54, 3, 1, "", "distance_threshold"], [54, 3, 1, "", "dof"], [54, 3, 1, "", "hinge_value"], [54, 3, 1, "", "max_value"], [54, 3, 1, "", "return_loss"], [54, 3, 1, "", "run_weight"], [54, 3, 1, "", "tensor_args"], [54, 3, 1, "", "terminal"], [54, 3, 1, "", "threshold_value"], [54, 2, 1, "", "update_vec_weight"], [54, 3, 1, "", "use_joint_limits"], [54, 3, 1, "", "vec_convergence"], [54, 3, 1, "", "vec_weight"], [54, 3, 1, "", "weight"]], "curobo.rollout.cost.pose_cost": [[55, 1, 1, "", "PoseCost"], [55, 1, 1, "", "PoseCostConfig"], [55, 1, 1, "", "PoseCostMetric"], [55, 1, 1, "", "PoseErrorType"]], "curobo.rollout.cost.pose_cost.PoseCost": [[55, 3, 1, "", "T_destination"], [55, 2, 1, "", "_apply"], [55, 3, 1, "", "_backward_hooks"], [55, 3, 1, "", "_backward_pre_hooks"], [55, 3, 1, "", "_buffers"], [55, 2, 1, "", "_call_impl"], [55, 3, 1, "", "_compiled_call_impl"], [55, 2, 1, "", "_forward_goal_distribution"], [55, 3, 1, "", "_forward_hooks"], [55, 3, 1, "", "_forward_hooks_always_called"], [55, 3, 1, "", "_forward_hooks_with_kwargs"], [55, 3, 1, "", "_forward_pre_hooks"], [55, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [55, 2, 1, "", "_forward_pytorch"], [55, 2, 1, "", "_forward_single_goal"], [55, 2, 1, "", "_get_backward_hooks"], [55, 2, 1, "", "_get_backward_pre_hooks"], [55, 2, 1, "", "_get_name"], [55, 2, 1, "", "_init_post_config"], [55, 3, 1, "", "_is_full_backward_hook"], [55, 2, 1, "", "_load_from_state_dict"], [55, 3, 1, "", "_load_state_dict_post_hooks"], [55, 3, 1, "", "_load_state_dict_pre_hooks"], [55, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [55, 3, 1, "", "_modules"], [55, 2, 1, "", "_named_members"], [55, 3, 1, "", "_non_persistent_buffers_set"], [55, 3, 1, "", "_parameters"], [55, 2, 1, "", "_register_load_state_dict_pre_hook"], [55, 2, 1, "", "_register_state_dict_hook"], [55, 2, 1, "", "_replicate_for_data_parallel"], [55, 2, 1, "", "_save_to_state_dict"], [55, 2, 1, "", "_slow_forward"], [55, 3, 1, "", "_state_dict_hooks"], [55, 3, 1, "", "_state_dict_pre_hooks"], [55, 2, 1, "", "_update_cost_type"], [55, 3, 1, "", "_version"], [55, 2, 1, "", "_wrapped_call_impl"], [55, 2, 1, "", "add_module"], [55, 2, 1, "", "apply"], [55, 2, 1, "", "bfloat16"], [55, 2, 1, "", "buffers"], [55, 3, 1, "", "call_super_init"], [55, 2, 1, "", "children"], [55, 3, 1, "", "classify"], [55, 2, 1, "", "compile"], [55, 3, 1, "", "cost_type"], [55, 2, 1, "", "cpu"], [55, 2, 1, "", "cuda"], [55, 2, 1, "", "disable_cost"], [55, 3, 1, "", "distance_threshold"], [55, 3, 1, "", "dof"], [55, 2, 1, "", "double"], [55, 3, 1, "", "dump_patches"], [55, 2, 1, "", "enable_cost"], [55, 4, 1, "", "enabled"], [55, 2, 1, "", "eval"], [55, 2, 1, "", "extra_repr"], [55, 2, 1, "", "float"], [55, 2, 1, "", "forward"], [55, 2, 1, "", "forward_out_distance"], [55, 2, 1, "", "forward_pose"], [55, 2, 1, "", "get_buffer"], [55, 2, 1, "", "get_extra_state"], [55, 2, 1, "", "get_parameter"], [55, 2, 1, "", "get_submodule"], [55, 4, 1, "", "goalset_index_buffer"], [55, 2, 1, "", "half"], [55, 3, 1, "", "hinge_value"], [55, 2, 1, "", "hold_partial_pose"], [55, 2, 1, "", "initialize_run_weight_vec"], [55, 2, 1, "", "ipu"], [55, 2, 1, "", "load_state_dict"], [55, 3, 1, "", "max_value"], [55, 2, 1, "", "modules"], [55, 2, 1, "", "named_buffers"], [55, 2, 1, "", "named_children"], [55, 2, 1, "", "named_modules"], [55, 2, 1, "", "named_parameters"], [55, 3, 1, "", "offset_tstep_fraction"], [55, 3, 1, "", "offset_waypoint"], [55, 2, 1, "", "parameters"], [55, 3, 1, "", "project_distance"], [55, 2, 1, "", "reach_full_pose"], [55, 2, 1, "", "reach_partial_pose"], [55, 2, 1, "", "register_backward_hook"], [55, 2, 1, "", "register_buffer"], [55, 2, 1, "", "register_forward_hook"], [55, 2, 1, "", "register_forward_pre_hook"], [55, 2, 1, "", "register_full_backward_hook"], [55, 2, 1, "", "register_full_backward_pre_hook"], [55, 2, 1, "", "register_load_state_dict_post_hook"], [55, 2, 1, "", "register_module"], [55, 2, 1, "", "register_parameter"], [55, 2, 1, "", "register_state_dict_pre_hook"], [55, 2, 1, "", "release_partial_pose"], [55, 2, 1, "", "remove_offset_waypoint"], [55, 2, 1, "", "requires_grad_"], [55, 3, 1, "", "return_loss"], [55, 3, 1, "", "run_vec_weight"], [55, 3, 1, "", "run_weight"], [55, 2, 1, "", "set_extra_state"], [55, 2, 1, "", "share_memory"], [55, 2, 1, "", "state_dict"], [55, 3, 1, "", "tensor_args"], [55, 3, 1, "", "terminal"], [55, 3, 1, "", "threshold_value"], [55, 2, 1, "", "to"], [55, 2, 1, "", "to_empty"], [55, 2, 1, "", "train"], [55, 3, 1, "", "training"], [55, 2, 1, "", "type"], [55, 2, 1, "", "update_batch_size"], [55, 2, 1, "", "update_dt"], [55, 2, 1, "", "update_metric"], [55, 2, 1, "", "update_offset_waypoint"], [55, 2, 1, "", "update_run_weight"], [55, 2, 1, "", "update_vec_weight"], [55, 2, 1, "", "update_weight"], [55, 3, 1, "", "use_metric"], [55, 3, 1, "", "use_projected_distance"], [55, 3, 1, "", "vec_convergence"], [55, 3, 1, "", "vec_weight"], [55, 3, 1, "", "weight"], [55, 2, 1, "", "xpu"], [55, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.pose_cost.PoseCostConfig": [[55, 3, 1, "", "classify"], [55, 3, 1, "", "cost_type"], [55, 3, 1, "", "distance_threshold"], [55, 3, 1, "", "dof"], [55, 3, 1, "", "hinge_value"], [55, 3, 1, "", "max_value"], [55, 3, 1, "", "offset_tstep_fraction"], [55, 3, 1, "", "offset_waypoint"], [55, 3, 1, "", "project_distance"], [55, 3, 1, "", "return_loss"], [55, 3, 1, "", "run_vec_weight"], [55, 3, 1, "", "run_weight"], [55, 3, 1, "", "tensor_args"], [55, 3, 1, "", "terminal"], [55, 3, 1, "", "threshold_value"], [55, 2, 1, "", "update_vec_weight"], [55, 3, 1, "", "use_metric"], [55, 3, 1, "", "use_projected_distance"], [55, 3, 1, "", "vec_convergence"], [55, 3, 1, "", "vec_weight"], [55, 3, 1, "", "weight"]], "curobo.rollout.cost.pose_cost.PoseCostMetric": [[55, 2, 1, "", "clone"], [55, 2, 1, "", "create_grasp_approach_metric"], [55, 3, 1, "", "hold_partial_pose"], [55, 3, 1, "", "hold_vec_weight"], [55, 3, 1, "", "offset_position"], [55, 3, 1, "", "offset_rotation"], [55, 3, 1, "", "offset_tstep_fraction"], [55, 3, 1, "", "reach_full_pose"], [55, 3, 1, "", "reach_partial_pose"], [55, 3, 1, "", "reach_vec_weight"], [55, 3, 1, "", "release_partial_pose"], [55, 3, 1, "", "remove_offset_waypoint"], [55, 2, 1, "", "reset_metric"]], "curobo.rollout.cost.pose_cost.PoseErrorType": [[55, 3, 1, "", "BATCH_GOAL"], [55, 3, 1, "", "BATCH_GOALSET"], [55, 3, 1, "", "GOALSET"], [55, 3, 1, "", "SINGLE_GOAL"]], "curobo.rollout.cost.primitive_collision_cost": [[56, 1, 1, "", "PrimitiveCollisionCost"], [56, 1, 1, "", "PrimitiveCollisionCostConfig"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost": [[56, 3, 1, "", "T_destination"], [56, 2, 1, "", "_apply"], [56, 3, 1, "", "_backward_hooks"], [56, 3, 1, "", "_backward_pre_hooks"], [56, 3, 1, "", "_buffers"], [56, 2, 1, "", "_call_impl"], [56, 3, 1, "", "_compiled_call_impl"], [56, 3, 1, "", "_forward_hooks"], [56, 3, 1, "", "_forward_hooks_always_called"], [56, 3, 1, "", "_forward_hooks_with_kwargs"], [56, 3, 1, "", "_forward_pre_hooks"], [56, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [56, 2, 1, "", "_get_backward_hooks"], [56, 2, 1, "", "_get_backward_pre_hooks"], [56, 2, 1, "", "_get_name"], [56, 2, 1, "", "_init_post_config"], [56, 3, 1, "", "_is_full_backward_hook"], [56, 2, 1, "", "_load_from_state_dict"], [56, 3, 1, "", "_load_state_dict_post_hooks"], [56, 3, 1, "", "_load_state_dict_pre_hooks"], [56, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [56, 3, 1, "", "_modules"], [56, 2, 1, "", "_named_members"], [56, 3, 1, "", "_non_persistent_buffers_set"], [56, 3, 1, "", "_parameters"], [56, 2, 1, "", "_register_load_state_dict_pre_hook"], [56, 2, 1, "", "_register_state_dict_hook"], [56, 2, 1, "", "_replicate_for_data_parallel"], [56, 2, 1, "", "_save_to_state_dict"], [56, 2, 1, "", "_slow_forward"], [56, 3, 1, "", "_state_dict_hooks"], [56, 3, 1, "", "_state_dict_pre_hooks"], [56, 3, 1, "", "_version"], [56, 2, 1, "", "_wrapped_call_impl"], [56, 3, 1, "", "activation_distance"], [56, 2, 1, "", "add_module"], [56, 2, 1, "", "apply"], [56, 2, 1, "", "bfloat16"], [56, 2, 1, "", "buffers"], [56, 3, 1, "", "call_super_init"], [56, 2, 1, "", "children"], [56, 3, 1, "", "classify"], [56, 2, 1, "", "compile"], [56, 2, 1, "", "cpu"], [56, 2, 1, "", "cuda"], [56, 2, 1, "", "disable_cost"], [56, 2, 1, "", "discrete_fn"], [56, 3, 1, "", "distance_threshold"], [56, 3, 1, "", "dof"], [56, 2, 1, "", "double"], [56, 3, 1, "", "dump_patches"], [56, 2, 1, "", "enable_cost"], [56, 4, 1, "", "enabled"], [56, 2, 1, "", "eval"], [56, 2, 1, "", "extra_repr"], [56, 2, 1, "", "float"], [56, 2, 1, "", "forward"], [56, 2, 1, "", "get_buffer"], [56, 2, 1, "", "get_extra_state"], [56, 2, 1, "", "get_gradient_buffer"], [56, 2, 1, "", "get_parameter"], [56, 2, 1, "", "get_submodule"], [56, 2, 1, "", "half"], [56, 3, 1, "", "hinge_value"], [56, 2, 1, "", "ipu"], [56, 2, 1, "", "load_state_dict"], [56, 3, 1, "", "max_value"], [56, 2, 1, "", "modules"], [56, 2, 1, "", "named_buffers"], [56, 2, 1, "", "named_children"], [56, 2, 1, "", "named_modules"], [56, 2, 1, "", "named_parameters"], [56, 2, 1, "", "parameters"], [56, 2, 1, "", "register_backward_hook"], [56, 2, 1, "", "register_buffer"], [56, 2, 1, "", "register_forward_hook"], [56, 2, 1, "", "register_forward_pre_hook"], [56, 2, 1, "", "register_full_backward_hook"], [56, 2, 1, "", "register_full_backward_pre_hook"], [56, 2, 1, "", "register_load_state_dict_post_hook"], [56, 2, 1, "", "register_module"], [56, 2, 1, "", "register_parameter"], [56, 2, 1, "", "register_state_dict_pre_hook"], [56, 2, 1, "", "requires_grad_"], [56, 3, 1, "", "return_loss"], [56, 3, 1, "", "run_weight"], [56, 2, 1, "", "set_extra_state"], [56, 2, 1, "", "share_memory"], [56, 3, 1, "", "speed_dt"], [56, 2, 1, "", "state_dict"], [56, 3, 1, "", "sum_collisions"], [56, 3, 1, "", "sum_distance"], [56, 2, 1, "", "sweep_fn"], [56, 2, 1, "", "sweep_kernel_fn"], [56, 3, 1, "", "sweep_steps"], [56, 3, 1, "", "tensor_args"], [56, 3, 1, "", "terminal"], [56, 3, 1, "", "threshold_value"], [56, 2, 1, "", "to"], [56, 2, 1, "", "to_empty"], [56, 2, 1, "", "train"], [56, 3, 1, "", "training"], [56, 2, 1, "", "type"], [56, 2, 1, "", "update_dt"], [56, 2, 1, "", "update_vec_weight"], [56, 2, 1, "", "update_weight"], [56, 3, 1, "", "use_speed_metric"], [56, 3, 1, "", "use_sweep"], [56, 3, 1, "", "use_sweep_kernel"], [56, 3, 1, "", "vec_convergence"], [56, 3, 1, "", "vec_weight"], [56, 3, 1, "", "weight"], [56, 3, 1, "", "world_coll_checker"], [56, 2, 1, "", "xpu"], [56, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig": [[56, 3, 1, "", "activation_distance"], [56, 3, 1, "", "classify"], [56, 3, 1, "", "distance_threshold"], [56, 3, 1, "", "dof"], [56, 3, 1, "", "hinge_value"], [56, 3, 1, "", "max_value"], [56, 3, 1, "", "return_loss"], [56, 3, 1, "", "run_weight"], [56, 3, 1, "", "speed_dt"], [56, 3, 1, "", "sum_collisions"], [56, 3, 1, "", "sum_distance"], [56, 3, 1, "", "sweep_steps"], [56, 3, 1, "", "tensor_args"], [56, 3, 1, "", "terminal"], [56, 3, 1, "", "threshold_value"], [56, 2, 1, "", "update_vec_weight"], [56, 3, 1, "", "use_speed_metric"], [56, 3, 1, "", "use_sweep"], [56, 3, 1, "", "use_sweep_kernel"], [56, 3, 1, "", "vec_convergence"], [56, 3, 1, "", "vec_weight"], [56, 3, 1, "", "weight"], [56, 3, 1, "", "world_coll_checker"]], "curobo.rollout.cost.projected_dist_cost": [[57, 1, 1, "", "ProjType"], [57, 1, 1, "", "ProjectedDistCost"], [57, 1, 1, "", "ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost.ProjType": [[57, 3, 1, "", "IDENTITY"], [57, 3, 1, "", "PSEUDO_INVERSE"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost": [[57, 3, 1, "", "T_destination"], [57, 2, 1, "", "_apply"], [57, 3, 1, "", "_backward_hooks"], [57, 3, 1, "", "_backward_pre_hooks"], [57, 3, 1, "", "_buffers"], [57, 2, 1, "", "_call_impl"], [57, 3, 1, "", "_compiled_call_impl"], [57, 3, 1, "", "_forward_hooks"], [57, 3, 1, "", "_forward_hooks_always_called"], [57, 3, 1, "", "_forward_hooks_with_kwargs"], [57, 3, 1, "", "_forward_pre_hooks"], [57, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [57, 2, 1, "", "_get_backward_hooks"], [57, 2, 1, "", "_get_backward_pre_hooks"], [57, 2, 1, "", "_get_name"], [57, 2, 1, "", "_init_post_config"], [57, 3, 1, "", "_is_full_backward_hook"], [57, 2, 1, "", "_load_from_state_dict"], [57, 3, 1, "", "_load_state_dict_post_hooks"], [57, 3, 1, "", "_load_state_dict_pre_hooks"], [57, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [57, 3, 1, "", "_modules"], [57, 2, 1, "", "_named_members"], [57, 3, 1, "", "_non_persistent_buffers_set"], [57, 3, 1, "", "_parameters"], [57, 2, 1, "", "_register_load_state_dict_pre_hook"], [57, 2, 1, "", "_register_state_dict_hook"], [57, 2, 1, "", "_replicate_for_data_parallel"], [57, 2, 1, "", "_save_to_state_dict"], [57, 2, 1, "", "_slow_forward"], [57, 3, 1, "", "_state_dict_hooks"], [57, 3, 1, "", "_state_dict_pre_hooks"], [57, 3, 1, "", "_version"], [57, 2, 1, "", "_wrapped_call_impl"], [57, 2, 1, "", "add_module"], [57, 2, 1, "", "apply"], [57, 2, 1, "", "bfloat16"], [57, 2, 1, "", "buffers"], [57, 3, 1, "", "call_super_init"], [57, 2, 1, "", "children"], [57, 3, 1, "", "classify"], [57, 2, 1, "", "compile"], [57, 2, 1, "", "cpu"], [57, 2, 1, "", "cuda"], [57, 2, 1, "", "disable_cost"], [57, 3, 1, "", "dist_type"], [57, 3, 1, "", "distance_threshold"], [57, 3, 1, "", "dof"], [57, 2, 1, "", "double"], [57, 3, 1, "", "dump_patches"], [57, 2, 1, "", "enable_cost"], [57, 4, 1, "", "enabled"], [57, 3, 1, "", "eps"], [57, 2, 1, "", "eval"], [57, 2, 1, "", "extra_repr"], [57, 2, 1, "", "float"], [57, 2, 1, "", "forward"], [57, 2, 1, "", "forward_target"], [57, 2, 1, "", "forward_target_idx"], [57, 2, 1, "", "get_buffer"], [57, 2, 1, "", "get_extra_state"], [57, 2, 1, "", "get_parameter"], [57, 2, 1, "", "get_pinv_null_disp"], [57, 2, 1, "", "get_submodule"], [57, 2, 1, "", "half"], [57, 3, 1, "", "hinge_value"], [57, 2, 1, "", "ipu"], [57, 2, 1, "", "load_state_dict"], [57, 3, 1, "", "max_value"], [57, 2, 1, "", "modules"], [57, 2, 1, "", "named_buffers"], [57, 2, 1, "", "named_children"], [57, 2, 1, "", "named_modules"], [57, 2, 1, "", "named_parameters"], [57, 2, 1, "", "parameters"], [57, 3, 1, "", "proj_type"], [57, 2, 1, "", "register_backward_hook"], [57, 2, 1, "", "register_buffer"], [57, 2, 1, "", "register_forward_hook"], [57, 2, 1, "", "register_forward_pre_hook"], [57, 2, 1, "", "register_full_backward_hook"], [57, 2, 1, "", "register_full_backward_pre_hook"], [57, 2, 1, "", "register_load_state_dict_post_hook"], [57, 2, 1, "", "register_module"], [57, 2, 1, "", "register_parameter"], [57, 2, 1, "", "register_state_dict_pre_hook"], [57, 2, 1, "", "requires_grad_"], [57, 3, 1, "", "return_loss"], [57, 3, 1, "", "run_weight"], [57, 2, 1, "", "set_extra_state"], [57, 2, 1, "", "share_memory"], [57, 2, 1, "", "state_dict"], [57, 3, 1, "", "tensor_args"], [57, 3, 1, "", "terminal"], [57, 3, 1, "", "threshold_value"], [57, 2, 1, "", "to"], [57, 2, 1, "", "to_empty"], [57, 2, 1, "", "train"], [57, 3, 1, "", "training"], [57, 2, 1, "", "type"], [57, 2, 1, "", "update_batch_size"], [57, 2, 1, "", "update_dt"], [57, 2, 1, "", "update_vec_weight"], [57, 2, 1, "", "update_weight"], [57, 3, 1, "", "use_null_space"], [57, 3, 1, "", "vec_convergence"], [57, 3, 1, "", "vec_weight"], [57, 3, 1, "", "weight"], [57, 2, 1, "", "xpu"], [57, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig": [[57, 3, 1, "", "classify"], [57, 3, 1, "", "dist_type"], [57, 3, 1, "", "distance_threshold"], [57, 3, 1, "", "dof"], [57, 3, 1, "", "eps"], [57, 3, 1, "", "hinge_value"], [57, 3, 1, "", "max_value"], [57, 3, 1, "", "proj_type"], [57, 3, 1, "", "return_loss"], [57, 3, 1, "", "run_weight"], [57, 3, 1, "", "tensor_args"], [57, 3, 1, "", "terminal"], [57, 3, 1, "", "threshold_value"], [57, 2, 1, "", "update_vec_weight"], [57, 3, 1, "", "use_null_space"], [57, 3, 1, "", "vec_convergence"], [57, 3, 1, "", "vec_weight"], [57, 3, 1, "", "weight"]], "curobo.rollout.cost.self_collision_cost": [[58, 1, 1, "", "SelfCollisionCost"], [58, 1, 1, "", "SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCost": [[58, 3, 1, "", "T_destination"], [58, 2, 1, "", "_apply"], [58, 3, 1, "", "_backward_hooks"], [58, 3, 1, "", "_backward_pre_hooks"], [58, 3, 1, "", "_buffers"], [58, 2, 1, "", "_call_impl"], [58, 3, 1, "", "_compiled_call_impl"], [58, 3, 1, "", "_forward_hooks"], [58, 3, 1, "", "_forward_hooks_always_called"], [58, 3, 1, "", "_forward_hooks_with_kwargs"], [58, 3, 1, "", "_forward_pre_hooks"], [58, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [58, 2, 1, "", "_get_backward_hooks"], [58, 2, 1, "", "_get_backward_pre_hooks"], [58, 2, 1, "", "_get_name"], [58, 2, 1, "", "_init_post_config"], [58, 3, 1, "", "_is_full_backward_hook"], [58, 2, 1, "", "_load_from_state_dict"], [58, 3, 1, "", "_load_state_dict_post_hooks"], [58, 3, 1, "", "_load_state_dict_pre_hooks"], [58, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [58, 3, 1, "", "_modules"], [58, 2, 1, "", "_named_members"], [58, 3, 1, "", "_non_persistent_buffers_set"], [58, 3, 1, "", "_parameters"], [58, 2, 1, "", "_register_load_state_dict_pre_hook"], [58, 2, 1, "", "_register_state_dict_hook"], [58, 2, 1, "", "_replicate_for_data_parallel"], [58, 2, 1, "", "_save_to_state_dict"], [58, 2, 1, "", "_slow_forward"], [58, 3, 1, "", "_state_dict_hooks"], [58, 3, 1, "", "_state_dict_pre_hooks"], [58, 3, 1, "", "_version"], [58, 2, 1, "", "_wrapped_call_impl"], [58, 2, 1, "", "add_module"], [58, 2, 1, "", "apply"], [58, 2, 1, "", "bfloat16"], [58, 2, 1, "", "buffers"], [58, 3, 1, "", "call_super_init"], [58, 2, 1, "", "children"], [58, 3, 1, "", "classify"], [58, 2, 1, "", "compile"], [58, 2, 1, "", "cpu"], [58, 2, 1, "", "cuda"], [58, 2, 1, "", "disable_cost"], [58, 3, 1, "", "distance_threshold"], [58, 3, 1, "", "dof"], [58, 2, 1, "", "double"], [58, 3, 1, "", "dump_patches"], [58, 2, 1, "", "enable_cost"], [58, 4, 1, "", "enabled"], [58, 2, 1, "", "eval"], [58, 2, 1, "", "extra_repr"], [58, 2, 1, "", "float"], [58, 2, 1, "", "forward"], [58, 2, 1, "", "get_buffer"], [58, 2, 1, "", "get_extra_state"], [58, 2, 1, "", "get_parameter"], [58, 2, 1, "", "get_submodule"], [58, 2, 1, "", "half"], [58, 3, 1, "", "hinge_value"], [58, 2, 1, "", "ipu"], [58, 2, 1, "", "load_state_dict"], [58, 3, 1, "", "max_value"], [58, 2, 1, "", "modules"], [58, 2, 1, "", "named_buffers"], [58, 2, 1, "", "named_children"], [58, 2, 1, "", "named_modules"], [58, 2, 1, "", "named_parameters"], [58, 2, 1, "", "parameters"], [58, 2, 1, "", "register_backward_hook"], [58, 2, 1, "", "register_buffer"], [58, 2, 1, "", "register_forward_hook"], [58, 2, 1, "", "register_forward_pre_hook"], [58, 2, 1, "", "register_full_backward_hook"], [58, 2, 1, "", "register_full_backward_pre_hook"], [58, 2, 1, "", "register_load_state_dict_post_hook"], [58, 2, 1, "", "register_module"], [58, 2, 1, "", "register_parameter"], [58, 2, 1, "", "register_state_dict_pre_hook"], [58, 2, 1, "", "requires_grad_"], [58, 3, 1, "", "return_loss"], [58, 3, 1, "", "run_weight"], [58, 3, 1, "", "self_collision_kin_config"], [58, 2, 1, "", "set_extra_state"], [58, 2, 1, "", "share_memory"], [58, 2, 1, "", "state_dict"], [58, 3, 1, "", "tensor_args"], [58, 3, 1, "", "terminal"], [58, 3, 1, "", "threshold_value"], [58, 2, 1, "", "to"], [58, 2, 1, "", "to_empty"], [58, 2, 1, "", "train"], [58, 3, 1, "", "training"], [58, 2, 1, "", "type"], [58, 2, 1, "", "update_batch_size"], [58, 2, 1, "", "update_dt"], [58, 2, 1, "", "update_vec_weight"], [58, 2, 1, "", "update_weight"], [58, 3, 1, "", "vec_convergence"], [58, 3, 1, "", "vec_weight"], [58, 3, 1, "", "weight"], [58, 2, 1, "", "xpu"], [58, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig": [[58, 3, 1, "", "classify"], [58, 3, 1, "", "distance_threshold"], [58, 3, 1, "", "dof"], [58, 3, 1, "", "hinge_value"], [58, 3, 1, "", "max_value"], [58, 3, 1, "", "return_loss"], [58, 3, 1, "", "run_weight"], [58, 3, 1, "", "self_collision_kin_config"], [58, 3, 1, "", "tensor_args"], [58, 3, 1, "", "terminal"], [58, 3, 1, "", "threshold_value"], [58, 2, 1, "", "update_vec_weight"], [58, 3, 1, "", "vec_convergence"], [58, 3, 1, "", "vec_weight"], [58, 3, 1, "", "weight"]], "curobo.rollout.cost.stop_cost": [[59, 1, 1, "", "StopCost"], [59, 1, 1, "", "StopCostConfig"]], "curobo.rollout.cost.stop_cost.StopCost": [[59, 3, 1, "", "T_destination"], [59, 2, 1, "", "_apply"], [59, 3, 1, "", "_backward_hooks"], [59, 3, 1, "", "_backward_pre_hooks"], [59, 3, 1, "", "_buffers"], [59, 2, 1, "", "_call_impl"], [59, 3, 1, "", "_compiled_call_impl"], [59, 3, 1, "", "_forward_hooks"], [59, 3, 1, "", "_forward_hooks_always_called"], [59, 3, 1, "", "_forward_hooks_with_kwargs"], [59, 3, 1, "", "_forward_pre_hooks"], [59, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [59, 2, 1, "", "_get_backward_hooks"], [59, 2, 1, "", "_get_backward_pre_hooks"], [59, 2, 1, "", "_get_name"], [59, 2, 1, "", "_init_post_config"], [59, 3, 1, "", "_is_full_backward_hook"], [59, 2, 1, "", "_load_from_state_dict"], [59, 3, 1, "", "_load_state_dict_post_hooks"], [59, 3, 1, "", "_load_state_dict_pre_hooks"], [59, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [59, 3, 1, "", "_modules"], [59, 2, 1, "", "_named_members"], [59, 3, 1, "", "_non_persistent_buffers_set"], [59, 3, 1, "", "_parameters"], [59, 2, 1, "", "_register_load_state_dict_pre_hook"], [59, 2, 1, "", "_register_state_dict_hook"], [59, 2, 1, "", "_replicate_for_data_parallel"], [59, 2, 1, "", "_save_to_state_dict"], [59, 2, 1, "", "_slow_forward"], [59, 3, 1, "", "_state_dict_hooks"], [59, 3, 1, "", "_state_dict_pre_hooks"], [59, 3, 1, "", "_version"], [59, 2, 1, "", "_wrapped_call_impl"], [59, 2, 1, "", "add_module"], [59, 2, 1, "", "apply"], [59, 2, 1, "", "bfloat16"], [59, 2, 1, "", "buffers"], [59, 3, 1, "", "call_super_init"], [59, 2, 1, "", "children"], [59, 3, 1, "", "classify"], [59, 2, 1, "", "compile"], [59, 2, 1, "", "cpu"], [59, 2, 1, "", "cuda"], [59, 2, 1, "", "disable_cost"], [59, 3, 1, "", "distance_threshold"], [59, 3, 1, "", "dof"], [59, 2, 1, "", "double"], [59, 3, 1, "", "dt_traj_params"], [59, 3, 1, "", "dump_patches"], [59, 2, 1, "", "enable_cost"], [59, 4, 1, "", "enabled"], [59, 2, 1, "", "eval"], [59, 2, 1, "", "extra_repr"], [59, 2, 1, "", "float"], [59, 2, 1, "", "forward"], [59, 2, 1, "", "get_buffer"], [59, 2, 1, "", "get_extra_state"], [59, 2, 1, "", "get_parameter"], [59, 2, 1, "", "get_submodule"], [59, 2, 1, "", "half"], [59, 3, 1, "", "hinge_value"], [59, 3, 1, "", "horizon"], [59, 2, 1, "", "ipu"], [59, 2, 1, "", "load_state_dict"], [59, 3, 1, "", "max_limit"], [59, 3, 1, "", "max_nlimit"], [59, 3, 1, "", "max_value"], [59, 2, 1, "", "modules"], [59, 2, 1, "", "named_buffers"], [59, 2, 1, "", "named_children"], [59, 2, 1, "", "named_modules"], [59, 2, 1, "", "named_parameters"], [59, 2, 1, "", "parameters"], [59, 2, 1, "", "register_backward_hook"], [59, 2, 1, "", "register_buffer"], [59, 2, 1, "", "register_forward_hook"], [59, 2, 1, "", "register_forward_pre_hook"], [59, 2, 1, "", "register_full_backward_hook"], [59, 2, 1, "", "register_full_backward_pre_hook"], [59, 2, 1, "", "register_load_state_dict_post_hook"], [59, 2, 1, "", "register_module"], [59, 2, 1, "", "register_parameter"], [59, 2, 1, "", "register_state_dict_pre_hook"], [59, 2, 1, "", "requires_grad_"], [59, 3, 1, "", "return_loss"], [59, 3, 1, "", "run_weight"], [59, 2, 1, "", "set_extra_state"], [59, 2, 1, "", "share_memory"], [59, 2, 1, "", "state_dict"], [59, 3, 1, "", "tensor_args"], [59, 3, 1, "", "terminal"], [59, 3, 1, "", "threshold_value"], [59, 2, 1, "", "to"], [59, 2, 1, "", "to_empty"], [59, 2, 1, "", "train"], [59, 3, 1, "", "training"], [59, 2, 1, "", "type"], [59, 2, 1, "", "update_dt"], [59, 2, 1, "", "update_vec_weight"], [59, 2, 1, "", "update_weight"], [59, 3, 1, "", "vec_convergence"], [59, 3, 1, "", "vec_weight"], [59, 3, 1, "", "weight"], [59, 2, 1, "", "xpu"], [59, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.stop_cost.StopCostConfig": [[59, 3, 1, "", "classify"], [59, 3, 1, "", "distance_threshold"], [59, 3, 1, "", "dof"], [59, 3, 1, "", "dt_traj_params"], [59, 3, 1, "", "hinge_value"], [59, 3, 1, "", "horizon"], [59, 3, 1, "", "max_limit"], [59, 3, 1, "", "max_nlimit"], [59, 3, 1, "", "max_value"], [59, 3, 1, "", "return_loss"], [59, 3, 1, "", "run_weight"], [59, 3, 1, "", "tensor_args"], [59, 3, 1, "", "terminal"], [59, 3, 1, "", "threshold_value"], [59, 2, 1, "", "update_vec_weight"], [59, 3, 1, "", "vec_convergence"], [59, 3, 1, "", "vec_weight"], [59, 3, 1, "", "weight"]], "curobo.rollout.cost.straight_line_cost": [[60, 1, 1, "", "StraightLineCost"]], "curobo.rollout.cost.straight_line_cost.StraightLineCost": [[60, 3, 1, "", "T_destination"], [60, 2, 1, "", "_apply"], [60, 3, 1, "", "_backward_hooks"], [60, 3, 1, "", "_backward_pre_hooks"], [60, 3, 1, "", "_buffers"], [60, 2, 1, "", "_call_impl"], [60, 3, 1, "", "_compiled_call_impl"], [60, 3, 1, "", "_forward_hooks"], [60, 3, 1, "", "_forward_hooks_always_called"], [60, 3, 1, "", "_forward_hooks_with_kwargs"], [60, 3, 1, "", "_forward_pre_hooks"], [60, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [60, 2, 1, "", "_get_backward_hooks"], [60, 2, 1, "", "_get_backward_pre_hooks"], [60, 2, 1, "", "_get_name"], [60, 2, 1, "", "_init_post_config"], [60, 3, 1, "", "_is_full_backward_hook"], [60, 2, 1, "", "_load_from_state_dict"], [60, 3, 1, "", "_load_state_dict_post_hooks"], [60, 3, 1, "", "_load_state_dict_pre_hooks"], [60, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [60, 3, 1, "", "_modules"], [60, 2, 1, "", "_named_members"], [60, 3, 1, "", "_non_persistent_buffers_set"], [60, 3, 1, "", "_parameters"], [60, 2, 1, "", "_register_load_state_dict_pre_hook"], [60, 2, 1, "", "_register_state_dict_hook"], [60, 2, 1, "", "_replicate_for_data_parallel"], [60, 2, 1, "", "_save_to_state_dict"], [60, 2, 1, "", "_slow_forward"], [60, 3, 1, "", "_state_dict_hooks"], [60, 3, 1, "", "_state_dict_pre_hooks"], [60, 3, 1, "", "_version"], [60, 2, 1, "", "_wrapped_call_impl"], [60, 2, 1, "", "add_module"], [60, 2, 1, "", "apply"], [60, 2, 1, "", "bfloat16"], [60, 2, 1, "", "buffers"], [60, 3, 1, "", "call_super_init"], [60, 2, 1, "", "children"], [60, 3, 1, "", "classify"], [60, 2, 1, "", "compile"], [60, 2, 1, "", "cpu"], [60, 2, 1, "", "cuda"], [60, 2, 1, "", "disable_cost"], [60, 3, 1, "", "distance_threshold"], [60, 3, 1, "", "dof"], [60, 2, 1, "", "double"], [60, 3, 1, "", "dump_patches"], [60, 2, 1, "", "enable_cost"], [60, 4, 1, "", "enabled"], [60, 2, 1, "", "eval"], [60, 2, 1, "", "extra_repr"], [60, 2, 1, "", "float"], [60, 2, 1, "", "forward"], [60, 2, 1, "", "get_buffer"], [60, 2, 1, "", "get_extra_state"], [60, 2, 1, "", "get_parameter"], [60, 2, 1, "", "get_submodule"], [60, 2, 1, "", "half"], [60, 3, 1, "", "hinge_value"], [60, 2, 1, "", "ipu"], [60, 2, 1, "", "load_state_dict"], [60, 3, 1, "", "max_value"], [60, 2, 1, "", "modules"], [60, 2, 1, "", "named_buffers"], [60, 2, 1, "", "named_children"], [60, 2, 1, "", "named_modules"], [60, 2, 1, "", "named_parameters"], [60, 2, 1, "", "parameters"], [60, 2, 1, "", "register_backward_hook"], [60, 2, 1, "", "register_buffer"], [60, 2, 1, "", "register_forward_hook"], [60, 2, 1, "", "register_forward_pre_hook"], [60, 2, 1, "", "register_full_backward_hook"], [60, 2, 1, "", "register_full_backward_pre_hook"], [60, 2, 1, "", "register_load_state_dict_post_hook"], [60, 2, 1, "", "register_module"], [60, 2, 1, "", "register_parameter"], [60, 2, 1, "", "register_state_dict_pre_hook"], [60, 2, 1, "", "requires_grad_"], [60, 3, 1, "", "return_loss"], [60, 3, 1, "", "run_weight"], [60, 2, 1, "", "set_extra_state"], [60, 2, 1, "", "share_memory"], [60, 2, 1, "", "state_dict"], [60, 3, 1, "", "tensor_args"], [60, 3, 1, "", "terminal"], [60, 3, 1, "", "threshold_value"], [60, 2, 1, "", "to"], [60, 2, 1, "", "to_empty"], [60, 2, 1, "", "train"], [60, 3, 1, "", "training"], [60, 2, 1, "", "type"], [60, 2, 1, "", "update_dt"], [60, 2, 1, "", "update_vec_weight"], [60, 2, 1, "", "update_weight"], [60, 3, 1, "", "vec_convergence"], [60, 3, 1, "", "vec_weight"], [60, 3, 1, "", "weight"], [60, 2, 1, "", "xpu"], [60, 2, 1, "", "zero_grad"]], "curobo.rollout.cost.zero_cost": [[61, 1, 1, "", "RunSquaredSum"], [61, 1, 1, "", "SquaredSum"], [61, 1, 1, "", "ZeroCost"]], "curobo.rollout.cost.zero_cost.RunSquaredSum": [[61, 3, 1, "", "_backward_cls"], [61, 2, 1, "", "_get_compiled_autograd_symints"], [61, 2, 1, "", "_is_compiled_autograd_tracing"], [61, 3, 1, "", "_materialize_non_diff_grads"], [61, 3, 1, "", "_raw_saved_tensors"], [61, 2, 1, "", "_register_hook"], [61, 2, 1, "", "_register_hook_dict"], [61, 2, 1, "", "_sequence_nr"], [61, 2, 1, "", "apply"], [61, 2, 1, "", "backward"], [61, 3, 1, "", "dirty_tensors"], [61, 2, 1, "", "forward"], [61, 3, 1, "", "generate_vmap_rule"], [61, 3, 1, "", "is_traceable"], [61, 2, 1, "", "jvp"], [61, 2, 1, "", "mark_dirty"], [61, 2, 1, "", "mark_non_differentiable"], [61, 2, 1, "", "mark_shared_storage"], [61, 3, 1, "", "materialize_grads"], [61, 2, 1, "", "maybe_clear_saved_tensors"], [61, 3, 1, "", "metadata"], [61, 2, 1, "", "name"], [61, 3, 1, "", "needs_input_grad"], [61, 3, 1, "", "next_functions"], [61, 3, 1, "", "non_differentiable"], [61, 2, 1, "", "register_hook"], [61, 2, 1, "", "register_prehook"], [61, 3, 1, "", "requires_grad"], [61, 2, 1, "", "save_for_backward"], [61, 2, 1, "", "save_for_forward"], [61, 3, 1, "", "saved_for_forward"], [61, 3, 1, "", "saved_tensors"], [61, 3, 1, "", "saved_variables"], [61, 2, 1, "", "set_materialize_grads"], [61, 2, 1, "", "setup_context"], [61, 3, 1, "", "to_save"], [61, 2, 1, "", "vjp"], [61, 2, 1, "", "vmap"]], "curobo.rollout.cost.zero_cost.SquaredSum": [[61, 3, 1, "", "_backward_cls"], [61, 2, 1, "", "_get_compiled_autograd_symints"], [61, 2, 1, "", "_is_compiled_autograd_tracing"], [61, 3, 1, "", "_materialize_non_diff_grads"], [61, 3, 1, "", "_raw_saved_tensors"], [61, 2, 1, "", "_register_hook"], [61, 2, 1, "", "_register_hook_dict"], [61, 2, 1, "", "_sequence_nr"], [61, 2, 1, "", "apply"], [61, 2, 1, "", "backward"], [61, 3, 1, "", "dirty_tensors"], [61, 2, 1, "", "forward"], [61, 3, 1, "", "generate_vmap_rule"], [61, 3, 1, "", "is_traceable"], [61, 2, 1, "", "jvp"], [61, 2, 1, "", "mark_dirty"], [61, 2, 1, "", "mark_non_differentiable"], [61, 2, 1, "", "mark_shared_storage"], [61, 3, 1, "", "materialize_grads"], [61, 2, 1, "", "maybe_clear_saved_tensors"], [61, 3, 1, "", "metadata"], [61, 2, 1, "", "name"], [61, 3, 1, "", "needs_input_grad"], [61, 3, 1, "", "next_functions"], [61, 3, 1, "", "non_differentiable"], [61, 2, 1, "", "register_hook"], [61, 2, 1, "", "register_prehook"], [61, 3, 1, "", "requires_grad"], [61, 2, 1, "", "save_for_backward"], [61, 2, 1, "", "save_for_forward"], [61, 3, 1, "", "saved_for_forward"], [61, 3, 1, "", "saved_tensors"], [61, 3, 1, "", "saved_variables"], [61, 2, 1, "", "set_materialize_grads"], [61, 2, 1, "", "setup_context"], [61, 3, 1, "", "to_save"], [61, 2, 1, "", "vjp"], [61, 2, 1, "", "vmap"]], "curobo.rollout.cost.zero_cost.ZeroCost": [[61, 3, 1, "", "T_destination"], [61, 2, 1, "", "_apply"], [61, 3, 1, "", "_backward_hooks"], [61, 3, 1, "", "_backward_pre_hooks"], [61, 3, 1, "", "_buffers"], [61, 2, 1, "", "_call_impl"], [61, 3, 1, "", "_compiled_call_impl"], [61, 3, 1, "", "_forward_hooks"], [61, 3, 1, "", "_forward_hooks_always_called"], [61, 3, 1, "", "_forward_hooks_with_kwargs"], [61, 3, 1, "", "_forward_pre_hooks"], [61, 3, 1, "", "_forward_pre_hooks_with_kwargs"], [61, 2, 1, "", "_get_backward_hooks"], [61, 2, 1, "", "_get_backward_pre_hooks"], [61, 2, 1, "", "_get_name"], [61, 2, 1, "", "_init_post_config"], [61, 3, 1, "", "_is_full_backward_hook"], [61, 2, 1, "", "_load_from_state_dict"], [61, 3, 1, "", "_load_state_dict_post_hooks"], [61, 3, 1, "", "_load_state_dict_pre_hooks"], [61, 2, 1, "", "_maybe_warn_non_full_backward_hook"], [61, 3, 1, "", "_modules"], [61, 2, 1, "", "_named_members"], [61, 3, 1, "", "_non_persistent_buffers_set"], [61, 3, 1, "", "_parameters"], [61, 2, 1, "", "_register_load_state_dict_pre_hook"], [61, 2, 1, "", "_register_state_dict_hook"], [61, 2, 1, "", "_replicate_for_data_parallel"], [61, 2, 1, "", "_save_to_state_dict"], [61, 2, 1, "", "_slow_forward"], [61, 3, 1, "", "_state_dict_hooks"], [61, 3, 1, "", "_state_dict_pre_hooks"], [61, 3, 1, "", "_version"], [61, 2, 1, "", "_wrapped_call_impl"], [61, 2, 1, "", "add_module"], [61, 2, 1, "", "apply"], [61, 2, 1, "", "bfloat16"], [61, 2, 1, "", "buffers"], [61, 3, 1, "", "call_super_init"], [61, 2, 1, "", "children"], [61, 3, 1, "", "classify"], [61, 2, 1, "", "compile"], [61, 2, 1, "", "cpu"], [61, 2, 1, "", "cuda"], [61, 2, 1, "", "disable_cost"], [61, 3, 1, "", "distance_threshold"], [61, 3, 1, "", "dof"], [61, 2, 1, "", "double"], [61, 3, 1, "", "dump_patches"], [61, 2, 1, "", "enable_cost"], [61, 4, 1, "", "enabled"], [61, 2, 1, "", "eval"], [61, 2, 1, "", "extra_repr"], [61, 2, 1, "", "float"], [61, 2, 1, "", "forward"], [61, 2, 1, "", "get_buffer"], [61, 2, 1, "", "get_extra_state"], [61, 2, 1, "", "get_parameter"], [61, 2, 1, "", "get_submodule"], [61, 2, 1, "", "half"], [61, 3, 1, "", "hinge_value"], [61, 2, 1, "", "ipu"], [61, 2, 1, "", "load_state_dict"], [61, 3, 1, "", "max_value"], [61, 2, 1, "", "modules"], [61, 2, 1, "", "named_buffers"], [61, 2, 1, "", "named_children"], [61, 2, 1, "", "named_modules"], [61, 2, 1, "", "named_parameters"], [61, 2, 1, "", "parameters"], [61, 2, 1, "", "register_backward_hook"], [61, 2, 1, "", "register_buffer"], [61, 2, 1, "", "register_forward_hook"], [61, 2, 1, "", "register_forward_pre_hook"], [61, 2, 1, "", "register_full_backward_hook"], [61, 2, 1, "", "register_full_backward_pre_hook"], [61, 2, 1, "", "register_load_state_dict_post_hook"], [61, 2, 1, "", "register_module"], [61, 2, 1, "", "register_parameter"], [61, 2, 1, "", "register_state_dict_pre_hook"], [61, 2, 1, "", "requires_grad_"], [61, 3, 1, "", "return_loss"], [61, 3, 1, "", "run_weight"], [61, 2, 1, "", "set_extra_state"], [61, 2, 1, "", "share_memory"], [61, 2, 1, "", "state_dict"], [61, 3, 1, "", "tensor_args"], [61, 3, 1, "", "terminal"], [61, 3, 1, "", "threshold_value"], [61, 2, 1, "", "to"], [61, 2, 1, "", "to_empty"], [61, 2, 1, "", "train"], [61, 3, 1, "", "training"], [61, 2, 1, "", "type"], [61, 2, 1, "", "update_dt"], [61, 2, 1, "", "update_vec_weight"], [61, 2, 1, "", "update_weight"], [61, 3, 1, "", "vec_convergence"], [61, 3, 1, "", "vec_weight"], [61, 3, 1, "", "weight"], [61, 2, 1, "", "xpu"], [61, 2, 1, "", "zero_grad"]], "curobo.rollout.dynamics_model": [[63, 0, 0, "-", "integration_utils"], [64, 0, 0, "-", "kinematic_model"], [65, 0, 0, "-", "model_base"], [66, 0, 0, "-", "tensor_step"]], "curobo.rollout.dynamics_model.integration_utils": [[63, 1, 1, "", "AccelerationTensorStepIdxKernel"], [63, 1, 1, "", "AccelerationTensorStepKernel"], [63, 1, 1, "", "CliqueTensorStep"], [63, 1, 1, "", "CliqueTensorStepCentralDifferenceKernel"], [63, 1, 1, "", "CliqueTensorStepCoalesceKernel"], [63, 1, 1, "", "CliqueTensorStepIdxCentralDifferenceKernel"], [63, 1, 1, "", "CliqueTensorStepIdxKernel"], [63, 1, 1, "", "CliqueTensorStepKernel"], [63, 5, 1, "", "action_interpolate_kernel"], [63, 5, 1, "", "build_clique_matrix"], [63, 5, 1, "", "build_fd_matrix"], [63, 5, 1, "", "build_int_matrix"], [63, 5, 1, "", "build_start_state_mask"], [63, 5, 1, "", "euler_integrate"], [63, 5, 1, "", "interpolate_kernel"], [63, 5, 1, "", "step_acc_semi_euler"], [63, 5, 1, "", "sum_matrix"], [63, 5, 1, "", "tensor_linspace"], [63, 5, 1, "", "tensor_step_acc"], [63, 5, 1, "", "tensor_step_acc_semi_euler"], [63, 5, 1, "", "tensor_step_jerk"], [63, 5, 1, "", "tensor_step_pos"], [63, 5, 1, "", "tensor_step_pos_clique"], [63, 5, 1, "", "tensor_step_pos_ik"], [63, 5, 1, "", "tensor_step_vel"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel": [[63, 3, 1, "", "_backward_cls"], [63, 2, 1, "", "_get_compiled_autograd_symints"], [63, 2, 1, "", "_is_compiled_autograd_tracing"], [63, 3, 1, "", "_materialize_non_diff_grads"], [63, 3, 1, "", "_raw_saved_tensors"], [63, 2, 1, "", "_register_hook"], [63, 2, 1, "", "_register_hook_dict"], [63, 2, 1, "", "_sequence_nr"], [63, 2, 1, "", "apply"], [63, 2, 1, "", "backward"], [63, 3, 1, "", "dirty_tensors"], [63, 2, 1, "", "forward"], [63, 3, 1, "", "generate_vmap_rule"], [63, 3, 1, "", "is_traceable"], [63, 2, 1, "", "jvp"], [63, 2, 1, "", "mark_dirty"], [63, 2, 1, "", "mark_non_differentiable"], [63, 2, 1, "", "mark_shared_storage"], [63, 3, 1, "", "materialize_grads"], [63, 2, 1, "", "maybe_clear_saved_tensors"], [63, 3, 1, "", "metadata"], [63, 2, 1, "", "name"], [63, 3, 1, "", "needs_input_grad"], [63, 3, 1, "", "next_functions"], [63, 3, 1, "", "non_differentiable"], [63, 2, 1, "", "register_hook"], [63, 2, 1, "", "register_prehook"], [63, 3, 1, "", "requires_grad"], [63, 2, 1, "", "save_for_backward"], [63, 2, 1, "", "save_for_forward"], [63, 3, 1, "", "saved_for_forward"], [63, 3, 1, "", "saved_tensors"], [63, 3, 1, "", "saved_variables"], [63, 2, 1, "", "set_materialize_grads"], [63, 2, 1, "", "setup_context"], [63, 3, 1, "", "to_save"], [63, 2, 1, "", "vjp"], [63, 2, 1, "", "vmap"]], "curobo.rollout.dynamics_model.kinematic_model": [[64, 1, 1, "", "KinematicModel"], [64, 1, 1, "", "KinematicModelConfig"], [64, 1, 1, "", "KinematicModelState"], [64, 1, 1, "", "TimeTrajConfig"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModel": [[64, 4, 1, "", "action_bound_highs"], [64, 4, 1, "", "action_bound_lows"], [64, 4, 1, "", "action_horizon"], [64, 3, 1, "", "batch_size"], [64, 3, 1, "", "control_space"], [64, 4, 1, "", "cspace_distance_weight"], [64, 3, 1, "", "dt_traj_params"], [64, 3, 1, "", "filter_robot_command"], [64, 2, 1, "", "filter_robot_state"], [64, 2, 1, "", "forward"], [64, 2, 1, "", "from_dict"], [64, 2, 1, "", "get_action_from_state"], [64, 2, 1, "", "get_next_state"], [64, 2, 1, "", "get_robot_command"], [64, 2, 1, "", "get_state_bounds"], [64, 2, 1, "", "get_state_from_action"], [64, 3, 1, "", "horizon"], [64, 4, 1, "", "init_action_mean"], [64, 2, 1, "", "integrate_action"], [64, 2, 1, "", "integrate_action_step"], [64, 4, 1, "", "max_acceleration"], [64, 4, 1, "", "max_jerk"], [64, 4, 1, "", "null_space_weight"], [64, 4, 1, "", "retract_config"], [64, 3, 1, "", "return_full_act_buffer"], [64, 2, 1, "", "robot_cmd_tensor_step"], [64, 3, 1, "", "robot_config"], [64, 3, 1, "", "state_estimation_variance"], [64, 3, 1, "", "state_filter_cfg"], [64, 3, 1, "", "state_finite_difference_mode"], [64, 3, 1, "", "teleport_mode"], [64, 3, 1, "", "tensor_args"], [64, 2, 1, "", "tensor_step"], [64, 2, 1, "", "update_batch_size"], [64, 2, 1, "", "update_cmd_batch_size"], [64, 2, 1, "", "update_traj_dt"], [64, 3, 1, "", "vel_scale"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig": [[64, 3, 1, "", "batch_size"], [64, 3, 1, "", "control_space"], [64, 3, 1, "", "dt_traj_params"], [64, 3, 1, "", "filter_robot_command"], [64, 2, 1, "", "from_dict"], [64, 3, 1, "", "horizon"], [64, 3, 1, "", "return_full_act_buffer"], [64, 3, 1, "", "robot_config"], [64, 3, 1, "", "state_estimation_variance"], [64, 3, 1, "", "state_filter_cfg"], [64, 3, 1, "", "state_finite_difference_mode"], [64, 3, 1, "", "teleport_mode"], [64, 3, 1, "", "tensor_args"], [64, 3, 1, "", "vel_scale"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState": [[64, 3, 1, "", "_abc_impl"], [64, 3, 1, "", "_is_protocol"], [64, 3, 1, "", "ang_jac_seq"], [64, 2, 1, "", "count"], [64, 3, 1, "", "ee_pos_seq"], [64, 4, 1, "", "ee_pose"], [64, 3, 1, "", "ee_quat_seq"], [64, 2, 1, "", "index"], [64, 3, 1, "", "lin_jac_seq"], [64, 3, 1, "", "link_names"], [64, 3, 1, "", "link_pos_seq"], [64, 4, 1, "", "link_pose"], [64, 3, 1, "", "link_quat_seq"], [64, 3, 1, "", "robot_spheres"], [64, 3, 1, "", "state_seq"]], "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig": [[64, 3, 1, "", "base_dt"], [64, 3, 1, "", "base_ratio"], [64, 2, 1, "", "get_dt_array"], [64, 3, 1, "", "max_dt"], [64, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.model_base": [[65, 1, 1, "", "DynamicsModelBase"]], "curobo.rollout.dynamics_model.model_base.DynamicsModelBase": [[65, 3, 1, "", "_abc_impl"], [65, 2, 1, "", "filter_robot_state"], [65, 2, 1, "", "forward"], [65, 2, 1, "", "get_next_state"], [65, 2, 1, "", "get_robot_command"]], "curobo.rollout.dynamics_model.tensor_step": [[66, 1, 1, "", "TensorStepAcceleration"], [66, 1, 1, "", "TensorStepAccelerationKernel"], [66, 1, 1, "", "TensorStepBase"], [66, 1, 1, "", "TensorStepPosition"], [66, 1, 1, "", "TensorStepPositionClique"], [66, 1, 1, "", "TensorStepPositionCliqueKernel"], [66, 1, 1, "", "TensorStepPositionTeleport"], [66, 1, 1, "", "TensorStepType"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepBase": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel": [[66, 2, 1, "", "filter_signal"], [66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport": [[66, 2, 1, "", "forward"], [66, 2, 1, "", "update_batch_size"], [66, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepType": [[66, 3, 1, "", "ACCELERATION"], [66, 3, 1, "", "ACCELERATION_KERNEL"], [66, 3, 1, "", "JERK"], [66, 3, 1, "", "POSITION"], [66, 3, 1, "", "POSITION_CLIQUE"], [66, 3, 1, "", "POSITION_CLIQUE_KERNEL"], [66, 3, 1, "", "POSITION_TELEPORT"], [66, 3, 1, "", "VELOCITY"]], "curobo.rollout.rollout_base": [[67, 1, 1, "", "Goal"], [67, 1, 1, "", "RolloutBase"], [67, 1, 1, "", "RolloutConfig"], [67, 1, 1, "", "RolloutMetrics"], [67, 1, 1, "", "Trajectory"]], "curobo.rollout.rollout_base.Goal": [[67, 3, 1, "", "_abc_impl"], [67, 2, 1, "", "_copy_buffer"], [67, 2, 1, "", "_copy_tensor"], [67, 3, 1, "", "_is_protocol"], [67, 2, 1, "", "_tensor_repeat_seeds"], [67, 2, 1, "", "_update_batch_size"], [67, 2, 1, "", "apply_kernel"], [67, 3, 1, "", "batch"], [67, 3, 1, "", "batch_current_state_idx"], [67, 3, 1, "", "batch_enable_idx"], [67, 3, 1, "", "batch_goal_state_idx"], [67, 3, 1, "", "batch_pose_idx"], [67, 3, 1, "", "batch_retract_state_idx"], [67, 3, 1, "", "batch_world_idx"], [67, 2, 1, "", "clone"], [67, 2, 1, "", "copy_"], [67, 2, 1, "", "count"], [67, 2, 1, "", "create_idx"], [67, 2, 1, "", "create_index_buffers"], [67, 3, 1, "", "current_state"], [67, 2, 1, "", "get_batch_goal_state"], [67, 3, 1, "", "goal_pose"], [67, 3, 1, "", "goal_state"], [67, 2, 1, "", "index"], [67, 3, 1, "", "links_goal_pose"], [67, 3, 1, "", "n_goalset"], [67, 3, 1, "", "name"], [67, 2, 1, "", "repeat_seeds"], [67, 3, 1, "", "retract_state"], [67, 2, 1, "", "to"], [67, 3, 1, "", "update_batch_idx_buffers"]], "curobo.rollout.rollout_base.RolloutBase": [[67, 2, 1, "", "_init_after_config_load"], [67, 4, 1, "", "action_bound_highs"], [67, 4, 1, "", "action_bound_lows"], [67, 4, 1, "", "action_bounds"], [67, 4, 1, "", "action_horizon"], [67, 2, 1, "", "constraint_fn"], [67, 2, 1, "", "convergence_fn"], [67, 2, 1, "", "cost_fn"], [67, 4, 1, "", "cspace_config"], [67, 2, 1, "", "current_cost"], [67, 4, 1, "", "d_action"], [67, 4, 1, "", "dt"], [67, 2, 1, "", "filter_robot_state"], [67, 2, 1, "", "get_action_from_state"], [67, 2, 1, "", "get_full_dof_from_solution"], [67, 2, 1, "", "get_init_action_seq"], [67, 2, 1, "", "get_metrics"], [67, 2, 1, "", "get_metrics_cuda_graph"], [67, 2, 1, "", "get_robot_command"], [67, 2, 1, "", "get_state_from_action"], [67, 4, 1, "", "horizon"], [67, 2, 1, "", "reset"], [67, 2, 1, "", "reset_cuda_graph"], [67, 2, 1, "", "reset_seed"], [67, 2, 1, "", "reset_shape"], [67, 2, 1, "", "rollout_constraint"], [67, 2, 1, "", "rollout_fn"], [67, 2, 1, "", "sample_random_actions"], [67, 4, 1, "", "state_bounds"], [67, 2, 1, "", "update_params"], [67, 2, 1, "", "update_start_state"]], "curobo.rollout.rollout_base.RolloutConfig": [[67, 3, 1, "", "sampler_seed"], [67, 3, 1, "", "sum_horizon"], [67, 3, 1, "", "tensor_args"]], "curobo.rollout.rollout_base.RolloutMetrics": [[67, 3, 1, "", "_abc_impl"], [67, 3, 1, "", "_is_protocol"], [67, 2, 1, "", "clone"], [67, 3, 1, "", "constraint"], [67, 3, 1, "", "cost"], [67, 2, 1, "", "count"], [67, 3, 1, "", "feasible"], [67, 2, 1, "", "index"], [67, 3, 1, "", "state"]], "curobo.rollout.rollout_base.Trajectory": [[67, 3, 1, "", "actions"], [67, 3, 1, "", "costs"], [67, 3, 1, "", "debug"], [67, 3, 1, "", "state"]], "curobo.types": [[69, 0, 0, "-", "base"], [70, 0, 0, "-", "camera"], [71, 0, 0, "-", "enum"], [72, 0, 0, "-", "math"], [73, 0, 0, "-", "robot"], [74, 0, 0, "-", "state"], [75, 0, 0, "-", "tensor"]], "curobo.types.base": [[69, 1, 1, "", "TensorDeviceType"]], "curobo.types.base.TensorDeviceType": [[69, 2, 1, "", "as_torch_dict"], [69, 3, 1, "", "collision_distance_dtype"], [69, 3, 1, "", "collision_geometry_dtype"], [69, 3, 1, "", "collision_gradient_dtype"], [69, 2, 1, "", "cpu"], [69, 3, 1, "", "device"], [69, 3, 1, "", "dtype"], [69, 2, 1, "", "from_basic"], [69, 2, 1, "", "to_device"], [69, 2, 1, "", "to_int8_device"]], "curobo.types.camera": [[70, 1, 1, "", "CameraObservation"]], "curobo.types.camera.CameraObservation": [[70, 2, 1, "", "clone"], [70, 2, 1, "", "copy_"], [70, 3, 1, "", "depth_image"], [70, 2, 1, "", "filter_depth"], [70, 2, 1, "", "get_image_from_pointcloud"], [70, 2, 1, "", "get_pointcloud"], [70, 3, 1, "", "image_segmentation"], [70, 3, 1, "", "intrinsics"], [70, 3, 1, "", "name"], [70, 3, 1, "", "pose"], [70, 3, 1, "", "projection_matrix"], [70, 3, 1, "", "projection_rays"], [70, 3, 1, "", "resolution"], [70, 3, 1, "", "rgb_image"], [70, 4, 1, "", "shape"], [70, 2, 1, "", "stack"], [70, 3, 1, "", "timestamp"], [70, 2, 1, "", "to"], [70, 2, 1, "", "update_projection_rays"]], "curobo.types.enum": [[71, 1, 1, "", "StateType"]], "curobo.types.enum.StateType": [[71, 3, 1, "", "ACCELERATION"], [71, 3, 1, "", "JERK"], [71, 3, 1, "", "POSITION"], [71, 3, 1, "", "VELOCITY"]], "curobo.types.math": [[72, 1, 1, "", "OrientationError"], [72, 1, 1, "", "Pose"], [72, 5, 1, "", "quat_multiply"]], "curobo.types.math.OrientationError": [[72, 3, 1, "", "_backward_cls"], [72, 2, 1, "", "_get_compiled_autograd_symints"], [72, 2, 1, "", "_is_compiled_autograd_tracing"], [72, 3, 1, "", "_materialize_non_diff_grads"], [72, 3, 1, "", "_raw_saved_tensors"], [72, 2, 1, "", "_register_hook"], [72, 2, 1, "", "_register_hook_dict"], [72, 2, 1, "", "_sequence_nr"], [72, 2, 1, "", "apply"], [72, 2, 1, "", "backward"], [72, 3, 1, "", "dirty_tensors"], [72, 2, 1, "", "forward"], [72, 3, 1, "", "generate_vmap_rule"], [72, 2, 1, "", "geodesic_distance"], [72, 3, 1, "", "is_traceable"], [72, 2, 1, "", "jvp"], [72, 2, 1, "", "mark_dirty"], [72, 2, 1, "", "mark_non_differentiable"], [72, 2, 1, "", "mark_shared_storage"], [72, 3, 1, "", "materialize_grads"], [72, 2, 1, "", "maybe_clear_saved_tensors"], [72, 3, 1, "", "metadata"], [72, 2, 1, "", "name"], [72, 3, 1, "", "needs_input_grad"], [72, 3, 1, "", "next_functions"], [72, 3, 1, "", "non_differentiable"], [72, 2, 1, "", "register_hook"], [72, 2, 1, "", "register_prehook"], [72, 3, 1, "", "requires_grad"], [72, 2, 1, "", "save_for_backward"], [72, 2, 1, "", "save_for_forward"], [72, 3, 1, "", "saved_for_forward"], [72, 3, 1, "", "saved_tensors"], [72, 3, 1, "", "saved_variables"], [72, 2, 1, "", "set_materialize_grads"], [72, 2, 1, "", "setup_context"], [72, 3, 1, "", "to_save"], [72, 2, 1, "", "vjp"], [72, 2, 1, "", "vmap"]], "curobo.types.math.Pose": [[72, 3, 1, "", "_abc_impl"], [72, 3, 1, "", "_is_protocol"], [72, 2, 1, "", "angular_distance"], [72, 2, 1, "", "apply_kernel"], [72, 3, 1, "", "batch"], [72, 2, 1, "", "batch_transform_points"], [72, 2, 1, "", "cat"], [72, 2, 1, "", "clone"], [72, 2, 1, "", "compute_local_pose"], [72, 2, 1, "", "compute_offset_pose"], [72, 2, 1, "", "contiguous"], [72, 2, 1, "", "copy_"], [72, 2, 1, "", "count"], [72, 2, 1, "", "distance"], [72, 2, 1, "", "from_batch_list"], [72, 2, 1, "", "from_list"], [72, 2, 1, "", "from_matrix"], [72, 2, 1, "", "get_index"], [72, 2, 1, "", "get_matrix"], [72, 2, 1, "", "get_numpy_matrix"], [72, 2, 1, "", "get_pose_vector"], [72, 2, 1, "", "get_rotation"], [72, 2, 1, "", "index"], [72, 2, 1, "", "inverse"], [72, 2, 1, "", "linear_distance"], [72, 2, 1, "", "multiply"], [72, 3, 1, "", "n_goalset"], [72, 3, 1, "", "name"], [72, 3, 1, "", "normalize_rotation"], [72, 3, 1, "", "position"], [72, 3, 1, "", "quaternion"], [72, 2, 1, "", "repeat"], [72, 2, 1, "", "repeat_seeds"], [72, 3, 1, "", "rotation"], [72, 4, 1, "", "shape"], [72, 2, 1, "", "stack"], [72, 2, 1, "", "to"], [72, 2, 1, "", "to_list"], [72, 2, 1, "", "tolist"], [72, 2, 1, "", "transform_point"], [72, 2, 1, "", "transform_points"], [72, 2, 1, "", "unsqueeze"]], "curobo.types.robot": [[73, 1, 1, "", "NNConfig"], [73, 1, 1, "", "RobotConfig"]], "curobo.types.robot.NNConfig": [[73, 3, 1, "", "ik_seeder"]], "curobo.types.robot.RobotConfig": [[73, 4, 1, "", "cspace"], [73, 2, 1, "", "from_basic"], [73, 2, 1, "", "from_dict"], [73, 3, 1, "", "kinematics"], [73, 3, 1, "", "tensor_args"], [73, 2, 1, "", "write_config"]], "curobo.types.state": [[74, 1, 1, "", "FilterCoeff"], [74, 1, 1, "", "JointState"], [74, 1, 1, "", "State"], [74, 5, 1, "", "fn_get_index"]], "curobo.types.state.FilterCoeff": [[74, 3, 1, "", "acceleration"], [74, 3, 1, "", "jerk"], [74, 3, 1, "", "position"], [74, 3, 1, "", "velocity"]], "curobo.types.state.JointState": [[74, 3, 1, "", "_abc_impl"], [74, 3, 1, "", "_is_protocol"], [74, 2, 1, "", "_same_shape"], [74, 3, 1, "", "acceleration"], [74, 2, 1, "", "append_joints"], [74, 2, 1, "", "apply_kernel"], [74, 2, 1, "", "blend"], [74, 2, 1, "", "calculate_fd_from_position"], [74, 2, 1, "", "clone"], [74, 2, 1, "", "copy_"], [74, 2, 1, "", "copy_at_index"], [74, 2, 1, "", "copy_data"], [74, 2, 1, "", "count"], [74, 2, 1, "", "detach"], [74, 2, 1, "", "from_list"], [74, 2, 1, "", "from_numpy"], [74, 2, 1, "", "from_position"], [74, 2, 1, "", "from_state_tensor"], [74, 2, 1, "", "get_augmented_joint_state"], [74, 2, 1, "", "get_ordered_joint_state"], [74, 2, 1, "", "get_state_tensor"], [74, 2, 1, "", "index"], [74, 2, 1, "", "index_dof"], [74, 2, 1, "", "inplace_reindex"], [74, 3, 1, "", "jerk"], [74, 3, 1, "", "joint_names"], [74, 3, 1, "", "position"], [74, 2, 1, "", "repeat_seeds"], [74, 2, 1, "", "scale"], [74, 2, 1, "", "scale_by_dt"], [74, 4, 1, "", "shape"], [74, 2, 1, "", "squeeze"], [74, 2, 1, "", "stack"], [74, 3, 1, "", "tensor_args"], [74, 2, 1, "", "to"], [74, 2, 1, "", "trim_trajectory"], [74, 2, 1, "", "unsqueeze"], [74, 3, 1, "", "velocity"], [74, 2, 1, "", "zeros"]], "curobo.types.state.State": [[74, 3, 1, "", "_abc_impl"], [74, 3, 1, "", "_is_protocol"], [74, 2, 1, "", "apply_kernel"], [74, 2, 1, "", "blend"], [74, 2, 1, "", "clone"], [74, 2, 1, "", "count"], [74, 2, 1, "", "get_state_tensor"], [74, 2, 1, "", "index"], [74, 2, 1, "", "to"]], "curobo.types.tensor": [[75, 3, 1, "", "T_BDOF"], [75, 3, 1, "", "T_BHDOF_float"], [75, 3, 1, "", "T_BHValue_float"], [75, 3, 1, "", "T_BPosition"], [75, 3, 1, "", "T_BQuaternion"], [75, 3, 1, "", "T_BRotation"], [75, 3, 1, "", "T_BValue_bool"], [75, 3, 1, "", "T_BValue_float"], [75, 3, 1, "", "T_BValue_int"], [75, 3, 1, "", "T_DOF"], [75, 3, 1, "", "T_HDOF_float"]], "curobo.util": [[77, 0, 0, "-", "error_metrics"], [78, 0, 0, "-", "helpers"], [79, 0, 0, "-", "logger"], [80, 0, 0, "-", "metrics"], [81, 0, 0, "-", "sample_lib"], [82, 0, 0, "-", "state_filter"], [83, 0, 0, "-", "tensor_util"], [84, 0, 0, "-", "torch_utils"], [85, 0, 0, "-", "trajectory"], [86, 0, 0, "-", "usd_helper"], [87, 0, 0, "-", "warp"], [88, 0, 0, "-", "warp_interpolation"]], "curobo.util.error_metrics": [[77, 5, 1, "", "rotation_error_matrix"], [77, 5, 1, "", "rotation_error_quaternion"]], "curobo.util.helpers": [[78, 5, 1, "", "default_to_regular"], [78, 5, 1, "", "list_idx_if_not_none"]], "curobo.util.logger": [[79, 5, 1, "", "log_error"], [79, 5, 1, "", "log_info"], [79, 5, 1, "", "log_warn"], [79, 5, 1, "", "setup_curobo_logger"], [79, 5, 1, "", "setup_logger"]], "curobo.util.metrics": [[80, 1, 1, "", "CuroboGroupMetrics"], [80, 1, 1, "", "CuroboMetrics"]], "curobo.util.metrics.CuroboGroupMetrics": [[80, 3, 1, "", "attempts"], [80, 3, 1, "", "cspace_path_length"], [80, 3, 1, "", "eef_orientation_path_length"], [80, 3, 1, "", "eef_position_path_length"], [80, 3, 1, "", "env_collision_rate"], [80, 2, 1, "", "from_list"], [80, 3, 1, "", "group_size"], [80, 3, 1, "", "jerk"], [80, 3, 1, "", "joint_violation_rate"], [80, 3, 1, "", "motion_time"], [80, 3, 1, "", "orientation_error"], [80, 3, 1, "", "perception_interpolated_success"], [80, 3, 1, "", "perception_success"], [80, 3, 1, "", "perception_time"], [80, 3, 1, "", "physical_violation_rate"], [80, 3, 1, "", "position_error"], [80, 2, 1, "", "print_summary"], [80, 3, 1, "", "self_collision_rate"], [80, 3, 1, "", "skips"], [80, 3, 1, "", "solve_time"], [80, 3, 1, "", "solve_time_per_step"], [80, 3, 1, "", "success"], [80, 3, 1, "", "time"], [80, 3, 1, "", "within_fifteen_deg_rate"], [80, 3, 1, "", "within_five_cm_rate"], [80, 3, 1, "", "within_one_cm_rate"], [80, 3, 1, "", "within_thirty_deg_rate"]], "curobo.util.metrics.CuroboMetrics": [[80, 3, 1, "", "attempts"], [80, 3, 1, "", "collision"], [80, 3, 1, "", "cspace_path_length"], [80, 3, 1, "", "eef_orientation_path_length"], [80, 3, 1, "", "eef_position_path_length"], [80, 3, 1, "", "jerk"], [80, 3, 1, "", "joint_limit_violation"], [80, 3, 1, "", "motion_time"], [80, 3, 1, "", "orientation_error"], [80, 3, 1, "", "perception_interpolated_success"], [80, 3, 1, "", "perception_success"], [80, 3, 1, "", "perception_time"], [80, 3, 1, "", "physical_violation"], [80, 3, 1, "", "position_error"], [80, 3, 1, "", "self_collision"], [80, 3, 1, "", "skip"], [80, 3, 1, "", "solve_time"], [80, 3, 1, "", "success"], [80, 3, 1, "", "time"], [80, 3, 1, "", "trajectory_length"]], "curobo.util.sample_lib": [[81, 1, 1, "", "BaseSampleLib"], [81, 1, 1, "", "HaltonGenerator"], [81, 1, 1, "", "HaltonSampleLib"], [81, 1, 1, "", "KnotSampleLib"], [81, 1, 1, "", "RandomSampleLib"], [81, 1, 1, "", "SampleConfig"], [81, 1, 1, "", "SampleLib"], [81, 1, 1, "", "SineSampleLib"], [81, 1, 1, "", "StompSampleLib"], [81, 5, 1, "", "bspline"], [81, 5, 1, "", "generate_gaussian_halton_samples"], [81, 5, 1, "", "generate_gaussian_sobol_samples"], [81, 5, 1, "", "generate_halton_samples"], [81, 5, 1, "", "generate_noise"], [81, 5, 1, "", "generate_noise_np"], [81, 5, 1, "", "generate_prime_numbers"], [81, 5, 1, "", "generate_van_der_corput_sample"], [81, 5, 1, "", "generate_van_der_corput_samples_batch"], [81, 5, 1, "", "get_ranged_halton_samples"]], "curobo.util.sample_lib.BaseSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.HaltonGenerator": [[81, 2, 1, "", "_get_samples"], [81, 2, 1, "", "fast_forward"], [81, 2, 1, "", "get_gaussian_samples"], [81, 2, 1, "", "get_samples"], [81, 2, 1, "", "reset"]], "curobo.util.sample_lib.HaltonSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.KnotSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.RandomSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.SampleConfig": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 3, 1, "", "fixed_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.SampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.SineSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "generate_sine_wave"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.sample_lib.StompSampleLib": [[81, 3, 1, "", "cov_mode"], [81, 3, 1, "", "covariance_matrix"], [81, 3, 1, "", "d_action"], [81, 3, 1, "", "degree"], [81, 3, 1, "", "filter_coeffs"], [81, 2, 1, "", "filter_samples"], [81, 2, 1, "", "filter_smooth"], [81, 3, 1, "", "fixed_samples"], [81, 2, 1, "", "get_samples"], [81, 3, 1, "", "horizon"], [81, 3, 1, "", "n_knots"], [81, 3, 1, "", "sample_method"], [81, 3, 1, "", "sample_ratio"], [81, 3, 1, "", "scale_tril"], [81, 3, 1, "", "seed"], [81, 3, 1, "", "sine_period"], [81, 3, 1, "", "tensor_args"]], "curobo.util.state_filter": [[82, 1, 1, "", "FilterConfig"], [82, 1, 1, "", "JointStateFilter"]], "curobo.util.state_filter.FilterConfig": [[82, 3, 1, "", "control_space"], [82, 3, 1, "", "dt"], [82, 3, 1, "", "enable"], [82, 3, 1, "", "filter_coeff"], [82, 2, 1, "", "from_dict"], [82, 3, 1, "", "teleport_mode"], [82, 3, 1, "", "tensor_args"]], "curobo.util.state_filter.JointStateFilter": [[82, 3, 1, "", "control_space"], [82, 3, 1, "", "dt"], [82, 3, 1, "", "enable"], [82, 3, 1, "", "filter_coeff"], [82, 2, 1, "", "filter_joint_state"], [82, 2, 1, "", "from_dict"], [82, 2, 1, "", "integrate_acc"], [82, 2, 1, "", "integrate_jerk"], [82, 2, 1, "", "integrate_pos"], [82, 2, 1, "", "integrate_vel"], [82, 2, 1, "", "reset"], [82, 3, 1, "", "teleport_mode"], [82, 3, 1, "", "tensor_args"]], "curobo.util.tensor_util": [[83, 5, 1, "", "check_tensor_shapes"], [83, 5, 1, "", "clone_if_not_none"], [83, 5, 1, "", "copy_if_not_none"], [83, 5, 1, "", "copy_tensor"], [83, 5, 1, "", "tensor_repeat_seeds"]], "curobo.util.torch_utils": [[84, 5, 1, "", "disable_torch_compile_global"], [84, 5, 1, "", "empty_decorator"], [84, 5, 1, "", "find_first_idx"], [84, 5, 1, "", "find_last_idx"], [84, 5, 1, "", "get_torch_compile_options"], [84, 5, 1, "", "get_torch_jit_decorator"], [84, 5, 1, "", "is_cuda_graph_available"], [84, 5, 1, "", "is_torch_compile_available"], [84, 5, 1, "", "set_torch_compile_global_options"]], "curobo.util.trajectory": [[85, 1, 1, "", "InterpolateType"], [85, 5, 1, "", "get_batch_interpolated_trajectory"], [85, 5, 1, "", "get_cpu_kunz_stilman_interpolation"], [85, 5, 1, "", "get_cpu_linear_interpolation"], [85, 5, 1, "", "get_interpolated_trajectory"], [85, 5, 1, "", "get_linear_traj"], [85, 5, 1, "", "get_smooth_trajectory"], [85, 5, 1, "", "get_spline_interpolated_trajectory"], [85, 5, 1, "", "linear_smooth"]], "curobo.util.trajectory.InterpolateType": [[85, 3, 1, "", "CUBIC"], [85, 3, 1, "", "KUNZ_STILMAN_OPTIMAL"], [85, 3, 1, "", "LINEAR"], [85, 3, 1, "", "LINEAR_CUDA"], [85, 3, 1, "", "QUINTIC"]], "curobo.util.usd_helper": [[86, 1, 1, "", "UsdHelper"], [86, 5, 1, "", "create_stage"], [86, 5, 1, "", "get_capsule_attrs"], [86, 5, 1, "", "get_cube_attrs"], [86, 5, 1, "", "get_cylinder_attrs"], [86, 5, 1, "", "get_mesh_attrs"], [86, 5, 1, "", "get_position_quat"], [86, 5, 1, "", "get_prim_world_pose"], [86, 5, 1, "", "get_sphere_attrs"], [86, 5, 1, "", "get_transform"], [86, 5, 1, "", "set_cylinder_attrs"], [86, 5, 1, "", "set_geom_cube_attrs"], [86, 5, 1, "", "set_geom_cylinder_attrs"], [86, 5, 1, "", "set_geom_mesh_attrs"], [86, 5, 1, "", "set_geom_sphere_attrs"], [86, 5, 1, "", "set_prim_transform"], [86, 5, 1, "", "set_prim_translate"]], "curobo.util.usd_helper.UsdHelper": [[86, 2, 1, "", "add_cuboid_to_stage"], [86, 2, 1, "", "add_cylinder_to_stage"], [86, 2, 1, "", "add_material"], [86, 2, 1, "", "add_mesh_to_stage"], [86, 2, 1, "", "add_sphere_to_stage"], [86, 2, 1, "", "add_subroot"], [86, 2, 1, "", "add_world_to_stage"], [86, 2, 1, "", "create_animation"], [86, 2, 1, "", "create_grid_usd"], [86, 2, 1, "", "create_linkpose_robot_animation"], [86, 2, 1, "", "create_obstacle_animation"], [86, 2, 1, "", "create_stage"], [86, 2, 1, "", "get_obstacle_from_prim"], [86, 2, 1, "", "get_obstacles_from_stage"], [86, 2, 1, "", "get_pose"], [86, 2, 1, "", "get_prim_from_obstacle"], [86, 2, 1, "", "get_robot_prims"], [86, 2, 1, "", "load_robot"], [86, 2, 1, "", "load_robot_usd"], [86, 2, 1, "", "load_stage"], [86, 2, 1, "", "load_stage_from_file"], [86, 2, 1, "", "save"], [86, 2, 1, "", "update_robot_joint_state"], [86, 2, 1, "", "write_motion_gen_log"], [86, 2, 1, "", "write_stage_to_file"], [86, 2, 1, "", "write_trajectory_animation"], [86, 2, 1, "", "write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[87, 5, 1, "", "init_warp"]], "curobo.util.warp_interpolation": [[88, 5, 1, "", "get_cuda_linear_interpolation"]], "curobo.util_file": [[89, 5, 1, "", "add_cpp_path"], [89, 5, 1, "", "copy_file_to_path"], [89, 5, 1, "", "file_exists"], [89, 5, 1, "", "get_assets_path"], [89, 5, 1, "", "get_configs_path"], [89, 5, 1, "", "get_content_path"], [89, 5, 1, "", "get_cpp_path"], [89, 5, 1, "", "get_debug_path"], [89, 5, 1, "", "get_filename"], [89, 5, 1, "", "get_files_from_dir"], [89, 5, 1, "", "get_module_path"], [89, 5, 1, "", "get_motion_gen_robot_list"], [89, 5, 1, "", "get_multi_arm_robot_list"], [89, 5, 1, "", "get_path_of_dir"], [89, 5, 1, "", "get_robot_configs_path"], [89, 5, 1, "", "get_robot_list"], [89, 5, 1, "", "get_robot_path"], [89, 5, 1, "", "get_root_path"], [89, 5, 1, "", "get_task_configs_path"], [89, 5, 1, "", "get_weights_path"], [89, 5, 1, "", "get_world_configs_path"], [89, 5, 1, "", "join_path"], [89, 5, 1, "", "load_yaml"], [89, 5, 1, "", "write_yaml"]], "curobo.wrap": [[91, 0, 0, "-", "model"], [95, 0, 0, "-", "reacher"], [102, 0, 0, "-", "wrap_base"], [103, 0, 0, "-", "wrap_mpc"]], "curobo.wrap.model": [[92, 0, 0, "-", "curobo_robot_world"], [93, 0, 0, "-", "robot_segmenter"], [94, 0, 0, "-", "robot_world"]], "curobo.wrap.model.curobo_robot_world": [[92, 1, 1, "", "CuroboRobotWorld"], [92, 1, 1, "", "CuroboRobotWorldConfig"]], "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld": [[92, 3, 1, "", "bound_cost"], [92, 3, 1, "", "bound_scale"], [92, 2, 1, "", "clear_world_cache"], [92, 3, 1, "", "collision_constraint"], [92, 3, 1, "", "collision_cost"], [92, 3, 1, "", "contact_distance"], [92, 2, 1, "", "get_active_js"], [92, 2, 1, "", "get_bound"], [92, 2, 1, "", "get_collision_constraint"], [92, 2, 1, "", "get_collision_distance"], [92, 2, 1, "", "get_collision_vector"], [92, 2, 1, "", "get_kinematics"], [92, 2, 1, "", "get_point_robot_distance"], [92, 2, 1, "", "get_self_collision"], [92, 2, 1, "", "get_self_collision_distance"], [92, 2, 1, "", "get_world_self_collision_distance_from_joint_trajectory"], [92, 2, 1, "", "get_world_self_collision_distance_from_joints"], [92, 3, 1, "", "kinematics"], [92, 2, 1, "", "load_from_config"], [92, 3, 1, "", "pose_cost"], [92, 2, 1, "", "pose_distance"], [92, 3, 1, "", "rejection_ratio"], [92, 2, 1, "", "sample"], [92, 2, 1, "", "sample_trajectory"], [92, 3, 1, "", "sampler"], [92, 3, 1, "", "self_collision_cost"], [92, 3, 1, "", "tensor_args"], [92, 2, 1, "", "update_world"], [92, 2, 1, "", "validate"], [92, 2, 1, "", "validate_trajectory"], [92, 3, 1, "", "world_model"]], "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig": [[92, 3, 1, "", "bound_cost"], [92, 3, 1, "", "bound_scale"], [92, 3, 1, "", "collision_constraint"], [92, 3, 1, "", "collision_cost"], [92, 3, 1, "", "contact_distance"], [92, 3, 1, "", "kinematics"], [92, 2, 1, "", "load_from_config"], [92, 3, 1, "", "pose_cost"], [92, 3, 1, "", "rejection_ratio"], [92, 3, 1, "", "sampler"], [92, 3, 1, "", "self_collision_cost"], [92, 3, 1, "", "tensor_args"], [92, 3, 1, "", "world_model"]], "curobo.wrap.model.robot_segmenter": [[93, 1, 1, "", "RobotSegmenter"]], "curobo.wrap.model.robot_segmenter.RobotSegmenter": [[93, 2, 1, "", "_call_op"], [93, 2, 1, "", "_create_cg_graph"], [93, 2, 1, "", "_mask_op"], [93, 4, 1, "", "base_link"], [93, 2, 1, "", "from_robot_file"], [93, 2, 1, "", "get_pointcloud_from_depth"], [93, 2, 1, "", "get_robot_mask"], [93, 2, 1, "", "get_robot_mask_from_active_js"], [93, 4, 1, "", "kinematics"], [93, 4, 1, "", "robot_world"], [93, 2, 1, "", "update_camera_projection"]], "curobo.wrap.model.robot_world": [[94, 1, 1, "", "RobotWorld"], [94, 1, 1, "", "RobotWorldConfig"]], "curobo.wrap.model.robot_world.RobotWorld": [[94, 3, 1, "", "bound_cost"], [94, 3, 1, "", "bound_scale"], [94, 2, 1, "", "clear_world_cache"], [94, 3, 1, "", "collision_constraint"], [94, 3, 1, "", "collision_cost"], [94, 3, 1, "", "contact_distance"], [94, 2, 1, "", "get_active_js"], [94, 2, 1, "", "get_bound"], [94, 2, 1, "", "get_collision_constraint"], [94, 2, 1, "", "get_collision_distance"], [94, 2, 1, "", "get_collision_vector"], [94, 2, 1, "", "get_kinematics"], [94, 2, 1, "", "get_point_robot_distance"], [94, 2, 1, "", "get_self_collision"], [94, 2, 1, "", "get_self_collision_distance"], [94, 2, 1, "", "get_world_self_collision_distance_from_joint_trajectory"], [94, 2, 1, "", "get_world_self_collision_distance_from_joints"], [94, 3, 1, "", "kinematics"], [94, 2, 1, "", "load_from_config"], [94, 3, 1, "", "pose_cost"], [94, 2, 1, "", "pose_distance"], [94, 3, 1, "", "rejection_ratio"], [94, 2, 1, "", "sample"], [94, 2, 1, "", "sample_trajectory"], [94, 3, 1, "", "sampler"], [94, 3, 1, "", "self_collision_cost"], [94, 3, 1, "", "tensor_args"], [94, 2, 1, "", "update_world"], [94, 2, 1, "", "validate"], [94, 2, 1, "", "validate_trajectory"], [94, 3, 1, "", "world_model"]], "curobo.wrap.model.robot_world.RobotWorldConfig": [[94, 3, 1, "", "bound_cost"], [94, 3, 1, "", "bound_scale"], [94, 3, 1, "", "collision_constraint"], [94, 3, 1, "", "collision_cost"], [94, 3, 1, "", "contact_distance"], [94, 3, 1, "", "kinematics"], [94, 2, 1, "", "load_from_config"], [94, 3, 1, "", "pose_cost"], [94, 3, 1, "", "rejection_ratio"], [94, 3, 1, "", "sampler"], [94, 3, 1, "", "self_collision_cost"], [94, 3, 1, "", "tensor_args"], [94, 3, 1, "", "world_model"]], "curobo.wrap.reacher": [[96, 0, 0, "-", "evaluator"], [97, 0, 0, "-", "ik_solver"], [98, 0, 0, "-", "motion_gen"], [99, 0, 0, "-", "mpc"], [100, 0, 0, "-", "trajopt"], [101, 0, 0, "-", "types"]], "curobo.wrap.reacher.evaluator": [[96, 1, 1, "", "TrajEvaluator"], [96, 1, 1, "", "TrajEvaluatorConfig"]], "curobo.wrap.reacher.evaluator.TrajEvaluator": [[96, 2, 1, "", "_check_smoothness"], [96, 2, 1, "", "_compute_path_length"], [96, 3, 1, "", "cost_weight"], [96, 2, 1, "", "evaluate"], [96, 2, 1, "", "evaluate_from_position"], [96, 2, 1, "", "evaluate_interpolated_smootheness"], [96, 2, 1, "", "from_basic"], [96, 3, 1, "", "max_acc"], [96, 3, 1, "", "max_dt"], [96, 3, 1, "", "max_jerk"], [96, 3, 1, "", "min_dt"]], "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig": [[96, 3, 1, "", "cost_weight"], [96, 2, 1, "", "from_basic"], [96, 3, 1, "", "max_acc"], [96, 3, 1, "", "max_dt"], [96, 3, 1, "", "max_jerk"], [96, 3, 1, "", "min_dt"]], "curobo.wrap.reacher.ik_solver": [[97, 1, 1, "", "IKResult"], [97, 1, 1, "", "IKSolver"], [97, 1, 1, "", "IKSolverConfig"]], "curobo.wrap.reacher.ik_solver.IKResult": [[97, 3, 1, "", "_abc_impl"], [97, 3, 1, "", "_is_protocol"], [97, 2, 1, "", "count"], [97, 3, 1, "", "debug_info"], [97, 3, 1, "", "error"], [97, 2, 1, "", "get_batch_unique_solution"], [97, 2, 1, "", "get_unique_solution"], [97, 3, 1, "", "goal_pose"], [97, 3, 1, "", "goalset_index"], [97, 2, 1, "", "index"], [97, 3, 1, "", "js_solution"], [97, 3, 1, "", "position_error"], [97, 3, 1, "", "rotation_error"], [97, 3, 1, "", "seed"], [97, 3, 1, "", "solution"], [97, 3, 1, "", "solve_time"], [97, 3, 1, "", "success"]], "curobo.wrap.reacher.ik_solver.IKSolver": [[97, 2, 1, "", "_get_result"], [97, 2, 1, "", "_get_success"], [97, 2, 1, "", "_solve_from_solve_state"], [97, 2, 1, "", "_update_goal_buffer"], [97, 2, 1, "", "attach_object_to_robot"], [97, 2, 1, "", "batch_env_solve"], [97, 2, 1, "", "check_constraints"], [97, 2, 1, "", "detach_object_from_robot"], [97, 2, 1, "", "fk"], [97, 2, 1, "", "generate_seed"], [97, 2, 1, "", "get_active_js"], [97, 2, 1, "", "get_all_kinematics_instances"], [97, 2, 1, "", "get_all_rollout_instances"], [97, 2, 1, "", "get_full_js"], [97, 2, 1, "", "get_retract_config"], [97, 2, 1, "", "get_seed"], [97, 3, 1, "", "ik_nn_seeder"], [97, 4, 1, "", "joint_names"], [97, 4, 1, "", "kinematics"], [97, 2, 1, "", "load_from_robot_config"], [97, 3, 1, "", "num_seeds"], [97, 3, 1, "", "position_threshold"], [97, 2, 1, "", "reset_cuda_graph"], [97, 2, 1, "", "reset_seed"], [97, 2, 1, "", "reset_shape"], [97, 3, 1, "", "robot_config"], [97, 3, 1, "", "rollout_fn"], [97, 3, 1, "", "rotation_threshold"], [97, 2, 1, "", "sample_configs"], [97, 3, 1, "", "sample_rejection_ratio"], [97, 3, 1, "", "seed"], [97, 2, 1, "", "solve"], [97, 2, 1, "", "solve_any"], [97, 2, 1, "", "solve_batch"], [97, 2, 1, "", "solve_batch_env"], [97, 2, 1, "", "solve_batch_env_goalset"], [97, 2, 1, "", "solve_batch_goalset"], [97, 2, 1, "", "solve_goalset"], [97, 2, 1, "", "solve_single"], [97, 3, 1, "", "solver"], [97, 3, 1, "", "tensor_args"], [97, 2, 1, "", "update_pose_cost_metric"], [97, 2, 1, "", "update_world"], [97, 3, 1, "", "use_cuda_graph"], [97, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.ik_solver.IKSolverConfig": [[97, 3, 1, "", "ik_nn_seeder"], [97, 2, 1, "", "load_from_robot_config"], [97, 3, 1, "", "num_seeds"], [97, 3, 1, "", "position_threshold"], [97, 3, 1, "", "robot_config"], [97, 3, 1, "", "rollout_fn"], [97, 3, 1, "", "rotation_threshold"], [97, 3, 1, "", "sample_rejection_ratio"], [97, 3, 1, "", "seed"], [97, 3, 1, "", "solver"], [97, 3, 1, "", "tensor_args"], [97, 3, 1, "", "use_cuda_graph"], [97, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen": [[98, 1, 1, "", "MotionGen"], [98, 1, 1, "", "MotionGenConfig"], [98, 1, 1, "", "MotionGenPlanConfig"], [98, 1, 1, "", "MotionGenResult"], [98, 1, 1, "", "MotionGenStatus"]], "curobo.wrap.reacher.motion_gen.MotionGen": [[98, 2, 1, "", "_get_solve_state"], [98, 2, 1, "", "_plan_attempts"], [98, 2, 1, "", "_plan_batch_attempts"], [98, 2, 1, "", "_plan_from_solve_state"], [98, 2, 1, "", "_plan_from_solve_state_batch"], [98, 2, 1, "", "_plan_js_from_solve_state"], [98, 2, 1, "", "_solve_ik_from_solve_state"], [98, 2, 1, "", "_solve_trajopt_from_solve_state"], [98, 2, 1, "", "add_camera_frame"], [98, 2, 1, "", "attach_bounding_box_from_blox_to_robot"], [98, 2, 1, "", "attach_external_objects_to_robot"], [98, 2, 1, "", "attach_new_object_to_robot"], [98, 2, 1, "", "attach_objects_to_robot"], [98, 2, 1, "", "attach_spheres_to_robot"], [98, 3, 1, "", "batch_ik_seeds"], [98, 2, 1, "", "batch_plan"], [98, 3, 1, "", "batch_trajopt_seeds"], [98, 2, 1, "", "check_constraints"], [98, 2, 1, "", "clear_world_cache"], [98, 4, 1, "", "collision_cache"], [98, 2, 1, "", "compute_kinematics"], [98, 2, 1, "", "detach_object_from_robot"], [98, 2, 1, "", "detach_spheres_from_robot"], [98, 4, 1, "", "dof"], [98, 3, 1, "", "finetune_dt_scale"], [98, 3, 1, "", "finetune_trajopt_solver"], [98, 2, 1, "", "get_active_js"], [98, 2, 1, "", "get_all_kinematics_instances"], [98, 2, 1, "", "get_all_pose_solver_rollout_instances"], [98, 2, 1, "", "get_all_rollout_instances"], [98, 2, 1, "", "get_all_solver_rollout_instances"], [98, 2, 1, "", "get_full_js"], [98, 2, 1, "", "get_retract_config"], [98, 3, 1, "", "graph_planner"], [98, 2, 1, "", "graph_search"], [98, 3, 1, "", "graph_seeds"], [98, 3, 1, "", "graph_trajopt_iters"], [98, 3, 1, "", "ik_seeds"], [98, 3, 1, "", "ik_solver"], [98, 3, 1, "", "interpolation_dt"], [98, 3, 1, "", "interpolation_steps"], [98, 3, 1, "", "interpolation_type"], [98, 3, 1, "", "js_trajopt_solver"], [98, 4, 1, "", "kinematics"], [98, 2, 1, "", "load_from_robot_config"], [98, 3, 1, "", "noisy_trajopt_seeds"], [98, 3, 1, "", "optimize_dt"], [98, 3, 1, "", "partial_ik_iters"], [98, 2, 1, "", "plan"], [98, 2, 1, "", "plan_batch"], [98, 2, 1, "", "plan_batch_env"], [98, 2, 1, "", "plan_batch_env_goalset"], [98, 2, 1, "", "plan_batch_goalset"], [98, 2, 1, "", "plan_goalset"], [98, 2, 1, "", "plan_single"], [98, 2, 1, "", "plan_single_js"], [98, 2, 1, "", "process_camera_frames"], [98, 4, 1, "", "project_pose_to_goal_frame"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "reset_seed"], [98, 3, 1, "", "robot_cfg"], [98, 2, 1, "", "solve_ik"], [98, 2, 1, "", "solve_trajopt"], [98, 3, 1, "", "store_debug_in_result"], [98, 3, 1, "", "tensor_args"], [98, 3, 1, "", "trajopt_seeds"], [98, 3, 1, "", "trajopt_solver"], [98, 2, 1, "", "update_batch_size"], [98, 2, 1, "", "update_interpolation_type"], [98, 2, 1, "", "update_locked_joints"], [98, 2, 1, "", "update_pose_cost_metric"], [98, 2, 1, "", "update_world"], [98, 3, 1, "", "use_cuda_graph"], [98, 2, 1, "", "warmup"], [98, 3, 1, "", "world_coll_checker"], [98, 4, 1, "", "world_collision"], [98, 4, 1, "", "world_model"]], "curobo.wrap.reacher.motion_gen.MotionGenConfig": [[98, 3, 1, "", "batch_ik_seeds"], [98, 3, 1, "", "batch_trajopt_seeds"], [98, 3, 1, "", "finetune_dt_scale"], [98, 3, 1, "", "finetune_trajopt_solver"], [98, 3, 1, "", "graph_planner"], [98, 3, 1, "", "graph_seeds"], [98, 3, 1, "", "graph_trajopt_iters"], [98, 3, 1, "", "ik_seeds"], [98, 3, 1, "", "ik_solver"], [98, 3, 1, "", "interpolation_dt"], [98, 3, 1, "", "interpolation_steps"], [98, 3, 1, "", "interpolation_type"], [98, 3, 1, "", "js_trajopt_solver"], [98, 2, 1, "", "load_from_robot_config"], [98, 3, 1, "", "noisy_trajopt_seeds"], [98, 3, 1, "", "optimize_dt"], [98, 3, 1, "", "partial_ik_iters"], [98, 3, 1, "", "robot_cfg"], [98, 3, 1, "", "store_debug_in_result"], [98, 3, 1, "", "tensor_args"], [98, 3, 1, "", "trajopt_seeds"], [98, 3, 1, "", "trajopt_solver"], [98, 3, 1, "", "use_cuda_graph"], [98, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig": [[98, 2, 1, "", "clone"], [98, 3, 1, "", "disable_graph_attempt"], [98, 3, 1, "", "enable_finetune_trajopt"], [98, 3, 1, "", "enable_graph"], [98, 3, 1, "", "enable_graph_attempt"], [98, 3, 1, "", "enable_opt"], [98, 3, 1, "", "fail_on_invalid_query"], [98, 3, 1, "", "finetune_attempts"], [98, 3, 1, "", "finetune_dt_decay"], [98, 3, 1, "", "finetune_dt_scale"], [98, 3, 1, "", "ik_fail_return"], [98, 3, 1, "", "max_attempts"], [98, 3, 1, "", "need_graph_success"], [98, 3, 1, "", "num_graph_seeds"], [98, 3, 1, "", "num_ik_seeds"], [98, 3, 1, "", "num_trajopt_seeds"], [98, 3, 1, "", "parallel_finetune"], [98, 3, 1, "", "partial_ik_opt"], [98, 3, 1, "", "pose_cost_metric"], [98, 3, 1, "", "success_ratio"], [98, 3, 1, "", "time_dilation_factor"], [98, 3, 1, "", "timeout"], [98, 3, 1, "", "use_nn_ik_seed"], [98, 3, 1, "", "use_start_state_as_retract"]], "curobo.wrap.reacher.motion_gen.MotionGenResult": [[98, 2, 1, "", "_check_none_and_copy_idx"], [98, 3, 1, "", "attempts"], [98, 2, 1, "", "clone"], [98, 2, 1, "", "copy_idx"], [98, 3, 1, "", "cspace_error"], [98, 3, 1, "", "debug_info"], [98, 3, 1, "", "finetune_time"], [98, 2, 1, "", "get_interpolated_plan"], [98, 2, 1, "", "get_paths"], [98, 2, 1, "", "get_successful_paths"], [98, 3, 1, "", "goalset_index"], [98, 3, 1, "", "graph_plan"], [98, 3, 1, "", "graph_time"], [98, 3, 1, "", "ik_time"], [98, 3, 1, "", "interpolated_plan"], [98, 3, 1, "", "interpolation_dt"], [98, 4, 1, "", "motion_time"], [98, 3, 1, "", "optimized_dt"], [98, 3, 1, "", "optimized_plan"], [98, 3, 1, "", "path_buffer_last_tstep"], [98, 3, 1, "", "position_error"], [98, 2, 1, "", "retime_trajectory"], [98, 3, 1, "", "rotation_error"], [98, 3, 1, "", "solve_time"], [98, 3, 1, "", "status"], [98, 3, 1, "", "success"], [98, 3, 1, "", "total_time"], [98, 3, 1, "", "trajopt_attempts"], [98, 3, 1, "", "trajopt_time"], [98, 3, 1, "", "used_graph"], [98, 3, 1, "", "valid_query"]], "curobo.wrap.reacher.motion_gen.MotionGenStatus": [[98, 3, 1, "", "FINETUNE_TRAJOPT_FAIL"], [98, 3, 1, "", "GRAPH_FAIL"], [98, 3, 1, "", "IK_FAIL"], [98, 3, 1, "", "INVALID_QUERY"], [98, 3, 1, "", "NOT_ATTEMPTED"], [98, 3, 1, "", "SUCCESS"], [98, 3, 1, "", "TRAJOPT_FAIL"]], "curobo.wrap.reacher.mpc": [[99, 1, 1, "", "MpcSolver"], [99, 1, 1, "", "MpcSolverConfig"]], "curobo.wrap.reacher.mpc.MpcSolver": [[99, 2, 1, "", "_initialize_cuda_graph_step"], [99, 2, 1, "", "_mpc_step"], [99, 2, 1, "", "_solve_from_solve_state"], [99, 2, 1, "", "_step_once"], [99, 2, 1, "", "_update_batch_size"], [99, 2, 1, "", "_update_solve_state_and_goal_buffer"], [99, 4, 1, "", "collision_cache"], [99, 2, 1, "", "enable_cspace_cost"], [99, 2, 1, "", "enable_pose_cost"], [99, 2, 1, "", "get_active_js"], [99, 2, 1, "", "get_visual_rollouts"], [99, 4, 1, "", "joint_names"], [99, 4, 1, "", "kinematics"], [99, 2, 1, "", "load_from_robot_config"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "reset_cuda_graph"], [99, 4, 1, "", "rollout_fn"], [99, 2, 1, "", "setup_solve_batch"], [99, 2, 1, "", "setup_solve_batch_env"], [99, 2, 1, "", "setup_solve_batch_env_goalset"], [99, 2, 1, "", "setup_solve_batch_goalset"], [99, 2, 1, "", "setup_solve_goalset"], [99, 2, 1, "", "setup_solve_single"], [99, 3, 1, "", "solver"], [99, 2, 1, "", "step"], [99, 3, 1, "", "tensor_args"], [99, 2, 1, "", "update_goal"], [99, 2, 1, "", "update_world"], [99, 3, 1, "", "use_cuda_graph_full_step"], [99, 3, 1, "", "world_coll_checker"], [99, 4, 1, "", "world_collision"]], "curobo.wrap.reacher.mpc.MpcSolverConfig": [[99, 2, 1, "", "load_from_robot_config"], [99, 3, 1, "", "solver"], [99, 3, 1, "", "tensor_args"], [99, 3, 1, "", "use_cuda_graph_full_step"], [99, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt": [[100, 1, 1, "", "TrajOptResult"], [100, 1, 1, "", "TrajOptSolver"], [100, 1, 1, "", "TrajOptSolverConfig"], [100, 1, 1, "", "TrajResult"], [100, 5, 1, "", "jit_trajopt_best_select"]], "curobo.wrap.reacher.trajopt.TrajOptResult": [[100, 3, 1, "", "_abc_impl"], [100, 3, 1, "", "_is_protocol"], [100, 2, 1, "", "count"], [100, 3, 1, "", "cspace_error"], [100, 3, 1, "", "debug_info"], [100, 3, 1, "", "goal"], [100, 3, 1, "", "goalset_index"], [100, 2, 1, "", "index"], [100, 3, 1, "", "interpolated_solution"], [100, 3, 1, "", "metrics"], [100, 3, 1, "", "optimized_dt"], [100, 3, 1, "", "optimized_seeds"], [100, 3, 1, "", "path_buffer_last_tstep"], [100, 3, 1, "", "position_error"], [100, 3, 1, "", "raw_action"], [100, 3, 1, "", "raw_solution"], [100, 3, 1, "", "rotation_error"], [100, 3, 1, "", "seed"], [100, 3, 1, "", "smooth_error"], [100, 3, 1, "", "smooth_label"], [100, 3, 1, "", "solution"], [100, 3, 1, "", "solve_time"], [100, 3, 1, "", "success"]], "curobo.wrap.reacher.trajopt.TrajOptSolver": [[100, 2, 1, "", "_get_result"], [100, 2, 1, "", "_get_seed_numbers"], [100, 2, 1, "", "_solve_from_solve_state"], [100, 2, 1, "", "_update_solve_state_and_goal_buffer"], [100, 4, 1, "", "action_horizon"], [100, 2, 1, "", "attach_spheres_to_robot"], [100, 2, 1, "", "batch_solve"], [100, 3, 1, "", "bias_node"], [100, 2, 1, "", "calculate_trajectory_dt"], [100, 3, 1, "", "cspace_threshold"], [100, 2, 1, "", "detach_spheres_from_robot"], [100, 4, 1, "", "dof"], [100, 3, 1, "", "evaluate_interpolated_trajectory"], [100, 2, 1, "", "fk"], [100, 2, 1, "", "get_active_js"], [100, 2, 1, "", "get_all_kinematics_instances"], [100, 2, 1, "", "get_all_rollout_instances"], [100, 2, 1, "", "get_bias_seed"], [100, 2, 1, "", "get_full_js"], [100, 2, 1, "", "get_interpolated_trajectory"], [100, 2, 1, "", "get_linear_seed"], [100, 2, 1, "", "get_seed_set"], [100, 2, 1, "", "get_seeds"], [100, 2, 1, "", "get_start_seed"], [100, 3, 1, "", "interpolate_rollout"], [100, 3, 1, "", "interpolation_dt"], [100, 3, 1, "", "interpolation_steps"], [100, 3, 1, "", "interpolation_type"], [100, 4, 1, "", "kinematics"], [100, 2, 1, "", "load_from_robot_config"], [100, 4, 1, "", "minimum_trajectory_dt"], [100, 4, 1, "", "newton_iters"], [100, 3, 1, "", "num_seeds"], [100, 3, 1, "", "optimize_dt"], [100, 3, 1, "", "position_threshold"], [100, 2, 1, "", "reset_cuda_graph"], [100, 2, 1, "", "reset_seed"], [100, 2, 1, "", "reset_shape"], [100, 4, 1, "", "retract_config"], [100, 3, 1, "", "robot_config"], [100, 3, 1, "", "rollout_fn"], [100, 3, 1, "", "rotation_threshold"], [100, 3, 1, "", "seed_ratio"], [100, 2, 1, "", "solve"], [100, 2, 1, "", "solve_any"], [100, 2, 1, "", "solve_batch"], [100, 2, 1, "", "solve_batch_env"], [100, 2, 1, "", "solve_batch_env_goalset"], [100, 2, 1, "", "solve_batch_goalset"], [100, 2, 1, "", "solve_goalset"], [100, 2, 1, "", "solve_single"], [100, 3, 1, "", "solver"], [100, 4, 1, "", "solver_dt"], [100, 4, 1, "", "solver_dt_tensor"], [100, 3, 1, "", "store_debug_in_result"], [100, 3, 1, "", "sync_cuda_time"], [100, 3, 1, "", "tensor_args"], [100, 3, 1, "", "traj_evaluator"], [100, 3, 1, "", "traj_evaluator_config"], [100, 3, 1, "", "traj_tsteps"], [100, 3, 1, "", "trim_steps"], [100, 2, 1, "", "update_pose_cost_metric"], [100, 2, 1, "", "update_solver_dt"], [100, 3, 1, "", "use_cspace_seed"], [100, 3, 1, "", "use_cuda_graph"], [100, 3, 1, "", "use_cuda_graph_metrics"], [100, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt.TrajOptSolverConfig": [[100, 3, 1, "", "bias_node"], [100, 3, 1, "", "cspace_threshold"], [100, 3, 1, "", "evaluate_interpolated_trajectory"], [100, 3, 1, "", "interpolate_rollout"], [100, 3, 1, "", "interpolation_dt"], [100, 3, 1, "", "interpolation_steps"], [100, 3, 1, "", "interpolation_type"], [100, 2, 1, "", "load_from_robot_config"], [100, 3, 1, "", "num_seeds"], [100, 3, 1, "", "optimize_dt"], [100, 3, 1, "", "position_threshold"], [100, 3, 1, "", "robot_config"], [100, 3, 1, "", "rollout_fn"], [100, 3, 1, "", "rotation_threshold"], [100, 3, 1, "", "seed_ratio"], [100, 3, 1, "", "solver"], [100, 3, 1, "", "store_debug_in_result"], [100, 3, 1, "", "sync_cuda_time"], [100, 3, 1, "", "tensor_args"], [100, 3, 1, "", "traj_evaluator"], [100, 3, 1, "", "traj_evaluator_config"], [100, 3, 1, "", "traj_tsteps"], [100, 3, 1, "", "trim_steps"], [100, 3, 1, "", "use_cspace_seed"], [100, 3, 1, "", "use_cuda_graph"], [100, 3, 1, "", "use_cuda_graph_metrics"], [100, 3, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt.TrajResult": [[100, 3, 1, "", "_abc_impl"], [100, 3, 1, "", "_is_protocol"], [100, 2, 1, "", "count"], [100, 3, 1, "", "cspace_error"], [100, 3, 1, "", "debug_info"], [100, 3, 1, "", "goal"], [100, 3, 1, "", "goalset_index"], [100, 2, 1, "", "index"], [100, 3, 1, "", "interpolated_solution"], [100, 3, 1, "", "metrics"], [100, 3, 1, "", "optimized_dt"], [100, 3, 1, "", "optimized_seeds"], [100, 3, 1, "", "path_buffer_last_tstep"], [100, 3, 1, "", "position_error"], [100, 3, 1, "", "raw_action"], [100, 3, 1, "", "raw_solution"], [100, 3, 1, "", "rotation_error"], [100, 3, 1, "", "seed"], [100, 3, 1, "", "smooth_error"], [100, 3, 1, "", "smooth_label"], [100, 3, 1, "", "solution"], [100, 3, 1, "", "solve_time"], [100, 3, 1, "", "success"]], "curobo.wrap.reacher.types": [[101, 1, 1, "", "MotionGenSolverState"], [101, 1, 1, "", "ReacherSolveState"], [101, 1, 1, "", "ReacherSolveType"], [101, 5, 1, "", "get_padded_goalset"]], "curobo.wrap.reacher.types.MotionGenSolverState": [[101, 3, 1, "", "ik_solve_state"], [101, 3, 1, "", "solve_type"], [101, 3, 1, "", "trajopt_solve_state"]], "curobo.wrap.reacher.types.ReacherSolveState": [[101, 3, 1, "", "batch_env"], [101, 3, 1, "", "batch_mode"], [101, 3, 1, "", "batch_retract"], [101, 3, 1, "", "batch_size"], [101, 2, 1, "", "clone"], [101, 2, 1, "", "create_goal_buffer"], [101, 2, 1, "", "get_batch_size"], [101, 2, 1, "", "get_ik_batch_size"], [101, 3, 1, "", "n_envs"], [101, 3, 1, "", "n_goalset"], [101, 3, 1, "", "num_graph_seeds"], [101, 3, 1, "", "num_ik_seeds"], [101, 3, 1, "", "num_mpc_seeds"], [101, 3, 1, "", "num_seeds"], [101, 3, 1, "", "num_trajopt_seeds"], [101, 3, 1, "", "solve_type"], [101, 2, 1, "", "update_goal"], [101, 2, 1, "", "update_goal_buffer"]], "curobo.wrap.reacher.types.ReacherSolveType": [[101, 3, 1, "", "BATCH"], [101, 3, 1, "", "BATCH_ENV"], [101, 3, 1, "", "BATCH_ENV_GOALSET"], [101, 3, 1, "", "BATCH_GOALSET"], [101, 3, 1, "", "GOALSET"], [101, 3, 1, "", "SINGLE"]], "curobo.wrap.wrap_base": [[102, 1, 1, "", "WrapBase"], [102, 1, 1, "", "WrapConfig"], [102, 1, 1, "", "WrapResult"]], "curobo.wrap.wrap_base.WrapBase": [[102, 2, 1, "", "_get_rollout_instances_from_optimizers"], [102, 3, 1, "", "compute_metrics"], [102, 2, 1, "", "get_all_rollout_instances"], [102, 2, 1, "", "get_debug_cost"], [102, 2, 1, "", "get_debug_data"], [102, 2, 1, "", "get_init_act"], [102, 2, 1, "", "get_metrics"], [102, 4, 1, "", "joint_names"], [102, 4, 1, "", "newton_optimizer"], [102, 2, 1, "", "optimize"], [102, 3, 1, "", "optimizers"], [102, 4, 1, "", "particle_optimizer"], [102, 2, 1, "", "reset"], [102, 2, 1, "", "reset_cuda_graph"], [102, 2, 1, "", "reset_seed"], [102, 2, 1, "", "reset_shape"], [102, 4, 1, "", "rollout_fn"], [102, 3, 1, "", "safety_rollout"], [102, 2, 1, "", "solve"], [102, 3, 1, "", "sync_cuda_time"], [102, 4, 1, "", "tensor_args"], [102, 2, 1, "", "update_nproblems"], [102, 2, 1, "", "update_params"], [102, 3, 1, "", "use_cuda_graph_metrics"]], "curobo.wrap.wrap_base.WrapConfig": [[102, 3, 1, "", "compute_metrics"], [102, 3, 1, "", "optimizers"], [102, 3, 1, "", "safety_rollout"], [102, 3, 1, "", "sync_cuda_time"], [102, 3, 1, "", "use_cuda_graph_metrics"]], "curobo.wrap.wrap_base.WrapResult": [[102, 3, 1, "", "action"], [102, 2, 1, "", "clone"], [102, 3, 1, "", "debug"], [102, 3, 1, "", "js_action"], [102, 3, 1, "", "metrics"], [102, 3, 1, "", "raw_action"], [102, 3, 1, "", "solve_time"]], "curobo.wrap.wrap_mpc": [[103, 1, 1, "", "WrapMpc"]], "curobo.wrap.wrap_mpc.WrapMpc": [[103, 2, 1, "", "_get_rollout_instances_from_optimizers"], [103, 2, 1, "", "_shift"], [103, 3, 1, "", "compute_metrics"], [103, 2, 1, "", "get_all_rollout_instances"], [103, 2, 1, "", "get_debug_cost"], [103, 2, 1, "", "get_debug_data"], [103, 2, 1, "", "get_init_act"], [103, 2, 1, "", "get_metrics"], [103, 2, 1, "", "get_rollouts"], [103, 4, 1, "", "joint_names"], [103, 4, 1, "", "newton_optimizer"], [103, 2, 1, "", "optimize"], [103, 3, 1, "", "optimizers"], [103, 4, 1, "", "particle_optimizer"], [103, 2, 1, "", "reset"], [103, 2, 1, "", "reset_cuda_graph"], [103, 2, 1, "", "reset_seed"], [103, 2, 1, "", "reset_shape"], [103, 4, 1, "", "rollout_fn"], [103, 3, 1, "", "safety_rollout"], [103, 2, 1, "", "solve"], [103, 3, 1, "", "sync_cuda_time"], [103, 4, 1, "", "tensor_args"], [103, 2, 1, "", "update_init_seed"], [103, 2, 1, "", "update_nproblems"], [103, 2, 1, "", "update_params"], [103, 3, 1, "", "use_cuda_graph_metrics"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"curobo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 119, 120, 123, 131, 132, 133], "packag": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95], "subpackag": [0, 20, 37, 47, 90], "submodul": [0, 1, 8, 20, 22, 33, 37, 38, 42, 47, 50, 62, 68, 76, 90, 91, 95], "cuda_robot_model": [1, 2, 3, 4, 5, 6, 7], "cuda_robot_gener": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103], "kinematics_pars": 4, "type": [5, 32, 68, 69, 70, 71, 72, 73, 74, 75, 101], "urdf_kinematics_pars": 6, "usd_kinematics_pars": 7, "curobolib": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "geom": [9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "geom_cu": 10, "kinemat": [11, 113, 114, 118], "kinematics_fused_cu": 12, "lbfgs_step_cu": 13, "line_search_cu": 14, "l": 15, "opt": [16, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "tensor_step": [17, 66], "tensor_step_cu": 18, "util_fil": [19, 89], "cv": 21, "sdf": [22, 23, 24, 25, 26, 27, 28, 29], "sdf_grid": 23, "util": [24, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "warp_primit": 25, "world": [26, 115, 129], "world_blox": 27, "world_mesh": 28, "world_voxel": 29, "sphere_fit": 30, "transform": 31, "graph": [33, 34, 35, 36], "graph_bas": 34, "graph_nx": 35, "prm": 36, "newton": [38, 39, 40], "lbfg": 39, "newton_bas": 40, "opt_bas": 41, "particl": [42, 43, 44, 45, 46], "parallel_": 43, "parallel_mppi": 44, "particle_opt_bas": 45, "particle_opt_util": 46, "rollout": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "arm_bas": 48, "arm_reach": 49, "cost": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "bound_cost": 51, "cost_bas": 52, "dist_cost": 53, "manipulability_cost": 54, "pose_cost": 55, "primitive_collision_cost": 56, "projected_dist_cost": 57, "self_collision_cost": 58, "stop_cost": 59, "straight_line_cost": 60, "zero_cost": 61, "dynamics_model": [62, 63, 64, 65, 66], "integration_util": 63, "kinematic_model": 64, "model_bas": 65, "rollout_bas": 67, "base": 69, "camera": [70, 116], "enum": 71, "math": 72, "robot": [73, 106, 108, 123, 125, 129, 131, 132, 139], "state": 74, "tensor": [75, 128], "error_metr": 77, "helper": 78, "logger": 79, "metric": [80, 115], "sample_lib": 81, "state_filt": 82, "tensor_util": 83, "torch_util": 84, "trajectori": 85, "usd_help": 86, "warp": [87, 119], "warp_interpol": 88, "wrap": [90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "model": [91, 92, 93, 94, 113, 114, 116], "curobo_robot_world": 92, "robot_segment": 93, "robot_world": 94, "reacher": [95, 96, 97, 98, 99, 100, 101, 114, 138], "evalu": 96, "ik_solv": 97, "motion_gen": 98, "mpc": [99, 113], "trajopt": 100, "wrap_bas": 102, "wrap_mpc": 103, "batch": [105, 114, 115, 128], "environ": [105, 115, 128, 130], "collis": [105, 113, 114, 115, 116, 118, 128, 132, 139], "check": [105, 113, 114, 115, 116, 118, 128], "motion": [105, 113, 114, 116, 118, 132, 137], "gener": [105, 113, 114, 116, 118, 132, 137], "block": 106, "stack": 106, "attach": 106, "object": 106, "constrain": 107, "plan": [107, 118, 137], "isaac": [107, 111, 114, 120], "sim": [107, 111, 114, 120], "demo": [107, 116], "grasp": 107, "approach": 107, "vector": 107, "segment": 108, "advanc": 109, "exampl": 109, "develop": [110, 119, 128], "note": [110, 128], "instal": 111, "system": 111, "requir": 111, "librari": [111, 123, 131], "us": [111, 113, 114, 116, 117, 133], "nvblox": [111, 120], "option": 111, "cxx11_abi": 111, "pytorch": 111, "docker": [111, 119], "precxx11_abi": 111, "nvidia": [111, 119], "jetson": [111, 119], "aarch64": 111, "basic": [112, 114], "python": [113, 120, 121], "forward": 113, "invers": [113, 114, 118], "predict": [113, 114, 116], "control": [113, 114, 116], "usd": [114, 129], "interfac": 114, "reachabl": 114, "free": [114, 132], "mppi": 114, "multi": 114, "arm": 114, "represent": [115, 129, 139], "checker": 115, "implement": 115, "geometri": 115, "approxim": 115, "sphere": 115, "depth": 116, "an": 116, "exist": 116, "map": 116, "onlin": 116, "neural": 117, "network": 117, "benchmark": 118, "profil": 118, "latest": 118, "result": 118, "run": 118, "geometr": 118, "build": 119, "your": 119, "own": 119, "imag": 119, "deprec": 119, "known": 120, "issu": 120, "api": 121, "get": 122, "start": [122, 127], "cuda": [123, 128, 131], "acceler": [123, 131], "updat": [123, 124, 131], "overview": [123, 131], "support": 125, "numer": 126, "optim": 126, "perform": 127, "tune": 127, "improv": 127, "time": 127, "kernel": 128, "io": 128, "buffer": 128, "read": 129, "from": 129, "variabl": 130, "technic": 132, "report": 132, "parallel": 132, "minimum": 132, "jerk": 132, "citat": 132, "research": [133, 134], "mode": 137, "configur": 139, "new": 139, "prequisit": 139, "file": 139, "tutori": [139, 140], "ur5": 139, "prepar": 139, "asset": 139, "creat": 139, "self": 139, "addit": 139, "test": 139}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"curobo package": [[0, "module-curobo"]], "Subpackages": [[0, "subpackages"], [20, "subpackages"], [37, "subpackages"], [47, "subpackages"], [90, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [8, "submodules"], [20, "submodules"], [22, "submodules"], [33, "submodules"], [37, "submodules"], [38, "submodules"], [42, "submodules"], [47, "submodules"], [50, "submodules"], [62, "submodules"], [68, "submodules"], [76, "submodules"], [90, "submodules"], [91, "submodules"], [95, "submodules"]], "curobo.cuda_robot_model package": [[1, "module-curobo.cuda_robot_model"]], "curobo.cuda_robot_model.cuda_robot_generator module": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "curobo.cuda_robot_model.cuda_robot_model module": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "curobo.cuda_robot_model.kinematics_parser module": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "curobo.cuda_robot_model.types module": [[5, "module-curobo.cuda_robot_model.types"]], "curobo.cuda_robot_model.urdf_kinematics_parser module": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "curobo.cuda_robot_model.usd_kinematics_parser module": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "curobo.curobolib package": [[8, "module-curobo.curobolib"]], "curobo.curobolib.geom module": [[9, "module-curobo.curobolib.geom"]], "curobo.curobolib.geom_cu module": [[10, "module-curobo.curobolib.geom_cu"]], "curobo.curobolib.kinematics module": [[11, "module-curobo.curobolib.kinematics"]], "curobo.curobolib.kinematics_fused_cu module": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "curobo.curobolib.lbfgs_step_cu module": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "curobo.curobolib.line_search_cu module": [[14, "module-curobo.curobolib.line_search_cu"]], "curobo.curobolib.ls module": [[15, "module-curobo.curobolib.ls"]], "curobo.curobolib.opt module": [[16, "module-curobo.curobolib.opt"]], "curobo.curobolib.tensor_step module": [[17, "module-curobo.curobolib.tensor_step"]], "curobo.curobolib.tensor_step_cu module": [[18, "module-curobo.curobolib.tensor_step_cu"]], "curobo.curobolib.util_file module": [[19, "module-curobo.curobolib.util_file"]], "curobo.geom package": [[20, "module-curobo.geom"]], "curobo.geom.cv module": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf package": [[22, "module-curobo.geom.sdf"]], "curobo.geom.sdf.sdf_grid module": [[23, "module-curobo.geom.sdf.sdf_grid"]], "curobo.geom.sdf.utils module": [[24, "module-curobo.geom.sdf.utils"]], "curobo.geom.sdf.warp_primitives module": [[25, "module-curobo.geom.sdf.warp_primitives"]], "curobo.geom.sdf.world module": [[26, "module-curobo.geom.sdf.world"]], "curobo.geom.sdf.world_blox module": [[27, "module-curobo.geom.sdf.world_blox"]], "curobo.geom.sdf.world_mesh module": [[28, "module-curobo.geom.sdf.world_mesh"]], "curobo.geom.sdf.world_voxel module": [[29, "module-curobo.geom.sdf.world_voxel"]], "curobo.geom.sphere_fit module": [[30, "module-curobo.geom.sphere_fit"]], "curobo.geom.transform module": [[31, "module-curobo.geom.transform"]], "curobo.geom.types module": [[32, "module-curobo.geom.types"]], "curobo.graph package": [[33, "module-curobo.graph"]], "curobo.graph.graph_base module": [[34, "module-curobo.graph.graph_base"]], "curobo.graph.graph_nx module": [[35, "module-curobo.graph.graph_nx"]], "curobo.graph.prm module": [[36, "module-curobo.graph.prm"]], "curobo.opt package": [[37, "module-curobo.opt"]], "curobo.opt.newton package": [[38, "module-curobo.opt.newton"]], "curobo.opt.newton.lbfgs module": [[39, "module-curobo.opt.newton.lbfgs"]], "curobo.opt.newton.newton_base module": [[40, "module-curobo.opt.newton.newton_base"]], "curobo.opt.opt_base module": [[41, "module-curobo.opt.opt_base"]], "curobo.opt.particle package": [[42, "module-curobo.opt.particle"]], "curobo.opt.particle.parallel_es module": [[43, "module-curobo.opt.particle.parallel_es"]], "curobo.opt.particle.parallel_mppi module": [[44, "module-curobo.opt.particle.parallel_mppi"]], "curobo.opt.particle.particle_opt_base module": [[45, "module-curobo.opt.particle.particle_opt_base"]], "curobo.opt.particle.particle_opt_utils module": [[46, "module-curobo.opt.particle.particle_opt_utils"]], "curobo.rollout package": [[47, "module-curobo.rollout"]], "curobo.rollout.arm_base module": [[48, "module-curobo.rollout.arm_base"]], "curobo.rollout.arm_reacher module": [[49, "module-curobo.rollout.arm_reacher"]], "curobo.rollout.cost package": [[50, "module-curobo.rollout.cost"]], "curobo.rollout.cost.bound_cost module": [[51, "module-curobo.rollout.cost.bound_cost"]], "curobo.rollout.cost.cost_base module": [[52, "module-curobo.rollout.cost.cost_base"]], "curobo.rollout.cost.dist_cost module": [[53, "module-curobo.rollout.cost.dist_cost"]], "curobo.rollout.cost.manipulability_cost module": [[54, "module-curobo.rollout.cost.manipulability_cost"]], "curobo.rollout.cost.pose_cost module": [[55, "module-curobo.rollout.cost.pose_cost"]], "curobo.rollout.cost.primitive_collision_cost module": [[56, "module-curobo.rollout.cost.primitive_collision_cost"]], "curobo.rollout.cost.projected_dist_cost module": [[57, "module-curobo.rollout.cost.projected_dist_cost"]], "curobo.rollout.cost.self_collision_cost module": [[58, "module-curobo.rollout.cost.self_collision_cost"]], "curobo.rollout.cost.stop_cost module": [[59, "module-curobo.rollout.cost.stop_cost"]], "curobo.rollout.cost.straight_line_cost module": [[60, "module-curobo.rollout.cost.straight_line_cost"]], "curobo.rollout.cost.zero_cost module": [[61, "module-curobo.rollout.cost.zero_cost"]], "curobo.rollout.dynamics_model package": [[62, "module-curobo.rollout.dynamics_model"]], "curobo.rollout.dynamics_model.integration_utils module": [[63, "module-curobo.rollout.dynamics_model.integration_utils"]], "curobo.rollout.dynamics_model.kinematic_model module": [[64, "module-curobo.rollout.dynamics_model.kinematic_model"]], "curobo.rollout.dynamics_model.model_base module": [[65, "module-curobo.rollout.dynamics_model.model_base"]], "curobo.rollout.dynamics_model.tensor_step module": [[66, "module-curobo.rollout.dynamics_model.tensor_step"]], "curobo.rollout.rollout_base module": [[67, "module-curobo.rollout.rollout_base"]], "curobo.types package": [[68, "module-curobo.types"]], "curobo.types.base module": [[69, "module-curobo.types.base"]], "curobo.types.camera module": [[70, "module-curobo.types.camera"]], "curobo.types.enum module": [[71, "module-curobo.types.enum"]], "curobo.types.math module": [[72, "module-curobo.types.math"]], "curobo.types.robot module": [[73, "module-curobo.types.robot"]], "curobo.types.state module": [[74, "module-curobo.types.state"]], "curobo.types.tensor module": [[75, "module-curobo.types.tensor"]], "curobo.util package": [[76, "module-curobo.util"]], "curobo.util.error_metrics module": [[77, "module-curobo.util.error_metrics"]], "curobo.util.helpers module": [[78, "module-curobo.util.helpers"]], "curobo.util.logger module": [[79, "module-curobo.util.logger"]], "curobo.util.metrics module": [[80, "module-curobo.util.metrics"]], "curobo.util.sample_lib module": [[81, "module-curobo.util.sample_lib"]], "curobo.util.state_filter module": [[82, "module-curobo.util.state_filter"]], "curobo.util.tensor_util module": [[83, "module-curobo.util.tensor_util"]], "curobo.util.torch_utils module": [[84, "module-curobo.util.torch_utils"]], "curobo.util.trajectory module": [[85, "module-curobo.util.trajectory"]], "curobo.util.usd_helper module": [[86, "module-curobo.util.usd_helper"]], "curobo.util.warp module": [[87, "module-curobo.util.warp"]], "curobo.util.warp_interpolation module": [[88, "module-curobo.util.warp_interpolation"]], "curobo.util_file module": [[89, "module-curobo.util_file"]], "curobo.wrap package": [[90, "module-curobo.wrap"]], "curobo.wrap.model package": [[91, "module-curobo.wrap.model"]], "curobo.wrap.model.curobo_robot_world module": [[92, "module-curobo.wrap.model.curobo_robot_world"]], "curobo.wrap.model.robot_segmenter module": [[93, "module-curobo.wrap.model.robot_segmenter"]], "curobo.wrap.model.robot_world module": [[94, "module-curobo.wrap.model.robot_world"]], "curobo.wrap.reacher package": [[95, "module-curobo.wrap.reacher"]], "curobo.wrap.reacher.evaluator module": [[96, "module-curobo.wrap.reacher.evaluator"]], "curobo.wrap.reacher.ik_solver module": [[97, "module-curobo.wrap.reacher.ik_solver"]], "curobo.wrap.reacher.motion_gen module": [[98, "module-curobo.wrap.reacher.motion_gen"]], "curobo.wrap.reacher.mpc module": [[99, "module-curobo.wrap.reacher.mpc"]], "curobo.wrap.reacher.trajopt module": [[100, "module-curobo.wrap.reacher.trajopt"]], "curobo.wrap.reacher.types module": [[101, "module-curobo.wrap.reacher.types"]], "curobo.wrap.wrap_base module": [[102, "module-curobo.wrap.wrap_base"]], "curobo.wrap.wrap_mpc module": [[103, "module-curobo.wrap.wrap_mpc"]], "curobo": [[104, "curobo"]], "Batched Environments": [[105, "batched-environments"], [115, "batched-environments"]], "Collision Checking": [[105, "collision-checking"], [113, "collision-checking"], [114, "collision-checking"], [116, "collision-checking"], [116, "id1"]], "Motion Generation": [[105, "motion-generation"], [113, "motion-generation"], [114, "motion-generation"], [116, "motion-generation"], [116, "id2"], [137, "motion-generation"]], "Block Stacking": [[106, "block-stacking"]], "Attaching Object to Robot": [[106, "attaching-object-to-robot"]], "Constrained Planning": [[107, "constrained-planning"]], "Isaac Sim Demo": [[107, "isaac-sim-demo"]], "Grasp Approach Vector": [[107, "grasp-approach-vector"]], "Robot Segmentation": [[108, "robot-segmentation"]], "Advanced Examples": [[109, "advanced-examples"]], "Developer Notes": [[110, "developer-notes"]], "Installation": [[111, "installation"]], "System Requirements": [[111, "system-requirements"]], "Library Installation": [[111, "library-installation"]], "Install for use in Isaac Sim": [[111, "install-for-use-in-isaac-sim"]], "Install nvblox (optional)": [[111, "install-nvblox-optional"]], "Installing nvblox for CXX11_ABI and pytorch dockers": [[111, "installing-nvblox-for-cxx11-abi-and-pytorch-dockers"]], "Installing nvblox for PRECXX11_ABI and Isaac Sim": [[111, "installing-nvblox-for-precxx11-abi-and-isaac-sim"]], "Installing on NVIDIA Jetson (aarch64)": [[111, "installing-on-nvidia-jetson-aarch64"]], "Basics": [[112, "basics"]], "Using in Python": [[113, "using-in-python"]], "Forward Kinematics": [[113, "forward-kinematics"]], "Inverse Kinematics": [[113, "inverse-kinematics"], [118, "inverse-kinematics"]], "Model Predictive Control (MPC)": [[113, "model-predictive-control-mpc"]], "Using with Isaac Sim": [[114, "using-with-isaac-sim"]], "Usd Interface": [[114, "usd-interface"]], "Isaac Sim Basics": [[114, "isaac-sim-basics"]], "Reachability using Batched Collision-Free Inverse Kinematics": [[114, "reachability-using-batched-collision-free-inverse-kinematics"]], "Model Predictive Control with MPPI": [[114, "model-predictive-control-with-mppi"]], "Multi-Arm Reacher": [[114, "multi-arm-reacher"]], "Collision World Representation": [[115, "collision-world-representation"]], "World Representation": [[115, "world-representation"]], "World Collision Checkers": [[115, "world-collision-checkers"]], "Collision Checking Implementation": [[115, "collision-checking-implementation"]], "Collision Metric": [[115, "collision-metric"]], "Geometry Approximation to Spheres": [[115, "geometry-approximation-to-spheres"]], "Using with Depth Camera": [[116, "using-with-depth-camera"]], "Demos with an existing map": [[116, "demos-with-an-existing-map"]], "Model Predictive Control": [[116, "model-predictive-control"], [116, "id3"]], "Demos with online mapping": [[116, "demos-with-online-mapping"]], "Using in a Neural Network": [[117, "using-in-a-neural-network"]], "Benchmarks & Profiling": [[118, "benchmarks-profiling"]], "Benchmarks": [[118, "benchmarks"]], "Latest Motion Generation Results": [[118, "latest-motion-generation-results"]], "Latest Inverse Kinematics Results": [[118, "latest-inverse-kinematics-results"]], "Running Benchmarks": [[118, "running-benchmarks"]], "Kinematics & Collision Checking": [[118, "kinematics-collision-checking"]], "Motion Generation & Geometric Planning": [[118, "motion-generation-geometric-planning"]], "Profiling": [[118, "profiling"]], "Docker Development": [[119, "docker-development"]], "Building your own docker image with cuRobo": [[119, "building-your-own-docker-image-with-curobo"]], "Build Warp for NVIDIA Jetson (Deprecated)": [[119, "build-warp-for-nvidia-jetson-deprecated"]], "Known Issues": [[120, "known-issues"]], "cuRobo": [[120, "curobo"]], "Python": [[120, "python"]], "nvblox": [[120, "nvblox"]], "Isaac Sim": [[120, "isaac-sim"]], "Python API": [[121, "python-api"]], "Get Started": [[122, "get-started"]], "cuRobo: CUDA Accelerated Robot Library": [[123, "curobo-cuda-accelerated-robot-library"], [131, "curobo-cuda-accelerated-robot-library"]], "Updates": [[123, "updates"], [124, "updates"], [131, "updates"]], "Overview": [[123, "overview"], [131, "overview"]], "Supported Robots": [[125, "supported-robots"]], "Numerical Optimization": [[126, "numerical-optimization"]], "Performance Tuning": [[127, "performance-tuning"]], "Improving Start Time": [[127, "improving-start-time"]], "CUDA Notes": [[128, "cuda-notes"]], "Developing CUDA kernels": [[128, "developing-cuda-kernels"]], "Tensor IO Buffers": [[128, "tensor-io-buffers"]], "Batched Environment Collision Checking": [[128, "batched-environment-collision-checking"]], "USD for Robot and World Representation": [[129, "usd-for-robot-and-world-representation"]], "Reading World from USD": [[129, "reading-world-from-usd"]], "Environment Variables": [[130, "environment-variables"]], "Technical Report": [[132, "technical-report"]], "cuRobo: Parallelized Collision-Free Minimum-Jerk Robot Motion Generation": [[132, "curobo-parallelized-collision-free-minimum-jerk-robot-motion-generation"]], "Citation": [[132, "citation"]], "Research using cuRobo": [[133, "research-using-curobo"]], "Research": [[134, "research"]], "Planning Modes": [[137, "id1"]], "Reacher": [[138, "reacher"]], "Configuring a New Robot": [[139, "configuring-a-new-robot"]], "Prequisite": [[139, "prequisite"]], "Robot Configuration File": [[139, "robot-configuration-file"]], "Tutorial with a UR5e robot": [[139, "tutorial-with-a-ur5e-robot"]], "Prepare assets": [[139, "prepare-assets"]], "Create Configuration File": [[139, "create-configuration-file"]], "Robot Collision Representation": [[139, "robot-collision-representation"]], "Self Collision Configuration": [[139, "self-collision-configuration"]], "Additional Configurations": [[139, "additional-configurations"]], "Test Robot Configuration": [[139, "test-robot-configuration"]], "Tutorials": [[140, "tutorials"]]}, "indexentries": {"curobo": [[0, "module-curobo"]], "module": [[0, "module-curobo"], [1, "module-curobo.cuda_robot_model"], [2, "module-curobo.cuda_robot_model.cuda_robot_generator"], [3, "module-curobo.cuda_robot_model.cuda_robot_model"], [4, "module-curobo.cuda_robot_model.kinematics_parser"], [5, "module-curobo.cuda_robot_model.types"], [6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"], [7, "module-curobo.cuda_robot_model.usd_kinematics_parser"], [8, "module-curobo.curobolib"], [9, "module-curobo.curobolib.geom"], [10, "module-curobo.curobolib.geom_cu"], [11, "module-curobo.curobolib.kinematics"], [12, "module-curobo.curobolib.kinematics_fused_cu"], [13, "module-curobo.curobolib.lbfgs_step_cu"], [14, "module-curobo.curobolib.line_search_cu"], [15, "module-curobo.curobolib.ls"], [16, "module-curobo.curobolib.opt"], [17, "module-curobo.curobolib.tensor_step"], [18, "module-curobo.curobolib.tensor_step_cu"], [19, "module-curobo.curobolib.util_file"], [20, "module-curobo.geom"], [21, "module-curobo.geom.cv"], [22, "module-curobo.geom.sdf"], [23, "module-curobo.geom.sdf.sdf_grid"], [24, "module-curobo.geom.sdf.utils"], [25, "module-curobo.geom.sdf.warp_primitives"], [26, "module-curobo.geom.sdf.world"], [27, "module-curobo.geom.sdf.world_blox"], [28, "module-curobo.geom.sdf.world_mesh"], [29, "module-curobo.geom.sdf.world_voxel"], [30, "module-curobo.geom.sphere_fit"], [31, "module-curobo.geom.transform"], [32, "module-curobo.geom.types"], [33, "module-curobo.graph"], [34, "module-curobo.graph.graph_base"], [35, "module-curobo.graph.graph_nx"], [36, "module-curobo.graph.prm"], [37, "module-curobo.opt"], [38, "module-curobo.opt.newton"], [39, "module-curobo.opt.newton.lbfgs"], [40, "module-curobo.opt.newton.newton_base"], [41, "module-curobo.opt.opt_base"], [42, "module-curobo.opt.particle"], [43, "module-curobo.opt.particle.parallel_es"], [44, "module-curobo.opt.particle.parallel_mppi"], [45, "module-curobo.opt.particle.particle_opt_base"], [46, "module-curobo.opt.particle.particle_opt_utils"], [47, "module-curobo.rollout"], [48, "module-curobo.rollout.arm_base"], [49, "module-curobo.rollout.arm_reacher"], [50, "module-curobo.rollout.cost"], [51, "module-curobo.rollout.cost.bound_cost"], [52, "module-curobo.rollout.cost.cost_base"], [53, "module-curobo.rollout.cost.dist_cost"], [54, "module-curobo.rollout.cost.manipulability_cost"], [55, "module-curobo.rollout.cost.pose_cost"], [56, "module-curobo.rollout.cost.primitive_collision_cost"], [57, "module-curobo.rollout.cost.projected_dist_cost"], [58, "module-curobo.rollout.cost.self_collision_cost"], [59, "module-curobo.rollout.cost.stop_cost"], [60, "module-curobo.rollout.cost.straight_line_cost"], [61, "module-curobo.rollout.cost.zero_cost"], [62, "module-curobo.rollout.dynamics_model"], [63, "module-curobo.rollout.dynamics_model.integration_utils"], [64, "module-curobo.rollout.dynamics_model.kinematic_model"], [65, "module-curobo.rollout.dynamics_model.model_base"], [66, "module-curobo.rollout.dynamics_model.tensor_step"], [67, "module-curobo.rollout.rollout_base"], [68, "module-curobo.types"], [69, "module-curobo.types.base"], [70, "module-curobo.types.camera"], [71, "module-curobo.types.enum"], [72, "module-curobo.types.math"], [73, "module-curobo.types.robot"], [74, "module-curobo.types.state"], [75, "module-curobo.types.tensor"], [76, "module-curobo.util"], [77, "module-curobo.util.error_metrics"], [78, "module-curobo.util.helpers"], [79, "module-curobo.util.logger"], [80, "module-curobo.util.metrics"], [81, "module-curobo.util.sample_lib"], [82, "module-curobo.util.state_filter"], [83, "module-curobo.util.tensor_util"], [84, "module-curobo.util.torch_utils"], [85, "module-curobo.util.trajectory"], [86, "module-curobo.util.usd_helper"], [87, "module-curobo.util.warp"], [88, "module-curobo.util.warp_interpolation"], [89, "module-curobo.util_file"], [90, "module-curobo.wrap"], [91, "module-curobo.wrap.model"], [92, "module-curobo.wrap.model.curobo_robot_world"], [93, "module-curobo.wrap.model.robot_segmenter"], [94, "module-curobo.wrap.model.robot_world"], [95, "module-curobo.wrap.reacher"], [96, "module-curobo.wrap.reacher.evaluator"], [97, "module-curobo.wrap.reacher.ik_solver"], [98, "module-curobo.wrap.reacher.motion_gen"], [99, "module-curobo.wrap.reacher.mpc"], [100, "module-curobo.wrap.reacher.trajopt"], [101, "module-curobo.wrap.reacher.types"], [102, "module-curobo.wrap.wrap_base"], [103, "module-curobo.wrap.wrap_mpc"]], "curobo.cuda_robot_model": [[1, "module-curobo.cuda_robot_model"]], "cudarobotgenerator (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator"]], "cudarobotgeneratorconfig (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig"]], "_add_body_to_tree() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._add_body_to_tree"]], "_build_chain() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_chain"]], "_build_collision_model() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_collision_model"]], "_build_kinematics() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics"]], "_build_kinematics_tensors() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_tensors"]], "_build_kinematics_with_lock_joints() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_with_lock_joints"]], "_create_self_collision_thread_data() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._create_self_collision_thread_data"]], "_get_joint_links() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_links"]], "_get_joint_position_velocity_limits() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_position_velocity_limits"]], "_get_link_poses() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_link_poses"]], "_get_mimic_joint_data() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_mimic_joint_data"]], "_update_joint_limits() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._update_joint_limits"]], "add_fixed_link() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_fixed_link"]], "add_link() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_link"]], "add_object_link (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_object_link"]], "add_object_link (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.add_object_link"]], "asset_root_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.asset_root_path"]], "asset_root_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.asset_root_path"]], "base_link (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.base_link"]], "base_link (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.base_link"]], "collision_link_names (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.collision_link_names"]], "collision_link_names (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_link_names"]], "collision_sphere_buffer (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.collision_sphere_buffer"]], "collision_sphere_buffer (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_sphere_buffer"]], "collision_spheres (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.collision_spheres"]], "collision_spheres (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_spheres"]], "compute_jacobian (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.compute_jacobian"]], "compute_jacobian (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.compute_jacobian"]], "cspace (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.cspace"]], "cspace (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "debug (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.debug"]], "debug (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.debug"]], "ee_link (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.ee_link"]], "ee_link (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.ee_link"]], "external_asset_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.external_asset_path"]], "external_asset_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_asset_path"]], "external_robot_configs_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.external_robot_configs_path"]], "external_robot_configs_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_robot_configs_path"]], "extra_collision_spheres (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.extra_collision_spheres"]], "extra_collision_spheres (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_collision_spheres"]], "extra_links (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.extra_links"]], "extra_links (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_links"]], "get_joint_limits (cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.get_joint_limits"]], "initialize_tensors() (cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.initialize_tensors"]], "isaac_usd_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.isaac_usd_path"]], "isaac_usd_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.isaac_usd_path"]], "kinematics_config (cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_config"]], "kinematics_parser (cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_parser"]], "link_names (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.link_names"]], "link_names (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.link_names"]], "load_link_names_with_mesh (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.load_link_names_with_mesh"]], "load_link_names_with_mesh (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_link_names_with_mesh"]], "load_meshes (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.load_meshes"]], "load_meshes (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_meshes"]], "lock_joints (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.lock_joints"]], "lock_joints (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.lock_joints"]], "mesh_link_names (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.mesh_link_names"]], "mesh_link_names (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.mesh_link_names"]], "self_collision_buffer (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_buffer"]], "self_collision_buffer (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_buffer"]], "self_collision_config (cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_config"]], "self_collision_ignore (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_ignore"]], "self_collision_ignore (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_ignore"]], "tensor_args (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.tensor_args"]], "tensor_args (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.tensor_args"]], "urdf_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.urdf_path"]], "urdf_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.urdf_path"]], "usd_flip_joint_limits (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.usd_flip_joint_limits"]], "usd_flip_joint_limits (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joint_limits"]], "usd_flip_joints (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.usd_flip_joints"]], "usd_flip_joints (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joints"]], "usd_path (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.usd_path"]], "usd_path (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_path"]], "usd_robot_root (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.usd_robot_root"]], "usd_robot_root (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_robot_root"]], "use_external_assets (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.use_external_assets"]], "use_external_assets (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_external_assets"]], "use_global_cumul (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.use_global_cumul"]], "use_global_cumul (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_global_cumul"]], "use_usd_kinematics (cudarobotgenerator attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.use_usd_kinematics"]], "use_usd_kinematics (cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_usd_kinematics"]], "cudarobotmodel (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel"]], "cudarobotmodelconfig (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig"]], "cudarobotmodelstate (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState"]], "_cuda_forward() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel._cuda_forward"]], "all_articulated_joint_names (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.all_articulated_joint_names"]], "ang_jacobian (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.ang_jacobian"]], "base_link (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.base_link"]], "compute_jacobian (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.compute_jacobian"]], "compute_jacobian (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.compute_jacobian"]], "cspace (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.cspace"]], "cspace (cudarobotmodelconfig property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "dof (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.dof"]], "dof (cudarobotmodelconfig property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.dof"]], "ee_link (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.ee_link"]], "ee_pose (cudarobotmodelstate property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.ee_pose"]], "ee_position (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.ee_position"]], "ee_quaternion (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.ee_quaternion"]], "forward() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.forward"]], "from_basic_urdf() (cudarobotmodel static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.from_basic_urdf"]], "from_basic_urdf() (cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_urdf"]], "from_basic_usd() (cudarobotmodel static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.from_basic_usd"]], "from_basic_usd() (cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_usd"]], "from_config() (cudarobotmodel static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.from_config"]], "from_config() (cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_config"]], "from_data_dict() (cudarobotmodel static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.from_data_dict"]], "from_data_dict() (cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_data_dict"]], "from_robot_yaml_file() (cudarobotmodel static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.from_robot_yaml_file"]], "from_robot_yaml_file() (cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_robot_yaml_file"]], "generator_config (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.generator_config"]], "generator_config (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.generator_config"]], "get_all_link_transforms() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_all_link_transforms"]], "get_dof() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_dof"]], "get_full_js() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_full_js"]], "get_joint_limits() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_joint_limits"]], "get_joint_limits() (cudarobotmodelconfig method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.get_joint_limits"]], "get_link_mesh() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_mesh"]], "get_link_poses() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_poses"]], "get_link_spheres() (cudarobotmodelstate method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.get_link_spheres"]], "get_link_transform() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_transform"]], "get_mimic_js() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_mimic_js"]], "get_robot_as_mesh() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_mesh"]], "get_robot_as_spheres() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_spheres"]], "get_robot_link_meshes() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_link_meshes"]], "get_self_collision_config() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_self_collision_config"]], "get_state() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_state"]], "joint_names (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.joint_names"]], "kinematics_config (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.kinematics_config"]], "kinematics_config (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_config"]], "kinematics_parser (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.kinematics_parser"]], "kinematics_parser (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_parser"]], "lin_jacobian (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.lin_jacobian"]], "link_names (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.link_names"]], "link_names (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.link_names"]], "link_names (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.link_names"]], "link_pose (cudarobotmodelstate property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.link_pose"]], "link_spheres_tensor (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.link_spheres_tensor"]], "links_position (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.links_position"]], "links_quaternion (cudarobotmodelstate attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelState.links_quaternion"]], "lock_jointstate (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.lock_jointstate"]], "retract_config (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.retract_config"]], "robot_spheres (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.robot_spheres"]], "self_collision_config (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.self_collision_config"]], "self_collision_config (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.self_collision_config"]], "tensor_args (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.tensor_args"]], "tensor_args (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.tensor_args"]], "total_spheres (cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.total_spheres"]], "update_batch_size() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_batch_size"]], "update_kinematics_config() (cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_kinematics_config"]], "use_global_cumul (cudarobotmodel attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.use_global_cumul"]], "use_global_cumul (cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.use_global_cumul"]], "kinematicsparser (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser"]], "linkparams (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams"]], "_get_from_extra_links() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser._get_from_extra_links"]], "add_absolute_path_to_link_meshes() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.kinematics_parser": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "fixed_transform (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.fixed_transform"]], "from_dict() (linkparams static method)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.from_dict"]], "get_chain() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_chain"]], "get_link_mesh() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_mesh"]], "get_link_parameters() (kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_parameters"]], "joint_axis (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_axis"]], "joint_id (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_id"]], "joint_limits (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_limits"]], "joint_name (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_name"]], "joint_offset (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_offset"]], "joint_type (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_type"]], "joint_velocity_limits (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_velocity_limits"]], "link_name (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.link_name"]], "mimic_joint_name (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.mimic_joint_name"]], "parent_link_name (linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.parent_link_name"]], "cspaceconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig"]], "fixed (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.FIXED"]], "jointlimits (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointLimits"]], "jointtype (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointType"]], "kinematicstensorconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig"]], "selfcollisionkinematicsconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig"]], "x_prism (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM"]], "x_prism_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM_NEG"]], "x_rot (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT"]], "x_rot_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT_NEG"]], "y_prism (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM"]], "y_prism_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM_NEG"]], "y_rot (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT"]], "y_rot_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT_NEG"]], "z_prism (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM"]], "z_prism_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM_NEG"]], "z_rot (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT"]], "z_rot_neg (jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT_NEG"]], "acceleration (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.acceleration"]], "acceleration_scale (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.acceleration_scale"]], "attach_object() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.attach_object"]], "base_link (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.base_link"]], "checks_per_thread (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.checks_per_thread"]], "clone() (cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.clone"]], "clone() (jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.clone"]], "collision_matrix (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.collision_matrix"]], "copy_() (cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.copy_"]], "copy_() (jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.copy_"]], "copy_() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.copy_"]], "cspace (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.cspace"]], "cspace_distance_weight (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.cspace_distance_weight"]], "curobo.cuda_robot_model.types": [[5, "module-curobo.cuda_robot_model.types"]], "debug (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.debug"]], "detach_object() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.detach_object"]], "disable_link_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.disable_link_spheres"]], "distance_threshold (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.distance_threshold"]], "ee_idx (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_idx"]], "ee_link (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_link"]], "effort (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.effort"]], "enable_link_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.enable_link_spheres"]], "experimental_kernel (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.experimental_kernel"]], "fixed_transforms (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.fixed_transforms"]], "from_data_dict() (jointlimits static method)": [[5, "curobo.cuda_robot_model.types.JointLimits.from_data_dict"]], "get_link_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_link_spheres"]], "get_number_of_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_number_of_spheres"]], "get_reference_link_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_reference_link_spheres"]], "get_sphere_index_from_link_name() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_sphere_index_from_link_name"]], "inplace_reindex() (cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.inplace_reindex"]], "jerk (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.jerk"]], "jerk_scale (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.jerk_scale"]], "joint_limits (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_limits"]], "joint_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map"]], "joint_map_type (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map_type"]], "joint_names (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.joint_names"]], "joint_names (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.joint_names"]], "joint_names (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_names"]], "joint_offset_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_offset_map"]], "link_chain_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_chain_map"]], "link_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_map"]], "link_name_to_idx_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_name_to_idx_map"]], "link_names (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_names"]], "link_sphere_idx_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_sphere_idx_map"]], "link_spheres (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_spheres"]], "load_cspace_cfg_from_kinematics() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.load_cspace_cfg_from_kinematics"]], "load_from_joint_limits() (cspaceconfig static method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.load_from_joint_limits"]], "lock_jointstate (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.lock_jointstate"]], "max_acceleration (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_acceleration"]], "max_jerk (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_jerk"]], "mesh_link_names (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.mesh_link_names"]], "mimic_joints (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.mimic_joints"]], "n_dof (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.n_dof"]], "non_fixed_joint_names (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.non_fixed_joint_names"]], "null_space_weight (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.null_space_weight"]], "offset (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.offset"]], "position (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.position"]], "position_limit_clip (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.position_limit_clip"]], "reference_link_spheres (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.reference_link_spheres"]], "retract_config (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.retract_config"]], "scale_joint_limits() (cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.scale_joint_limits"]], "store_link_map (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.store_link_map"]], "tensor_args (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.tensor_args"]], "tensor_args (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.tensor_args"]], "thread_location (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_location"]], "thread_max (selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_max"]], "total_spheres (kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.total_spheres"]], "update_link_spheres() (kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.update_link_spheres"]], "velocity (jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.velocity"]], "velocity_scale (cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.velocity_scale"]], "urdfkinematicsparser (class in curobo.cuda_robot_model.urdf_kinematics_parser)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser"]], "_get_from_extra_links() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._get_from_extra_links"]], "_get_joint_limits() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._get_joint_limits"]], "_get_joint_name() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._get_joint_name"]], "add_absolute_path_to_link_meshes() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "get_chain() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_chain"]], "get_controlled_joint_names() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_controlled_joint_names"]], "get_link_mesh() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_mesh"]], "get_link_parameters() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_parameters"]], "get_urdf_string() (urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_urdf_string"]], "root_link (urdfkinematicsparser property)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.root_link"]], "usdkinematicsparser (class in curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser"]], "_get_from_extra_links() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser._get_from_extra_links"]], "_get_joint_transform() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser._get_joint_transform"]], "add_absolute_path_to_link_meshes() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "get_chain() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_chain"]], "get_link_mesh() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_link_mesh"]], "get_link_parameters() (usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_link_parameters"]], "get_links_for_joint() (in module curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.get_links_for_joint"]], "robot_prim_root (usdkinematicsparser property)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.robot_prim_root"]], "curobo.curobolib": [[8, "module-curobo.curobolib"]], "poseerror (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseError"]], "poseerrordistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseErrorDistance"]], "sdfsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereOBB"]], "sdfspherevoxel (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereVoxel"]], "sdfsweptsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB"]], "sdfsweptspherevoxel (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel"]], "selfcollisiondistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistance"]], "selfcollisiondistanceloss (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss"]], "_backward_cls (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError._backward_cls"]], "_backward_cls (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance._backward_cls"]], "_backward_cls (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB._backward_cls"]], "_backward_cls (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._backward_cls"]], "_backward_cls (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._backward_cls"]], "_backward_cls (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._backward_cls"]], "_backward_cls (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._backward_cls"]], "_backward_cls (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._backward_cls"]], "_get_compiled_autograd_symints() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError._materialize_non_diff_grads"]], "_materialize_non_diff_grads (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance._materialize_non_diff_grads"]], "_materialize_non_diff_grads (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB._materialize_non_diff_grads"]], "_materialize_non_diff_grads (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._materialize_non_diff_grads"]], "_materialize_non_diff_grads (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._materialize_non_diff_grads"]], "_materialize_non_diff_grads (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._materialize_non_diff_grads"]], "_raw_saved_tensors (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError._raw_saved_tensors"]], "_raw_saved_tensors (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance._raw_saved_tensors"]], "_raw_saved_tensors (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB._raw_saved_tensors"]], "_raw_saved_tensors (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._raw_saved_tensors"]], "_raw_saved_tensors (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._raw_saved_tensors"]], "_raw_saved_tensors (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._raw_saved_tensors"]], "_raw_saved_tensors (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._raw_saved_tensors"]], "_raw_saved_tensors (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._raw_saved_tensors"]], "_register_hook() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError._register_hook"]], "_register_hook() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance._register_hook"]], "_register_hook() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB._register_hook"]], "_register_hook() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._register_hook"]], "_register_hook() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._register_hook"]], "_register_hook() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._register_hook"]], "_register_hook() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._register_hook"]], "_register_hook() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._register_hook"]], "_register_hook_dict() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError._register_hook_dict"]], "_register_hook_dict() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance._register_hook_dict"]], "_register_hook_dict() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB._register_hook_dict"]], "_register_hook_dict() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._register_hook_dict"]], "_register_hook_dict() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._register_hook_dict"]], "_register_hook_dict() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._register_hook_dict"]], "_register_hook_dict() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._register_hook_dict"]], "_register_hook_dict() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._register_hook_dict"]], "_sequence_nr() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError._sequence_nr"]], "_sequence_nr() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance._sequence_nr"]], "_sequence_nr() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB._sequence_nr"]], "_sequence_nr() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel._sequence_nr"]], "_sequence_nr() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._sequence_nr"]], "_sequence_nr() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel._sequence_nr"]], "_sequence_nr() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._sequence_nr"]], "_sequence_nr() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._sequence_nr"]], "apply() (poseerror class method)": [[9, "curobo.curobolib.geom.PoseError.apply"]], "apply() (poseerrordistance class method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.apply"]], "apply() (sdfsphereobb class method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.apply"]], "apply() (sdfspherevoxel class method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.apply"]], "apply() (sdfsweptsphereobb class method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.apply"]], "apply() (sdfsweptspherevoxel class method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.apply"]], "apply() (selfcollisiondistance class method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.apply"]], "apply() (selfcollisiondistanceloss class method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.apply"]], "backward() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.backward"]], "backward() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.backward"]], "backward() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.backward"]], "backward() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.backward"]], "backward() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.backward"]], "backward() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.backward"]], "backward() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.backward"]], "backward() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.backward"]], "curobo.curobolib.geom": [[9, "module-curobo.curobolib.geom"]], "dirty_tensors (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.dirty_tensors"]], "dirty_tensors (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.dirty_tensors"]], "dirty_tensors (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.dirty_tensors"]], "dirty_tensors (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.dirty_tensors"]], "dirty_tensors (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.dirty_tensors"]], "dirty_tensors (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.dirty_tensors"]], "dirty_tensors (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.dirty_tensors"]], "dirty_tensors (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.dirty_tensors"]], "forward() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.forward"]], "forward() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.forward"]], "forward() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.forward"]], "forward() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.forward"]], "forward() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.forward"]], "forward() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.forward"]], "forward() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.forward"]], "forward() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.forward"]], "generate_vmap_rule (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.generate_vmap_rule"]], "generate_vmap_rule (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.generate_vmap_rule"]], "generate_vmap_rule (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.generate_vmap_rule"]], "generate_vmap_rule (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.generate_vmap_rule"]], "generate_vmap_rule (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.generate_vmap_rule"]], "generate_vmap_rule (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.generate_vmap_rule"]], "generate_vmap_rule (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.generate_vmap_rule"]], "generate_vmap_rule (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.generate_vmap_rule"]], "get_pose_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance"]], "get_pose_distance_backward() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance_backward"]], "get_self_collision_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_self_collision_distance"]], "is_traceable (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.is_traceable"]], "is_traceable (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.is_traceable"]], "is_traceable (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.is_traceable"]], "is_traceable (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.is_traceable"]], "is_traceable (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.is_traceable"]], "is_traceable (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.is_traceable"]], "is_traceable (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.is_traceable"]], "is_traceable (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.is_traceable"]], "jvp() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.jvp"]], "jvp() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.jvp"]], "jvp() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.jvp"]], "jvp() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.jvp"]], "jvp() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.jvp"]], "jvp() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.jvp"]], "jvp() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.jvp"]], "jvp() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.jvp"]], "mark_dirty() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.mark_dirty"]], "mark_dirty() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.mark_dirty"]], "mark_dirty() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.mark_dirty"]], "mark_dirty() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.mark_dirty"]], "mark_dirty() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.mark_dirty"]], "mark_dirty() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.mark_dirty"]], "mark_dirty() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.mark_dirty"]], "mark_dirty() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.mark_dirty"]], "mark_non_differentiable() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.mark_non_differentiable"]], "mark_non_differentiable() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.mark_non_differentiable"]], "mark_non_differentiable() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.mark_non_differentiable"]], "mark_non_differentiable() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.mark_non_differentiable"]], "mark_non_differentiable() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.mark_non_differentiable"]], "mark_non_differentiable() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.mark_non_differentiable"]], "mark_non_differentiable() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.mark_non_differentiable"]], "mark_non_differentiable() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.mark_non_differentiable"]], "mark_shared_storage() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.mark_shared_storage"]], "mark_shared_storage() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.mark_shared_storage"]], "mark_shared_storage() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.mark_shared_storage"]], "mark_shared_storage() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.mark_shared_storage"]], "mark_shared_storage() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.mark_shared_storage"]], "mark_shared_storage() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.mark_shared_storage"]], "mark_shared_storage() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.mark_shared_storage"]], "mark_shared_storage() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.mark_shared_storage"]], "materialize_grads (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.materialize_grads"]], "materialize_grads (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.materialize_grads"]], "materialize_grads (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.materialize_grads"]], "materialize_grads (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.materialize_grads"]], "materialize_grads (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.materialize_grads"]], "materialize_grads (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.materialize_grads"]], "materialize_grads (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.materialize_grads"]], "materialize_grads (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.materialize_grads"]], "maybe_clear_saved_tensors() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.maybe_clear_saved_tensors"]], "metadata (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.metadata"]], "metadata (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.metadata"]], "metadata (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.metadata"]], "metadata (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.metadata"]], "metadata (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.metadata"]], "metadata (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.metadata"]], "metadata (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.metadata"]], "metadata (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.metadata"]], "name() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.name"]], "name() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.name"]], "name() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.name"]], "name() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.name"]], "name() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.name"]], "name() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.name"]], "name() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.name"]], "name() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.name"]], "needs_input_grad (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.needs_input_grad"]], "needs_input_grad (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.needs_input_grad"]], "needs_input_grad (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.needs_input_grad"]], "needs_input_grad (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.needs_input_grad"]], "needs_input_grad (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.needs_input_grad"]], "needs_input_grad (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.needs_input_grad"]], "needs_input_grad (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.needs_input_grad"]], "needs_input_grad (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.needs_input_grad"]], "next_functions (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.next_functions"]], "next_functions (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.next_functions"]], "next_functions (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.next_functions"]], "next_functions (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.next_functions"]], "next_functions (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.next_functions"]], "next_functions (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.next_functions"]], "next_functions (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.next_functions"]], "next_functions (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.next_functions"]], "non_differentiable (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.non_differentiable"]], "non_differentiable (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.non_differentiable"]], "non_differentiable (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.non_differentiable"]], "non_differentiable (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.non_differentiable"]], "non_differentiable (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.non_differentiable"]], "non_differentiable (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.non_differentiable"]], "non_differentiable (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.non_differentiable"]], "non_differentiable (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.non_differentiable"]], "register_hook() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.register_hook"]], "register_hook() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.register_hook"]], "register_hook() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.register_hook"]], "register_hook() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.register_hook"]], "register_hook() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.register_hook"]], "register_hook() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.register_hook"]], "register_hook() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.register_hook"]], "register_hook() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.register_hook"]], "register_prehook() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.register_prehook"]], "register_prehook() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.register_prehook"]], "register_prehook() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.register_prehook"]], "register_prehook() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.register_prehook"]], "register_prehook() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.register_prehook"]], "register_prehook() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.register_prehook"]], "register_prehook() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.register_prehook"]], "register_prehook() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.register_prehook"]], "requires_grad (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.requires_grad"]], "requires_grad (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.requires_grad"]], "requires_grad (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.requires_grad"]], "requires_grad (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.requires_grad"]], "requires_grad (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.requires_grad"]], "requires_grad (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.requires_grad"]], "requires_grad (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.requires_grad"]], "requires_grad (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.requires_grad"]], "save_for_backward() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.save_for_backward"]], "save_for_backward() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.save_for_backward"]], "save_for_backward() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.save_for_backward"]], "save_for_backward() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.save_for_backward"]], "save_for_backward() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.save_for_backward"]], "save_for_backward() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.save_for_backward"]], "save_for_backward() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.save_for_backward"]], "save_for_backward() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.save_for_backward"]], "save_for_forward() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.save_for_forward"]], "save_for_forward() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.save_for_forward"]], "save_for_forward() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.save_for_forward"]], "save_for_forward() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.save_for_forward"]], "save_for_forward() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.save_for_forward"]], "save_for_forward() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.save_for_forward"]], "save_for_forward() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.save_for_forward"]], "save_for_forward() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.save_for_forward"]], "saved_for_forward (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.saved_for_forward"]], "saved_for_forward (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.saved_for_forward"]], "saved_for_forward (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.saved_for_forward"]], "saved_for_forward (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.saved_for_forward"]], "saved_for_forward (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.saved_for_forward"]], "saved_for_forward (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.saved_for_forward"]], "saved_for_forward (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.saved_for_forward"]], "saved_for_forward (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.saved_for_forward"]], "saved_tensors (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.saved_tensors"]], "saved_tensors (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.saved_tensors"]], "saved_tensors (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.saved_tensors"]], "saved_tensors (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.saved_tensors"]], "saved_tensors (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.saved_tensors"]], "saved_tensors (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.saved_tensors"]], "saved_tensors (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.saved_tensors"]], "saved_tensors (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.saved_tensors"]], "saved_variables (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.saved_variables"]], "saved_variables (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.saved_variables"]], "saved_variables (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.saved_variables"]], "saved_variables (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.saved_variables"]], "saved_variables (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.saved_variables"]], "saved_variables (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.saved_variables"]], "saved_variables (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.saved_variables"]], "saved_variables (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.saved_variables"]], "set_materialize_grads() (poseerror method)": [[9, "curobo.curobolib.geom.PoseError.set_materialize_grads"]], "set_materialize_grads() (poseerrordistance method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.set_materialize_grads"]], "set_materialize_grads() (sdfsphereobb method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.set_materialize_grads"]], "set_materialize_grads() (sdfspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.set_materialize_grads"]], "set_materialize_grads() (sdfsweptsphereobb method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.set_materialize_grads"]], "set_materialize_grads() (sdfsweptspherevoxel method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.set_materialize_grads"]], "set_materialize_grads() (selfcollisiondistance method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.set_materialize_grads"]], "set_materialize_grads() (selfcollisiondistanceloss method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.set_materialize_grads"]], "setup_context() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.setup_context"]], "setup_context() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.setup_context"]], "setup_context() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.setup_context"]], "setup_context() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.setup_context"]], "setup_context() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.setup_context"]], "setup_context() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.setup_context"]], "setup_context() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.setup_context"]], "setup_context() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.setup_context"]], "to_save (poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError.to_save"]], "to_save (poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance.to_save"]], "to_save (sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB.to_save"]], "to_save (sdfspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.to_save"]], "to_save (sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.to_save"]], "to_save (sdfsweptspherevoxel attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.to_save"]], "to_save (selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.to_save"]], "to_save (selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.to_save"]], "vjp() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.vjp"]], "vjp() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.vjp"]], "vjp() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.vjp"]], "vjp() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.vjp"]], "vjp() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.vjp"]], "vjp() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.vjp"]], "vjp() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.vjp"]], "vjp() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.vjp"]], "vmap() (poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.vmap"]], "vmap() (poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.vmap"]], "vmap() (sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.vmap"]], "vmap() (sdfspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSphereVoxel.vmap"]], "vmap() (sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.vmap"]], "vmap() (sdfsweptspherevoxel static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereVoxel.vmap"]], "vmap() (selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.vmap"]], "vmap() (selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.vmap"]], "closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point"]], "closest_point_voxel() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point_voxel"]], "curobo.curobolib.geom_cu": [[10, "module-curobo.curobolib.geom_cu"]], "pose_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance"]], "pose_distance_backward() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance_backward"]], "self_collision_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.self_collision_distance"]], "swept_closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point"]], "swept_closest_point_voxel() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point_voxel"]], "kinematicsfusedfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction"]], "_backward_cls (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._backward_cls"]], "_call_backward_cuda() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._call_backward_cuda"]], "_get_compiled_autograd_symints() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._materialize_non_diff_grads"]], "_raw_saved_tensors (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._raw_saved_tensors"]], "_register_hook() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._register_hook"]], "_register_hook_dict() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._register_hook_dict"]], "_sequence_nr() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._sequence_nr"]], "apply() (kinematicsfusedfunction class method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.apply"]], "backward() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.backward"]], "curobo.curobolib.kinematics": [[11, "module-curobo.curobolib.kinematics"]], "dirty_tensors (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.dirty_tensors"]], "forward() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.forward"]], "generate_vmap_rule (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.generate_vmap_rule"]], "get_cuda_kinematics() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.get_cuda_kinematics"]], "is_traceable (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.is_traceable"]], "jvp() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.jvp"]], "mark_dirty() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.mark_dirty"]], "mark_non_differentiable() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.mark_non_differentiable"]], "mark_shared_storage() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.mark_shared_storage"]], "materialize_grads (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.materialize_grads"]], "maybe_clear_saved_tensors() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.maybe_clear_saved_tensors"]], "metadata (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.metadata"]], "name() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.name"]], "needs_input_grad (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.needs_input_grad"]], "next_functions (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.next_functions"]], "non_differentiable (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.non_differentiable"]], "register_hook() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.register_hook"]], "register_prehook() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.register_prehook"]], "requires_grad (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.requires_grad"]], "rotation_matrix_to_quaternion() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.rotation_matrix_to_quaternion"]], "save_for_backward() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.save_for_backward"]], "save_for_forward() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.save_for_forward"]], "saved_for_forward (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.saved_for_forward"]], "saved_tensors (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.saved_tensors"]], "saved_variables (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.saved_variables"]], "set_materialize_grads() (kinematicsfusedfunction method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.set_materialize_grads"]], "setup_context() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.setup_context"]], "to_save (kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.to_save"]], "vjp() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.vjp"]], "vmap() (kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.vmap"]], "backward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.backward"]], "curobo.curobolib.kinematics_fused_cu": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "forward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.forward"]], "matrix_to_quaternion() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "forward() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.forward"]], "curobo.curobolib.line_search_cu": [[14, "module-curobo.curobolib.line_search_cu"]], "line_search() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.line_search"]], "update_best() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.update_best"]], "curobo.curobolib.ls": [[15, "module-curobo.curobolib.ls"]], "update_best() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.update_best"]], "wolfe_line_search() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.wolfe_line_search"]], "lbfgscu (class in curobo.curobolib.opt)": [[16, "curobo.curobolib.opt.LBFGScu"]], "_backward_cls (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu._backward_cls"]], "_get_compiled_autograd_symints() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu._materialize_non_diff_grads"]], "_raw_saved_tensors (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu._raw_saved_tensors"]], "_register_hook() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu._register_hook"]], "_register_hook_dict() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu._register_hook_dict"]], "_sequence_nr() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu._sequence_nr"]], "apply() (lbfgscu class method)": [[16, "curobo.curobolib.opt.LBFGScu.apply"]], "backward() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.backward"]], "curobo.curobolib.opt": [[16, "module-curobo.curobolib.opt"]], "dirty_tensors (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.dirty_tensors"]], "forward() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.forward"]], "generate_vmap_rule (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.generate_vmap_rule"]], "is_traceable (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.is_traceable"]], "jvp() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.jvp"]], "mark_dirty() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.mark_dirty"]], "mark_non_differentiable() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.mark_non_differentiable"]], "mark_shared_storage() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.mark_shared_storage"]], "materialize_grads (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.materialize_grads"]], "maybe_clear_saved_tensors() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.maybe_clear_saved_tensors"]], "metadata (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.metadata"]], "name() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.name"]], "needs_input_grad (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.needs_input_grad"]], "next_functions (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.next_functions"]], "non_differentiable (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.non_differentiable"]], "register_hook() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.register_hook"]], "register_prehook() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.register_prehook"]], "requires_grad (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.requires_grad"]], "save_for_backward() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.save_for_backward"]], "save_for_forward() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.save_for_forward"]], "saved_for_forward (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.saved_for_forward"]], "saved_tensors (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.saved_tensors"]], "saved_variables (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.saved_variables"]], "set_materialize_grads() (lbfgscu method)": [[16, "curobo.curobolib.opt.LBFGScu.set_materialize_grads"]], "setup_context() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.setup_context"]], "to_save (lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu.to_save"]], "vjp() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.vjp"]], "vmap() (lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.vmap"]], "curobo.curobolib.tensor_step": [[17, "module-curobo.curobolib.tensor_step"]], "tensor_step_acc_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_fwd"]], "tensor_step_acc_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_idx_fwd"]], "tensor_step_pos_clique_bwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_bwd"]], "tensor_step_pos_clique_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_fwd"]], "tensor_step_pos_clique_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, "module-curobo.curobolib.tensor_step_cu"]], "step_acceleration() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration"]], "step_acceleration_idx() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration_idx"]], "step_idx_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_idx_position2"]], "step_position() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position"]], "step_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position2"]], "step_position_backward() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward"]], "step_position_backward2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward2"]], "add_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.add_cpp_path"]], "curobo.curobolib.util_file": [[19, "module-curobo.curobolib.util_file"]], "get_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.get_cpp_path"]], "join_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.join_path"]], "curobo.geom": [[20, "module-curobo.geom"]], "curobo.geom.cv": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf": [[22, "module-curobo.geom.sdf"]], "sdfgrid (class in curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid"]], "_backward_cls (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._backward_cls"]], "_get_compiled_autograd_symints() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._materialize_non_diff_grads"]], "_raw_saved_tensors (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._raw_saved_tensors"]], "_register_hook() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._register_hook"]], "_register_hook_dict() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._register_hook_dict"]], "_sequence_nr() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._sequence_nr"]], "apply() (sdfgrid class method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.apply"]], "backward() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.backward"]], "compute_sdf_gradient() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.compute_sdf_gradient"]], "curobo.geom.sdf.sdf_grid": [[23, "module-curobo.geom.sdf.sdf_grid"]], "dirty_tensors (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.dirty_tensors"]], "forward() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.forward"]], "generate_vmap_rule (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.generate_vmap_rule"]], "is_traceable (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.is_traceable"]], "jvp() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.jvp"]], "lookup_distance() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.lookup_distance"]], "mark_dirty() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.mark_dirty"]], "mark_non_differentiable() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.mark_non_differentiable"]], "mark_shared_storage() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.mark_shared_storage"]], "materialize_grads (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.materialize_grads"]], "maybe_clear_saved_tensors() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.maybe_clear_saved_tensors"]], "metadata (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.metadata"]], "name() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.name"]], "needs_input_grad (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.needs_input_grad"]], "next_functions (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.next_functions"]], "non_differentiable (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.non_differentiable"]], "register_hook() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.register_hook"]], "register_prehook() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.register_prehook"]], "requires_grad (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.requires_grad"]], "save_for_backward() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.save_for_backward"]], "save_for_forward() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.save_for_forward"]], "saved_for_forward (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.saved_for_forward"]], "saved_tensors (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.saved_tensors"]], "saved_variables (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.saved_variables"]], "set_materialize_grads() (sdfgrid method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.set_materialize_grads"]], "setup_context() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.setup_context"]], "to_save (sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.to_save"]], "vjp() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.vjp"]], "vmap() (sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.vmap"]], "create_collision_checker() (in module curobo.geom.sdf.utils)": [[24, "curobo.geom.sdf.utils.create_collision_checker"]], "curobo.geom.sdf.utils": [[24, "module-curobo.geom.sdf.utils"]], "sdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy"]], "sweptsdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy"]], "_backward_cls (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._backward_cls"]], "_backward_cls (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._backward_cls"]], "_get_compiled_autograd_symints() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._materialize_non_diff_grads"]], "_materialize_non_diff_grads (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._materialize_non_diff_grads"]], "_raw_saved_tensors (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._raw_saved_tensors"]], "_raw_saved_tensors (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._raw_saved_tensors"]], "_register_hook() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._register_hook"]], "_register_hook() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._register_hook"]], "_register_hook_dict() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._register_hook_dict"]], "_register_hook_dict() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._register_hook_dict"]], "_sequence_nr() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._sequence_nr"]], "_sequence_nr() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._sequence_nr"]], "apply() (sdfmeshwarppy class method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.apply"]], "apply() (sweptsdfmeshwarppy class method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.apply"]], "backward() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.backward"]], "backward() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.backward"]], "curobo.geom.sdf.warp_primitives": [[25, "module-curobo.geom.sdf.warp_primitives"]], "dirty_tensors (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.dirty_tensors"]], "dirty_tensors (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.dirty_tensors"]], "forward() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.forward"]], "forward() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.forward"]], "generate_vmap_rule (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.generate_vmap_rule"]], "generate_vmap_rule (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.generate_vmap_rule"]], "is_traceable (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.is_traceable"]], "is_traceable (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.is_traceable"]], "jvp() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.jvp"]], "jvp() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.jvp"]], "mark_dirty() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.mark_dirty"]], "mark_dirty() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.mark_dirty"]], "mark_non_differentiable() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.mark_non_differentiable"]], "mark_non_differentiable() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.mark_non_differentiable"]], "mark_shared_storage() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.mark_shared_storage"]], "mark_shared_storage() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.mark_shared_storage"]], "materialize_grads (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.materialize_grads"]], "materialize_grads (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.materialize_grads"]], "maybe_clear_saved_tensors() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.maybe_clear_saved_tensors"]], "metadata (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.metadata"]], "metadata (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.metadata"]], "name() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.name"]], "name() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.name"]], "needs_input_grad (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.needs_input_grad"]], "needs_input_grad (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.needs_input_grad"]], "next_functions (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.next_functions"]], "next_functions (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.next_functions"]], "non_differentiable (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.non_differentiable"]], "non_differentiable (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.non_differentiable"]], "register_hook() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.register_hook"]], "register_hook() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.register_hook"]], "register_prehook() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.register_prehook"]], "register_prehook() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.register_prehook"]], "requires_grad (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.requires_grad"]], "requires_grad (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.requires_grad"]], "save_for_backward() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.save_for_backward"]], "save_for_backward() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.save_for_backward"]], "save_for_forward() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.save_for_forward"]], "save_for_forward() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.save_for_forward"]], "saved_for_forward (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.saved_for_forward"]], "saved_for_forward (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.saved_for_forward"]], "saved_tensors (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.saved_tensors"]], "saved_tensors (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.saved_tensors"]], "saved_variables (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.saved_variables"]], "saved_variables (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.saved_variables"]], "set_materialize_grads() (sdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.set_materialize_grads"]], "set_materialize_grads() (sweptsdfmeshwarppy method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.set_materialize_grads"]], "setup_context() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.setup_context"]], "setup_context() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.setup_context"]], "to_save (sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.to_save"]], "to_save (sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.to_save"]], "vjp() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.vjp"]], "vjp() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.vjp"]], "vmap() (sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.vmap"]], "vmap() (sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.vmap"]], "blox (collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.BLOX"]], "collisionbuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionBuffer"]], "collisioncheckertype (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionCheckerType"]], "collisionquerybuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer"]], "mesh (collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.MESH"]], "primitive (collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.PRIMITIVE"]], "voxel (collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.VOXEL"]], "worldcollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollision"]], "worldcollisionconfig (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig"]], "worldprimitivecollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision"]], "_create_obb_cache() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._create_obb_cache"]], "_get_obstacle_poses() (worldprimitivecollision class method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._get_obstacle_poses"]], "_init_cache() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._init_cache"]], "_load_collision_model_in_cache() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._load_collision_model_in_cache"]], "_update_from_shape() (collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer._update_from_shape"]], "add_obb() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb"]], "add_obb_from_raw() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb_from_raw"]], "blox_collision_buffer (collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.blox_collision_buffer"]], "cache (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.cache"]], "cache (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.cache"]], "cache (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.cache"]], "checker_type (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.checker_type"]], "checker_type (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.checker_type"]], "checker_type (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.checker_type"]], "clear_cache() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.clear_cache"]], "clear_voxelization_cache() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.clear_voxelization_cache"]], "clear_voxelization_cache() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.clear_voxelization_cache"]], "clone() (collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.clone"]], "clone() (collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.clone"]], "create_from_shape() (collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.create_from_shape"]], "curobo.geom.sdf.world": [[26, "module-curobo.geom.sdf.world"]], "distance_buffer (collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.distance_buffer"]], "enable_obb() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obb"]], "enable_obstacle() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obstacle"]], "get_esdf_in_bounding_box() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_esdf_in_bounding_box"]], "get_esdf_in_bounding_box() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_esdf_in_bounding_box"]], "get_gradient_buffer() (collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.get_gradient_buffer"]], "get_mesh_in_bounding_box() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_mesh_in_bounding_box"]], "get_mesh_in_bounding_box() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_obb_idx"]], "get_occupancy_in_bounding_box() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_occupancy_in_bounding_box"]], "get_occupancy_in_bounding_box() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_occupancy_in_bounding_box"]], "get_sphere_collision() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_collision"]], "get_sphere_collision() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_collision"]], "get_sphere_distance() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_distance"]], "get_sphere_distance() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_distance"]], "get_sphere_trace() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_trace"]], "get_sphere_trace() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_trace"]], "get_swept_sphere_collision() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_collision"]], "get_swept_sphere_collision() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_distance"]], "get_swept_sphere_distance() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_distance"]], "get_voxels_in_bounding_box() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_voxels_in_bounding_box"]], "get_voxels_in_bounding_box() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_voxels_in_bounding_box"]], "grad_distance_buffer (collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.grad_distance_buffer"]], "initialize_from_shape() (collisionbuffer class method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.initialize_from_shape"]], "initialize_from_shape() (collisionquerybuffer class method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.initialize_from_shape"]], "load_batch_collision_model() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_batch_collision_model"]], "load_collision_model() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.load_collision_model"]], "load_collision_model() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_collision_model"]], "load_from_dict() (worldcollision static method)": [[26, "curobo.geom.sdf.world.WorldCollision.load_from_dict"]], "load_from_dict() (worldcollisionconfig static method)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.load_from_dict"]], "load_from_dict() (worldprimitivecollision static method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_from_dict"]], "max_distance (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.max_distance"]], "max_distance (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.max_distance"]], "max_distance (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.max_distance"]], "max_esdf_distance (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.max_esdf_distance"]], "max_esdf_distance (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.max_esdf_distance"]], "max_esdf_distance (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.max_esdf_distance"]], "mesh_collision_buffer (collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.mesh_collision_buffer"]], "n_envs (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.n_envs"]], "n_envs (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.n_envs"]], "n_envs (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.n_envs"]], "primitive_collision_buffer (collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.primitive_collision_buffer"]], "shape (collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.shape"]], "shape (collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.shape"]], "sparsity_index_buffer (collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.sparsity_index_buffer"]], "tensor_args (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.tensor_args"]], "tensor_args (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.tensor_args"]], "tensor_args (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.tensor_args"]], "update_buffer_shape() (collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.update_buffer_shape"]], "update_buffer_shape() (collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.update_buffer_shape"]], "update_cache_voxelization() (worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.update_cache_voxelization"]], "update_cache_voxelization() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_cache_voxelization"]], "update_obb_dims() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_dims"]], "update_obb_pose() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_pose"]], "update_obstacle_pose() (worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obstacle_pose"]], "voxel_collision_buffer (collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.voxel_collision_buffer"]], "world_model (worldcollision attribute)": [[26, "curobo.geom.sdf.world.WorldCollision.world_model"]], "world_model (worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.world_model"]], "world_model (worldprimitivecollision attribute)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.world_model"]], "worldbloxcollision (class in curobo.geom.sdf.world_blox)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision"]], "_batch_tensor_voxel() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._batch_tensor_voxel"]], "_create_mesh_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._create_mesh_cache"]], "_create_obb_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._create_obb_cache"]], "_create_voxel_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._create_voxel_cache"]], "_get_blox_sdf() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_sdf"]], "_get_blox_swept_sdf() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_swept_sdf"]], "_get_obstacle_poses() (worldbloxcollision class method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_obstacle_poses"]], "_get_sdf() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_sdf"]], "_get_swept_sdf() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_swept_sdf"]], "_init_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._init_cache"]], "_load_batch_mesh_to_warp() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._load_batch_mesh_to_warp"]], "_load_collision_model_in_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._load_collision_model_in_cache"]], "_load_mesh_into_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._load_mesh_into_cache"]], "_load_mesh_to_warp() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._load_mesh_to_warp"]], "_load_voxel_collision_model_in_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._load_voxel_collision_model_in_cache"]], "add_camera_frame() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_camera_frame"]], "add_mesh() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_mesh"]], "add_obb() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_obb"]], "add_obb_from_raw() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_obb_from_raw"]], "cache (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.cache"]], "checker_type (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.checker_type"]], "clear_blox_layer() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_blox_layer"]], "clear_bounding_box() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_bounding_box"]], "clear_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_cache"]], "clear_voxelization_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_voxelization_cache"]], "create_collision_cache() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.create_collision_cache"]], "curobo.geom.sdf.world_blox": [[27, "module-curobo.geom.sdf.world_blox"]], "decay_layer() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.decay_layer"]], "enable_blox() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_blox"]], "enable_mesh() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_mesh"]], "enable_obb() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_obb"]], "enable_obstacle() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_obstacle"]], "enable_voxel() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_voxel"]], "get_bounding_spheres() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_bounding_spheres"]], "get_esdf_in_bounding_box() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_esdf_in_bounding_box"]], "get_mesh_from_blox_layer() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_from_blox_layer"]], "get_mesh_idx() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_idx"]], "get_mesh_in_bounding_box() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_obb_idx"]], "get_occupancy_in_bounding_box() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_occupancy_in_bounding_box"]], "get_sphere_collision() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_collision"]], "get_sphere_distance() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_distance"]], "get_sphere_trace() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_trace"]], "get_swept_sphere_collision() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_distance"]], "get_voxel_grid() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_voxel_grid"]], "get_voxel_grid_shape() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_voxel_grid_shape"]], "get_voxel_idx() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_voxel_idx"]], "get_voxels_in_bounding_box() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_voxels_in_bounding_box"]], "load_batch_collision_model() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_batch_collision_model"]], "load_collision_model() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_collision_model"]], "load_from_dict() (worldbloxcollision static method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_from_dict"]], "max_distance (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.max_distance"]], "max_esdf_distance (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.max_esdf_distance"]], "n_envs (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.n_envs"]], "process_camera_frames() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.process_camera_frames"]], "save_layer() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.save_layer"]], "tensor_args (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.tensor_args"]], "update_all_mesh_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_all_mesh_pose"]], "update_blox_esdf() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_esdf"]], "update_blox_hashes() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_hashes"]], "update_blox_mesh() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_mesh"]], "update_blox_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_pose"]], "update_cache_voxelization() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_cache_voxelization"]], "update_mesh_from_warp() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_mesh_from_warp"]], "update_mesh_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_mesh_pose"]], "update_mesh_pose_env() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_mesh_pose_env"]], "update_obb_dims() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_obb_dims"]], "update_obb_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_obb_pose"]], "update_obstacle_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_obstacle_pose"]], "update_voxel_data() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_voxel_data"]], "update_voxel_features() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_voxel_features"]], "update_voxel_pose() (worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_voxel_pose"]], "world_model (worldbloxcollision attribute)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.world_model"]], "warpmeshdata (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData"]], "worldmeshcollision (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision"]], "_create_mesh_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._create_mesh_cache"]], "_create_obb_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._create_obb_cache"]], "_get_obstacle_poses() (worldmeshcollision class method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_obstacle_poses"]], "_get_sdf() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_sdf"]], "_get_swept_sdf() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_swept_sdf"]], "_init_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._init_cache"]], "_load_batch_mesh_to_warp() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_batch_mesh_to_warp"]], "_load_collision_model_in_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_collision_model_in_cache"]], "_load_mesh_into_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_into_cache"]], "_load_mesh_to_warp() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_to_warp"]], "add_mesh() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_mesh"]], "add_obb() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_obb"]], "add_obb_from_raw() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_obb_from_raw"]], "cache (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.cache"]], "checker_type (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.checker_type"]], "clear_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.clear_cache"]], "clear_voxelization_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.clear_voxelization_cache"]], "create_collision_cache() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.create_collision_cache"]], "curobo.geom.sdf.world_mesh": [[28, "module-curobo.geom.sdf.world_mesh"]], "enable_mesh() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_mesh"]], "enable_obb() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_obb"]], "enable_obstacle() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_obstacle"]], "faces (warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.faces"]], "get_esdf_in_bounding_box() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_esdf_in_bounding_box"]], "get_mesh_idx() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_mesh_idx"]], "get_mesh_in_bounding_box() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_obb_idx"]], "get_occupancy_in_bounding_box() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_occupancy_in_bounding_box"]], "get_sphere_collision() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_collision"]], "get_sphere_distance() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_distance"]], "get_sphere_trace() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_trace"]], "get_swept_sphere_collision() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_distance"]], "get_voxels_in_bounding_box() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_voxels_in_bounding_box"]], "load_batch_collision_model() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_batch_collision_model"]], "load_collision_model() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_collision_model"]], "load_from_dict() (worldmeshcollision static method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_from_dict"]], "m_id (warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.m_id"]], "max_distance (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.max_distance"]], "max_esdf_distance (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.max_esdf_distance"]], "mesh (warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.mesh"]], "n_envs (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.n_envs"]], "name (warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.name"]], "tensor_args (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.tensor_args"]], "update_all_mesh_pose() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_all_mesh_pose"]], "update_cache_voxelization() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_cache_voxelization"]], "update_mesh_from_warp() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_from_warp"]], "update_mesh_pose() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose"]], "update_mesh_pose_env() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose_env"]], "update_obb_dims() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obb_dims"]], "update_obb_pose() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obb_pose"]], "update_obstacle_pose() (worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obstacle_pose"]], "vertices (warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.vertices"]], "world_model (worldmeshcollision attribute)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.world_model"]], "worldvoxelcollision (class in curobo.geom.sdf.world_voxel)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision"]], "_batch_tensor_voxel() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._batch_tensor_voxel"]], "_create_mesh_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._create_mesh_cache"]], "_create_obb_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._create_obb_cache"]], "_create_voxel_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._create_voxel_cache"]], "_get_obstacle_poses() (worldvoxelcollision class method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._get_obstacle_poses"]], "_get_sdf() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._get_sdf"]], "_get_swept_sdf() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._get_swept_sdf"]], "_init_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._init_cache"]], "_load_batch_mesh_to_warp() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_batch_mesh_to_warp"]], "_load_collision_model_in_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_collision_model_in_cache"]], "_load_mesh_into_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_mesh_into_cache"]], "_load_mesh_to_warp() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_mesh_to_warp"]], "_load_voxel_collision_model_in_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision._load_voxel_collision_model_in_cache"]], "add_mesh() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.add_mesh"]], "add_obb() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.add_obb"]], "add_obb_from_raw() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.add_obb_from_raw"]], "cache (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.cache"]], "checker_type (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.checker_type"]], "clear_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.clear_cache"]], "clear_voxelization_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.clear_voxelization_cache"]], "create_collision_cache() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.create_collision_cache"]], "curobo.geom.sdf.world_voxel": [[29, "module-curobo.geom.sdf.world_voxel"]], "enable_mesh() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_mesh"]], "enable_obb() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_obb"]], "enable_obstacle() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_obstacle"]], "enable_voxel() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.enable_voxel"]], "get_esdf_in_bounding_box() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_esdf_in_bounding_box"]], "get_mesh_idx() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_mesh_idx"]], "get_mesh_in_bounding_box() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_obb_idx"]], "get_occupancy_in_bounding_box() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_occupancy_in_bounding_box"]], "get_sphere_collision() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_sphere_collision"]], "get_sphere_distance() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_sphere_distance"]], "get_sphere_trace() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_sphere_trace"]], "get_swept_sphere_collision() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_swept_sphere_distance"]], "get_voxel_grid() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxel_grid"]], "get_voxel_grid_shape() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxel_grid_shape"]], "get_voxel_idx() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxel_idx"]], "get_voxels_in_bounding_box() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.get_voxels_in_bounding_box"]], "load_batch_collision_model() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.load_batch_collision_model"]], "load_collision_model() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.load_collision_model"]], "load_from_dict() (worldvoxelcollision static method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.load_from_dict"]], "max_distance (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.max_distance"]], "max_esdf_distance (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.max_esdf_distance"]], "n_envs (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.n_envs"]], "tensor_args (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.tensor_args"]], "update_all_mesh_pose() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_all_mesh_pose"]], "update_cache_voxelization() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_cache_voxelization"]], "update_mesh_from_warp() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_mesh_from_warp"]], "update_mesh_pose() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_mesh_pose"]], "update_mesh_pose_env() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_mesh_pose_env"]], "update_obb_dims() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_obb_dims"]], "update_obb_pose() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_obb_pose"]], "update_obstacle_pose() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_obstacle_pose"]], "update_voxel_data() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_data"]], "update_voxel_features() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_features"]], "update_voxel_pose() (worldvoxelcollision method)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.update_voxel_pose"]], "world_model (worldvoxelcollision attribute)": [[29, "curobo.geom.sdf.world_voxel.WorldVoxelCollision.world_model"]], "sample_surface (spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.SAMPLE_SURFACE"]], "spherefittype (class in curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.SphereFitType"]], "voxel_surface (spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_SURFACE"]], "voxel_volume (spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME"]], "voxel_volume_inside (spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_INSIDE"]], "voxel_volume_sample_surface (spherefittype attribute)": [[30, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.sphere_fit": [[30, "module-curobo.geom.sphere_fit"]], "fit_spheres_to_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.fit_spheres_to_mesh"]], "get_voxel_pitch() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.get_voxel_pitch"]], "get_voxelgrid_from_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.get_voxelgrid_from_mesh"]], "sample_even_fit_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.sample_even_fit_mesh"]], "voxel_fit_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_mesh"]], "voxel_fit_surface_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_surface_mesh"]], "voxel_fit_volume_inside_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_volume_inside_mesh"]], "voxel_fit_volume_sample_surface_mesh() (in module curobo.geom.sphere_fit)": [[30, "curobo.geom.sphere_fit.voxel_fit_volume_sample_surface_mesh"]], "batchtransformpoint (class in curobo.geom.transform)": [[31, "curobo.geom.transform.BatchTransformPoint"]], "batchtransformpose (class in curobo.geom.transform)": [[31, "curobo.geom.transform.BatchTransformPose"]], "matrixtoquaternion (class in curobo.geom.transform)": [[31, "curobo.geom.transform.MatrixToQuaternion"]], "poseinverse (class in curobo.geom.transform)": [[31, "curobo.geom.transform.PoseInverse"]], "quattomatrix (class in curobo.geom.transform)": [[31, "curobo.geom.transform.QuatToMatrix"]], "transformpoint (class in curobo.geom.transform)": [[31, "curobo.geom.transform.TransformPoint"]], "transformpose (class in curobo.geom.transform)": [[31, "curobo.geom.transform.TransformPose"]], "_backward_cls (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint._backward_cls"]], "_backward_cls (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose._backward_cls"]], "_backward_cls (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion._backward_cls"]], "_backward_cls (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse._backward_cls"]], "_backward_cls (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix._backward_cls"]], "_backward_cls (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint._backward_cls"]], "_backward_cls (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose._backward_cls"]], "_get_compiled_autograd_symints() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (transformpose method)": [[31, "curobo.geom.transform.TransformPose._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (transformpose method)": [[31, "curobo.geom.transform.TransformPose._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint._materialize_non_diff_grads"]], "_materialize_non_diff_grads (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose._materialize_non_diff_grads"]], "_materialize_non_diff_grads (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion._materialize_non_diff_grads"]], "_materialize_non_diff_grads (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse._materialize_non_diff_grads"]], "_materialize_non_diff_grads (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix._materialize_non_diff_grads"]], "_materialize_non_diff_grads (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint._materialize_non_diff_grads"]], "_materialize_non_diff_grads (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose._materialize_non_diff_grads"]], "_raw_saved_tensors (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint._raw_saved_tensors"]], "_raw_saved_tensors (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose._raw_saved_tensors"]], "_raw_saved_tensors (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion._raw_saved_tensors"]], "_raw_saved_tensors (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse._raw_saved_tensors"]], "_raw_saved_tensors (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix._raw_saved_tensors"]], "_raw_saved_tensors (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint._raw_saved_tensors"]], "_raw_saved_tensors (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose._raw_saved_tensors"]], "_register_hook() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint._register_hook"]], "_register_hook() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose._register_hook"]], "_register_hook() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion._register_hook"]], "_register_hook() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse._register_hook"]], "_register_hook() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix._register_hook"]], "_register_hook() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint._register_hook"]], "_register_hook() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose._register_hook"]], "_register_hook_dict() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint._register_hook_dict"]], "_register_hook_dict() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose._register_hook_dict"]], "_register_hook_dict() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion._register_hook_dict"]], "_register_hook_dict() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse._register_hook_dict"]], "_register_hook_dict() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix._register_hook_dict"]], "_register_hook_dict() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint._register_hook_dict"]], "_register_hook_dict() (transformpose method)": [[31, "curobo.geom.transform.TransformPose._register_hook_dict"]], "_sequence_nr() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint._sequence_nr"]], "_sequence_nr() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose._sequence_nr"]], "_sequence_nr() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion._sequence_nr"]], "_sequence_nr() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse._sequence_nr"]], "_sequence_nr() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix._sequence_nr"]], "_sequence_nr() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint._sequence_nr"]], "_sequence_nr() (transformpose method)": [[31, "curobo.geom.transform.TransformPose._sequence_nr"]], "apply() (batchtransformpoint class method)": [[31, "curobo.geom.transform.BatchTransformPoint.apply"]], "apply() (batchtransformpose class method)": [[31, "curobo.geom.transform.BatchTransformPose.apply"]], "apply() (matrixtoquaternion class method)": [[31, "curobo.geom.transform.MatrixToQuaternion.apply"]], "apply() (poseinverse class method)": [[31, "curobo.geom.transform.PoseInverse.apply"]], "apply() (quattomatrix class method)": [[31, "curobo.geom.transform.QuatToMatrix.apply"]], "apply() (transformpoint class method)": [[31, "curobo.geom.transform.TransformPoint.apply"]], "apply() (transformpose class method)": [[31, "curobo.geom.transform.TransformPose.apply"]], "backward() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.backward"]], "backward() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.backward"]], "backward() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.backward"]], "backward() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.backward"]], "backward() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.backward"]], "backward() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.backward"]], "backward() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.backward"]], "batch_transform_points() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.batch_transform_points"]], "cuda_matrix_to_quaternion() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.cuda_matrix_to_quaternion"]], "curobo.geom.transform": [[31, "module-curobo.geom.transform"]], "dirty_tensors (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.dirty_tensors"]], "dirty_tensors (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.dirty_tensors"]], "dirty_tensors (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.dirty_tensors"]], "dirty_tensors (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.dirty_tensors"]], "dirty_tensors (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.dirty_tensors"]], "dirty_tensors (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.dirty_tensors"]], "dirty_tensors (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.dirty_tensors"]], "forward() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.forward"]], "forward() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.forward"]], "forward() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.forward"]], "forward() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.forward"]], "forward() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.forward"]], "forward() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.forward"]], "forward() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.forward"]], "generate_vmap_rule (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.generate_vmap_rule"]], "generate_vmap_rule (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.generate_vmap_rule"]], "generate_vmap_rule (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.generate_vmap_rule"]], "generate_vmap_rule (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.generate_vmap_rule"]], "generate_vmap_rule (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.generate_vmap_rule"]], "generate_vmap_rule (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.generate_vmap_rule"]], "generate_vmap_rule (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.generate_vmap_rule"]], "is_traceable (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.is_traceable"]], "is_traceable (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.is_traceable"]], "is_traceable (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.is_traceable"]], "is_traceable (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.is_traceable"]], "is_traceable (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.is_traceable"]], "is_traceable (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.is_traceable"]], "is_traceable (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.is_traceable"]], "jvp() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.jvp"]], "jvp() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.jvp"]], "jvp() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.jvp"]], "jvp() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.jvp"]], "jvp() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.jvp"]], "jvp() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.jvp"]], "jvp() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.jvp"]], "mark_dirty() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.mark_dirty"]], "mark_dirty() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.mark_dirty"]], "mark_dirty() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.mark_dirty"]], "mark_dirty() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.mark_dirty"]], "mark_dirty() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.mark_dirty"]], "mark_dirty() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.mark_dirty"]], "mark_dirty() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.mark_dirty"]], "mark_non_differentiable() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.mark_non_differentiable"]], "mark_non_differentiable() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.mark_non_differentiable"]], "mark_non_differentiable() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.mark_non_differentiable"]], "mark_non_differentiable() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.mark_non_differentiable"]], "mark_non_differentiable() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.mark_non_differentiable"]], "mark_non_differentiable() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.mark_non_differentiable"]], "mark_non_differentiable() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.mark_non_differentiable"]], "mark_shared_storage() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.mark_shared_storage"]], "mark_shared_storage() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.mark_shared_storage"]], "mark_shared_storage() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.mark_shared_storage"]], "mark_shared_storage() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.mark_shared_storage"]], "mark_shared_storage() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.mark_shared_storage"]], "mark_shared_storage() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.mark_shared_storage"]], "mark_shared_storage() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.mark_shared_storage"]], "materialize_grads (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.materialize_grads"]], "materialize_grads (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.materialize_grads"]], "materialize_grads (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.materialize_grads"]], "materialize_grads (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.materialize_grads"]], "materialize_grads (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.materialize_grads"]], "materialize_grads (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.materialize_grads"]], "materialize_grads (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.materialize_grads"]], "matrix_to_quaternion() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.matrix_to_quaternion"]], "maybe_clear_saved_tensors() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.maybe_clear_saved_tensors"]], "metadata (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.metadata"]], "metadata (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.metadata"]], "metadata (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.metadata"]], "metadata (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.metadata"]], "metadata (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.metadata"]], "metadata (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.metadata"]], "metadata (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.metadata"]], "name() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.name"]], "name() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.name"]], "name() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.name"]], "name() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.name"]], "name() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.name"]], "name() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.name"]], "name() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.name"]], "needs_input_grad (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.needs_input_grad"]], "needs_input_grad (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.needs_input_grad"]], "needs_input_grad (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.needs_input_grad"]], "needs_input_grad (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.needs_input_grad"]], "needs_input_grad (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.needs_input_grad"]], "needs_input_grad (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.needs_input_grad"]], "needs_input_grad (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.needs_input_grad"]], "next_functions (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.next_functions"]], "next_functions (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.next_functions"]], "next_functions (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.next_functions"]], "next_functions (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.next_functions"]], "next_functions (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.next_functions"]], "next_functions (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.next_functions"]], "next_functions (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.next_functions"]], "non_differentiable (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.non_differentiable"]], "non_differentiable (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.non_differentiable"]], "non_differentiable (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.non_differentiable"]], "non_differentiable (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.non_differentiable"]], "non_differentiable (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.non_differentiable"]], "non_differentiable (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.non_differentiable"]], "non_differentiable (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.non_differentiable"]], "pose_inverse() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_inverse"]], "pose_multiply() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_multiply"]], "pose_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.pose_to_matrix"]], "quaternion_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.quaternion_to_matrix"]], "register_hook() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.register_hook"]], "register_hook() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.register_hook"]], "register_hook() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.register_hook"]], "register_hook() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.register_hook"]], "register_hook() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.register_hook"]], "register_hook() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.register_hook"]], "register_hook() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.register_hook"]], "register_prehook() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.register_prehook"]], "register_prehook() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.register_prehook"]], "register_prehook() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.register_prehook"]], "register_prehook() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.register_prehook"]], "register_prehook() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.register_prehook"]], "register_prehook() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.register_prehook"]], "register_prehook() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.register_prehook"]], "requires_grad (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.requires_grad"]], "requires_grad (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.requires_grad"]], "requires_grad (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.requires_grad"]], "requires_grad (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.requires_grad"]], "requires_grad (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.requires_grad"]], "requires_grad (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.requires_grad"]], "requires_grad (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.requires_grad"]], "save_for_backward() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.save_for_backward"]], "save_for_backward() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.save_for_backward"]], "save_for_backward() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.save_for_backward"]], "save_for_backward() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.save_for_backward"]], "save_for_backward() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.save_for_backward"]], "save_for_backward() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.save_for_backward"]], "save_for_backward() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.save_for_backward"]], "save_for_forward() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.save_for_forward"]], "save_for_forward() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.save_for_forward"]], "save_for_forward() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.save_for_forward"]], "save_for_forward() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.save_for_forward"]], "save_for_forward() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.save_for_forward"]], "save_for_forward() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.save_for_forward"]], "save_for_forward() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.save_for_forward"]], "saved_for_forward (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.saved_for_forward"]], "saved_for_forward (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.saved_for_forward"]], "saved_for_forward (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.saved_for_forward"]], "saved_for_forward (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.saved_for_forward"]], "saved_for_forward (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.saved_for_forward"]], "saved_for_forward (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.saved_for_forward"]], "saved_for_forward (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.saved_for_forward"]], "saved_tensors (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.saved_tensors"]], "saved_tensors (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.saved_tensors"]], "saved_tensors (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.saved_tensors"]], "saved_tensors (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.saved_tensors"]], "saved_tensors (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.saved_tensors"]], "saved_tensors (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.saved_tensors"]], "saved_tensors (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.saved_tensors"]], "saved_variables (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.saved_variables"]], "saved_variables (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.saved_variables"]], "saved_variables (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.saved_variables"]], "saved_variables (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.saved_variables"]], "saved_variables (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.saved_variables"]], "saved_variables (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.saved_variables"]], "saved_variables (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.saved_variables"]], "set_materialize_grads() (batchtransformpoint method)": [[31, "curobo.geom.transform.BatchTransformPoint.set_materialize_grads"]], "set_materialize_grads() (batchtransformpose method)": [[31, "curobo.geom.transform.BatchTransformPose.set_materialize_grads"]], "set_materialize_grads() (matrixtoquaternion method)": [[31, "curobo.geom.transform.MatrixToQuaternion.set_materialize_grads"]], "set_materialize_grads() (poseinverse method)": [[31, "curobo.geom.transform.PoseInverse.set_materialize_grads"]], "set_materialize_grads() (quattomatrix method)": [[31, "curobo.geom.transform.QuatToMatrix.set_materialize_grads"]], "set_materialize_grads() (transformpoint method)": [[31, "curobo.geom.transform.TransformPoint.set_materialize_grads"]], "set_materialize_grads() (transformpose method)": [[31, "curobo.geom.transform.TransformPose.set_materialize_grads"]], "setup_context() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.setup_context"]], "setup_context() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.setup_context"]], "setup_context() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.setup_context"]], "setup_context() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.setup_context"]], "setup_context() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.setup_context"]], "setup_context() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.setup_context"]], "setup_context() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.setup_context"]], "to_save (batchtransformpoint attribute)": [[31, "curobo.geom.transform.BatchTransformPoint.to_save"]], "to_save (batchtransformpose attribute)": [[31, "curobo.geom.transform.BatchTransformPose.to_save"]], "to_save (matrixtoquaternion attribute)": [[31, "curobo.geom.transform.MatrixToQuaternion.to_save"]], "to_save (poseinverse attribute)": [[31, "curobo.geom.transform.PoseInverse.to_save"]], "to_save (quattomatrix attribute)": [[31, "curobo.geom.transform.QuatToMatrix.to_save"]], "to_save (transformpoint attribute)": [[31, "curobo.geom.transform.TransformPoint.to_save"]], "to_save (transformpose attribute)": [[31, "curobo.geom.transform.TransformPose.to_save"]], "torch_quaternion_to_matrix() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.torch_quaternion_to_matrix"]], "transform_points() (in module curobo.geom.transform)": [[31, "curobo.geom.transform.transform_points"]], "vjp() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.vjp"]], "vjp() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.vjp"]], "vjp() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.vjp"]], "vjp() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.vjp"]], "vjp() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.vjp"]], "vjp() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.vjp"]], "vjp() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.vjp"]], "vmap() (batchtransformpoint static method)": [[31, "curobo.geom.transform.BatchTransformPoint.vmap"]], "vmap() (batchtransformpose static method)": [[31, "curobo.geom.transform.BatchTransformPose.vmap"]], "vmap() (matrixtoquaternion static method)": [[31, "curobo.geom.transform.MatrixToQuaternion.vmap"]], "vmap() (poseinverse static method)": [[31, "curobo.geom.transform.PoseInverse.vmap"]], "vmap() (quattomatrix static method)": [[31, "curobo.geom.transform.QuatToMatrix.vmap"]], "vmap() (transformpoint static method)": [[31, "curobo.geom.transform.TransformPoint.vmap"]], "vmap() (transformpose static method)": [[31, "curobo.geom.transform.TransformPose.vmap"]], "bloxmap (class in curobo.geom.types)": [[32, "curobo.geom.types.BloxMap"]], "capsule (class in curobo.geom.types)": [[32, "curobo.geom.types.Capsule"]], "cuboid (class in curobo.geom.types)": [[32, "curobo.geom.types.Cuboid"]], "cylinder (class in curobo.geom.types)": [[32, "curobo.geom.types.Cylinder"]], "material (class in curobo.geom.types)": [[32, "curobo.geom.types.Material"]], "mesh (class in curobo.geom.types)": [[32, "curobo.geom.types.Mesh"]], "obstacle (class in curobo.geom.types)": [[32, "curobo.geom.types.Obstacle"]], "pointcloud (class in curobo.geom.types)": [[32, "curobo.geom.types.PointCloud"]], "sphere (class in curobo.geom.types)": [[32, "curobo.geom.types.Sphere"]], "voxelgrid (class in curobo.geom.types)": [[32, "curobo.geom.types.VoxelGrid"]], "worldconfig (class in curobo.geom.types)": [[32, "curobo.geom.types.WorldConfig"]], "_abc_impl (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig._abc_impl"]], "_is_protocol (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig._is_protocol"]], "add_color() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_color"]], "add_material() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_material"]], "add_obstacle() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.add_obstacle"]], "base (capsule attribute)": [[32, "curobo.geom.types.Capsule.base"]], "batch_tensor_cube() (in module curobo.geom.types)": [[32, "curobo.geom.types.batch_tensor_cube"]], "blox (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.blox"]], "capsule (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.capsule"]], "clone() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.clone"]], "clone() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.clone"]], "color (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.color"]], "color (capsule attribute)": [[32, "curobo.geom.types.Capsule.color"]], "color (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.color"]], "color (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.color"]], "color (mesh attribute)": [[32, "curobo.geom.types.Mesh.color"]], "color (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.color"]], "color (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.color"]], "color (sphere attribute)": [[32, "curobo.geom.types.Sphere.color"]], "color (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.color"]], "count() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.count"]], "create_collision_support_world() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_collision_support_world"]], "create_merged_mesh_world() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_merged_mesh_world"]], "create_mesh_world() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_mesh_world"]], "create_obb_world() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.create_obb_world"]], "create_xyzr_tensor() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.create_xyzr_tensor"]], "cuboid (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.cuboid"]], "curobo.geom.types": [[32, "module-curobo.geom.types"]], "cylinder (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.cylinder"]], "dims (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.dims"]], "dims (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.dims"]], "face_colors (mesh attribute)": [[32, "curobo.geom.types.Mesh.face_colors"]], "faces (mesh attribute)": [[32, "curobo.geom.types.Mesh.faces"]], "feature_dtype (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.feature_dtype"]], "feature_tensor (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.feature_tensor"]], "file_path (mesh attribute)": [[32, "curobo.geom.types.Mesh.file_path"]], "file_string (mesh attribute)": [[32, "curobo.geom.types.Mesh.file_string"]], "from_camera_observation() (pointcloud static method)": [[32, "curobo.geom.types.PointCloud.from_camera_observation"]], "from_dict() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.from_dict"]], "from_pointcloud() (mesh static method)": [[32, "curobo.geom.types.Mesh.from_pointcloud"]], "get_bounding_spheres() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_bounding_spheres"]], "get_bounding_spheres() (capsule method)": [[32, "curobo.geom.types.Capsule.get_bounding_spheres"]], "get_bounding_spheres() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_bounding_spheres"]], "get_bounding_spheres() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_bounding_spheres"]], "get_bounding_spheres() (mesh method)": [[32, "curobo.geom.types.Mesh.get_bounding_spheres"]], "get_bounding_spheres() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_bounding_spheres"]], "get_bounding_spheres() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_bounding_spheres"]], "get_bounding_spheres() (sphere method)": [[32, "curobo.geom.types.Sphere.get_bounding_spheres"]], "get_bounding_spheres() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_bounding_spheres"]], "get_cache_dict() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_cache_dict"]], "get_collision_check_world() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_collision_check_world"]], "get_cuboid() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_cuboid"]], "get_cuboid() (capsule method)": [[32, "curobo.geom.types.Capsule.get_cuboid"]], "get_cuboid() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_cuboid"]], "get_cuboid() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_cuboid"]], "get_cuboid() (mesh method)": [[32, "curobo.geom.types.Mesh.get_cuboid"]], "get_cuboid() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_cuboid"]], "get_cuboid() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_cuboid"]], "get_cuboid() (sphere method)": [[32, "curobo.geom.types.Sphere.get_cuboid"]], "get_cuboid() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_cuboid"]], "get_grid_shape() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_grid_shape"]], "get_mesh() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_mesh"]], "get_mesh() (capsule method)": [[32, "curobo.geom.types.Capsule.get_mesh"]], "get_mesh() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_mesh"]], "get_mesh() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_mesh"]], "get_mesh() (mesh method)": [[32, "curobo.geom.types.Mesh.get_mesh"]], "get_mesh() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_mesh"]], "get_mesh() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_mesh"]], "get_mesh() (sphere method)": [[32, "curobo.geom.types.Sphere.get_mesh"]], "get_mesh() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_mesh"]], "get_mesh_data() (mesh method)": [[32, "curobo.geom.types.Mesh.get_mesh_data"]], "get_mesh_data() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_mesh_data"]], "get_mesh_world() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_mesh_world"]], "get_obb_world() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_obb_world"]], "get_obstacle() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.get_obstacle"]], "get_occupied_voxels() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_occupied_voxels"]], "get_scene_graph() (worldconfig static method)": [[32, "curobo.geom.types.WorldConfig.get_scene_graph"]], "get_sphere() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_sphere"]], "get_sphere() (capsule method)": [[32, "curobo.geom.types.Capsule.get_sphere"]], "get_sphere() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_sphere"]], "get_sphere() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_sphere"]], "get_sphere() (mesh method)": [[32, "curobo.geom.types.Mesh.get_sphere"]], "get_sphere() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_sphere"]], "get_sphere() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_sphere"]], "get_sphere() (sphere method)": [[32, "curobo.geom.types.Sphere.get_sphere"]], "get_sphere() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_sphere"]], "get_transform_matrix() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_transform_matrix"]], "get_transform_matrix() (capsule method)": [[32, "curobo.geom.types.Capsule.get_transform_matrix"]], "get_transform_matrix() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_transform_matrix"]], "get_transform_matrix() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_transform_matrix"]], "get_transform_matrix() (mesh method)": [[32, "curobo.geom.types.Mesh.get_transform_matrix"]], "get_transform_matrix() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_transform_matrix"]], "get_transform_matrix() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_transform_matrix"]], "get_transform_matrix() (sphere method)": [[32, "curobo.geom.types.Sphere.get_transform_matrix"]], "get_transform_matrix() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_transform_matrix"]], "get_trimesh_mesh() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.get_trimesh_mesh"]], "get_trimesh_mesh() (capsule method)": [[32, "curobo.geom.types.Capsule.get_trimesh_mesh"]], "get_trimesh_mesh() (cuboid method)": [[32, "curobo.geom.types.Cuboid.get_trimesh_mesh"]], "get_trimesh_mesh() (cylinder method)": [[32, "curobo.geom.types.Cylinder.get_trimesh_mesh"]], "get_trimesh_mesh() (mesh method)": [[32, "curobo.geom.types.Mesh.get_trimesh_mesh"]], "get_trimesh_mesh() (obstacle method)": [[32, "curobo.geom.types.Obstacle.get_trimesh_mesh"]], "get_trimesh_mesh() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.get_trimesh_mesh"]], "get_trimesh_mesh() (sphere method)": [[32, "curobo.geom.types.Sphere.get_trimesh_mesh"]], "get_trimesh_mesh() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.get_trimesh_mesh"]], "height (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.height"]], "index() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.index"]], "integrator_type (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.integrator_type"]], "map_path (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.map_path"]], "mapper_instance (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mapper_instance"]], "material (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.material"]], "material (capsule attribute)": [[32, "curobo.geom.types.Capsule.material"]], "material (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.material"]], "material (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.material"]], "material (mesh attribute)": [[32, "curobo.geom.types.Mesh.material"]], "material (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.material"]], "material (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.material"]], "material (sphere attribute)": [[32, "curobo.geom.types.Sphere.material"]], "material (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.material"]], "mesh (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mesh"]], "mesh (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.mesh"]], "mesh_file_path (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.mesh_file_path"]], "metallic (material attribute)": [[32, "curobo.geom.types.Material.metallic"]], "name (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.name"]], "name (capsule attribute)": [[32, "curobo.geom.types.Capsule.name"]], "name (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.name"]], "name (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.name"]], "name (mesh attribute)": [[32, "curobo.geom.types.Mesh.name"]], "name (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.name"]], "name (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.name"]], "name (sphere attribute)": [[32, "curobo.geom.types.Sphere.name"]], "name (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.name"]], "objects (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.objects"]], "points (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.points"]], "points_features (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.points_features"]], "pose (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.pose"]], "pose (capsule attribute)": [[32, "curobo.geom.types.Capsule.pose"]], "pose (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.pose"]], "pose (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.pose"]], "pose (mesh attribute)": [[32, "curobo.geom.types.Mesh.pose"]], "pose (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.pose"]], "pose (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.pose"]], "pose (sphere attribute)": [[32, "curobo.geom.types.Sphere.pose"]], "pose (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.pose"]], "position (sphere attribute)": [[32, "curobo.geom.types.Sphere.position"]], "radius (capsule attribute)": [[32, "curobo.geom.types.Capsule.radius"]], "radius (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.radius"]], "radius (sphere attribute)": [[32, "curobo.geom.types.Sphere.radius"]], "randomize_color() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.randomize_color"]], "remove_absolute_paths() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.remove_absolute_paths"]], "remove_obstacle() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.remove_obstacle"]], "roughness (material attribute)": [[32, "curobo.geom.types.Material.roughness"]], "save_as_mesh() (bloxmap method)": [[32, "curobo.geom.types.BloxMap.save_as_mesh"]], "save_as_mesh() (capsule method)": [[32, "curobo.geom.types.Capsule.save_as_mesh"]], "save_as_mesh() (cuboid method)": [[32, "curobo.geom.types.Cuboid.save_as_mesh"]], "save_as_mesh() (cylinder method)": [[32, "curobo.geom.types.Cylinder.save_as_mesh"]], "save_as_mesh() (mesh method)": [[32, "curobo.geom.types.Mesh.save_as_mesh"]], "save_as_mesh() (obstacle method)": [[32, "curobo.geom.types.Obstacle.save_as_mesh"]], "save_as_mesh() (pointcloud method)": [[32, "curobo.geom.types.PointCloud.save_as_mesh"]], "save_as_mesh() (sphere method)": [[32, "curobo.geom.types.Sphere.save_as_mesh"]], "save_as_mesh() (voxelgrid method)": [[32, "curobo.geom.types.VoxelGrid.save_as_mesh"]], "save_world_as_mesh() (worldconfig method)": [[32, "curobo.geom.types.WorldConfig.save_world_as_mesh"]], "scale (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.scale"]], "scale (capsule attribute)": [[32, "curobo.geom.types.Capsule.scale"]], "scale (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.scale"]], "scale (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.scale"]], "scale (mesh attribute)": [[32, "curobo.geom.types.Mesh.scale"]], "scale (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.scale"]], "scale (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.scale"]], "scale (sphere attribute)": [[32, "curobo.geom.types.Sphere.scale"]], "scale (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.scale"]], "sphere (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.sphere"]], "tensor_args (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.tensor_args"]], "tensor_args (capsule attribute)": [[32, "curobo.geom.types.Capsule.tensor_args"]], "tensor_args (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.tensor_args"]], "tensor_args (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.tensor_args"]], "tensor_args (mesh attribute)": [[32, "curobo.geom.types.Mesh.tensor_args"]], "tensor_args (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.tensor_args"]], "tensor_args (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.tensor_args"]], "tensor_args (sphere attribute)": [[32, "curobo.geom.types.Sphere.tensor_args"]], "tensor_args (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.tensor_args"]], "tensor_capsule() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_capsule"]], "tensor_cube() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_cube"]], "tensor_sphere() (in module curobo.geom.types)": [[32, "curobo.geom.types.tensor_sphere"]], "texture (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.texture"]], "texture (capsule attribute)": [[32, "curobo.geom.types.Capsule.texture"]], "texture (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.texture"]], "texture (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.texture"]], "texture (mesh attribute)": [[32, "curobo.geom.types.Mesh.texture"]], "texture (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.texture"]], "texture (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.texture"]], "texture (sphere attribute)": [[32, "curobo.geom.types.Sphere.texture"]], "texture (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.texture"]], "texture_id (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.texture_id"]], "texture_id (capsule attribute)": [[32, "curobo.geom.types.Capsule.texture_id"]], "texture_id (cuboid attribute)": [[32, "curobo.geom.types.Cuboid.texture_id"]], "texture_id (cylinder attribute)": [[32, "curobo.geom.types.Cylinder.texture_id"]], "texture_id (mesh attribute)": [[32, "curobo.geom.types.Mesh.texture_id"]], "texture_id (obstacle attribute)": [[32, "curobo.geom.types.Obstacle.texture_id"]], "texture_id (pointcloud attribute)": [[32, "curobo.geom.types.PointCloud.texture_id"]], "texture_id (sphere attribute)": [[32, "curobo.geom.types.Sphere.texture_id"]], "texture_id (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.texture_id"]], "tip (capsule attribute)": [[32, "curobo.geom.types.Capsule.tip"]], "update_material() (mesh method)": [[32, "curobo.geom.types.Mesh.update_material"]], "urdf_path (mesh attribute)": [[32, "curobo.geom.types.Mesh.urdf_path"]], "vertex_colors (mesh attribute)": [[32, "curobo.geom.types.Mesh.vertex_colors"]], "vertex_normals (mesh attribute)": [[32, "curobo.geom.types.Mesh.vertex_normals"]], "vertices (mesh attribute)": [[32, "curobo.geom.types.Mesh.vertices"]], "voxel (worldconfig attribute)": [[32, "curobo.geom.types.WorldConfig.voxel"]], "voxel_size (bloxmap attribute)": [[32, "curobo.geom.types.BloxMap.voxel_size"]], "voxel_size (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.voxel_size"]], "xyzr_tensor (voxelgrid attribute)": [[32, "curobo.geom.types.VoxelGrid.xyzr_tensor"]], "curobo.graph": [[33, "module-curobo.graph"]], "graph (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.Graph"]], "graphconfig (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphConfig"]], "graphplanbase (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphPlanBase"]], "graphresult (class in curobo.graph.graph_base)": [[34, "curobo.graph.graph_base.GraphResult"]], "_add_batch_edges_to_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._add_batch_edges_to_graph"]], "_add_unique_nodes_to_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._add_unique_nodes_to_graph"]], "_batch_k_nearest() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_k_nearest"]], "_batch_steer() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_steer"]], "_batch_steer_and_connect() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._batch_steer_and_connect"]], "_compute_rotation_frame() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._compute_rotation_frame"]], "_cuda_graph_rollout_constraint() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._cuda_graph_rollout_constraint"]], "_distance() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._distance"]], "_find_paths() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._find_paths"]], "_get_graph_shortest_path() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._get_graph_shortest_path"]], "_hybrid_nearest() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._hybrid_nearest"]], "_k_nearest() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._k_nearest"]], "_mask_samples() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._mask_samples"]], "_mask_samples_cuda_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._mask_samples_cuda_graph"]], "_near() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._near"]], "_nearest() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._nearest"]], "_sample_pts() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._sample_pts"]], "_validate_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase._validate_graph"]], "add_nodes_to_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.add_nodes_to_graph"]], "batch_get_graph_shortest_path() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_get_graph_shortest_path"]], "batch_path_exists() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_path_exists"]], "batch_shortcut_path() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.batch_shortcut_path"]], "bias_node (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.bias_node"]], "bias_node (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.bias_node"]], "bounds (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.bounds"]], "bounds (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.bounds"]], "c_max (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.c_max"]], "c_max (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.c_max"]], "check_feasibility() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.check_feasibility"]], "compute_metrics (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.compute_metrics"]], "compute_metrics (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.compute_metrics"]], "compute_path_length() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.compute_path_length"]], "connect_nodes() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.connect_nodes"]], "connectivity (graph attribute)": [[34, "curobo.graph.graph_base.Graph.connectivity"]], "curobo.graph.graph_base": [[34, "module-curobo.graph.graph_base"]], "debug_info (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.debug_info"]], "distance() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.distance"]], "distance_weight (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.distance_weight"]], "distance_weight (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.distance_weight"]], "dof (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.dof"]], "dof (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.dof"]], "edges (graph attribute)": [[34, "curobo.graph.graph_base.Graph.edges"]], "find_paths() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.find_paths"]], "from_dict() (graphconfig static method)": [[34, "curobo.graph.graph_base.GraphConfig.from_dict"]], "from_dict() (graphplanbase static method)": [[34, "curobo.graph.graph_base.GraphPlanBase.from_dict"]], "get_all_rollout_instances() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_all_rollout_instances"]], "get_biased_vertex_set() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_biased_vertex_set"]], "get_feasible_sample_set() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_feasible_sample_set"]], "get_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph"]], "get_graph_edges() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph_edges"]], "get_graph_shortest_path_lengths() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_graph_shortest_path_lengths"]], "get_interpolated_trajectory() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_interpolated_trajectory"]], "get_metrics() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_metrics"]], "get_new_vertex_set() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_new_vertex_set"]], "get_node_distance() (graph method)": [[34, "curobo.graph.graph_base.Graph.get_node_distance"]], "get_node_idx() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_node_idx"]], "get_path_lengths() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_path_lengths"]], "get_paths() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_paths"]], "get_samples() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.get_samples"]], "goal_q (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.goal_q"]], "graph_max_attempts (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.graph_max_attempts"]], "graph_max_attempts (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.graph_max_attempts"]], "graph_min_attempts (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.graph_min_attempts"]], "graph_min_attempts (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.graph_min_attempts"]], "init_nodes (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.init_nodes"]], "init_nodes (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.init_nodes"]], "interpolated_plan (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.interpolated_plan"]], "interpolation_acceleration_scale (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_acceleration_scale"]], "interpolation_acceleration_scale (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.interpolation_acceleration_scale"]], "interpolation_deviation (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_deviation"]], "interpolation_deviation (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.interpolation_deviation"]], "interpolation_dt (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_dt"]], "interpolation_dt (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.interpolation_dt"]], "interpolation_steps (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_steps"]], "interpolation_steps (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.interpolation_steps"]], "interpolation_type (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.interpolation_type"]], "interpolation_type (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.interpolation_type"]], "k_nn (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.k_nn"]], "k_nn (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.k_nn"]], "load_from_robot_config() (graphconfig static method)": [[34, "curobo.graph.graph_base.GraphConfig.load_from_robot_config"]], "load_from_robot_config() (graphplanbase static method)": [[34, "curobo.graph.graph_base.GraphPlanBase.load_from_robot_config"]], "mask_samples() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.mask_samples"]], "max_buffer (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_buffer"]], "max_buffer (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.max_buffer"]], "max_cg_buffer (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_cg_buffer"]], "max_cg_buffer (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.max_cg_buffer"]], "max_nodes (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.max_nodes"]], "max_nodes (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.max_nodes"]], "metrics (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.metrics"]], "node_similarity_distance (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.node_similarity_distance"]], "node_similarity_distance (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.node_similarity_distance"]], "nodes (graph attribute)": [[34, "curobo.graph.graph_base.Graph.nodes"]], "optimized_dt (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.optimized_dt"]], "path_buffer_last_tstep (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.path_buffer_last_tstep"]], "path_exists() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.path_exists"]], "path_length (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.path_length"]], "plan (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.plan"]], "rejection_ratio (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.rejection_ratio"]], "rejection_ratio (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.rejection_ratio"]], "reset_buffer() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_buffer"]], "reset_cuda_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_cuda_graph"]], "reset_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_graph"]], "reset_seed() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.reset_seed"]], "rollout_fn (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.rollout_fn"]], "rollout_fn (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.rollout_fn"]], "safety_rollout_fn (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.safety_rollout_fn"]], "safety_rollout_fn (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.safety_rollout_fn"]], "sample_pts (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.sample_pts"]], "sample_pts (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.sample_pts"]], "seed (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.seed"]], "seed (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.seed"]], "set_shortest_path_lengths() (graph method)": [[34, "curobo.graph.graph_base.Graph.set_shortest_path_lengths"]], "shortest_path_lengths (graph attribute)": [[34, "curobo.graph.graph_base.Graph.shortest_path_lengths"]], "solve_time (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.solve_time"]], "start_q (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.start_q"]], "steer_delta_buffer (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.steer_delta_buffer"]], "steer_delta_buffer (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.steer_delta_buffer"]], "success (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.success"]], "tensor_args (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.tensor_args"]], "tensor_args (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.tensor_args"]], "use_bias_node (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.use_bias_node"]], "use_bias_node (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.use_bias_node"]], "use_cuda_graph_mask_samples (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.use_cuda_graph_mask_samples"]], "use_cuda_graph_mask_samples (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.use_cuda_graph_mask_samples"]], "valid_query (graphresult attribute)": [[34, "curobo.graph.graph_base.GraphResult.valid_query"]], "validate_graph() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.validate_graph"]], "vertex_n (graphconfig attribute)": [[34, "curobo.graph.graph_base.GraphConfig.vertex_n"]], "vertex_n (graphplanbase attribute)": [[34, "curobo.graph.graph_base.GraphPlanBase.vertex_n"]], "warmup() (graphplanbase method)": [[34, "curobo.graph.graph_base.GraphPlanBase.warmup"]], "networkxgraph (class in curobo.graph.graph_nx)": [[35, "curobo.graph.graph_nx.NetworkxGraph"]], "add_edge() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_edge"]], "add_edges() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_edges"]], "add_node() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_node"]], "add_nodes() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.add_nodes"]], "curobo.graph.graph_nx": [[35, "module-curobo.graph.graph_nx"]], "get_edges() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_edges"]], "get_path_lengths() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_path_lengths"]], "get_shortest_path() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.get_shortest_path"]], "path_exists() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.path_exists"]], "reset_graph() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.reset_graph"]], "update_graph() (networkxgraph method)": [[35, "curobo.graph.graph_nx.NetworkxGraph.update_graph"]], "prmstar (class in curobo.graph.prm)": [[36, "curobo.graph.prm.PRMStar"]], "_add_batch_edges_to_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._add_batch_edges_to_graph"]], "_add_bias_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._add_bias_graph"]], "_add_unique_nodes_to_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._add_unique_nodes_to_graph"]], "_batch_k_nearest() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._batch_k_nearest"]], "_batch_steer() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._batch_steer"]], "_batch_steer_and_connect() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._batch_steer_and_connect"]], "_compute_rotation_frame() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._compute_rotation_frame"]], "_cuda_graph_rollout_constraint() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._cuda_graph_rollout_constraint"]], "_distance() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._distance"]], "_find_all_path() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_all_path"]], "_find_one_path() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_one_path"]], "_find_paths() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._find_paths"]], "_get_graph_shortest_path() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._get_graph_shortest_path"]], "_hybrid_nearest() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._hybrid_nearest"]], "_k_nearest() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._k_nearest"]], "_mask_samples() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._mask_samples"]], "_mask_samples_cuda_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._mask_samples_cuda_graph"]], "_near() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._near"]], "_nearest() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._nearest"]], "_sample_pts() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._sample_pts"]], "_validate_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar._validate_graph"]], "add_nodes_to_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.add_nodes_to_graph"]], "batch_get_graph_shortest_path() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.batch_get_graph_shortest_path"]], "batch_path_exists() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.batch_path_exists"]], "batch_shortcut_path() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.batch_shortcut_path"]], "bias_node (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.bias_node"]], "bounds (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.bounds"]], "build_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.build_graph"]], "c_max (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.c_max"]], "check_feasibility() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.check_feasibility"]], "compute_metrics (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.compute_metrics"]], "compute_path_length() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.compute_path_length"]], "connect_nodes() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.connect_nodes"]], "curobo.graph.prm": [[36, "module-curobo.graph.prm"]], "distance() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.distance"]], "distance_weight (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.distance_weight"]], "dof (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.dof"]], "find_paths() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.find_paths"]], "from_dict() (prmstar static method)": [[36, "curobo.graph.prm.PRMStar.from_dict"]], "get_all_rollout_instances() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_all_rollout_instances"]], "get_biased_vertex_set() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_biased_vertex_set"]], "get_feasible_sample_set() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_feasible_sample_set"]], "get_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_graph"]], "get_graph_edges() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_graph_edges"]], "get_graph_shortest_path_lengths() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_graph_shortest_path_lengths"]], "get_interpolated_trajectory() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_interpolated_trajectory"]], "get_metrics() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_metrics"]], "get_new_vertex_set() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_new_vertex_set"]], "get_node_idx() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_node_idx"]], "get_path_lengths() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_path_lengths"]], "get_paths() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_paths"]], "get_samples() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.get_samples"]], "graph_max_attempts (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.graph_max_attempts"]], "graph_min_attempts (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.graph_min_attempts"]], "init_nodes (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.init_nodes"]], "interpolation_acceleration_scale (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.interpolation_acceleration_scale"]], "interpolation_deviation (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.interpolation_deviation"]], "interpolation_dt (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.interpolation_dt"]], "interpolation_steps (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.interpolation_steps"]], "interpolation_type (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.interpolation_type"]], "k_nn (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.k_nn"]], "load_from_robot_config() (prmstar static method)": [[36, "curobo.graph.prm.PRMStar.load_from_robot_config"]], "mask_samples() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.mask_samples"]], "max_buffer (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.max_buffer"]], "max_cg_buffer (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.max_cg_buffer"]], "max_nodes (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.max_nodes"]], "node_similarity_distance (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.node_similarity_distance"]], "path_exists() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.path_exists"]], "rejection_ratio (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.rejection_ratio"]], "reset_buffer() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.reset_buffer"]], "reset_cuda_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.reset_cuda_graph"]], "reset_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.reset_graph"]], "reset_seed() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.reset_seed"]], "rollout_fn (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.rollout_fn"]], "safety_rollout_fn (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.safety_rollout_fn"]], "sample_pts (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.sample_pts"]], "seed (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.seed"]], "steer_delta_buffer (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.steer_delta_buffer"]], "tensor_args (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.tensor_args"]], "use_bias_node (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.use_bias_node"]], "use_cuda_graph_mask_samples (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.use_cuda_graph_mask_samples"]], "validate_graph() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.validate_graph"]], "vertex_n (prmstar attribute)": [[36, "curobo.graph.prm.PRMStar.vertex_n"]], "warmup() (prmstar method)": [[36, "curobo.graph.prm.PRMStar.warmup"]], "curobo.opt": [[37, "module-curobo.opt"]], "curobo.opt.newton": [[38, "module-curobo.opt.newton"]], "lbfgsopt (class in curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt"]], "lbfgsoptconfig (class in curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig"]], "_approx_line_search() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._approx_line_search"]], "_armijo_line_search() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._armijo_line_search"]], "_call_opt_iters_graph() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._call_opt_iters_graph"]], "_compute_cost_gradient() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._compute_cost_gradient"]], "_create_box_line_search() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._create_box_line_search"]], "_create_opt_iters_graph() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._create_opt_iters_graph"]], "_get_step_direction() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._get_step_direction"]], "_greedy_line_search() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._greedy_line_search"]], "_initialize_opt_iters_graph() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._initialize_opt_iters_graph"]], "_opt_iters() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._opt_iters"]], "_opt_step() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._opt_step"]], "_optimize() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._optimize"]], "_shift() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._shift"]], "_shift_buffer() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._shift_buffer"]], "_update_best() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_best"]], "_update_buffers() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_buffers"]], "_update_problem_kernel() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_problem_kernel"]], "_update_q() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_q"]], "_update_r() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._update_r"]], "_wolfe_line_search() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt._wolfe_line_search"]], "action_highs (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.action_highs"]], "action_highs (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.action_highs"]], "action_horizon (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.action_horizon"]], "action_horizon (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.action_horizon"]], "action_lows (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.action_lows"]], "action_lows (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.action_lows"]], "check_convergence() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.check_convergence"]], "clip_bounds() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.clip_bounds"]], "cold_start_n_iters (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.cold_start_n_iters"]], "cold_start_n_iters (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.cold_start_n_iters"]], "cost_convergence (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.cost_convergence"]], "cost_convergence (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.cost_convergence"]], "cost_delta_threshold (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.cost_delta_threshold"]], "cost_delta_threshold (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.cost_delta_threshold"]], "cost_relative_threshold (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.cost_relative_threshold"]], "cost_relative_threshold (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.cost_relative_threshold"]], "create_data_dict() (lbfgsopt static method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.create_data_dict"]], "create_data_dict() (lbfgsoptconfig static method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.create_data_dict"]], "curobo.opt.newton.lbfgs": [[39, "module-curobo.opt.newton.lbfgs"]], "d_action (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.d_action"]], "d_action (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.d_action"]], "debug_info (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.debug_info"]], "debug_info (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.debug_info"]], "epsilon (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.epsilon"]], "epsilon (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.epsilon"]], "fixed_iters (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.fixed_iters"]], "fixed_iters (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.fixed_iters"]], "get_all_rollout_instances() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.get_all_rollout_instances"]], "get_nproblem_tensor() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.get_nproblem_tensor"]], "history (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.history"]], "history (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.history"]], "horizon (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.horizon"]], "horizon (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.horizon"]], "init_hessian() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.init_hessian"]], "inner_iters (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.inner_iters"]], "inner_iters (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.inner_iters"]], "jit_lbfgs_compute_step_direction() (in module curobo.opt.newton.lbfgs)": [[39, "curobo.opt.newton.lbfgs.jit_lbfgs_compute_step_direction"]], "last_best (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.last_best"]], "last_best (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.last_best"]], "line_search_scale (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.line_search_scale"]], "line_search_scale (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.line_search_scale"]], "line_search_type (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.line_search_type"]], "line_search_type (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.line_search_type"]], "min_iters (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.min_iters"]], "min_iters (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.min_iters"]], "n_iters (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.n_iters"]], "n_iters (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.n_iters"]], "n_problems (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.n_problems"]], "n_problems (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.n_problems"]], "num_particles (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.num_particles"]], "num_particles (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.num_particles"]], "optimize() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.optimize"]], "project_bounds() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.project_bounds"]], "reset() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.reset"]], "reset_cuda_graph() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.reset_cuda_graph"]], "reset_seed() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.reset_seed"]], "reset_shape() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.reset_shape"]], "rollout_fn (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.rollout_fn"]], "rollout_fn (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.rollout_fn"]], "scale_step_direction() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.scale_step_direction"]], "stable_mode (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.stable_mode"]], "stable_mode (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.stable_mode"]], "step_scale (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.step_scale"]], "step_scale (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.step_scale"]], "store_debug (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.store_debug"]], "store_debug (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.store_debug"]], "sync_cuda_time (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.sync_cuda_time"]], "sync_cuda_time (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.sync_cuda_time"]], "tensor_args (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.tensor_args"]], "tensor_args (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.tensor_args"]], "update_nproblems() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.update_nproblems"]], "update_params() (lbfgsopt method)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.update_params"]], "use_coo_sparse (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_coo_sparse"]], "use_coo_sparse (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_coo_sparse"]], "use_cuda_graph (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_cuda_graph"]], "use_cuda_graph (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_graph"]], "use_cuda_kernel (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_cuda_kernel"]], "use_cuda_kernel (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_kernel"]], "use_cuda_line_search_kernel (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_cuda_line_search_kernel"]], "use_cuda_line_search_kernel (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_line_search_kernel"]], "use_cuda_update_best_kernel (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_cuda_update_best_kernel"]], "use_cuda_update_best_kernel (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_update_best_kernel"]], "use_shared_buffers_kernel (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_shared_buffers_kernel"]], "use_shared_buffers_kernel (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_shared_buffers_kernel"]], "use_temporal_smooth (lbfgsopt attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOpt.use_temporal_smooth"]], "use_temporal_smooth (lbfgsoptconfig attribute)": [[39, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_temporal_smooth"]], "approx_wolfe (linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.APPROX_WOLFE"]], "armijo (linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.ARMIJO"]], "greedy (linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.GREEDY"]], "linesearchtype (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.LineSearchType"]], "newtonoptbase (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase"]], "newtonoptconfig (class in curobo.opt.newton.newton_base)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig"]], "strong_wolfe (linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.STRONG_WOLFE"]], "wolfe (linesearchtype attribute)": [[40, "curobo.opt.newton.newton_base.LineSearchType.WOLFE"]], "_approx_line_search() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._approx_line_search"]], "_armijo_line_search() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._armijo_line_search"]], "_call_opt_iters_graph() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._call_opt_iters_graph"]], "_compute_cost_gradient() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._compute_cost_gradient"]], "_create_box_line_search() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._create_box_line_search"]], "_create_opt_iters_graph() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._create_opt_iters_graph"]], "_get_step_direction() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._get_step_direction"]], "_greedy_line_search() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._greedy_line_search"]], "_initialize_opt_iters_graph() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._initialize_opt_iters_graph"]], "_opt_iters() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._opt_iters"]], "_opt_step() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._opt_step"]], "_optimize() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._optimize"]], "_shift() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._shift"]], "_update_best() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._update_best"]], "_update_problem_kernel() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._update_problem_kernel"]], "_wolfe_line_search() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase._wolfe_line_search"]], "action_highs (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.action_highs"]], "action_highs (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.action_highs"]], "action_horizon (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.action_horizon"]], "action_horizon (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.action_horizon"]], "action_lows (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.action_lows"]], "action_lows (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.action_lows"]], "check_convergence() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.check_convergence"]], "clip_bounds() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.clip_bounds"]], "cold_start_n_iters (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.cold_start_n_iters"]], "cold_start_n_iters (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cold_start_n_iters"]], "cost_convergence (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.cost_convergence"]], "cost_convergence (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_convergence"]], "cost_delta_threshold (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.cost_delta_threshold"]], "cost_delta_threshold (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_delta_threshold"]], "cost_relative_threshold (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.cost_relative_threshold"]], "cost_relative_threshold (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_relative_threshold"]], "create_data_dict() (newtonoptbase static method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.create_data_dict"]], "create_data_dict() (newtonoptconfig static method)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.create_data_dict"]], "curobo.opt.newton.newton_base": [[40, "module-curobo.opt.newton.newton_base"]], "d_action (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.d_action"]], "d_action (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.d_action"]], "debug_info (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.debug_info"]], "debug_info (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.debug_info"]], "fixed_iters (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.fixed_iters"]], "fixed_iters (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.fixed_iters"]], "get_all_rollout_instances() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.get_all_rollout_instances"]], "get_nproblem_tensor() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.get_nproblem_tensor"]], "horizon (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.horizon"]], "horizon (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.horizon"]], "inner_iters (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.inner_iters"]], "inner_iters (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.inner_iters"]], "last_best (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.last_best"]], "last_best (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.last_best"]], "line_search_scale (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.line_search_scale"]], "line_search_scale (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_scale"]], "line_search_type (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.line_search_type"]], "line_search_type (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_type"]], "min_iters (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.min_iters"]], "min_iters (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.min_iters"]], "n_iters (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.n_iters"]], "n_iters (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.n_iters"]], "n_problems (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.n_problems"]], "n_problems (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.n_problems"]], "num_particles (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.num_particles"]], "num_particles (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.num_particles"]], "optimize() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.optimize"]], "project_bounds() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.project_bounds"]], "reset() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset"]], "reset_cuda_graph() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset_cuda_graph"]], "reset_seed() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset_seed"]], "reset_shape() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.reset_shape"]], "rollout_fn (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.rollout_fn"]], "rollout_fn (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.rollout_fn"]], "scale_step_direction() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.scale_step_direction"]], "step_scale (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.step_scale"]], "step_scale (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.step_scale"]], "store_debug (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.store_debug"]], "store_debug (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.store_debug"]], "sync_cuda_time (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.sync_cuda_time"]], "sync_cuda_time (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.sync_cuda_time"]], "tensor_args (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.tensor_args"]], "tensor_args (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.tensor_args"]], "update_nproblems() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.update_nproblems"]], "update_params() (newtonoptbase method)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.update_params"]], "use_coo_sparse (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.use_coo_sparse"]], "use_coo_sparse (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_coo_sparse"]], "use_cuda_graph (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.use_cuda_graph"]], "use_cuda_graph (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_graph"]], "use_cuda_line_search_kernel (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.use_cuda_line_search_kernel"]], "use_cuda_line_search_kernel (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_line_search_kernel"]], "use_cuda_update_best_kernel (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.use_cuda_update_best_kernel"]], "use_cuda_update_best_kernel (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_update_best_kernel"]], "use_temporal_smooth (newtonoptbase attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptBase.use_temporal_smooth"]], "use_temporal_smooth (newtonoptconfig attribute)": [[40, "curobo.opt.newton.newton_base.NewtonOptConfig.use_temporal_smooth"]], "optimizer (class in curobo.opt.opt_base)": [[41, "curobo.opt.opt_base.Optimizer"]], "optimizerconfig (class in curobo.opt.opt_base)": [[41, "curobo.opt.opt_base.OptimizerConfig"]], "_optimize() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._optimize"]], "_shift() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._shift"]], "_update_problem_kernel() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer._update_problem_kernel"]], "action_highs (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.action_highs"]], "action_highs (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_highs"]], "action_horizon (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.action_horizon"]], "action_horizon (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_horizon"]], "action_lows (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.action_lows"]], "action_lows (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.action_lows"]], "cold_start_n_iters (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.cold_start_n_iters"]], "cold_start_n_iters (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.cold_start_n_iters"]], "create_data_dict() (optimizer static method)": [[41, "curobo.opt.opt_base.Optimizer.create_data_dict"]], "create_data_dict() (optimizerconfig static method)": [[41, "curobo.opt.opt_base.OptimizerConfig.create_data_dict"]], "curobo.opt.opt_base": [[41, "module-curobo.opt.opt_base"]], "d_action (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.d_action"]], "d_action (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.d_action"]], "debug_info (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.debug_info"]], "debug_info (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.debug_info"]], "get_all_rollout_instances() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.get_all_rollout_instances"]], "get_nproblem_tensor() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.get_nproblem_tensor"]], "horizon (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.horizon"]], "horizon (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.horizon"]], "n_iters (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.n_iters"]], "n_iters (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.n_iters"]], "n_problems (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.n_problems"]], "n_problems (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.n_problems"]], "num_particles (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.num_particles"]], "num_particles (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.num_particles"]], "optimize() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.optimize"]], "reset() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset"]], "reset_cuda_graph() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_cuda_graph"]], "reset_seed() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_seed"]], "reset_shape() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.reset_shape"]], "rollout_fn (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.rollout_fn"]], "rollout_fn (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.rollout_fn"]], "store_debug (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.store_debug"]], "store_debug (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.store_debug"]], "sync_cuda_time (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.sync_cuda_time"]], "sync_cuda_time (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.sync_cuda_time"]], "tensor_args (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.tensor_args"]], "tensor_args (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.tensor_args"]], "update_nproblems() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.update_nproblems"]], "update_params() (optimizer method)": [[41, "curobo.opt.opt_base.Optimizer.update_params"]], "use_coo_sparse (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.use_coo_sparse"]], "use_coo_sparse (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.use_coo_sparse"]], "use_cuda_graph (optimizer attribute)": [[41, "curobo.opt.opt_base.Optimizer.use_cuda_graph"]], "use_cuda_graph (optimizerconfig attribute)": [[41, "curobo.opt.opt_base.OptimizerConfig.use_cuda_graph"]], "curobo.opt.particle": [[42, "module-curobo.opt.particle"]], "paralleles (class in curobo.opt.particle.parallel_es)": [[43, "curobo.opt.particle.parallel_es.ParallelES"]], "parallelesconfig (class in curobo.opt.particle.parallel_es)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig"]], "_calc_val() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._calc_val"]], "_call_cuda_opt_iters() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._call_cuda_opt_iters"]], "_compute_covariance() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_covariance"]], "_compute_mean() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_mean"]], "_compute_mean_covariance() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_mean_covariance"]], "_compute_total_cost() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._compute_total_cost"]], "_exp_util() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._exp_util"]], "_exp_util_from_costs() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._exp_util_from_costs"]], "_get_action_seq() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._get_action_seq"]], "_initialize_cuda_graph() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._initialize_cuda_graph"]], "_optimize() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._optimize"]], "_run_opt_iters() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._run_opt_iters"]], "_shift() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._shift"]], "_update_cov_scale() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._update_cov_scale"]], "_update_distribution() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._update_distribution"]], "_update_problem_kernel() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES._update_problem_kernel"]], "action_highs (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.action_highs"]], "action_highs (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.action_highs"]], "action_horizon (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.action_horizon"]], "action_horizon (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.action_horizon"]], "action_lows (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.action_lows"]], "action_lows (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.action_lows"]], "alpha (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.alpha"]], "alpha (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.alpha"]], "base_action (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.base_action"]], "base_action (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.base_action"]], "beta (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.beta"]], "beta (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.beta"]], "calculate_value (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.calculate_value"]], "calculate_value (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.calculate_value"]], "check_convergence() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.check_convergence"]], "cold_start_n_iters (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.cold_start_n_iters"]], "cold_start_n_iters (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.cold_start_n_iters"]], "cov_type (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.cov_type"]], "cov_type (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.cov_type"]], "create_data_dict() (paralleles static method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.create_data_dict"]], "create_data_dict() (parallelesconfig static method)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.create_data_dict"]], "curobo.opt.particle.parallel_es": [[43, "module-curobo.opt.particle.parallel_es"]], "d_action (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.d_action"]], "d_action (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.d_action"]], "debug_info (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.debug_info"]], "debug_info (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.debug_info"]], "entropy (paralleles property)": [[43, "curobo.opt.particle.parallel_es.ParallelES.entropy"]], "full_cov (paralleles property)": [[43, "curobo.opt.particle.parallel_es.ParallelES.full_cov"]], "full_inv_cov (paralleles property)": [[43, "curobo.opt.particle.parallel_es.ParallelES.full_inv_cov"]], "full_scale_tril (paralleles property)": [[43, "curobo.opt.particle.parallel_es.ParallelES.full_scale_tril"]], "gamma (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.gamma"]], "gamma (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.gamma"]], "generate_noise() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.generate_noise"]], "generate_rollouts() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.generate_rollouts"]], "get_all_rollout_instances() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.get_all_rollout_instances"]], "get_nproblem_tensor() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.get_nproblem_tensor"]], "get_rollouts() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.get_rollouts"]], "horizon (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.horizon"]], "horizon (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.horizon"]], "init_cov (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.init_cov"]], "init_cov (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.init_cov"]], "init_mean (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.init_mean"]], "init_mean (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.init_mean"]], "kappa (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.kappa"]], "kappa (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.kappa"]], "learning_rate (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.learning_rate"]], "learning_rate (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.learning_rate"]], "n_iters (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.n_iters"]], "n_iters (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.n_iters"]], "n_problems (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.n_problems"]], "n_problems (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.n_problems"]], "null_act_frac (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.null_act_frac"]], "null_act_frac (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.null_act_frac"]], "num_particles (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.num_particles"]], "num_particles (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.num_particles"]], "optimize() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.optimize"]], "random_mean (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.random_mean"]], "random_mean (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.random_mean"]], "reset() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset"]], "reset_covariance() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_covariance"]], "reset_cuda_graph() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_cuda_graph"]], "reset_distribution() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_distribution"]], "reset_mean() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_mean"]], "reset_seed() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_seed"]], "reset_shape() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.reset_shape"]], "rollout_fn (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.rollout_fn"]], "rollout_fn (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.rollout_fn"]], "sample_actions() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.sample_actions"]], "sample_mode (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.sample_mode"]], "sample_mode (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.sample_mode"]], "sample_params (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.sample_params"]], "sample_params (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.sample_params"]], "sample_per_problem (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.sample_per_problem"]], "sample_per_problem (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.sample_per_problem"]], "seed (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.seed"]], "seed (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.seed"]], "squash_fn (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.squash_fn"]], "squash_fn (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.squash_fn"]], "squashed_mean (paralleles property)": [[43, "curobo.opt.particle.parallel_es.ParallelES.squashed_mean"]], "step_size_cov (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.step_size_cov"]], "step_size_cov (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.step_size_cov"]], "step_size_mean (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.step_size_mean"]], "step_size_mean (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.step_size_mean"]], "store_debug (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.store_debug"]], "store_debug (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.store_debug"]], "store_rollouts (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.store_rollouts"]], "store_rollouts (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.store_rollouts"]], "sync_cuda_time (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.sync_cuda_time"]], "sync_cuda_time (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.sync_cuda_time"]], "tensor_args (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.tensor_args"]], "tensor_args (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.tensor_args"]], "update_cov (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_cov"]], "update_cov (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.update_cov"]], "update_init_mean() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_init_mean"]], "update_nproblems() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_nproblems"]], "update_num_particles_per_problem() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_num_particles_per_problem"]], "update_params() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_params"]], "update_samples() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_samples"]], "update_seed() (paralleles method)": [[43, "curobo.opt.particle.parallel_es.ParallelES.update_seed"]], "use_coo_sparse (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.use_coo_sparse"]], "use_coo_sparse (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.use_coo_sparse"]], "use_cuda_graph (paralleles attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelES.use_cuda_graph"]], "use_cuda_graph (parallelesconfig attribute)": [[43, "curobo.opt.particle.parallel_es.ParallelESConfig.use_cuda_graph"]], "baseactiontype (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType"]], "covtype (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.CovType"]], "diag_a (covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.DIAG_A"]], "full_a (covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.FULL_A"]], "full_ha (covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.FULL_HA"]], "null (baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.NULL"]], "parallelmppi (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI"]], "parallelmppiconfig (class in curobo.opt.particle.parallel_mppi)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig"]], "random (baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.RANDOM"]], "repeat (baseactiontype attribute)": [[44, "curobo.opt.particle.parallel_mppi.BaseActionType.REPEAT"]], "sigma_i (covtype attribute)": [[44, "curobo.opt.particle.parallel_mppi.CovType.SIGMA_I"]], "_calc_val() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._calc_val"]], "_call_cuda_opt_iters() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._call_cuda_opt_iters"]], "_compute_covariance() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_covariance"]], "_compute_mean() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_mean"]], "_compute_mean_covariance() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_mean_covariance"]], "_compute_total_cost() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_total_cost"]], "_exp_util() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._exp_util"]], "_exp_util_from_costs() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._exp_util_from_costs"]], "_get_action_seq() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._get_action_seq"]], "_initialize_cuda_graph() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._initialize_cuda_graph"]], "_optimize() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._optimize"]], "_run_opt_iters() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._run_opt_iters"]], "_shift() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._shift"]], "_update_cov_scale() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_cov_scale"]], "_update_distribution() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_distribution"]], "_update_problem_kernel() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_problem_kernel"]], "action_highs (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.action_highs"]], "action_highs (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.action_highs"]], "action_horizon (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.action_horizon"]], "action_horizon (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.action_horizon"]], "action_lows (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.action_lows"]], "action_lows (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.action_lows"]], "alpha (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.alpha"]], "alpha (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.alpha"]], "base_action (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.base_action"]], "base_action (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.base_action"]], "beta (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.beta"]], "beta (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.beta"]], "calculate_value (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.calculate_value"]], "calculate_value (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.calculate_value"]], "check_convergence() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.check_convergence"]], "cold_start_n_iters (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.cold_start_n_iters"]], "cold_start_n_iters (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.cold_start_n_iters"]], "cov_type (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.cov_type"]], "cov_type (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.cov_type"]], "create_data_dict() (parallelmppi static method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.create_data_dict"]], "create_data_dict() (parallelmppiconfig static method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.create_data_dict"]], "curobo.opt.particle.parallel_mppi": [[44, "module-curobo.opt.particle.parallel_mppi"]], "d_action (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.d_action"]], "d_action (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.d_action"]], "debug_info (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.debug_info"]], "debug_info (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.debug_info"]], "entropy (parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.entropy"]], "full_cov (parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_cov"]], "full_inv_cov (parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_inv_cov"]], "full_scale_tril (parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_scale_tril"]], "gamma (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.gamma"]], "gamma (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.gamma"]], "generate_noise() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_noise"]], "generate_rollouts() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_rollouts"]], "get_all_rollout_instances() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_all_rollout_instances"]], "get_nproblem_tensor() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_nproblem_tensor"]], "get_rollouts() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_rollouts"]], "horizon (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.horizon"]], "horizon (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.horizon"]], "init_cov (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.init_cov"]], "init_cov (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_cov"]], "init_mean (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.init_mean"]], "init_mean (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_mean"]], "kappa (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.kappa"]], "kappa (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.kappa"]], "n_iters (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.n_iters"]], "n_iters (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.n_iters"]], "n_problems (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.n_problems"]], "n_problems (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.n_problems"]], "null_act_frac (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.null_act_frac"]], "null_act_frac (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.null_act_frac"]], "num_particles (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.num_particles"]], "num_particles (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.num_particles"]], "optimize() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.optimize"]], "random_mean (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.random_mean"]], "random_mean (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.random_mean"]], "reset() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset"]], "reset_covariance() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_covariance"]], "reset_cuda_graph() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_cuda_graph"]], "reset_distribution() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_distribution"]], "reset_mean() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_mean"]], "reset_seed() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_seed"]], "reset_shape() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_shape"]], "rollout_fn (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.rollout_fn"]], "rollout_fn (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.rollout_fn"]], "sample_actions() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_actions"]], "sample_mode (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_mode"]], "sample_mode (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_mode"]], "sample_params (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_params"]], "sample_params (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_params"]], "sample_per_problem (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_per_problem"]], "sample_per_problem (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_per_problem"]], "seed (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.seed"]], "seed (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.seed"]], "squash_fn (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.squash_fn"]], "squash_fn (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.squash_fn"]], "squashed_mean (parallelmppi property)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.squashed_mean"]], "step_size_cov (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.step_size_cov"]], "step_size_cov (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_cov"]], "step_size_mean (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.step_size_mean"]], "step_size_mean (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_mean"]], "store_debug (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.store_debug"]], "store_debug (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.store_debug"]], "store_rollouts (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.store_rollouts"]], "store_rollouts (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.store_rollouts"]], "sync_cuda_time (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sync_cuda_time"]], "sync_cuda_time (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sync_cuda_time"]], "tensor_args (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.tensor_args"]], "tensor_args (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.tensor_args"]], "update_cov (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_cov"]], "update_cov (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.update_cov"]], "update_init_mean() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_init_mean"]], "update_nproblems() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_nproblems"]], "update_num_particles_per_problem() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_num_particles_per_problem"]], "update_params() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_params"]], "update_samples() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_samples"]], "update_seed() (parallelmppi method)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_seed"]], "use_coo_sparse (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.use_coo_sparse"]], "use_coo_sparse (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.use_coo_sparse"]], "use_cuda_graph (parallelmppi attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPI.use_cuda_graph"]], "use_cuda_graph (parallelmppiconfig attribute)": [[44, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.use_cuda_graph"]], "best (samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.BEST"]], "mean (samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.MEAN"]], "particleoptbase (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase"]], "particleoptconfig (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig"]], "particleoptinfo (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptInfo"]], "sample (samplemode attribute)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode.SAMPLE"]], "samplemode (class in curobo.opt.particle.particle_opt_base)": [[45, "curobo.opt.particle.particle_opt_base.SampleMode"]], "_calc_val() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._calc_val"]], "_call_cuda_opt_iters() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._call_cuda_opt_iters"]], "_get_action_seq() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._get_action_seq"]], "_initialize_cuda_graph() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._initialize_cuda_graph"]], "_optimize() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._optimize"]], "_run_opt_iters() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._run_opt_iters"]], "_shift() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._shift"]], "_update_distribution() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._update_distribution"]], "_update_problem_kernel() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase._update_problem_kernel"]], "action_highs (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.action_highs"]], "action_highs (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.action_highs"]], "action_horizon (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.action_horizon"]], "action_horizon (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.action_horizon"]], "action_lows (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.action_lows"]], "action_lows (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.action_lows"]], "calculate_value (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.calculate_value"]], "calculate_value (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.calculate_value"]], "check_convergence() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.check_convergence"]], "cold_start_n_iters (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.cold_start_n_iters"]], "cold_start_n_iters (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.cold_start_n_iters"]], "create_data_dict() (particleoptbase static method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.create_data_dict"]], "create_data_dict() (particleoptconfig static method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.create_data_dict"]], "curobo.opt.particle.particle_opt_base": [[45, "module-curobo.opt.particle.particle_opt_base"]], "d_action (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.d_action"]], "d_action (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.d_action"]], "debug_info (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.debug_info"]], "debug_info (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.debug_info"]], "gamma (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.gamma"]], "gamma (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.gamma"]], "generate_rollouts() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.generate_rollouts"]], "get_all_rollout_instances() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.get_all_rollout_instances"]], "get_nproblem_tensor() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.get_nproblem_tensor"]], "horizon (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.horizon"]], "horizon (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.horizon"]], "info (particleoptinfo attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptInfo.info"]], "n_iters (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.n_iters"]], "n_iters (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.n_iters"]], "n_problems (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.n_problems"]], "n_problems (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.n_problems"]], "num_particles (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.num_particles"]], "num_particles (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.num_particles"]], "optimize() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.optimize"]], "reset() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset"]], "reset_cuda_graph() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset_cuda_graph"]], "reset_seed() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset_seed"]], "reset_shape() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset_shape"]], "rollout_fn (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.rollout_fn"]], "rollout_fn (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.rollout_fn"]], "sample_actions() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sample_actions"]], "sample_mode (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sample_mode"]], "sample_mode (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.sample_mode"]], "seed (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.seed"]], "seed (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.seed"]], "store_debug (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.store_debug"]], "store_debug (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.store_debug"]], "store_rollouts (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.store_rollouts"]], "store_rollouts (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.store_rollouts"]], "sync_cuda_time (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sync_cuda_time"]], "sync_cuda_time (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.sync_cuda_time"]], "tensor_args (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.tensor_args"]], "tensor_args (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.tensor_args"]], "update_nproblems() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_nproblems"]], "update_num_particles_per_problem() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_num_particles_per_problem"]], "update_params() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_params"]], "update_seed() (particleoptbase method)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_seed"]], "use_coo_sparse (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.use_coo_sparse"]], "use_coo_sparse (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.use_coo_sparse"]], "use_cuda_graph (particleoptbase attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptBase.use_cuda_graph"]], "use_cuda_graph (particleoptconfig attribute)": [[45, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.use_cuda_graph"]], "clamp (squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP"]], "clamp_rescale (squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP_RESCALE"]], "identity (squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.IDENTITY"]], "squashtype (class in curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType"]], "tanh (squashtype attribute)": [[46, "curobo.opt.particle.particle_opt_utils.SquashType.TANH"]], "batch_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.batch_cholesky"]], "cost_to_go() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.cost_to_go"]], "cost_to_go_np() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.cost_to_go_np"]], "curobo.opt.particle.particle_opt_utils": [[46, "module-curobo.opt.particle.particle_opt_utils"]], "gaussian_entropy() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_entropy"]], "gaussian_kl() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_kl"]], "gaussian_logprob() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_logprob"]], "gaussian_logprobgrad() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.gaussian_logprobgrad"]], "get_stomp_cov() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.get_stomp_cov"]], "matrix_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.matrix_cholesky"]], "scale_ctrl() (in module curobo.opt.particle.particle_opt_utils)": [[46, "curobo.opt.particle.particle_opt_utils.scale_ctrl"]], "curobo.rollout": [[47, "module-curobo.rollout"]], "armbase (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmBase"]], "armbaseconfig (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmBaseConfig"]], "armcostconfig (class in curobo.rollout.arm_base)": [[48, "curobo.rollout.arm_base.ArmCostConfig"]], "_get_augmented_state() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase._get_augmented_state"]], "_get_base_keys() (armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig._get_base_keys"]], "_get_formatted_dict() (armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig._get_formatted_dict"]], "_init_after_config_load() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase._init_after_config_load"]], "action_bound_highs (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_bound_highs"]], "action_bound_lows (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_bound_lows"]], "action_bounds (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_bounds"]], "action_horizon (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.action_horizon"]], "bound_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.bound_cfg"]], "compute_kinematics() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.compute_kinematics"]], "constraint_cfg (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.constraint_cfg"]], "constraint_cfg (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.constraint_cfg"]], "constraint_fn() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.constraint_fn"]], "convergence_cfg (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.convergence_cfg"]], "convergence_cfg (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.convergence_cfg"]], "convergence_fn() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.convergence_fn"]], "cost_cfg (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.cost_cfg"]], "cost_cfg (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.cost_cfg"]], "cost_fn() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.cost_fn"]], "cost_from_dict() (armbase static method)": [[48, "curobo.rollout.arm_base.ArmBase.cost_from_dict"]], "cost_from_dict() (armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.cost_from_dict"]], "cspace_config (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.cspace_config"]], "curobo.rollout.arm_base": [[48, "module-curobo.rollout.arm_base"]], "current_cost() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.current_cost"]], "d_action (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.d_action"]], "dt (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.dt"]], "filter_robot_state() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.filter_robot_state"]], "from_dict() (armbase class method)": [[48, "curobo.rollout.arm_base.ArmBase.from_dict"]], "from_dict() (armbaseconfig class method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.from_dict"]], "from_dict() (armcostconfig static method)": [[48, "curobo.rollout.arm_base.ArmCostConfig.from_dict"]], "get_action_from_state() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_action_from_state"]], "get_ee_pose() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_ee_pose"]], "get_full_dof_from_solution() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_full_dof_from_solution"]], "get_init_action_seq() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_init_action_seq"]], "get_metrics() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_metrics"]], "get_metrics_cuda_graph() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_metrics_cuda_graph"]], "get_robot_command() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_robot_command"]], "get_state_from_action() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.get_state_from_action"]], "horizon (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.horizon"]], "joint_names (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.joint_names"]], "kinematics (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.kinematics"]], "manipulability_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.manipulability_cfg"]], "model_cfg (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.model_cfg"]], "model_cfg (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.model_cfg"]], "model_from_dict() (armbase static method)": [[48, "curobo.rollout.arm_base.ArmBase.model_from_dict"]], "model_from_dict() (armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.model_from_dict"]], "null_space_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.null_space_cfg"]], "primitive_collision_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.primitive_collision_cfg"]], "reset() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset"]], "reset_cuda_graph() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset_cuda_graph"]], "reset_seed() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset_seed"]], "reset_shape() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.reset_shape"]], "retract_state (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.retract_state"]], "rollout_constraint() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_constraint"]], "rollout_constraint_cuda_graph() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_constraint_cuda_graph"]], "rollout_fn() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.rollout_fn"]], "sample_random_actions() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.sample_random_actions"]], "sampler_seed (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.sampler_seed"]], "sampler_seed (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.sampler_seed"]], "self_collision_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.self_collision_cfg"]], "state_bounds (armbase property)": [[48, "curobo.rollout.arm_base.ArmBase.state_bounds"]], "stop_cfg (armcostconfig attribute)": [[48, "curobo.rollout.arm_base.ArmCostConfig.stop_cfg"]], "sum_horizon (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.sum_horizon"]], "sum_horizon (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.sum_horizon"]], "tensor_args (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.tensor_args"]], "tensor_args (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.tensor_args"]], "update_cost_dt() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_cost_dt"]], "update_params() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_params"]], "update_start_state() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_start_state"]], "update_traj_dt() (armbase method)": [[48, "curobo.rollout.arm_base.ArmBase.update_traj_dt"]], "world_coll_checker (armbase attribute)": [[48, "curobo.rollout.arm_base.ArmBase.world_coll_checker"]], "world_coll_checker (armbaseconfig attribute)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker"]], "world_coll_checker_from_dict() (armbase static method)": [[48, "curobo.rollout.arm_base.ArmBase.world_coll_checker_from_dict"]], "world_coll_checker_from_dict() (armbaseconfig static method)": [[48, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker_from_dict"]], "armreacher (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacher"]], "armreacherconfig (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig"]], "armreachercostconfig (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig"]], "armreachermetrics (class in curobo.rollout.arm_reacher)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics"]], "_abc_impl (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics._abc_impl"]], "_get_augmented_state() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher._get_augmented_state"]], "_get_base_keys() (armreachercostconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig._get_base_keys"]], "_get_formatted_dict() (armreachercostconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig._get_formatted_dict"]], "_init_after_config_load() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher._init_after_config_load"]], "_is_protocol (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics._is_protocol"]], "action_bound_highs (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.action_bound_highs"]], "action_bound_lows (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.action_bound_lows"]], "action_bounds (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.action_bounds"]], "action_horizon (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.action_horizon"]], "bound_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.bound_cfg"]], "clone() (armreachermetrics method)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.clone"]], "compute_kinematics() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.compute_kinematics"]], "constraint (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.constraint"]], "constraint_cfg (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.constraint_cfg"]], "constraint_cfg (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.constraint_cfg"]], "constraint_fn() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.constraint_fn"]], "convergence_cfg (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.convergence_cfg"]], "convergence_cfg (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.convergence_cfg"]], "convergence_fn() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.convergence_fn"]], "cost (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.cost"]], "cost_cfg (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.cost_cfg"]], "cost_cfg (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_cfg"]], "cost_fn() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.cost_fn"]], "cost_from_dict() (armreacher static method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.cost_from_dict"]], "cost_from_dict() (armreacherconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_from_dict"]], "count() (armreachermetrics method)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.count"]], "cspace_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.cspace_cfg"]], "cspace_config (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.cspace_config"]], "cspace_error (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.cspace_error"]], "curobo.rollout.arm_reacher": [[49, "module-curobo.rollout.arm_reacher"]], "current_cost() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.current_cost"]], "d_action (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.d_action"]], "dt (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.dt"]], "enable_cspace_cost() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.enable_cspace_cost"]], "enable_pose_cost() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.enable_pose_cost"]], "feasible (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.feasible"]], "filter_robot_state() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.filter_robot_state"]], "from_dict() (armreacher class method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.from_dict"]], "from_dict() (armreacherconfig class method)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.from_dict"]], "from_dict() (armreachercostconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.from_dict"]], "get_action_from_state() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_action_from_state"]], "get_ee_pose() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_ee_pose"]], "get_full_dof_from_solution() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_full_dof_from_solution"]], "get_init_action_seq() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_init_action_seq"]], "get_metrics() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_metrics"]], "get_metrics_cuda_graph() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_metrics_cuda_graph"]], "get_pose_costs() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_pose_costs"]], "get_robot_command() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_robot_command"]], "get_state_from_action() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.get_state_from_action"]], "goalset_index (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.goalset_index"]], "horizon (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.horizon"]], "index() (armreachermetrics method)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.index"]], "joint_names (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.joint_names"]], "kinematics (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.kinematics"]], "link_pose_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.link_pose_cfg"]], "manipulability_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.manipulability_cfg"]], "model_cfg (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.model_cfg"]], "model_cfg (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.model_cfg"]], "model_from_dict() (armreacher static method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.model_from_dict"]], "model_from_dict() (armreacherconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.model_from_dict"]], "null_space_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.null_space_cfg"]], "null_space_error (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.null_space_error"]], "pose_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.pose_cfg"]], "pose_error (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.pose_error"]], "position_error (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.position_error"]], "primitive_collision_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.primitive_collision_cfg"]], "reset() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.reset"]], "reset_cuda_graph() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.reset_cuda_graph"]], "reset_seed() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.reset_seed"]], "reset_shape() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.reset_shape"]], "retract_state (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.retract_state"]], "rollout_constraint() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.rollout_constraint"]], "rollout_constraint_cuda_graph() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.rollout_constraint_cuda_graph"]], "rollout_fn() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.rollout_fn"]], "rotation_error (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.rotation_error"]], "sample_random_actions() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.sample_random_actions"]], "sampler_seed (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.sampler_seed"]], "sampler_seed (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.sampler_seed"]], "self_collision_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.self_collision_cfg"]], "state (armreachermetrics attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherMetrics.state"]], "state_bounds (armreacher property)": [[49, "curobo.rollout.arm_reacher.ArmReacher.state_bounds"]], "stop_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.stop_cfg"]], "straight_line_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.straight_line_cfg"]], "sum_horizon (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.sum_horizon"]], "sum_horizon (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.sum_horizon"]], "tensor_args (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.tensor_args"]], "tensor_args (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.tensor_args"]], "update_cost_dt() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_cost_dt"]], "update_params() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_params"]], "update_pose_cost_metric() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_pose_cost_metric"]], "update_start_state() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_start_state"]], "update_traj_dt() (armreacher method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.update_traj_dt"]], "world_coll_checker (armreacher attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacher.world_coll_checker"]], "world_coll_checker (armreacherconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.world_coll_checker"]], "world_coll_checker_from_dict() (armreacher static method)": [[49, "curobo.rollout.arm_reacher.ArmReacher.world_coll_checker_from_dict"]], "world_coll_checker_from_dict() (armreacherconfig static method)": [[49, "curobo.rollout.arm_reacher.ArmReacherConfig.world_coll_checker_from_dict"]], "zero_acc_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_acc_cfg"]], "zero_jerk_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_jerk_cfg"]], "zero_vel_cfg (armreachercostconfig attribute)": [[49, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_vel_cfg"]], "curobo.rollout.cost": [[50, "module-curobo.rollout.cost"]], "bounds (boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS"]], "bounds_smooth (boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS_SMOOTH"]], "boundcost (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCost"]], "boundcostconfig (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig"]], "boundcosttype (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType"]], "position (boundcosttype attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostType.POSITION"]], "t_destination (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.T_destination"]], "warpboundfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction"]], "warpboundposfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction"]], "warpboundposloss (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss"]], "warpboundsmoothfunction (class in curobo.rollout.cost.bound_cost)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction"]], "_apply() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._apply"]], "_backward_cls (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._backward_cls"]], "_backward_cls (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._backward_cls"]], "_backward_cls (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._backward_cls"]], "_backward_cls (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._backward_cls"]], "_backward_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._backward_hooks"]], "_backward_pre_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._backward_pre_hooks"]], "_buffers (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._buffers"]], "_call_impl() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._call_impl"]], "_compiled_call_impl (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._compiled_call_impl"]], "_forward_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._forward_hooks"]], "_forward_hooks_always_called (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._get_backward_hooks"]], "_get_backward_pre_hooks() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._get_backward_pre_hooks"]], "_get_compiled_autograd_symints() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._get_compiled_autograd_symints"]], "_get_name() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._get_name"]], "_init_post_config() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._init_post_config"]], "_is_compiled_autograd_tracing() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._is_compiled_autograd_tracing"]], "_is_full_backward_hook (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._is_full_backward_hook"]], "_load_from_state_dict() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._load_from_state_dict"]], "_load_state_dict_post_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._load_state_dict_pre_hooks"]], "_materialize_non_diff_grads (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._materialize_non_diff_grads"]], "_materialize_non_diff_grads (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._materialize_non_diff_grads"]], "_materialize_non_diff_grads (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._materialize_non_diff_grads"]], "_materialize_non_diff_grads (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._materialize_non_diff_grads"]], "_maybe_warn_non_full_backward_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._maybe_warn_non_full_backward_hook"]], "_modules (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._modules"]], "_named_members() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._named_members"]], "_non_persistent_buffers_set (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._non_persistent_buffers_set"]], "_parameters (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._parameters"]], "_raw_saved_tensors (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._raw_saved_tensors"]], "_raw_saved_tensors (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._raw_saved_tensors"]], "_raw_saved_tensors (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._raw_saved_tensors"]], "_raw_saved_tensors (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._raw_saved_tensors"]], "_register_hook() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._register_hook"]], "_register_hook() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._register_hook"]], "_register_hook() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._register_hook"]], "_register_hook() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._register_hook"]], "_register_hook_dict() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._register_hook_dict"]], "_register_hook_dict() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._register_hook_dict"]], "_register_hook_dict() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._register_hook_dict"]], "_register_hook_dict() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._register_hook_dict"]], "_register_load_state_dict_pre_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._replicate_for_data_parallel"]], "_save_to_state_dict() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._save_to_state_dict"]], "_sequence_nr() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction._sequence_nr"]], "_sequence_nr() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._sequence_nr"]], "_sequence_nr() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._sequence_nr"]], "_sequence_nr() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._sequence_nr"]], "_slow_forward() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._slow_forward"]], "_state_dict_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._state_dict_hooks"]], "_state_dict_pre_hooks (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._state_dict_pre_hooks"]], "_version (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._version"]], "_wrapped_call_impl() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost._wrapped_call_impl"]], "activation_distance (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.activation_distance"]], "activation_distance (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.activation_distance"]], "add_module() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.add_module"]], "apply() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.apply"]], "apply() (warpboundfunction class method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.apply"]], "apply() (warpboundposfunction class method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.apply"]], "apply() (warpboundposloss class method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.apply"]], "apply() (warpboundsmoothfunction class method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.apply"]], "backward() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.backward"]], "backward() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.backward"]], "backward() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.backward"]], "backward() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.backward"]], "bfloat16() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.bfloat16"]], "buffers() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.buffers"]], "call_super_init (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.call_super_init"]], "children() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.children"]], "classify (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.classify"]], "classify (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.classify"]], "compile() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.compile"]], "cost_type (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.cost_type"]], "cost_type (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.cost_type"]], "cpu() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.cpu"]], "cspace_distance_weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.cspace_distance_weight"]], "cspace_distance_weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.cspace_distance_weight"]], "cuda() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.cuda"]], "curobo.rollout.cost.bound_cost": [[51, "module-curobo.rollout.cost.bound_cost"]], "dirty_tensors (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.dirty_tensors"]], "dirty_tensors (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.dirty_tensors"]], "dirty_tensors (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.dirty_tensors"]], "dirty_tensors (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.dirty_tensors"]], "disable_cost() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.disable_cost"]], "distance_threshold (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.distance_threshold"]], "distance_threshold (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.distance_threshold"]], "dof (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.dof"]], "dof (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.dof"]], "double() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.double"]], "dump_patches (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.dump_patches"]], "enable_cost() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.enable_cost"]], "enabled (boundcost property)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.enabled"]], "eval() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.eval"]], "extra_repr() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.extra_repr"]], "float() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.float"]], "forward() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.forward"]], "forward() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.forward"]], "forward() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.forward"]], "forward() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.forward"]], "forward() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.forward"]], "generate_vmap_rule (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.generate_vmap_rule"]], "generate_vmap_rule (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.generate_vmap_rule"]], "generate_vmap_rule (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.generate_vmap_rule"]], "generate_vmap_rule (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.generate_vmap_rule"]], "get_buffer() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.get_buffer"]], "get_extra_state() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.get_extra_state"]], "get_parameter() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.get_parameter"]], "get_submodule() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.get_submodule"]], "half() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.half"]], "hinge_value (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.hinge_value"]], "hinge_value (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.hinge_value"]], "ipu() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.ipu"]], "is_traceable (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.is_traceable"]], "is_traceable (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.is_traceable"]], "is_traceable (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.is_traceable"]], "is_traceable (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.is_traceable"]], "joint_limits (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.joint_limits"]], "joint_limits (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.joint_limits"]], "jvp() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.jvp"]], "jvp() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.jvp"]], "jvp() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.jvp"]], "jvp() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.jvp"]], "load_state_dict() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.load_state_dict"]], "mark_dirty() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.mark_dirty"]], "mark_dirty() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.mark_dirty"]], "mark_dirty() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.mark_dirty"]], "mark_dirty() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.mark_dirty"]], "mark_non_differentiable() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.mark_non_differentiable"]], "mark_non_differentiable() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.mark_non_differentiable"]], "mark_non_differentiable() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.mark_non_differentiable"]], "mark_non_differentiable() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.mark_non_differentiable"]], "mark_shared_storage() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.mark_shared_storage"]], "mark_shared_storage() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.mark_shared_storage"]], "mark_shared_storage() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.mark_shared_storage"]], "mark_shared_storage() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.mark_shared_storage"]], "materialize_grads (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.materialize_grads"]], "materialize_grads (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.materialize_grads"]], "materialize_grads (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.materialize_grads"]], "materialize_grads (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.materialize_grads"]], "max_value (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.max_value"]], "max_value (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.max_value"]], "maybe_clear_saved_tensors() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.maybe_clear_saved_tensors"]], "metadata (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.metadata"]], "metadata (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.metadata"]], "metadata (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.metadata"]], "metadata (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.metadata"]], "modules() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.modules"]], "name() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.name"]], "name() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.name"]], "name() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.name"]], "name() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.name"]], "named_buffers() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.named_buffers"]], "named_children() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.named_children"]], "named_modules() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.named_modules"]], "named_parameters() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.named_parameters"]], "needs_input_grad (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.needs_input_grad"]], "needs_input_grad (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.needs_input_grad"]], "needs_input_grad (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.needs_input_grad"]], "needs_input_grad (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.needs_input_grad"]], "next_functions (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.next_functions"]], "next_functions (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.next_functions"]], "next_functions (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.next_functions"]], "next_functions (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.next_functions"]], "non_differentiable (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.non_differentiable"]], "non_differentiable (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.non_differentiable"]], "non_differentiable (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.non_differentiable"]], "non_differentiable (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.non_differentiable"]], "null_space_weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.null_space_weight"]], "null_space_weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.null_space_weight"]], "parameters() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.parameters"]], "register_backward_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_backward_hook"]], "register_buffer() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_buffer"]], "register_forward_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_forward_hook"]], "register_forward_pre_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_forward_pre_hook"]], "register_full_backward_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_full_backward_pre_hook"]], "register_hook() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.register_hook"]], "register_hook() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.register_hook"]], "register_hook() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.register_hook"]], "register_hook() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.register_hook"]], "register_load_state_dict_post_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_load_state_dict_post_hook"]], "register_module() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_module"]], "register_parameter() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_parameter"]], "register_prehook() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.register_prehook"]], "register_prehook() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.register_prehook"]], "register_prehook() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.register_prehook"]], "register_prehook() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.register_prehook"]], "register_state_dict_pre_hook() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.register_state_dict_pre_hook"]], "requires_grad (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.requires_grad"]], "requires_grad (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.requires_grad"]], "requires_grad (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.requires_grad"]], "requires_grad (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.requires_grad"]], "requires_grad_() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.requires_grad_"]], "return_loss (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.return_loss"]], "return_loss (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.return_loss"]], "run_weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.run_weight"]], "run_weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight"]], "run_weight_acceleration (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.run_weight_acceleration"]], "run_weight_acceleration (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_acceleration"]], "run_weight_jerk (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.run_weight_jerk"]], "run_weight_jerk (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_jerk"]], "run_weight_velocity (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.run_weight_velocity"]], "run_weight_velocity (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_velocity"]], "save_for_backward() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.save_for_backward"]], "save_for_backward() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.save_for_backward"]], "save_for_backward() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.save_for_backward"]], "save_for_backward() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.save_for_backward"]], "save_for_forward() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.save_for_forward"]], "save_for_forward() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.save_for_forward"]], "save_for_forward() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.save_for_forward"]], "save_for_forward() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.save_for_forward"]], "saved_for_forward (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.saved_for_forward"]], "saved_for_forward (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.saved_for_forward"]], "saved_for_forward (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.saved_for_forward"]], "saved_for_forward (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.saved_for_forward"]], "saved_tensors (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.saved_tensors"]], "saved_tensors (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.saved_tensors"]], "saved_tensors (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.saved_tensors"]], "saved_tensors (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.saved_tensors"]], "saved_variables (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.saved_variables"]], "saved_variables (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.saved_variables"]], "saved_variables (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.saved_variables"]], "saved_variables (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.saved_variables"]], "set_bounds() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.set_bounds"]], "set_bounds() (boundcostconfig method)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.set_bounds"]], "set_extra_state() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.set_extra_state"]], "set_materialize_grads() (warpboundfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.set_materialize_grads"]], "set_materialize_grads() (warpboundposfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.set_materialize_grads"]], "set_materialize_grads() (warpboundposloss method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.set_materialize_grads"]], "set_materialize_grads() (warpboundsmoothfunction method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.set_materialize_grads"]], "setup_context() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.setup_context"]], "setup_context() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.setup_context"]], "setup_context() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.setup_context"]], "setup_context() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.setup_context"]], "share_memory() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.share_memory"]], "smooth_weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.smooth_weight"]], "smooth_weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.smooth_weight"]], "state_dict() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.state_dict"]], "state_finite_difference_mode (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.state_finite_difference_mode"]], "state_finite_difference_mode (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.state_finite_difference_mode"]], "tensor_args (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.tensor_args"]], "tensor_args (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.tensor_args"]], "terminal (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.terminal"]], "terminal (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.terminal"]], "threshold_value (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.threshold_value"]], "threshold_value (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.threshold_value"]], "to() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.to"]], "to_empty() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.to_empty"]], "to_save (warpboundfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.to_save"]], "to_save (warpboundposfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.to_save"]], "to_save (warpboundposloss attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.to_save"]], "to_save (warpboundsmoothfunction attribute)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.to_save"]], "train() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.train"]], "training (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.training"]], "type() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.type"]], "update_batch_size() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_batch_size"]], "update_dt() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_dt"]], "update_vec_weight() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_vec_weight"]], "update_vec_weight() (boundcostconfig method)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.update_vec_weight"]], "update_weight() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.update_weight"]], "vec_convergence (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.vec_convergence"]], "vec_convergence (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.vec_convergence"]], "vec_weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.vec_weight"]], "vec_weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.vec_weight"]], "vjp() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.vjp"]], "vjp() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.vjp"]], "vjp() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.vjp"]], "vjp() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.vjp"]], "vmap() (warpboundfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundFunction.vmap"]], "vmap() (warpboundposfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.vmap"]], "vmap() (warpboundposloss static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.vmap"]], "vmap() (warpboundsmoothfunction static method)": [[51, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.vmap"]], "weight (boundcost attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.weight"]], "weight (boundcostconfig attribute)": [[51, "curobo.rollout.cost.bound_cost.BoundCostConfig.weight"]], "xpu() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.xpu"]], "zero_grad() (boundcost method)": [[51, "curobo.rollout.cost.bound_cost.BoundCost.zero_grad"]], "costbase (class in curobo.rollout.cost.cost_base)": [[52, "curobo.rollout.cost.cost_base.CostBase"]], "costconfig (class in curobo.rollout.cost.cost_base)": [[52, "curobo.rollout.cost.cost_base.CostConfig"]], "t_destination (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.T_destination"]], "_apply() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._apply"]], "_backward_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._backward_hooks"]], "_backward_pre_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._backward_pre_hooks"]], "_buffers (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._buffers"]], "_call_impl() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._call_impl"]], "_compiled_call_impl (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._compiled_call_impl"]], "_forward_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._forward_hooks"]], "_forward_hooks_always_called (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._forward_hooks_with_kwargs"]], "_forward_pre_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._get_backward_hooks"]], "_get_backward_pre_hooks() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._get_backward_pre_hooks"]], "_get_name() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._get_name"]], "_init_post_config() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._init_post_config"]], "_is_full_backward_hook (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._is_full_backward_hook"]], "_load_from_state_dict() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._load_from_state_dict"]], "_load_state_dict_post_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._maybe_warn_non_full_backward_hook"]], "_modules (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._modules"]], "_named_members() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._named_members"]], "_non_persistent_buffers_set (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._non_persistent_buffers_set"]], "_parameters (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._parameters"]], "_register_load_state_dict_pre_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._register_state_dict_hook"]], "_replicate_for_data_parallel() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._replicate_for_data_parallel"]], "_save_to_state_dict() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._save_to_state_dict"]], "_slow_forward() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._slow_forward"]], "_state_dict_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._state_dict_hooks"]], "_state_dict_pre_hooks (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._state_dict_pre_hooks"]], "_version (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase._version"]], "_wrapped_call_impl() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase._wrapped_call_impl"]], "add_module() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.add_module"]], "apply() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.apply"]], "bfloat16() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.bfloat16"]], "buffers() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.buffers"]], "call_super_init (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.call_super_init"]], "children() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.children"]], "classify (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.classify"]], "classify (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.classify"]], "compile() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.compile"]], "cpu() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.cpu"]], "cuda() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.cuda"]], "curobo.rollout.cost.cost_base": [[52, "module-curobo.rollout.cost.cost_base"]], "disable_cost() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.disable_cost"]], "distance_threshold (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.distance_threshold"]], "distance_threshold (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.distance_threshold"]], "dof (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.dof"]], "dof (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.dof"]], "double() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.double"]], "dump_patches (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.dump_patches"]], "enable_cost() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.enable_cost"]], "enabled (costbase property)": [[52, "curobo.rollout.cost.cost_base.CostBase.enabled"]], "eval() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.eval"]], "extra_repr() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.extra_repr"]], "float() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.float"]], "forward() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.forward"]], "get_buffer() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.get_buffer"]], "get_extra_state() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.get_extra_state"]], "get_parameter() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.get_parameter"]], "get_submodule() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.get_submodule"]], "half() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.half"]], "hinge_value (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.hinge_value"]], "hinge_value (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.hinge_value"]], "ipu() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.ipu"]], "load_state_dict() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.load_state_dict"]], "max_value (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.max_value"]], "max_value (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.max_value"]], "modules() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.modules"]], "named_buffers() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.named_buffers"]], "named_children() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.named_children"]], "named_modules() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.named_modules"]], "named_parameters() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.named_parameters"]], "parameters() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.parameters"]], "register_backward_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_backward_hook"]], "register_buffer() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_buffer"]], "register_forward_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_forward_hook"]], "register_forward_pre_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_forward_pre_hook"]], "register_full_backward_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_full_backward_hook"]], "register_full_backward_pre_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_load_state_dict_post_hook"]], "register_module() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_module"]], "register_parameter() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_parameter"]], "register_state_dict_pre_hook() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.register_state_dict_pre_hook"]], "requires_grad_() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.requires_grad_"]], "return_loss (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.return_loss"]], "return_loss (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.return_loss"]], "run_weight (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.run_weight"]], "run_weight (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.run_weight"]], "set_extra_state() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.set_extra_state"]], "share_memory() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.share_memory"]], "state_dict() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.state_dict"]], "tensor_args (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.tensor_args"]], "tensor_args (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.tensor_args"]], "terminal (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.terminal"]], "terminal (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.terminal"]], "threshold_value (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.threshold_value"]], "threshold_value (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.threshold_value"]], "to() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.to"]], "to_empty() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.to_empty"]], "train() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.train"]], "training (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.training"]], "type() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.type"]], "update_dt() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.update_dt"]], "update_vec_weight() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.update_vec_weight"]], "update_vec_weight() (costconfig method)": [[52, "curobo.rollout.cost.cost_base.CostConfig.update_vec_weight"]], "update_weight() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.update_weight"]], "vec_convergence (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.vec_convergence"]], "vec_convergence (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.vec_convergence"]], "vec_weight (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.vec_weight"]], "vec_weight (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.vec_weight"]], "weight (costbase attribute)": [[52, "curobo.rollout.cost.cost_base.CostBase.weight"]], "weight (costconfig attribute)": [[52, "curobo.rollout.cost.cost_base.CostConfig.weight"]], "xpu() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.xpu"]], "zero_grad() (costbase method)": [[52, "curobo.rollout.cost.cost_base.CostBase.zero_grad"]], "distcost (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistCost"]], "distcostconfig (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig"]], "disttype (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.DistType"]], "l1 (disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.L1"]], "l2 (disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.L2"]], "l2distfunction (class in curobo.rollout.cost.dist_cost)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction"]], "squared_l2 (disttype attribute)": [[53, "curobo.rollout.cost.dist_cost.DistType.SQUARED_L2"]], "t_destination (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.T_destination"]], "_apply() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._apply"]], "_backward_cls (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._backward_cls"]], "_backward_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._backward_hooks"]], "_backward_pre_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._backward_pre_hooks"]], "_buffers (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._buffers"]], "_call_impl() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._call_impl"]], "_compiled_call_impl (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._compiled_call_impl"]], "_forward_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._forward_hooks"]], "_forward_hooks_always_called (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._get_backward_hooks"]], "_get_backward_pre_hooks() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._get_backward_pre_hooks"]], "_get_compiled_autograd_symints() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._get_compiled_autograd_symints"]], "_get_name() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._get_name"]], "_init_post_config() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._init_post_config"]], "_is_compiled_autograd_tracing() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._is_compiled_autograd_tracing"]], "_is_full_backward_hook (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._is_full_backward_hook"]], "_load_from_state_dict() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._load_from_state_dict"]], "_load_state_dict_post_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._load_state_dict_pre_hooks"]], "_materialize_non_diff_grads (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._materialize_non_diff_grads"]], "_maybe_warn_non_full_backward_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._maybe_warn_non_full_backward_hook"]], "_modules (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._modules"]], "_named_members() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._named_members"]], "_non_persistent_buffers_set (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._non_persistent_buffers_set"]], "_parameters (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._parameters"]], "_raw_saved_tensors (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._raw_saved_tensors"]], "_register_hook() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._register_hook"]], "_register_hook_dict() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._register_hook_dict"]], "_register_load_state_dict_pre_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._replicate_for_data_parallel"]], "_save_to_state_dict() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._save_to_state_dict"]], "_sequence_nr() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction._sequence_nr"]], "_slow_forward() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._slow_forward"]], "_state_dict_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._state_dict_hooks"]], "_state_dict_pre_hooks (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._state_dict_pre_hooks"]], "_version (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost._version"]], "_wrapped_call_impl() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost._wrapped_call_impl"]], "add_module() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.add_module"]], "apply() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.apply"]], "apply() (l2distfunction class method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.apply"]], "backward() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.backward"]], "bfloat16() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.bfloat16"]], "buffers() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.buffers"]], "call_super_init (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.call_super_init"]], "children() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.children"]], "classify (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.classify"]], "classify (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.classify"]], "compile() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.compile"]], "cpu() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.cpu"]], "cuda() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.cuda"]], "curobo.rollout.cost.dist_cost": [[53, "module-curobo.rollout.cost.dist_cost"]], "dirty_tensors (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.dirty_tensors"]], "disable_cost() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.disable_cost"]], "dist_type (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.dist_type"]], "dist_type (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.dist_type"]], "distance_threshold (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.distance_threshold"]], "distance_threshold (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.distance_threshold"]], "dof (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.dof"]], "dof (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.dof"]], "double() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.double"]], "dump_patches (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.dump_patches"]], "enable_cost() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.enable_cost"]], "enabled (distcost property)": [[53, "curobo.rollout.cost.dist_cost.DistCost.enabled"]], "eval() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.eval"]], "extra_repr() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.extra_repr"]], "float() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.float"]], "forward() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward"]], "forward() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.forward"]], "forward_target() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward_target"]], "forward_target_idx() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.forward_target_idx"]], "generate_vmap_rule (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.generate_vmap_rule"]], "get_buffer() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.get_buffer"]], "get_extra_state() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.get_extra_state"]], "get_parameter() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.get_parameter"]], "get_submodule() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.get_submodule"]], "half() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.half"]], "hinge_value (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.hinge_value"]], "hinge_value (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.hinge_value"]], "ipu() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.ipu"]], "is_traceable (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.is_traceable"]], "jvp() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.jvp"]], "load_state_dict() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.load_state_dict"]], "mark_dirty() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.mark_dirty"]], "mark_non_differentiable() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.mark_non_differentiable"]], "mark_shared_storage() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.mark_shared_storage"]], "materialize_grads (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.materialize_grads"]], "max_value (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.max_value"]], "max_value (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.max_value"]], "maybe_clear_saved_tensors() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.maybe_clear_saved_tensors"]], "metadata (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.metadata"]], "modules() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.modules"]], "name() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.name"]], "named_buffers() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.named_buffers"]], "named_children() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.named_children"]], "named_modules() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.named_modules"]], "named_parameters() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.named_parameters"]], "needs_input_grad (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.needs_input_grad"]], "next_functions (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.next_functions"]], "non_differentiable (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.non_differentiable"]], "parameters() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.parameters"]], "register_backward_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_backward_hook"]], "register_buffer() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_buffer"]], "register_forward_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_forward_hook"]], "register_forward_pre_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_forward_pre_hook"]], "register_full_backward_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_full_backward_pre_hook"]], "register_hook() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.register_hook"]], "register_load_state_dict_post_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_load_state_dict_post_hook"]], "register_module() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_module"]], "register_parameter() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_parameter"]], "register_prehook() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.register_prehook"]], "register_state_dict_pre_hook() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.register_state_dict_pre_hook"]], "requires_grad (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.requires_grad"]], "requires_grad_() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.requires_grad_"]], "return_loss (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.return_loss"]], "return_loss (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.return_loss"]], "run_weight (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.run_weight"]], "run_weight (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.run_weight"]], "save_for_backward() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.save_for_backward"]], "save_for_forward() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.save_for_forward"]], "saved_for_forward (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.saved_for_forward"]], "saved_tensors (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.saved_tensors"]], "saved_variables (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.saved_variables"]], "set_extra_state() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.set_extra_state"]], "set_materialize_grads() (l2distfunction method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.set_materialize_grads"]], "setup_context() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.setup_context"]], "share_memory() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.share_memory"]], "state_dict() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.state_dict"]], "tensor_args (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.tensor_args"]], "tensor_args (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.tensor_args"]], "terminal (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.terminal"]], "terminal (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.terminal"]], "threshold_value (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.threshold_value"]], "threshold_value (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.threshold_value"]], "to() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.to"]], "to_empty() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.to_empty"]], "to_save (l2distfunction attribute)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.to_save"]], "train() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.train"]], "training (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.training"]], "type() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.type"]], "update_batch_size() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.update_batch_size"]], "update_dt() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.update_dt"]], "update_vec_weight() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.update_vec_weight"]], "update_vec_weight() (distcostconfig method)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.update_vec_weight"]], "update_weight() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.update_weight"]], "use_null_space (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.use_null_space"]], "use_null_space (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.use_null_space"]], "vec_convergence (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.vec_convergence"]], "vec_convergence (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.vec_convergence"]], "vec_weight (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.vec_weight"]], "vec_weight (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.vec_weight"]], "vjp() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.vjp"]], "vmap() (l2distfunction static method)": [[53, "curobo.rollout.cost.dist_cost.L2DistFunction.vmap"]], "weight (distcost attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCost.weight"]], "weight (distcostconfig attribute)": [[53, "curobo.rollout.cost.dist_cost.DistCostConfig.weight"]], "xpu() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.xpu"]], "zero_grad() (distcost method)": [[53, "curobo.rollout.cost.dist_cost.DistCost.zero_grad"]], "manipulabilitycost (class in curobo.rollout.cost.manipulability_cost)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost"]], "manipulabilitycostconfig (class in curobo.rollout.cost.manipulability_cost)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig"]], "t_destination (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.T_destination"]], "_apply() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._apply"]], "_backward_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._backward_hooks"]], "_backward_pre_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._backward_pre_hooks"]], "_buffers (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._buffers"]], "_call_impl() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._call_impl"]], "_compiled_call_impl (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._compiled_call_impl"]], "_forward_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._forward_hooks"]], "_forward_hooks_always_called (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._get_backward_hooks"]], "_get_backward_pre_hooks() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._get_backward_pre_hooks"]], "_get_name() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._get_name"]], "_init_post_config() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._init_post_config"]], "_is_full_backward_hook (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._is_full_backward_hook"]], "_load_from_state_dict() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._load_from_state_dict"]], "_load_state_dict_post_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._maybe_warn_non_full_backward_hook"]], "_modules (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._modules"]], "_named_members() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._named_members"]], "_non_persistent_buffers_set (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._non_persistent_buffers_set"]], "_parameters (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._parameters"]], "_register_load_state_dict_pre_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._replicate_for_data_parallel"]], "_save_to_state_dict() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._save_to_state_dict"]], "_slow_forward() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._slow_forward"]], "_state_dict_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._state_dict_hooks"]], "_state_dict_pre_hooks (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._state_dict_pre_hooks"]], "_version (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._version"]], "_wrapped_call_impl() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost._wrapped_call_impl"]], "add_module() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.add_module"]], "apply() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.apply"]], "bfloat16() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.bfloat16"]], "buffers() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.buffers"]], "call_super_init (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.call_super_init"]], "children() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.children"]], "classify (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.classify"]], "classify (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.classify"]], "compile() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.compile"]], "cpu() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.cpu"]], "cuda() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.cuda"]], "curobo.rollout.cost.manipulability_cost": [[54, "module-curobo.rollout.cost.manipulability_cost"]], "disable_cost() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.disable_cost"]], "distance_threshold (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.distance_threshold"]], "distance_threshold (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.distance_threshold"]], "dof (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.dof"]], "dof (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.dof"]], "double() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.double"]], "dump_patches (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.dump_patches"]], "enable_cost() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.enable_cost"]], "enabled (manipulabilitycost property)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.enabled"]], "eval() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.eval"]], "extra_repr() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.extra_repr"]], "float() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.float"]], "forward() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.forward"]], "get_buffer() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.get_buffer"]], "get_extra_state() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.get_extra_state"]], "get_parameter() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.get_parameter"]], "get_submodule() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.get_submodule"]], "half() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.half"]], "hinge_value (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.hinge_value"]], "hinge_value (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.hinge_value"]], "ipu() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.ipu"]], "joint_limited_manipulability_delta() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.joint_limited_manipulability_delta"]], "load_state_dict() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.load_state_dict"]], "manipulability() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.manipulability"]], "max_value (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.max_value"]], "max_value (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.max_value"]], "modules() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.modules"]], "named_buffers() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.named_buffers"]], "named_children() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.named_children"]], "named_modules() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.named_modules"]], "named_parameters() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.named_parameters"]], "parameters() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.parameters"]], "register_backward_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_backward_hook"]], "register_buffer() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_buffer"]], "register_forward_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_forward_hook"]], "register_forward_pre_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_forward_pre_hook"]], "register_full_backward_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_load_state_dict_post_hook"]], "register_module() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_module"]], "register_parameter() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_parameter"]], "register_state_dict_pre_hook() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.register_state_dict_pre_hook"]], "requires_grad_() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.requires_grad_"]], "return_loss (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.return_loss"]], "return_loss (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.return_loss"]], "run_weight (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.run_weight"]], "run_weight (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.run_weight"]], "set_extra_state() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.set_extra_state"]], "share_memory() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.share_memory"]], "state_dict() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.state_dict"]], "tensor_args (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.tensor_args"]], "tensor_args (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.tensor_args"]], "terminal (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.terminal"]], "terminal (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.terminal"]], "threshold_value (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.threshold_value"]], "threshold_value (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.threshold_value"]], "to() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.to"]], "to_empty() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.to_empty"]], "train() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.train"]], "training (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.training"]], "type() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.type"]], "update_dt() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.update_dt"]], "update_vec_weight() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.update_vec_weight"]], "update_vec_weight() (manipulabilitycostconfig method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.update_vec_weight"]], "update_weight() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.update_weight"]], "use_joint_limits (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.use_joint_limits"]], "use_joint_limits (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.use_joint_limits"]], "vec_convergence (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.vec_convergence"]], "vec_convergence (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.vec_convergence"]], "vec_weight (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.vec_weight"]], "vec_weight (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.vec_weight"]], "weight (manipulabilitycost attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.weight"]], "weight (manipulabilitycostconfig attribute)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.weight"]], "xpu() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.xpu"]], "zero_grad() (manipulabilitycost method)": [[54, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.zero_grad"]], "batch_goal (poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOAL"]], "batch_goalset (poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOALSET"]], "goalset (poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.GOALSET"]], "posecost (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCost"]], "posecostconfig (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig"]], "posecostmetric (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric"]], "poseerrortype (class in curobo.rollout.cost.pose_cost)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType"]], "single_goal (poseerrortype attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseErrorType.SINGLE_GOAL"]], "t_destination (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.T_destination"]], "_apply() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._apply"]], "_backward_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._backward_hooks"]], "_backward_pre_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._backward_pre_hooks"]], "_buffers (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._buffers"]], "_call_impl() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._call_impl"]], "_compiled_call_impl (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._compiled_call_impl"]], "_forward_goal_distribution() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_goal_distribution"]], "_forward_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_hooks"]], "_forward_hooks_always_called (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_pre_hooks_with_kwargs"]], "_forward_pytorch() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_pytorch"]], "_forward_single_goal() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._forward_single_goal"]], "_get_backward_hooks() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._get_backward_hooks"]], "_get_backward_pre_hooks() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._get_backward_pre_hooks"]], "_get_name() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._get_name"]], "_init_post_config() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._init_post_config"]], "_is_full_backward_hook (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._is_full_backward_hook"]], "_load_from_state_dict() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._load_from_state_dict"]], "_load_state_dict_post_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._maybe_warn_non_full_backward_hook"]], "_modules (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._modules"]], "_named_members() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._named_members"]], "_non_persistent_buffers_set (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._non_persistent_buffers_set"]], "_parameters (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._parameters"]], "_register_load_state_dict_pre_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._replicate_for_data_parallel"]], "_save_to_state_dict() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._save_to_state_dict"]], "_slow_forward() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._slow_forward"]], "_state_dict_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._state_dict_hooks"]], "_state_dict_pre_hooks (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._state_dict_pre_hooks"]], "_update_cost_type() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._update_cost_type"]], "_version (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._version"]], "_wrapped_call_impl() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost._wrapped_call_impl"]], "add_module() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.add_module"]], "apply() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.apply"]], "bfloat16() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.bfloat16"]], "buffers() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.buffers"]], "call_super_init (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.call_super_init"]], "children() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.children"]], "classify (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.classify"]], "classify (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.classify"]], "clone() (posecostmetric method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.clone"]], "compile() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.compile"]], "cost_type (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.cost_type"]], "cost_type (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.cost_type"]], "cpu() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.cpu"]], "create_grasp_approach_metric() (posecostmetric class method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.create_grasp_approach_metric"]], "cuda() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.cuda"]], "curobo.rollout.cost.pose_cost": [[55, "module-curobo.rollout.cost.pose_cost"]], "disable_cost() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.disable_cost"]], "distance_threshold (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.distance_threshold"]], "distance_threshold (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.distance_threshold"]], "dof (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.dof"]], "dof (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.dof"]], "double() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.double"]], "dump_patches (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.dump_patches"]], "enable_cost() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.enable_cost"]], "enabled (posecost property)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.enabled"]], "eval() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.eval"]], "extra_repr() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.extra_repr"]], "float() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.float"]], "forward() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward"]], "forward_out_distance() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward_out_distance"]], "forward_pose() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.forward_pose"]], "get_buffer() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.get_buffer"]], "get_extra_state() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.get_extra_state"]], "get_parameter() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.get_parameter"]], "get_submodule() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.get_submodule"]], "goalset_index_buffer (posecost property)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.goalset_index_buffer"]], "half() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.half"]], "hinge_value (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.hinge_value"]], "hinge_value (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.hinge_value"]], "hold_partial_pose (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_partial_pose"]], "hold_partial_pose() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.hold_partial_pose"]], "hold_vec_weight (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_vec_weight"]], "initialize_run_weight_vec() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.initialize_run_weight_vec"]], "ipu() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.ipu"]], "load_state_dict() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.load_state_dict"]], "max_value (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.max_value"]], "max_value (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.max_value"]], "modules() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.modules"]], "named_buffers() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.named_buffers"]], "named_children() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.named_children"]], "named_modules() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.named_modules"]], "named_parameters() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.named_parameters"]], "offset_position (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_position"]], "offset_rotation (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_rotation"]], "offset_tstep_fraction (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.offset_tstep_fraction"]], "offset_tstep_fraction (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_tstep_fraction"]], "offset_tstep_fraction (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_tstep_fraction"]], "offset_waypoint (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.offset_waypoint"]], "offset_waypoint (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_waypoint"]], "parameters() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.parameters"]], "project_distance (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.project_distance"]], "project_distance (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.project_distance"]], "reach_full_pose (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_full_pose"]], "reach_full_pose() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.reach_full_pose"]], "reach_partial_pose (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_partial_pose"]], "reach_partial_pose() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.reach_partial_pose"]], "reach_vec_weight (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_vec_weight"]], "register_backward_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_backward_hook"]], "register_buffer() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_buffer"]], "register_forward_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_forward_hook"]], "register_forward_pre_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_forward_pre_hook"]], "register_full_backward_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_load_state_dict_post_hook"]], "register_module() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_module"]], "register_parameter() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_parameter"]], "register_state_dict_pre_hook() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.register_state_dict_pre_hook"]], "release_partial_pose (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.release_partial_pose"]], "release_partial_pose() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.release_partial_pose"]], "remove_offset_waypoint (posecostmetric attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.remove_offset_waypoint"]], "remove_offset_waypoint() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.remove_offset_waypoint"]], "requires_grad_() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.requires_grad_"]], "reset_metric() (posecostmetric class method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostMetric.reset_metric"]], "return_loss (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.return_loss"]], "return_loss (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.return_loss"]], "run_vec_weight (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.run_vec_weight"]], "run_vec_weight (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.run_vec_weight"]], "run_weight (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.run_weight"]], "run_weight (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.run_weight"]], "set_extra_state() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.set_extra_state"]], "share_memory() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.share_memory"]], "state_dict() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.state_dict"]], "tensor_args (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.tensor_args"]], "tensor_args (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.tensor_args"]], "terminal (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.terminal"]], "terminal (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.terminal"]], "threshold_value (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.threshold_value"]], "threshold_value (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.threshold_value"]], "to() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.to"]], "to_empty() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.to_empty"]], "train() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.train"]], "training (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.training"]], "type() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.type"]], "update_batch_size() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_batch_size"]], "update_dt() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_dt"]], "update_metric() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_metric"]], "update_offset_waypoint() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_offset_waypoint"]], "update_run_weight() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_run_weight"]], "update_vec_weight() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_vec_weight"]], "update_vec_weight() (posecostconfig method)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.update_vec_weight"]], "update_weight() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.update_weight"]], "use_metric (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.use_metric"]], "use_metric (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_metric"]], "use_projected_distance (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.use_projected_distance"]], "use_projected_distance (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_projected_distance"]], "vec_convergence (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.vec_convergence"]], "vec_convergence (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.vec_convergence"]], "vec_weight (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.vec_weight"]], "vec_weight (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.vec_weight"]], "weight (posecost attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.weight"]], "weight (posecostconfig attribute)": [[55, "curobo.rollout.cost.pose_cost.PoseCostConfig.weight"]], "xpu() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.xpu"]], "zero_grad() (posecost method)": [[55, "curobo.rollout.cost.pose_cost.PoseCost.zero_grad"]], "primitivecollisioncost (class in curobo.rollout.cost.primitive_collision_cost)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost"]], "primitivecollisioncostconfig (class in curobo.rollout.cost.primitive_collision_cost)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig"]], "t_destination (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.T_destination"]], "_apply() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._apply"]], "_backward_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._backward_hooks"]], "_backward_pre_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._backward_pre_hooks"]], "_buffers (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._buffers"]], "_call_impl() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._call_impl"]], "_compiled_call_impl (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._compiled_call_impl"]], "_forward_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._forward_hooks"]], "_forward_hooks_always_called (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._get_backward_hooks"]], "_get_backward_pre_hooks() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._get_backward_pre_hooks"]], "_get_name() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._get_name"]], "_init_post_config() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._init_post_config"]], "_is_full_backward_hook (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._is_full_backward_hook"]], "_load_from_state_dict() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._load_from_state_dict"]], "_load_state_dict_post_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._maybe_warn_non_full_backward_hook"]], "_modules (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._modules"]], "_named_members() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._named_members"]], "_non_persistent_buffers_set (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._non_persistent_buffers_set"]], "_parameters (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._parameters"]], "_register_load_state_dict_pre_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._replicate_for_data_parallel"]], "_save_to_state_dict() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._save_to_state_dict"]], "_slow_forward() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._slow_forward"]], "_state_dict_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._state_dict_hooks"]], "_state_dict_pre_hooks (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._state_dict_pre_hooks"]], "_version (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._version"]], "_wrapped_call_impl() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost._wrapped_call_impl"]], "activation_distance (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.activation_distance"]], "activation_distance (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.activation_distance"]], "add_module() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.add_module"]], "apply() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.apply"]], "bfloat16() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.bfloat16"]], "buffers() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.buffers"]], "call_super_init (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.call_super_init"]], "children() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.children"]], "classify (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.classify"]], "classify (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.classify"]], "compile() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.compile"]], "cpu() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.cpu"]], "cuda() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.cuda"]], "curobo.rollout.cost.primitive_collision_cost": [[56, "module-curobo.rollout.cost.primitive_collision_cost"]], "disable_cost() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.disable_cost"]], "discrete_fn() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.discrete_fn"]], "distance_threshold (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.distance_threshold"]], "distance_threshold (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.distance_threshold"]], "dof (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.dof"]], "dof (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.dof"]], "double() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.double"]], "dump_patches (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.dump_patches"]], "enable_cost() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.enable_cost"]], "enabled (primitivecollisioncost property)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.enabled"]], "eval() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.eval"]], "extra_repr() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.extra_repr"]], "float() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.float"]], "forward() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.forward"]], "get_buffer() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_buffer"]], "get_extra_state() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_extra_state"]], "get_gradient_buffer() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_gradient_buffer"]], "get_parameter() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_parameter"]], "get_submodule() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_submodule"]], "half() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.half"]], "hinge_value (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.hinge_value"]], "hinge_value (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.hinge_value"]], "ipu() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.ipu"]], "load_state_dict() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.load_state_dict"]], "max_value (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.max_value"]], "max_value (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.max_value"]], "modules() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.modules"]], "named_buffers() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.named_buffers"]], "named_children() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.named_children"]], "named_modules() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.named_modules"]], "named_parameters() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.named_parameters"]], "parameters() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.parameters"]], "register_backward_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_backward_hook"]], "register_buffer() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_buffer"]], "register_forward_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_forward_hook"]], "register_forward_pre_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_forward_pre_hook"]], "register_full_backward_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_load_state_dict_post_hook"]], "register_module() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_module"]], "register_parameter() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_parameter"]], "register_state_dict_pre_hook() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.register_state_dict_pre_hook"]], "requires_grad_() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.requires_grad_"]], "return_loss (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.return_loss"]], "return_loss (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.return_loss"]], "run_weight (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.run_weight"]], "run_weight (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.run_weight"]], "set_extra_state() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.set_extra_state"]], "share_memory() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.share_memory"]], "speed_dt (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.speed_dt"]], "speed_dt (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.speed_dt"]], "state_dict() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.state_dict"]], "sum_collisions (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sum_collisions"]], "sum_collisions (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_collisions"]], "sum_distance (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sum_distance"]], "sum_distance (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_distance"]], "sweep_fn() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_fn"]], "sweep_kernel_fn() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_kernel_fn"]], "sweep_steps (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_steps"]], "sweep_steps (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sweep_steps"]], "tensor_args (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.tensor_args"]], "tensor_args (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.tensor_args"]], "terminal (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.terminal"]], "terminal (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.terminal"]], "threshold_value (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.threshold_value"]], "threshold_value (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.threshold_value"]], "to() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.to"]], "to_empty() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.to_empty"]], "train() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.train"]], "training (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.training"]], "type() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.type"]], "update_dt() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_dt"]], "update_vec_weight() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_vec_weight"]], "update_vec_weight() (primitivecollisioncostconfig method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.update_vec_weight"]], "update_weight() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_weight"]], "use_speed_metric (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.use_speed_metric"]], "use_speed_metric (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_speed_metric"]], "use_sweep (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.use_sweep"]], "use_sweep (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep"]], "use_sweep_kernel (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.use_sweep_kernel"]], "use_sweep_kernel (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep_kernel"]], "vec_convergence (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.vec_convergence"]], "vec_convergence (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.vec_convergence"]], "vec_weight (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.vec_weight"]], "vec_weight (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.vec_weight"]], "weight (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.weight"]], "weight (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.weight"]], "world_coll_checker (primitivecollisioncost attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.world_coll_checker"]], "world_coll_checker (primitivecollisioncostconfig attribute)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.world_coll_checker"]], "xpu() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.xpu"]], "zero_grad() (primitivecollisioncost method)": [[56, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.zero_grad"]], "identity (projtype attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType.IDENTITY"]], "pseudo_inverse (projtype attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType.PSEUDO_INVERSE"]], "projtype (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjType"]], "projecteddistcost (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost"]], "projecteddistcostconfig (class in curobo.rollout.cost.projected_dist_cost)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig"]], "t_destination (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.T_destination"]], "_apply() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._apply"]], "_backward_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._backward_hooks"]], "_backward_pre_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._backward_pre_hooks"]], "_buffers (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._buffers"]], "_call_impl() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._call_impl"]], "_compiled_call_impl (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._compiled_call_impl"]], "_forward_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._forward_hooks"]], "_forward_hooks_always_called (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._get_backward_hooks"]], "_get_backward_pre_hooks() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._get_backward_pre_hooks"]], "_get_name() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._get_name"]], "_init_post_config() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._init_post_config"]], "_is_full_backward_hook (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._is_full_backward_hook"]], "_load_from_state_dict() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._load_from_state_dict"]], "_load_state_dict_post_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._maybe_warn_non_full_backward_hook"]], "_modules (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._modules"]], "_named_members() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._named_members"]], "_non_persistent_buffers_set (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._non_persistent_buffers_set"]], "_parameters (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._parameters"]], "_register_load_state_dict_pre_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._replicate_for_data_parallel"]], "_save_to_state_dict() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._save_to_state_dict"]], "_slow_forward() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._slow_forward"]], "_state_dict_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._state_dict_hooks"]], "_state_dict_pre_hooks (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._state_dict_pre_hooks"]], "_version (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._version"]], "_wrapped_call_impl() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost._wrapped_call_impl"]], "add_module() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.add_module"]], "apply() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.apply"]], "bfloat16() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.bfloat16"]], "buffers() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.buffers"]], "call_super_init (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.call_super_init"]], "children() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.children"]], "classify (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.classify"]], "classify (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.classify"]], "compile() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.compile"]], "cpu() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.cpu"]], "cuda() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.cuda"]], "curobo.rollout.cost.projected_dist_cost": [[57, "module-curobo.rollout.cost.projected_dist_cost"]], "disable_cost() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.disable_cost"]], "dist_type (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.dist_type"]], "dist_type (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.dist_type"]], "distance_threshold (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.distance_threshold"]], "distance_threshold (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.distance_threshold"]], "dof (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.dof"]], "dof (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.dof"]], "double() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.double"]], "dump_patches (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.dump_patches"]], "enable_cost() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.enable_cost"]], "enabled (projecteddistcost property)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.enabled"]], "eps (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.eps"]], "eps (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.eps"]], "eval() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.eval"]], "extra_repr() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.extra_repr"]], "float() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.float"]], "forward() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward"]], "forward_target() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward_target"]], "forward_target_idx() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward_target_idx"]], "get_buffer() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_buffer"]], "get_extra_state() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_extra_state"]], "get_parameter() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_parameter"]], "get_pinv_null_disp() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_pinv_null_disp"]], "get_submodule() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_submodule"]], "half() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.half"]], "hinge_value (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.hinge_value"]], "hinge_value (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.hinge_value"]], "ipu() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.ipu"]], "load_state_dict() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.load_state_dict"]], "max_value (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.max_value"]], "max_value (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.max_value"]], "modules() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.modules"]], "named_buffers() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.named_buffers"]], "named_children() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.named_children"]], "named_modules() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.named_modules"]], "named_parameters() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.named_parameters"]], "parameters() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.parameters"]], "proj_type (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.proj_type"]], "proj_type (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.proj_type"]], "register_backward_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_backward_hook"]], "register_buffer() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_buffer"]], "register_forward_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_forward_hook"]], "register_forward_pre_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_forward_pre_hook"]], "register_full_backward_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_load_state_dict_post_hook"]], "register_module() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_module"]], "register_parameter() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_parameter"]], "register_state_dict_pre_hook() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.register_state_dict_pre_hook"]], "requires_grad_() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.requires_grad_"]], "return_loss (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.return_loss"]], "return_loss (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.return_loss"]], "run_weight (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.run_weight"]], "run_weight (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.run_weight"]], "set_extra_state() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.set_extra_state"]], "share_memory() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.share_memory"]], "state_dict() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.state_dict"]], "tensor_args (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.tensor_args"]], "tensor_args (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.tensor_args"]], "terminal (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.terminal"]], "terminal (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.terminal"]], "threshold_value (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.threshold_value"]], "threshold_value (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.threshold_value"]], "to() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.to"]], "to_empty() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.to_empty"]], "train() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.train"]], "training (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.training"]], "type() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.type"]], "update_batch_size() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.update_batch_size"]], "update_dt() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.update_dt"]], "update_vec_weight() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.update_vec_weight"]], "update_vec_weight() (projecteddistcostconfig method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.update_vec_weight"]], "update_weight() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.update_weight"]], "use_null_space (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.use_null_space"]], "use_null_space (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.use_null_space"]], "vec_convergence (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.vec_convergence"]], "vec_convergence (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.vec_convergence"]], "vec_weight (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.vec_weight"]], "vec_weight (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.vec_weight"]], "weight (projecteddistcost attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.weight"]], "weight (projecteddistcostconfig attribute)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.weight"]], "xpu() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.xpu"]], "zero_grad() (projecteddistcost method)": [[57, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.zero_grad"]], "selfcollisioncost (class in curobo.rollout.cost.self_collision_cost)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost"]], "selfcollisioncostconfig (class in curobo.rollout.cost.self_collision_cost)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig"]], "t_destination (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.T_destination"]], "_apply() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._apply"]], "_backward_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._backward_hooks"]], "_backward_pre_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._backward_pre_hooks"]], "_buffers (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._buffers"]], "_call_impl() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._call_impl"]], "_compiled_call_impl (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._compiled_call_impl"]], "_forward_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._forward_hooks"]], "_forward_hooks_always_called (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._get_backward_hooks"]], "_get_backward_pre_hooks() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._get_backward_pre_hooks"]], "_get_name() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._get_name"]], "_init_post_config() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._init_post_config"]], "_is_full_backward_hook (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._is_full_backward_hook"]], "_load_from_state_dict() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._load_from_state_dict"]], "_load_state_dict_post_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._maybe_warn_non_full_backward_hook"]], "_modules (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._modules"]], "_named_members() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._named_members"]], "_non_persistent_buffers_set (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._non_persistent_buffers_set"]], "_parameters (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._parameters"]], "_register_load_state_dict_pre_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._replicate_for_data_parallel"]], "_save_to_state_dict() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._save_to_state_dict"]], "_slow_forward() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._slow_forward"]], "_state_dict_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._state_dict_hooks"]], "_state_dict_pre_hooks (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._state_dict_pre_hooks"]], "_version (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._version"]], "_wrapped_call_impl() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost._wrapped_call_impl"]], "add_module() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.add_module"]], "apply() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.apply"]], "bfloat16() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.bfloat16"]], "buffers() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.buffers"]], "call_super_init (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.call_super_init"]], "children() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.children"]], "classify (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.classify"]], "classify (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.classify"]], "compile() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.compile"]], "cpu() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.cpu"]], "cuda() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.cuda"]], "curobo.rollout.cost.self_collision_cost": [[58, "module-curobo.rollout.cost.self_collision_cost"]], "disable_cost() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.disable_cost"]], "distance_threshold (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.distance_threshold"]], "distance_threshold (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.distance_threshold"]], "dof (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.dof"]], "dof (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.dof"]], "double() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.double"]], "dump_patches (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.dump_patches"]], "enable_cost() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.enable_cost"]], "enabled (selfcollisioncost property)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.enabled"]], "eval() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.eval"]], "extra_repr() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.extra_repr"]], "float() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.float"]], "forward() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.forward"]], "get_buffer() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.get_buffer"]], "get_extra_state() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.get_extra_state"]], "get_parameter() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.get_parameter"]], "get_submodule() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.get_submodule"]], "half() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.half"]], "hinge_value (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.hinge_value"]], "hinge_value (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.hinge_value"]], "ipu() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.ipu"]], "load_state_dict() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.load_state_dict"]], "max_value (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.max_value"]], "max_value (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.max_value"]], "modules() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.modules"]], "named_buffers() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.named_buffers"]], "named_children() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.named_children"]], "named_modules() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.named_modules"]], "named_parameters() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.named_parameters"]], "parameters() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.parameters"]], "register_backward_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_backward_hook"]], "register_buffer() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_buffer"]], "register_forward_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_forward_hook"]], "register_forward_pre_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_forward_pre_hook"]], "register_full_backward_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_load_state_dict_post_hook"]], "register_module() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_module"]], "register_parameter() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_parameter"]], "register_state_dict_pre_hook() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.register_state_dict_pre_hook"]], "requires_grad_() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.requires_grad_"]], "return_loss (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.return_loss"]], "return_loss (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.return_loss"]], "run_weight (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.run_weight"]], "run_weight (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.run_weight"]], "self_collision_kin_config (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.self_collision_kin_config"]], "self_collision_kin_config (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.self_collision_kin_config"]], "set_extra_state() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.set_extra_state"]], "share_memory() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.share_memory"]], "state_dict() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.state_dict"]], "tensor_args (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.tensor_args"]], "tensor_args (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.tensor_args"]], "terminal (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.terminal"]], "terminal (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.terminal"]], "threshold_value (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.threshold_value"]], "threshold_value (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.threshold_value"]], "to() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.to"]], "to_empty() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.to_empty"]], "train() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.train"]], "training (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.training"]], "type() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.type"]], "update_batch_size() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_batch_size"]], "update_dt() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_dt"]], "update_vec_weight() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_vec_weight"]], "update_vec_weight() (selfcollisioncostconfig method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.update_vec_weight"]], "update_weight() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_weight"]], "vec_convergence (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.vec_convergence"]], "vec_convergence (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.vec_convergence"]], "vec_weight (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.vec_weight"]], "vec_weight (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.vec_weight"]], "weight (selfcollisioncost attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.weight"]], "weight (selfcollisioncostconfig attribute)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.weight"]], "xpu() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.xpu"]], "zero_grad() (selfcollisioncost method)": [[58, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.zero_grad"]], "stopcost (class in curobo.rollout.cost.stop_cost)": [[59, "curobo.rollout.cost.stop_cost.StopCost"]], "stopcostconfig (class in curobo.rollout.cost.stop_cost)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig"]], "t_destination (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.T_destination"]], "_apply() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._apply"]], "_backward_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._backward_hooks"]], "_backward_pre_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._backward_pre_hooks"]], "_buffers (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._buffers"]], "_call_impl() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._call_impl"]], "_compiled_call_impl (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._compiled_call_impl"]], "_forward_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._forward_hooks"]], "_forward_hooks_always_called (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._get_backward_hooks"]], "_get_backward_pre_hooks() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._get_backward_pre_hooks"]], "_get_name() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._get_name"]], "_init_post_config() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._init_post_config"]], "_is_full_backward_hook (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._is_full_backward_hook"]], "_load_from_state_dict() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._load_from_state_dict"]], "_load_state_dict_post_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._maybe_warn_non_full_backward_hook"]], "_modules (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._modules"]], "_named_members() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._named_members"]], "_non_persistent_buffers_set (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._non_persistent_buffers_set"]], "_parameters (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._parameters"]], "_register_load_state_dict_pre_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._replicate_for_data_parallel"]], "_save_to_state_dict() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._save_to_state_dict"]], "_slow_forward() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._slow_forward"]], "_state_dict_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._state_dict_hooks"]], "_state_dict_pre_hooks (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._state_dict_pre_hooks"]], "_version (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost._version"]], "_wrapped_call_impl() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost._wrapped_call_impl"]], "add_module() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.add_module"]], "apply() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.apply"]], "bfloat16() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.bfloat16"]], "buffers() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.buffers"]], "call_super_init (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.call_super_init"]], "children() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.children"]], "classify (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.classify"]], "classify (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.classify"]], "compile() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.compile"]], "cpu() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.cpu"]], "cuda() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.cuda"]], "curobo.rollout.cost.stop_cost": [[59, "module-curobo.rollout.cost.stop_cost"]], "disable_cost() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.disable_cost"]], "distance_threshold (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.distance_threshold"]], "distance_threshold (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.distance_threshold"]], "dof (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.dof"]], "dof (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.dof"]], "double() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.double"]], "dt_traj_params (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.dt_traj_params"]], "dt_traj_params (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.dt_traj_params"]], "dump_patches (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.dump_patches"]], "enable_cost() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.enable_cost"]], "enabled (stopcost property)": [[59, "curobo.rollout.cost.stop_cost.StopCost.enabled"]], "eval() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.eval"]], "extra_repr() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.extra_repr"]], "float() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.float"]], "forward() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.forward"]], "get_buffer() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.get_buffer"]], "get_extra_state() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.get_extra_state"]], "get_parameter() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.get_parameter"]], "get_submodule() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.get_submodule"]], "half() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.half"]], "hinge_value (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.hinge_value"]], "hinge_value (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.hinge_value"]], "horizon (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.horizon"]], "horizon (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.horizon"]], "ipu() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.ipu"]], "load_state_dict() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.load_state_dict"]], "max_limit (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.max_limit"]], "max_limit (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.max_limit"]], "max_nlimit (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.max_nlimit"]], "max_nlimit (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.max_nlimit"]], "max_value (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.max_value"]], "max_value (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.max_value"]], "modules() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.modules"]], "named_buffers() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.named_buffers"]], "named_children() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.named_children"]], "named_modules() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.named_modules"]], "named_parameters() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.named_parameters"]], "parameters() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.parameters"]], "register_backward_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_backward_hook"]], "register_buffer() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_buffer"]], "register_forward_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_forward_hook"]], "register_forward_pre_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_forward_pre_hook"]], "register_full_backward_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_load_state_dict_post_hook"]], "register_module() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_module"]], "register_parameter() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_parameter"]], "register_state_dict_pre_hook() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.register_state_dict_pre_hook"]], "requires_grad_() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.requires_grad_"]], "return_loss (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.return_loss"]], "return_loss (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.return_loss"]], "run_weight (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.run_weight"]], "run_weight (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.run_weight"]], "set_extra_state() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.set_extra_state"]], "share_memory() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.share_memory"]], "state_dict() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.state_dict"]], "tensor_args (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.tensor_args"]], "tensor_args (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.tensor_args"]], "terminal (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.terminal"]], "terminal (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.terminal"]], "threshold_value (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.threshold_value"]], "threshold_value (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.threshold_value"]], "to() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.to"]], "to_empty() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.to_empty"]], "train() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.train"]], "training (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.training"]], "type() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.type"]], "update_dt() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.update_dt"]], "update_vec_weight() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.update_vec_weight"]], "update_vec_weight() (stopcostconfig method)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.update_vec_weight"]], "update_weight() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.update_weight"]], "vec_convergence (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.vec_convergence"]], "vec_convergence (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.vec_convergence"]], "vec_weight (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.vec_weight"]], "vec_weight (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.vec_weight"]], "weight (stopcost attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCost.weight"]], "weight (stopcostconfig attribute)": [[59, "curobo.rollout.cost.stop_cost.StopCostConfig.weight"]], "xpu() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.xpu"]], "zero_grad() (stopcost method)": [[59, "curobo.rollout.cost.stop_cost.StopCost.zero_grad"]], "straightlinecost (class in curobo.rollout.cost.straight_line_cost)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost"]], "t_destination (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.T_destination"]], "_apply() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._apply"]], "_backward_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._backward_hooks"]], "_backward_pre_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._backward_pre_hooks"]], "_buffers (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._buffers"]], "_call_impl() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._call_impl"]], "_compiled_call_impl (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._compiled_call_impl"]], "_forward_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._forward_hooks"]], "_forward_hooks_always_called (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._get_backward_hooks"]], "_get_backward_pre_hooks() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._get_backward_pre_hooks"]], "_get_name() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._get_name"]], "_init_post_config() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._init_post_config"]], "_is_full_backward_hook (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._is_full_backward_hook"]], "_load_from_state_dict() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._load_from_state_dict"]], "_load_state_dict_post_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._load_state_dict_pre_hooks"]], "_maybe_warn_non_full_backward_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._maybe_warn_non_full_backward_hook"]], "_modules (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._modules"]], "_named_members() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._named_members"]], "_non_persistent_buffers_set (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._non_persistent_buffers_set"]], "_parameters (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._parameters"]], "_register_load_state_dict_pre_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._replicate_for_data_parallel"]], "_save_to_state_dict() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._save_to_state_dict"]], "_slow_forward() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._slow_forward"]], "_state_dict_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._state_dict_hooks"]], "_state_dict_pre_hooks (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._state_dict_pre_hooks"]], "_version (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._version"]], "_wrapped_call_impl() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost._wrapped_call_impl"]], "add_module() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.add_module"]], "apply() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.apply"]], "bfloat16() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.bfloat16"]], "buffers() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.buffers"]], "call_super_init (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.call_super_init"]], "children() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.children"]], "classify (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.classify"]], "compile() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.compile"]], "cpu() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.cpu"]], "cuda() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.cuda"]], "curobo.rollout.cost.straight_line_cost": [[60, "module-curobo.rollout.cost.straight_line_cost"]], "disable_cost() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.disable_cost"]], "distance_threshold (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.distance_threshold"]], "dof (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.dof"]], "double() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.double"]], "dump_patches (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.dump_patches"]], "enable_cost() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.enable_cost"]], "enabled (straightlinecost property)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.enabled"]], "eval() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.eval"]], "extra_repr() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.extra_repr"]], "float() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.float"]], "forward() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.forward"]], "get_buffer() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.get_buffer"]], "get_extra_state() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.get_extra_state"]], "get_parameter() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.get_parameter"]], "get_submodule() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.get_submodule"]], "half() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.half"]], "hinge_value (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.hinge_value"]], "ipu() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.ipu"]], "load_state_dict() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.load_state_dict"]], "max_value (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.max_value"]], "modules() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.modules"]], "named_buffers() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.named_buffers"]], "named_children() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.named_children"]], "named_modules() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.named_modules"]], "named_parameters() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.named_parameters"]], "parameters() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.parameters"]], "register_backward_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_backward_hook"]], "register_buffer() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_buffer"]], "register_forward_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_forward_hook"]], "register_forward_pre_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_forward_pre_hook"]], "register_full_backward_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_load_state_dict_post_hook"]], "register_module() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_module"]], "register_parameter() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_parameter"]], "register_state_dict_pre_hook() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.register_state_dict_pre_hook"]], "requires_grad_() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.requires_grad_"]], "return_loss (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.return_loss"]], "run_weight (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.run_weight"]], "set_extra_state() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.set_extra_state"]], "share_memory() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.share_memory"]], "state_dict() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.state_dict"]], "tensor_args (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.tensor_args"]], "terminal (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.terminal"]], "threshold_value (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.threshold_value"]], "to() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.to"]], "to_empty() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.to_empty"]], "train() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.train"]], "training (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.training"]], "type() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.type"]], "update_dt() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.update_dt"]], "update_vec_weight() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.update_vec_weight"]], "update_weight() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.update_weight"]], "vec_convergence (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.vec_convergence"]], "vec_weight (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.vec_weight"]], "weight (straightlinecost attribute)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.weight"]], "xpu() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.xpu"]], "zero_grad() (straightlinecost method)": [[60, "curobo.rollout.cost.straight_line_cost.StraightLineCost.zero_grad"]], "runsquaredsum (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum"]], "squaredsum (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum"]], "t_destination (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.T_destination"]], "zerocost (class in curobo.rollout.cost.zero_cost)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost"]], "_apply() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._apply"]], "_backward_cls (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._backward_cls"]], "_backward_cls (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._backward_cls"]], "_backward_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._backward_hooks"]], "_backward_pre_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._backward_pre_hooks"]], "_buffers (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._buffers"]], "_call_impl() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._call_impl"]], "_compiled_call_impl (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._compiled_call_impl"]], "_forward_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._forward_hooks"]], "_forward_hooks_always_called (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._forward_hooks_always_called"]], "_forward_hooks_with_kwargs (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._forward_hooks_with_kwargs"]], "_forward_pre_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._forward_pre_hooks"]], "_forward_pre_hooks_with_kwargs (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._forward_pre_hooks_with_kwargs"]], "_get_backward_hooks() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._get_backward_hooks"]], "_get_backward_pre_hooks() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._get_backward_pre_hooks"]], "_get_compiled_autograd_symints() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._get_compiled_autograd_symints"]], "_get_name() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._get_name"]], "_init_post_config() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._init_post_config"]], "_is_compiled_autograd_tracing() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._is_compiled_autograd_tracing"]], "_is_full_backward_hook (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._is_full_backward_hook"]], "_load_from_state_dict() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._load_from_state_dict"]], "_load_state_dict_post_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._load_state_dict_pre_hooks"]], "_materialize_non_diff_grads (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._materialize_non_diff_grads"]], "_materialize_non_diff_grads (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._materialize_non_diff_grads"]], "_maybe_warn_non_full_backward_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._maybe_warn_non_full_backward_hook"]], "_modules (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._modules"]], "_named_members() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._named_members"]], "_non_persistent_buffers_set (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._non_persistent_buffers_set"]], "_parameters (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._parameters"]], "_raw_saved_tensors (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._raw_saved_tensors"]], "_raw_saved_tensors (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._raw_saved_tensors"]], "_register_hook() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._register_hook"]], "_register_hook() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._register_hook"]], "_register_hook_dict() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._register_hook_dict"]], "_register_hook_dict() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._register_hook_dict"]], "_register_load_state_dict_pre_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._register_load_state_dict_pre_hook"]], "_register_state_dict_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._register_state_dict_hook"]], "_replicate_for_data_parallel() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._replicate_for_data_parallel"]], "_save_to_state_dict() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._save_to_state_dict"]], "_sequence_nr() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum._sequence_nr"]], "_sequence_nr() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum._sequence_nr"]], "_slow_forward() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._slow_forward"]], "_state_dict_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._state_dict_hooks"]], "_state_dict_pre_hooks (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._state_dict_pre_hooks"]], "_version (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._version"]], "_wrapped_call_impl() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost._wrapped_call_impl"]], "add_module() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.add_module"]], "apply() (runsquaredsum class method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.apply"]], "apply() (squaredsum class method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.apply"]], "apply() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.apply"]], "backward() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.backward"]], "backward() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.backward"]], "bfloat16() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.bfloat16"]], "buffers() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.buffers"]], "call_super_init (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.call_super_init"]], "children() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.children"]], "classify (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.classify"]], "compile() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.compile"]], "cpu() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.cpu"]], "cuda() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.cuda"]], "curobo.rollout.cost.zero_cost": [[61, "module-curobo.rollout.cost.zero_cost"]], "dirty_tensors (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.dirty_tensors"]], "dirty_tensors (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.dirty_tensors"]], "disable_cost() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.disable_cost"]], "distance_threshold (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.distance_threshold"]], "dof (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.dof"]], "double() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.double"]], "dump_patches (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.dump_patches"]], "enable_cost() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.enable_cost"]], "enabled (zerocost property)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.enabled"]], "eval() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.eval"]], "extra_repr() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.extra_repr"]], "float() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.float"]], "forward() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.forward"]], "forward() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.forward"]], "forward() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.forward"]], "generate_vmap_rule (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.generate_vmap_rule"]], "generate_vmap_rule (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.generate_vmap_rule"]], "get_buffer() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.get_buffer"]], "get_extra_state() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.get_extra_state"]], "get_parameter() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.get_parameter"]], "get_submodule() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.get_submodule"]], "half() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.half"]], "hinge_value (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.hinge_value"]], "ipu() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.ipu"]], "is_traceable (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.is_traceable"]], "is_traceable (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.is_traceable"]], "jvp() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.jvp"]], "jvp() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.jvp"]], "load_state_dict() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.load_state_dict"]], "mark_dirty() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.mark_dirty"]], "mark_dirty() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.mark_dirty"]], "mark_non_differentiable() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.mark_non_differentiable"]], "mark_non_differentiable() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.mark_non_differentiable"]], "mark_shared_storage() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.mark_shared_storage"]], "mark_shared_storage() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.mark_shared_storage"]], "materialize_grads (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.materialize_grads"]], "materialize_grads (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.materialize_grads"]], "max_value (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.max_value"]], "maybe_clear_saved_tensors() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.maybe_clear_saved_tensors"]], "metadata (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.metadata"]], "metadata (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.metadata"]], "modules() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.modules"]], "name() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.name"]], "name() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.name"]], "named_buffers() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.named_buffers"]], "named_children() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.named_children"]], "named_modules() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.named_modules"]], "named_parameters() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.named_parameters"]], "needs_input_grad (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.needs_input_grad"]], "needs_input_grad (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.needs_input_grad"]], "next_functions (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.next_functions"]], "next_functions (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.next_functions"]], "non_differentiable (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.non_differentiable"]], "non_differentiable (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.non_differentiable"]], "parameters() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.parameters"]], "register_backward_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_backward_hook"]], "register_buffer() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_buffer"]], "register_forward_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_forward_hook"]], "register_forward_pre_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_forward_pre_hook"]], "register_full_backward_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_full_backward_hook"]], "register_full_backward_pre_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_full_backward_pre_hook"]], "register_hook() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.register_hook"]], "register_hook() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.register_hook"]], "register_load_state_dict_post_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_load_state_dict_post_hook"]], "register_module() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_module"]], "register_parameter() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_parameter"]], "register_prehook() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.register_prehook"]], "register_prehook() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.register_prehook"]], "register_state_dict_pre_hook() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.register_state_dict_pre_hook"]], "requires_grad (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.requires_grad"]], "requires_grad (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.requires_grad"]], "requires_grad_() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.requires_grad_"]], "return_loss (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.return_loss"]], "run_weight (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.run_weight"]], "save_for_backward() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.save_for_backward"]], "save_for_backward() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.save_for_backward"]], "save_for_forward() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.save_for_forward"]], "save_for_forward() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.save_for_forward"]], "saved_for_forward (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.saved_for_forward"]], "saved_for_forward (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.saved_for_forward"]], "saved_tensors (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.saved_tensors"]], "saved_tensors (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.saved_tensors"]], "saved_variables (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.saved_variables"]], "saved_variables (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.saved_variables"]], "set_extra_state() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.set_extra_state"]], "set_materialize_grads() (runsquaredsum method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.set_materialize_grads"]], "set_materialize_grads() (squaredsum method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.set_materialize_grads"]], "setup_context() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.setup_context"]], "setup_context() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.setup_context"]], "share_memory() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.share_memory"]], "state_dict() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.state_dict"]], "tensor_args (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.tensor_args"]], "terminal (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.terminal"]], "threshold_value (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.threshold_value"]], "to() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.to"]], "to_empty() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.to_empty"]], "to_save (runsquaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.to_save"]], "to_save (squaredsum attribute)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.to_save"]], "train() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.train"]], "training (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.training"]], "type() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.type"]], "update_dt() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.update_dt"]], "update_vec_weight() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.update_vec_weight"]], "update_weight() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.update_weight"]], "vec_convergence (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.vec_convergence"]], "vec_weight (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.vec_weight"]], "vjp() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.vjp"]], "vjp() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.vjp"]], "vmap() (runsquaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.RunSquaredSum.vmap"]], "vmap() (squaredsum static method)": [[61, "curobo.rollout.cost.zero_cost.SquaredSum.vmap"]], "weight (zerocost attribute)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.weight"]], "xpu() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.xpu"]], "zero_grad() (zerocost method)": [[61, "curobo.rollout.cost.zero_cost.ZeroCost.zero_grad"]], "curobo.rollout.dynamics_model": [[62, "module-curobo.rollout.dynamics_model"]], "accelerationtensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel"]], "accelerationtensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel"]], "cliquetensorstep (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep"]], "cliquetensorstepcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel"]], "cliquetensorstepcoalescekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel"]], "cliquetensorstepidxcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel"]], "cliquetensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel"]], "cliquetensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel"]], "_backward_cls (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._backward_cls"]], "_backward_cls (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._backward_cls"]], "_backward_cls (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._backward_cls"]], "_backward_cls (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._backward_cls"]], "_backward_cls (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._backward_cls"]], "_backward_cls (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._backward_cls"]], "_backward_cls (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._backward_cls"]], "_backward_cls (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._backward_cls"]], "_get_compiled_autograd_symints() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._get_compiled_autograd_symints"]], "_get_compiled_autograd_symints() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._is_compiled_autograd_tracing"]], "_is_compiled_autograd_tracing() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._is_compiled_autograd_tracing"]], "_materialize_non_diff_grads (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._materialize_non_diff_grads"]], "_materialize_non_diff_grads (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._materialize_non_diff_grads"]], "_raw_saved_tensors (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._raw_saved_tensors"]], "_raw_saved_tensors (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._raw_saved_tensors"]], "_raw_saved_tensors (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._raw_saved_tensors"]], "_register_hook() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._register_hook"]], "_register_hook() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._register_hook"]], "_register_hook() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._register_hook"]], "_register_hook() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._register_hook"]], "_register_hook() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._register_hook"]], "_register_hook() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._register_hook"]], "_register_hook() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._register_hook"]], "_register_hook() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._register_hook"]], "_register_hook_dict() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._register_hook_dict"]], "_register_hook_dict() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._register_hook_dict"]], "_register_hook_dict() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._register_hook_dict"]], "_register_hook_dict() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._register_hook_dict"]], "_register_hook_dict() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._register_hook_dict"]], "_register_hook_dict() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._register_hook_dict"]], "_register_hook_dict() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._register_hook_dict"]], "_register_hook_dict() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._register_hook_dict"]], "_sequence_nr() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._sequence_nr"]], "_sequence_nr() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._sequence_nr"]], "_sequence_nr() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._sequence_nr"]], "_sequence_nr() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._sequence_nr"]], "_sequence_nr() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._sequence_nr"]], "_sequence_nr() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._sequence_nr"]], "_sequence_nr() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._sequence_nr"]], "_sequence_nr() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._sequence_nr"]], "action_interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.action_interpolate_kernel"]], "apply() (accelerationtensorstepidxkernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.apply"]], "apply() (accelerationtensorstepkernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.apply"]], "apply() (cliquetensorstep class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.apply"]], "apply() (cliquetensorstepcentraldifferencekernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.apply"]], "apply() (cliquetensorstepcoalescekernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.apply"]], "apply() (cliquetensorstepidxcentraldifferencekernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.apply"]], "apply() (cliquetensorstepidxkernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.apply"]], "apply() (cliquetensorstepkernel class method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.apply"]], "backward() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.backward"]], "backward() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.backward"]], "backward() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.backward"]], "backward() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.backward"]], "backward() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.backward"]], "backward() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.backward"]], "backward() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.backward"]], "backward() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.backward"]], "build_clique_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_clique_matrix"]], "build_fd_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_fd_matrix"]], "build_int_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_int_matrix"]], "build_start_state_mask() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.build_start_state_mask"]], "curobo.rollout.dynamics_model.integration_utils": [[63, "module-curobo.rollout.dynamics_model.integration_utils"]], "dirty_tensors (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.dirty_tensors"]], "dirty_tensors (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.dirty_tensors"]], "dirty_tensors (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.dirty_tensors"]], "dirty_tensors (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.dirty_tensors"]], "dirty_tensors (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.dirty_tensors"]], "dirty_tensors (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.dirty_tensors"]], "dirty_tensors (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.dirty_tensors"]], "dirty_tensors (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.dirty_tensors"]], "euler_integrate() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.euler_integrate"]], "forward() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.forward"]], "forward() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.forward"]], "forward() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.forward"]], "forward() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.forward"]], "forward() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.forward"]], "forward() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.forward"]], "forward() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.forward"]], "forward() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.forward"]], "generate_vmap_rule (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.generate_vmap_rule"]], "generate_vmap_rule (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.generate_vmap_rule"]], "generate_vmap_rule (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.generate_vmap_rule"]], "interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.interpolate_kernel"]], "is_traceable (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.is_traceable"]], "is_traceable (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.is_traceable"]], "is_traceable (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.is_traceable"]], "is_traceable (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.is_traceable"]], "is_traceable (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.is_traceable"]], "is_traceable (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.is_traceable"]], "is_traceable (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.is_traceable"]], "is_traceable (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.is_traceable"]], "jvp() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.jvp"]], "jvp() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.jvp"]], "jvp() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.jvp"]], "jvp() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.jvp"]], "jvp() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.jvp"]], "jvp() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.jvp"]], "jvp() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.jvp"]], "jvp() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.jvp"]], "mark_dirty() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.mark_dirty"]], "mark_dirty() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.mark_dirty"]], "mark_dirty() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.mark_dirty"]], "mark_dirty() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.mark_dirty"]], "mark_dirty() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.mark_dirty"]], "mark_dirty() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.mark_dirty"]], "mark_dirty() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.mark_dirty"]], "mark_dirty() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.mark_dirty"]], "mark_non_differentiable() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.mark_non_differentiable"]], "mark_non_differentiable() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.mark_non_differentiable"]], "mark_non_differentiable() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.mark_non_differentiable"]], "mark_shared_storage() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.mark_shared_storage"]], "mark_shared_storage() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.mark_shared_storage"]], "mark_shared_storage() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.mark_shared_storage"]], "materialize_grads (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.materialize_grads"]], "materialize_grads (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.materialize_grads"]], "materialize_grads (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.materialize_grads"]], "materialize_grads (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.materialize_grads"]], "materialize_grads (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.materialize_grads"]], "materialize_grads (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.materialize_grads"]], "materialize_grads (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.materialize_grads"]], "materialize_grads (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.materialize_grads"]], "maybe_clear_saved_tensors() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.maybe_clear_saved_tensors"]], "maybe_clear_saved_tensors() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.maybe_clear_saved_tensors"]], "metadata (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.metadata"]], "metadata (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.metadata"]], "metadata (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.metadata"]], "metadata (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.metadata"]], "metadata (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.metadata"]], "metadata (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.metadata"]], "metadata (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.metadata"]], "metadata (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.metadata"]], "name() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.name"]], "name() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.name"]], "name() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.name"]], "name() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.name"]], "name() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.name"]], "name() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.name"]], "name() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.name"]], "name() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.name"]], "needs_input_grad (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.needs_input_grad"]], "needs_input_grad (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.needs_input_grad"]], "needs_input_grad (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.needs_input_grad"]], "needs_input_grad (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.needs_input_grad"]], "needs_input_grad (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.needs_input_grad"]], "needs_input_grad (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.needs_input_grad"]], "needs_input_grad (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.needs_input_grad"]], "needs_input_grad (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.needs_input_grad"]], "next_functions (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.next_functions"]], "next_functions (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.next_functions"]], "next_functions (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.next_functions"]], "next_functions (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.next_functions"]], "next_functions (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.next_functions"]], "next_functions (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.next_functions"]], "next_functions (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.next_functions"]], "next_functions (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.next_functions"]], "non_differentiable (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.non_differentiable"]], "non_differentiable (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.non_differentiable"]], "non_differentiable (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.non_differentiable"]], "non_differentiable (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.non_differentiable"]], "non_differentiable (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.non_differentiable"]], "non_differentiable (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.non_differentiable"]], "non_differentiable (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.non_differentiable"]], "non_differentiable (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.non_differentiable"]], "register_hook() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.register_hook"]], "register_hook() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.register_hook"]], "register_hook() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.register_hook"]], "register_hook() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.register_hook"]], "register_hook() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.register_hook"]], "register_hook() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.register_hook"]], "register_hook() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.register_hook"]], "register_hook() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.register_hook"]], "register_prehook() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.register_prehook"]], "register_prehook() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.register_prehook"]], "register_prehook() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.register_prehook"]], "register_prehook() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.register_prehook"]], "register_prehook() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.register_prehook"]], "register_prehook() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.register_prehook"]], "register_prehook() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.register_prehook"]], "register_prehook() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.register_prehook"]], "requires_grad (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.requires_grad"]], "requires_grad (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.requires_grad"]], "requires_grad (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.requires_grad"]], "requires_grad (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.requires_grad"]], "requires_grad (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.requires_grad"]], "requires_grad (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.requires_grad"]], "requires_grad (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.requires_grad"]], "requires_grad (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.requires_grad"]], "save_for_backward() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.save_for_backward"]], "save_for_backward() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.save_for_backward"]], "save_for_backward() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.save_for_backward"]], "save_for_backward() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.save_for_backward"]], "save_for_backward() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.save_for_backward"]], "save_for_backward() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.save_for_backward"]], "save_for_backward() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.save_for_backward"]], "save_for_backward() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.save_for_backward"]], "save_for_forward() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.save_for_forward"]], "save_for_forward() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.save_for_forward"]], "save_for_forward() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.save_for_forward"]], "save_for_forward() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.save_for_forward"]], "save_for_forward() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.save_for_forward"]], "save_for_forward() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.save_for_forward"]], "save_for_forward() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.save_for_forward"]], "save_for_forward() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.save_for_forward"]], "saved_for_forward (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.saved_for_forward"]], "saved_for_forward (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.saved_for_forward"]], "saved_for_forward (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.saved_for_forward"]], "saved_for_forward (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.saved_for_forward"]], "saved_for_forward (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.saved_for_forward"]], "saved_for_forward (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.saved_for_forward"]], "saved_for_forward (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.saved_for_forward"]], "saved_for_forward (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.saved_for_forward"]], "saved_tensors (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.saved_tensors"]], "saved_tensors (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.saved_tensors"]], "saved_tensors (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.saved_tensors"]], "saved_tensors (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.saved_tensors"]], "saved_tensors (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.saved_tensors"]], "saved_tensors (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.saved_tensors"]], "saved_tensors (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.saved_tensors"]], "saved_tensors (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.saved_tensors"]], "saved_variables (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.saved_variables"]], "saved_variables (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.saved_variables"]], "saved_variables (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.saved_variables"]], "saved_variables (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.saved_variables"]], "saved_variables (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.saved_variables"]], "saved_variables (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.saved_variables"]], "saved_variables (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.saved_variables"]], "saved_variables (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.saved_variables"]], "set_materialize_grads() (accelerationtensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.set_materialize_grads"]], "set_materialize_grads() (accelerationtensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstep method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstepcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstepcoalescekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstepidxcentraldifferencekernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstepidxkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.set_materialize_grads"]], "set_materialize_grads() (cliquetensorstepkernel method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.set_materialize_grads"]], "setup_context() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.setup_context"]], "setup_context() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.setup_context"]], "setup_context() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.setup_context"]], "setup_context() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.setup_context"]], "setup_context() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.setup_context"]], "setup_context() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.setup_context"]], "setup_context() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.setup_context"]], "setup_context() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.setup_context"]], "step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.step_acc_semi_euler"]], "sum_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.sum_matrix"]], "tensor_linspace() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_linspace"]], "tensor_step_acc() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc"]], "tensor_step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc_semi_euler"]], "tensor_step_jerk() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_jerk"]], "tensor_step_pos() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos"]], "tensor_step_pos_clique() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_clique"]], "tensor_step_pos_ik() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_ik"]], "tensor_step_vel() (in module curobo.rollout.dynamics_model.integration_utils)": [[63, "curobo.rollout.dynamics_model.integration_utils.tensor_step_vel"]], "to_save (accelerationtensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.to_save"]], "to_save (accelerationtensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.to_save"]], "to_save (cliquetensorstep attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.to_save"]], "to_save (cliquetensorstepcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.to_save"]], "to_save (cliquetensorstepcoalescekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.to_save"]], "to_save (cliquetensorstepidxcentraldifferencekernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.to_save"]], "to_save (cliquetensorstepidxkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.to_save"]], "to_save (cliquetensorstepkernel attribute)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.to_save"]], "vjp() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.vjp"]], "vjp() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.vjp"]], "vjp() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.vjp"]], "vjp() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.vjp"]], "vjp() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.vjp"]], "vjp() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.vjp"]], "vjp() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.vjp"]], "vjp() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.vjp"]], "vmap() (accelerationtensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.vmap"]], "vmap() (accelerationtensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.vmap"]], "vmap() (cliquetensorstep static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.vmap"]], "vmap() (cliquetensorstepcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.vmap"]], "vmap() (cliquetensorstepcoalescekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.vmap"]], "vmap() (cliquetensorstepidxcentraldifferencekernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.vmap"]], "vmap() (cliquetensorstepidxkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.vmap"]], "vmap() (cliquetensorstepkernel static method)": [[63, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.vmap"]], "kinematicmodel (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel"]], "kinematicmodelconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig"]], "kinematicmodelstate (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState"]], "timetrajconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig"]], "_abc_impl (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState._abc_impl"]], "_is_protocol (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState._is_protocol"]], "action_bound_highs (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_highs"]], "action_bound_lows (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_lows"]], "action_horizon (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_horizon"]], "ang_jac_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ang_jac_seq"]], "base_dt (timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_dt"]], "base_ratio (timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_ratio"]], "batch_size (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.batch_size"]], "batch_size (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.batch_size"]], "control_space (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.control_space"]], "control_space (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.control_space"]], "count() (kinematicmodelstate method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.count"]], "cspace_distance_weight (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.cspace_distance_weight"]], "curobo.rollout.dynamics_model.kinematic_model": [[64, "module-curobo.rollout.dynamics_model.kinematic_model"]], "dt_traj_params (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.dt_traj_params"]], "dt_traj_params (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.dt_traj_params"]], "ee_pos_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pos_seq"]], "ee_pose (kinematicmodelstate property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pose"]], "ee_quat_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_quat_seq"]], "filter_robot_command (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.filter_robot_command"]], "filter_robot_command (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.filter_robot_command"]], "filter_robot_state() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.filter_robot_state"]], "forward() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.forward"]], "from_dict() (kinematicmodel static method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.from_dict"]], "from_dict() (kinematicmodelconfig static method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.from_dict"]], "get_action_from_state() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_action_from_state"]], "get_dt_array() (timetrajconfig method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.get_dt_array"]], "get_next_state() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_next_state"]], "get_robot_command() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_robot_command"]], "get_state_bounds() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_bounds"]], "get_state_from_action() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_from_action"]], "horizon (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.horizon"]], "horizon (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.horizon"]], "index() (kinematicmodelstate method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.index"]], "init_action_mean (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.init_action_mean"]], "integrate_action() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action"]], "integrate_action_step() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action_step"]], "lin_jac_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.lin_jac_seq"]], "link_names (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_names"]], "link_pos_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pos_seq"]], "link_pose (kinematicmodelstate property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pose"]], "link_quat_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_quat_seq"]], "max_acceleration (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_acceleration"]], "max_dt (timetrajconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.max_dt"]], "max_jerk (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_jerk"]], "null_space_weight (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.null_space_weight"]], "retract_config (kinematicmodel property)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.retract_config"]], "return_full_act_buffer (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.return_full_act_buffer"]], "return_full_act_buffer (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.return_full_act_buffer"]], "robot_cmd_tensor_step() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.robot_cmd_tensor_step"]], "robot_config (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.robot_config"]], "robot_config (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.robot_config"]], "robot_spheres (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.robot_spheres"]], "state_estimation_variance (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.state_estimation_variance"]], "state_estimation_variance (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_estimation_variance"]], "state_filter_cfg (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.state_filter_cfg"]], "state_filter_cfg (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_filter_cfg"]], "state_finite_difference_mode (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.state_finite_difference_mode"]], "state_finite_difference_mode (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_finite_difference_mode"]], "state_seq (kinematicmodelstate attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.state_seq"]], "teleport_mode (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.teleport_mode"]], "teleport_mode (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.teleport_mode"]], "tensor_args (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.tensor_args"]], "tensor_args (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.tensor_args"]], "tensor_step() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.tensor_step"]], "update_batch_size() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_batch_size"]], "update_cmd_batch_size() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_cmd_batch_size"]], "update_dt() (timetrajconfig method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.update_dt"]], "update_traj_dt() (kinematicmodel method)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_traj_dt"]], "vel_scale (kinematicmodel attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.vel_scale"]], "vel_scale (kinematicmodelconfig attribute)": [[64, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.vel_scale"]], "dynamicsmodelbase (class in curobo.rollout.dynamics_model.model_base)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase"]], "_abc_impl (dynamicsmodelbase attribute)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase._abc_impl"]], "curobo.rollout.dynamics_model.model_base": [[65, "module-curobo.rollout.dynamics_model.model_base"]], "filter_robot_state() (dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.filter_robot_state"]], "forward() (dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.forward"]], "get_next_state() (dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_next_state"]], "get_robot_command() (dynamicsmodelbase method)": [[65, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_robot_command"]], "acceleration (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION"]], "acceleration_kernel (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION_KERNEL"]], "jerk (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.JERK"]], "position (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION"]], "position_clique (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE"]], "position_clique_kernel (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE_KERNEL"]], "position_teleport (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_TELEPORT"]], "tensorstepacceleration (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration"]], "tensorstepaccelerationkernel (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel"]], "tensorstepbase (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase"]], "tensorstepposition (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition"]], "tensorsteppositionclique (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique"]], "tensorsteppositioncliquekernel (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel"]], "tensorsteppositionteleport (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport"]], "tensorsteptype (class in curobo.rollout.dynamics_model.tensor_step)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType"]], "velocity (tensorsteptype attribute)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.VELOCITY"]], "curobo.rollout.dynamics_model.tensor_step": [[66, "module-curobo.rollout.dynamics_model.tensor_step"]], "filter_signal() (tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.filter_signal"]], "forward() (tensorstepacceleration method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.forward"]], "forward() (tensorstepaccelerationkernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.forward"]], "forward() (tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.forward"]], "forward() (tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.forward"]], "forward() (tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.forward"]], "forward() (tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.forward"]], "forward() (tensorsteppositionteleport method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.forward"]], "update_batch_size() (tensorstepacceleration method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.update_batch_size"]], "update_batch_size() (tensorstepaccelerationkernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.update_batch_size"]], "update_batch_size() (tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_batch_size"]], "update_batch_size() (tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_batch_size"]], "update_batch_size() (tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_batch_size"]], "update_batch_size() (tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.update_batch_size"]], "update_batch_size() (tensorsteppositionteleport method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.update_batch_size"]], "update_dt() (tensorstepacceleration method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.update_dt"]], "update_dt() (tensorstepaccelerationkernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.update_dt"]], "update_dt() (tensorstepbase method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_dt"]], "update_dt() (tensorstepposition method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_dt"]], "update_dt() (tensorsteppositionclique method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_dt"]], "update_dt() (tensorsteppositioncliquekernel method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.update_dt"]], "update_dt() (tensorsteppositionteleport method)": [[66, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.update_dt"]], "goal (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.Goal"]], "rolloutbase (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutBase"]], "rolloutconfig (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutConfig"]], "rolloutmetrics (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.RolloutMetrics"]], "trajectory (class in curobo.rollout.rollout_base)": [[67, "curobo.rollout.rollout_base.Trajectory"]], "_abc_impl (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal._abc_impl"]], "_abc_impl (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics._abc_impl"]], "_copy_buffer() (goal method)": [[67, "curobo.rollout.rollout_base.Goal._copy_buffer"]], "_copy_tensor() (goal method)": [[67, "curobo.rollout.rollout_base.Goal._copy_tensor"]], "_init_after_config_load() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase._init_after_config_load"]], "_is_protocol (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal._is_protocol"]], "_is_protocol (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics._is_protocol"]], "_tensor_repeat_seeds() (goal method)": [[67, "curobo.rollout.rollout_base.Goal._tensor_repeat_seeds"]], "_update_batch_size() (goal method)": [[67, "curobo.rollout.rollout_base.Goal._update_batch_size"]], "action_bound_highs (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bound_highs"]], "action_bound_lows (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bound_lows"]], "action_bounds (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_bounds"]], "action_horizon (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.action_horizon"]], "actions (trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.actions"]], "apply_kernel() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.apply_kernel"]], "batch (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch"]], "batch_current_state_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_current_state_idx"]], "batch_enable_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_enable_idx"]], "batch_goal_state_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_goal_state_idx"]], "batch_pose_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_pose_idx"]], "batch_retract_state_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_retract_state_idx"]], "batch_world_idx (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.batch_world_idx"]], "clone() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.clone"]], "clone() (rolloutmetrics method)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.clone"]], "constraint (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.constraint"]], "constraint_fn() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.constraint_fn"]], "convergence_fn() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.convergence_fn"]], "copy_() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.copy_"]], "cost (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.cost"]], "cost_fn() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.cost_fn"]], "costs (trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.costs"]], "count() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.count"]], "count() (rolloutmetrics method)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.count"]], "create_idx() (goal class method)": [[67, "curobo.rollout.rollout_base.Goal.create_idx"]], "create_index_buffers() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.create_index_buffers"]], "cspace_config (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.cspace_config"]], "curobo.rollout.rollout_base": [[67, "module-curobo.rollout.rollout_base"]], "current_cost() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.current_cost"]], "current_state (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.current_state"]], "d_action (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.d_action"]], "debug (trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.debug"]], "dt (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.dt"]], "feasible (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.feasible"]], "filter_robot_state() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.filter_robot_state"]], "get_action_from_state() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_action_from_state"]], "get_batch_goal_state() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.get_batch_goal_state"]], "get_full_dof_from_solution() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_full_dof_from_solution"]], "get_init_action_seq() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_init_action_seq"]], "get_metrics() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_metrics"]], "get_metrics_cuda_graph() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_metrics_cuda_graph"]], "get_robot_command() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_robot_command"]], "get_state_from_action() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.get_state_from_action"]], "goal_pose (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.goal_pose"]], "goal_state (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.goal_state"]], "horizon (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.horizon"]], "index() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.index"]], "index() (rolloutmetrics method)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.index"]], "links_goal_pose (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.links_goal_pose"]], "n_goalset (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.n_goalset"]], "name (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.name"]], "repeat_seeds() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.repeat_seeds"]], "reset() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset"]], "reset_cuda_graph() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_cuda_graph"]], "reset_seed() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_seed"]], "reset_shape() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.reset_shape"]], "retract_state (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.retract_state"]], "rollout_constraint() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.rollout_constraint"]], "rollout_fn() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.rollout_fn"]], "sample_random_actions() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.sample_random_actions"]], "sampler_seed (rolloutconfig attribute)": [[67, "curobo.rollout.rollout_base.RolloutConfig.sampler_seed"]], "state (rolloutmetrics attribute)": [[67, "curobo.rollout.rollout_base.RolloutMetrics.state"]], "state (trajectory attribute)": [[67, "curobo.rollout.rollout_base.Trajectory.state"]], "state_bounds (rolloutbase property)": [[67, "curobo.rollout.rollout_base.RolloutBase.state_bounds"]], "sum_horizon (rolloutconfig attribute)": [[67, "curobo.rollout.rollout_base.RolloutConfig.sum_horizon"]], "tensor_args (rolloutconfig attribute)": [[67, "curobo.rollout.rollout_base.RolloutConfig.tensor_args"]], "to() (goal method)": [[67, "curobo.rollout.rollout_base.Goal.to"]], "update_batch_idx_buffers (goal attribute)": [[67, "curobo.rollout.rollout_base.Goal.update_batch_idx_buffers"]], "update_params() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.update_params"]], "update_start_state() (rolloutbase method)": [[67, "curobo.rollout.rollout_base.RolloutBase.update_start_state"]], "curobo.types": [[68, "module-curobo.types"]], "tensordevicetype (class in curobo.types.base)": [[69, "curobo.types.base.TensorDeviceType"]], "as_torch_dict() (tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.as_torch_dict"]], "collision_distance_dtype (tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_distance_dtype"]], "collision_geometry_dtype (tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_geometry_dtype"]], "collision_gradient_dtype (tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.collision_gradient_dtype"]], "cpu() (tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.cpu"]], "curobo.types.base": [[69, "module-curobo.types.base"]], "device (tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.device"]], "dtype (tensordevicetype attribute)": [[69, "curobo.types.base.TensorDeviceType.dtype"]], "from_basic() (tensordevicetype static method)": [[69, "curobo.types.base.TensorDeviceType.from_basic"]], "to_device() (tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.to_device"]], "to_int8_device() (tensordevicetype method)": [[69, "curobo.types.base.TensorDeviceType.to_int8_device"]], "cameraobservation (class in curobo.types.camera)": [[70, "curobo.types.camera.CameraObservation"]], "clone() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.clone"]], "copy_() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.copy_"]], "curobo.types.camera": [[70, "module-curobo.types.camera"]], "depth_image (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.depth_image"]], "filter_depth() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.filter_depth"]], "get_image_from_pointcloud() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.get_image_from_pointcloud"]], "get_pointcloud() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.get_pointcloud"]], "image_segmentation (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.image_segmentation"]], "intrinsics (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.intrinsics"]], "name (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.name"]], "pose (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.pose"]], "projection_matrix (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.projection_matrix"]], "projection_rays (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.projection_rays"]], "resolution (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.resolution"]], "rgb_image (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.rgb_image"]], "shape (cameraobservation property)": [[70, "curobo.types.camera.CameraObservation.shape"]], "stack() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.stack"]], "timestamp (cameraobservation attribute)": [[70, "curobo.types.camera.CameraObservation.timestamp"]], "to() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.to"]], "update_projection_rays() (cameraobservation method)": [[70, "curobo.types.camera.CameraObservation.update_projection_rays"]], "acceleration (statetype attribute)": [[71, "curobo.types.enum.StateType.ACCELERATION"]], "jerk (statetype attribute)": [[71, "curobo.types.enum.StateType.JERK"]], "position (statetype attribute)": [[71, "curobo.types.enum.StateType.POSITION"]], "statetype (class in curobo.types.enum)": [[71, "curobo.types.enum.StateType"]], "velocity (statetype attribute)": [[71, "curobo.types.enum.StateType.VELOCITY"]], "curobo.types.enum": [[71, "module-curobo.types.enum"]], "orientationerror (class in curobo.types.math)": [[72, "curobo.types.math.OrientationError"]], "pose (class in curobo.types.math)": [[72, "curobo.types.math.Pose"]], "_abc_impl (pose attribute)": [[72, "curobo.types.math.Pose._abc_impl"]], "_backward_cls (orientationerror attribute)": [[72, "curobo.types.math.OrientationError._backward_cls"]], "_get_compiled_autograd_symints() (orientationerror method)": [[72, "curobo.types.math.OrientationError._get_compiled_autograd_symints"]], "_is_compiled_autograd_tracing() (orientationerror method)": [[72, "curobo.types.math.OrientationError._is_compiled_autograd_tracing"]], "_is_protocol (pose attribute)": [[72, "curobo.types.math.Pose._is_protocol"]], "_materialize_non_diff_grads (orientationerror attribute)": [[72, "curobo.types.math.OrientationError._materialize_non_diff_grads"]], "_raw_saved_tensors (orientationerror attribute)": [[72, "curobo.types.math.OrientationError._raw_saved_tensors"]], "_register_hook() (orientationerror static method)": [[72, "curobo.types.math.OrientationError._register_hook"]], "_register_hook_dict() (orientationerror method)": [[72, "curobo.types.math.OrientationError._register_hook_dict"]], "_sequence_nr() (orientationerror method)": [[72, "curobo.types.math.OrientationError._sequence_nr"]], "angular_distance() (pose method)": [[72, "curobo.types.math.Pose.angular_distance"]], "apply() (orientationerror class method)": [[72, "curobo.types.math.OrientationError.apply"]], "apply_kernel() (pose method)": [[72, "curobo.types.math.Pose.apply_kernel"]], "backward() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.backward"]], "batch (pose attribute)": [[72, "curobo.types.math.Pose.batch"]], "batch_transform_points() (pose method)": [[72, "curobo.types.math.Pose.batch_transform_points"]], "cat() (pose static method)": [[72, "curobo.types.math.Pose.cat"]], "clone() (pose method)": [[72, "curobo.types.math.Pose.clone"]], "compute_local_pose() (pose method)": [[72, "curobo.types.math.Pose.compute_local_pose"]], "compute_offset_pose() (pose method)": [[72, "curobo.types.math.Pose.compute_offset_pose"]], "contiguous() (pose method)": [[72, "curobo.types.math.Pose.contiguous"]], "copy_() (pose method)": [[72, "curobo.types.math.Pose.copy_"]], "count() (pose method)": [[72, "curobo.types.math.Pose.count"]], "curobo.types.math": [[72, "module-curobo.types.math"]], "dirty_tensors (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.dirty_tensors"]], "distance() (pose method)": [[72, "curobo.types.math.Pose.distance"]], "forward() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.forward"]], "from_batch_list() (pose class method)": [[72, "curobo.types.math.Pose.from_batch_list"]], "from_list() (pose class method)": [[72, "curobo.types.math.Pose.from_list"]], "from_matrix() (pose static method)": [[72, "curobo.types.math.Pose.from_matrix"]], "generate_vmap_rule (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.generate_vmap_rule"]], "geodesic_distance() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.geodesic_distance"]], "get_index() (pose method)": [[72, "curobo.types.math.Pose.get_index"]], "get_matrix() (pose method)": [[72, "curobo.types.math.Pose.get_matrix"]], "get_numpy_matrix() (pose method)": [[72, "curobo.types.math.Pose.get_numpy_matrix"]], "get_pose_vector() (pose method)": [[72, "curobo.types.math.Pose.get_pose_vector"]], "get_rotation() (pose method)": [[72, "curobo.types.math.Pose.get_rotation"]], "index() (pose method)": [[72, "curobo.types.math.Pose.index"]], "inverse() (pose method)": [[72, "curobo.types.math.Pose.inverse"]], "is_traceable (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.is_traceable"]], "jvp() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.jvp"]], "linear_distance() (pose method)": [[72, "curobo.types.math.Pose.linear_distance"]], "mark_dirty() (orientationerror method)": [[72, "curobo.types.math.OrientationError.mark_dirty"]], "mark_non_differentiable() (orientationerror method)": [[72, "curobo.types.math.OrientationError.mark_non_differentiable"]], "mark_shared_storage() (orientationerror method)": [[72, "curobo.types.math.OrientationError.mark_shared_storage"]], "materialize_grads (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.materialize_grads"]], "maybe_clear_saved_tensors() (orientationerror method)": [[72, "curobo.types.math.OrientationError.maybe_clear_saved_tensors"]], "metadata (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.metadata"]], "multiply() (pose method)": [[72, "curobo.types.math.Pose.multiply"]], "n_goalset (pose attribute)": [[72, "curobo.types.math.Pose.n_goalset"]], "name (pose attribute)": [[72, "curobo.types.math.Pose.name"]], "name() (orientationerror method)": [[72, "curobo.types.math.OrientationError.name"]], "needs_input_grad (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.needs_input_grad"]], "next_functions (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.next_functions"]], "non_differentiable (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.non_differentiable"]], "normalize_rotation (pose attribute)": [[72, "curobo.types.math.Pose.normalize_rotation"]], "position (pose attribute)": [[72, "curobo.types.math.Pose.position"]], "quat_multiply() (in module curobo.types.math)": [[72, "curobo.types.math.quat_multiply"]], "quaternion (pose attribute)": [[72, "curobo.types.math.Pose.quaternion"]], "register_hook() (orientationerror method)": [[72, "curobo.types.math.OrientationError.register_hook"]], "register_prehook() (orientationerror method)": [[72, "curobo.types.math.OrientationError.register_prehook"]], "repeat() (pose method)": [[72, "curobo.types.math.Pose.repeat"]], "repeat_seeds() (pose method)": [[72, "curobo.types.math.Pose.repeat_seeds"]], "requires_grad (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.requires_grad"]], "rotation (pose attribute)": [[72, "curobo.types.math.Pose.rotation"]], "save_for_backward() (orientationerror method)": [[72, "curobo.types.math.OrientationError.save_for_backward"]], "save_for_forward() (orientationerror method)": [[72, "curobo.types.math.OrientationError.save_for_forward"]], "saved_for_forward (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.saved_for_forward"]], "saved_tensors (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.saved_tensors"]], "saved_variables (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.saved_variables"]], "set_materialize_grads() (orientationerror method)": [[72, "curobo.types.math.OrientationError.set_materialize_grads"]], "setup_context() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.setup_context"]], "shape (pose property)": [[72, "curobo.types.math.Pose.shape"]], "stack() (pose method)": [[72, "curobo.types.math.Pose.stack"]], "to() (pose method)": [[72, "curobo.types.math.Pose.to"]], "to_list() (pose method)": [[72, "curobo.types.math.Pose.to_list"]], "to_save (orientationerror attribute)": [[72, "curobo.types.math.OrientationError.to_save"]], "tolist() (pose method)": [[72, "curobo.types.math.Pose.tolist"]], "transform_point() (pose method)": [[72, "curobo.types.math.Pose.transform_point"]], "transform_points() (pose method)": [[72, "curobo.types.math.Pose.transform_points"]], "unsqueeze() (pose method)": [[72, "curobo.types.math.Pose.unsqueeze"]], "vjp() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.vjp"]], "vmap() (orientationerror static method)": [[72, "curobo.types.math.OrientationError.vmap"]], "nnconfig (class in curobo.types.robot)": [[73, "curobo.types.robot.NNConfig"]], "robotconfig (class in curobo.types.robot)": [[73, "curobo.types.robot.RobotConfig"]], "cspace (robotconfig property)": [[73, "curobo.types.robot.RobotConfig.cspace"]], "curobo.types.robot": [[73, "module-curobo.types.robot"]], "from_basic() (robotconfig static method)": [[73, "curobo.types.robot.RobotConfig.from_basic"]], "from_dict() (robotconfig static method)": [[73, "curobo.types.robot.RobotConfig.from_dict"]], "ik_seeder (nnconfig attribute)": [[73, "curobo.types.robot.NNConfig.ik_seeder"]], "kinematics (robotconfig attribute)": [[73, "curobo.types.robot.RobotConfig.kinematics"]], "tensor_args (robotconfig attribute)": [[73, "curobo.types.robot.RobotConfig.tensor_args"]], "write_config() (robotconfig method)": [[73, "curobo.types.robot.RobotConfig.write_config"]], "filtercoeff (class in curobo.types.state)": [[74, "curobo.types.state.FilterCoeff"]], "jointstate (class in curobo.types.state)": [[74, "curobo.types.state.JointState"]], "state (class in curobo.types.state)": [[74, "curobo.types.state.State"]], "_abc_impl (jointstate attribute)": [[74, "curobo.types.state.JointState._abc_impl"]], "_abc_impl (state attribute)": [[74, "curobo.types.state.State._abc_impl"]], "_is_protocol (jointstate attribute)": [[74, "curobo.types.state.JointState._is_protocol"]], "_is_protocol (state attribute)": [[74, "curobo.types.state.State._is_protocol"]], "_same_shape() (jointstate method)": [[74, "curobo.types.state.JointState._same_shape"]], "acceleration (filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.acceleration"]], "acceleration (jointstate attribute)": [[74, "curobo.types.state.JointState.acceleration"]], "append_joints() (jointstate method)": [[74, "curobo.types.state.JointState.append_joints"]], "apply_kernel() (jointstate method)": [[74, "curobo.types.state.JointState.apply_kernel"]], "apply_kernel() (state method)": [[74, "curobo.types.state.State.apply_kernel"]], "blend() (jointstate method)": [[74, "curobo.types.state.JointState.blend"]], "blend() (state method)": [[74, "curobo.types.state.State.blend"]], "calculate_fd_from_position() (jointstate method)": [[74, "curobo.types.state.JointState.calculate_fd_from_position"]], "clone() (jointstate method)": [[74, "curobo.types.state.JointState.clone"]], "clone() (state method)": [[74, "curobo.types.state.State.clone"]], "copy_() (jointstate method)": [[74, "curobo.types.state.JointState.copy_"]], "copy_at_index() (jointstate method)": [[74, "curobo.types.state.JointState.copy_at_index"]], "copy_data() (jointstate method)": [[74, "curobo.types.state.JointState.copy_data"]], "count() (jointstate method)": [[74, "curobo.types.state.JointState.count"]], "count() (state method)": [[74, "curobo.types.state.State.count"]], "curobo.types.state": [[74, "module-curobo.types.state"]], "detach() (jointstate method)": [[74, "curobo.types.state.JointState.detach"]], "fn_get_index() (in module curobo.types.state)": [[74, "curobo.types.state.fn_get_index"]], "from_list() (jointstate static method)": [[74, "curobo.types.state.JointState.from_list"]], "from_numpy() (jointstate static method)": [[74, "curobo.types.state.JointState.from_numpy"]], "from_position() (jointstate static method)": [[74, "curobo.types.state.JointState.from_position"]], "from_state_tensor() (jointstate static method)": [[74, "curobo.types.state.JointState.from_state_tensor"]], "get_augmented_joint_state() (jointstate method)": [[74, "curobo.types.state.JointState.get_augmented_joint_state"]], "get_ordered_joint_state() (jointstate method)": [[74, "curobo.types.state.JointState.get_ordered_joint_state"]], "get_state_tensor() (jointstate method)": [[74, "curobo.types.state.JointState.get_state_tensor"]], "get_state_tensor() (state method)": [[74, "curobo.types.state.State.get_state_tensor"]], "index() (jointstate method)": [[74, "curobo.types.state.JointState.index"]], "index() (state method)": [[74, "curobo.types.state.State.index"]], "index_dof() (jointstate method)": [[74, "curobo.types.state.JointState.index_dof"]], "inplace_reindex() (jointstate method)": [[74, "curobo.types.state.JointState.inplace_reindex"]], "jerk (filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.jerk"]], "jerk (jointstate attribute)": [[74, "curobo.types.state.JointState.jerk"]], "joint_names (jointstate attribute)": [[74, "curobo.types.state.JointState.joint_names"]], "position (filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.position"]], "position (jointstate attribute)": [[74, "curobo.types.state.JointState.position"]], "repeat_seeds() (jointstate method)": [[74, "curobo.types.state.JointState.repeat_seeds"]], "scale() (jointstate method)": [[74, "curobo.types.state.JointState.scale"]], "scale_by_dt() (jointstate method)": [[74, "curobo.types.state.JointState.scale_by_dt"]], "shape (jointstate property)": [[74, "curobo.types.state.JointState.shape"]], "squeeze() (jointstate method)": [[74, "curobo.types.state.JointState.squeeze"]], "stack() (jointstate method)": [[74, "curobo.types.state.JointState.stack"]], "tensor_args (jointstate attribute)": [[74, "curobo.types.state.JointState.tensor_args"]], "to() (jointstate method)": [[74, "curobo.types.state.JointState.to"]], "to() (state method)": [[74, "curobo.types.state.State.to"]], "trim_trajectory() (jointstate method)": [[74, "curobo.types.state.JointState.trim_trajectory"]], "unsqueeze() (jointstate method)": [[74, "curobo.types.state.JointState.unsqueeze"]], "velocity (filtercoeff attribute)": [[74, "curobo.types.state.FilterCoeff.velocity"]], "velocity (jointstate attribute)": [[74, "curobo.types.state.JointState.velocity"]], "zeros() (jointstate static method)": [[74, "curobo.types.state.JointState.zeros"]], "t_bdof (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BDOF"]], "t_bhdof_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BHDOF_float"]], "t_bhvalue_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BHValue_float"]], "t_bposition (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BPosition"]], "t_bquaternion (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BQuaternion"]], "t_brotation (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BRotation"]], "t_bvalue_bool (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_bool"]], "t_bvalue_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_float"]], "t_bvalue_int (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_BValue_int"]], "t_dof (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_DOF"]], "t_hdof_float (in module curobo.types.tensor)": [[75, "curobo.types.tensor.T_HDOF_float"]], "curobo.types.tensor": [[75, "module-curobo.types.tensor"]], "curobo.util": [[76, "module-curobo.util"]], "curobo.util.error_metrics": [[77, "module-curobo.util.error_metrics"]], "rotation_error_matrix() (in module curobo.util.error_metrics)": [[77, "curobo.util.error_metrics.rotation_error_matrix"]], "rotation_error_quaternion() (in module curobo.util.error_metrics)": [[77, "curobo.util.error_metrics.rotation_error_quaternion"]], "curobo.util.helpers": [[78, "module-curobo.util.helpers"]], "default_to_regular() (in module curobo.util.helpers)": [[78, "curobo.util.helpers.default_to_regular"]], "list_idx_if_not_none() (in module curobo.util.helpers)": [[78, "curobo.util.helpers.list_idx_if_not_none"]], "curobo.util.logger": [[79, "module-curobo.util.logger"]], "log_error() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_error"]], "log_info() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_info"]], "log_warn() (in module curobo.util.logger)": [[79, "curobo.util.logger.log_warn"]], "setup_curobo_logger() (in module curobo.util.logger)": [[79, "curobo.util.logger.setup_curobo_logger"]], "setup_logger() (in module curobo.util.logger)": [[79, "curobo.util.logger.setup_logger"]], "curobogroupmetrics (class in curobo.util.metrics)": [[80, "curobo.util.metrics.CuroboGroupMetrics"]], "curobometrics (class in curobo.util.metrics)": [[80, "curobo.util.metrics.CuroboMetrics"]], "attempts (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.attempts"]], "attempts (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.attempts"]], "collision (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.collision"]], "cspace_path_length (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.cspace_path_length"]], "cspace_path_length (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.cspace_path_length"]], "curobo.util.metrics": [[80, "module-curobo.util.metrics"]], "eef_orientation_path_length (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.eef_orientation_path_length"]], "eef_orientation_path_length (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.eef_orientation_path_length"]], "eef_position_path_length (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.eef_position_path_length"]], "eef_position_path_length (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.eef_position_path_length"]], "env_collision_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.env_collision_rate"]], "from_list() (curobogroupmetrics class method)": [[80, "curobo.util.metrics.CuroboGroupMetrics.from_list"]], "group_size (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.group_size"]], "jerk (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.jerk"]], "jerk (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.jerk"]], "joint_limit_violation (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.joint_limit_violation"]], "joint_violation_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.joint_violation_rate"]], "motion_time (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.motion_time"]], "motion_time (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.motion_time"]], "orientation_error (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.orientation_error"]], "orientation_error (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.orientation_error"]], "perception_interpolated_success (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.perception_interpolated_success"]], "perception_interpolated_success (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.perception_interpolated_success"]], "perception_success (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.perception_success"]], "perception_success (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.perception_success"]], "perception_time (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.perception_time"]], "perception_time (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.perception_time"]], "physical_violation (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.physical_violation"]], "physical_violation_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.physical_violation_rate"]], "position_error (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.position_error"]], "position_error (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.position_error"]], "print_summary() (curobogroupmetrics method)": [[80, "curobo.util.metrics.CuroboGroupMetrics.print_summary"]], "self_collision (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.self_collision"]], "self_collision_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.self_collision_rate"]], "skip (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.skip"]], "skips (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.skips"]], "solve_time (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.solve_time"]], "solve_time (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.solve_time"]], "solve_time_per_step (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.solve_time_per_step"]], "success (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.success"]], "success (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.success"]], "time (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.time"]], "time (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.time"]], "trajectory_length (curobometrics attribute)": [[80, "curobo.util.metrics.CuroboMetrics.trajectory_length"]], "within_fifteen_deg_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.within_fifteen_deg_rate"]], "within_five_cm_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.within_five_cm_rate"]], "within_one_cm_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.within_one_cm_rate"]], "within_thirty_deg_rate (curobogroupmetrics attribute)": [[80, "curobo.util.metrics.CuroboGroupMetrics.within_thirty_deg_rate"]], "basesamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.BaseSampleLib"]], "haltongenerator (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.HaltonGenerator"]], "haltonsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.HaltonSampleLib"]], "knotsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.KnotSampleLib"]], "randomsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.RandomSampleLib"]], "sampleconfig (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SampleConfig"]], "samplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SampleLib"]], "sinesamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.SineSampleLib"]], "stompsamplelib (class in curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.StompSampleLib"]], "_get_samples() (haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator._get_samples"]], "bspline() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.bspline"]], "cov_mode (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.cov_mode"]], "cov_mode (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.cov_mode"]], "cov_mode (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.cov_mode"]], "cov_mode (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.cov_mode"]], "cov_mode (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.cov_mode"]], "cov_mode (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.cov_mode"]], "cov_mode (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.cov_mode"]], "cov_mode (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.cov_mode"]], "covariance_matrix (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.covariance_matrix"]], "covariance_matrix (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.covariance_matrix"]], "covariance_matrix (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.covariance_matrix"]], "covariance_matrix (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.covariance_matrix"]], "covariance_matrix (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.covariance_matrix"]], "covariance_matrix (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.covariance_matrix"]], "covariance_matrix (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.covariance_matrix"]], "covariance_matrix (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.covariance_matrix"]], "curobo.util.sample_lib": [[81, "module-curobo.util.sample_lib"]], "d_action (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.d_action"]], "d_action (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.d_action"]], "d_action (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.d_action"]], "d_action (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.d_action"]], "d_action (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.d_action"]], "d_action (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.d_action"]], "d_action (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.d_action"]], "d_action (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.d_action"]], "degree (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.degree"]], "degree (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.degree"]], "degree (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.degree"]], "degree (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.degree"]], "degree (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.degree"]], "degree (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.degree"]], "degree (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.degree"]], "degree (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.degree"]], "fast_forward() (haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.fast_forward"]], "filter_coeffs (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.filter_coeffs"]], "filter_coeffs (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.filter_coeffs"]], "filter_coeffs (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.filter_coeffs"]], "filter_coeffs (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.filter_coeffs"]], "filter_coeffs (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.filter_coeffs"]], "filter_coeffs (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.filter_coeffs"]], "filter_coeffs (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.filter_coeffs"]], "filter_coeffs (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.filter_coeffs"]], "filter_samples() (basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.filter_samples"]], "filter_samples() (haltonsamplelib method)": [[81, "curobo.util.sample_lib.HaltonSampleLib.filter_samples"]], "filter_samples() (randomsamplelib method)": [[81, "curobo.util.sample_lib.RandomSampleLib.filter_samples"]], "filter_samples() (samplelib method)": [[81, "curobo.util.sample_lib.SampleLib.filter_samples"]], "filter_samples() (sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.filter_samples"]], "filter_samples() (stompsamplelib method)": [[81, "curobo.util.sample_lib.StompSampleLib.filter_samples"]], "filter_smooth() (basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.filter_smooth"]], "filter_smooth() (haltonsamplelib method)": [[81, "curobo.util.sample_lib.HaltonSampleLib.filter_smooth"]], "filter_smooth() (randomsamplelib method)": [[81, "curobo.util.sample_lib.RandomSampleLib.filter_smooth"]], "filter_smooth() (samplelib method)": [[81, "curobo.util.sample_lib.SampleLib.filter_smooth"]], "filter_smooth() (sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.filter_smooth"]], "filter_smooth() (stompsamplelib method)": [[81, "curobo.util.sample_lib.StompSampleLib.filter_smooth"]], "fixed_samples (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.fixed_samples"]], "fixed_samples (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.fixed_samples"]], "fixed_samples (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.fixed_samples"]], "fixed_samples (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.fixed_samples"]], "fixed_samples (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.fixed_samples"]], "fixed_samples (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.fixed_samples"]], "fixed_samples (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.fixed_samples"]], "fixed_samples (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.fixed_samples"]], "generate_gaussian_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_gaussian_halton_samples"]], "generate_gaussian_sobol_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_gaussian_sobol_samples"]], "generate_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_halton_samples"]], "generate_noise() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_noise"]], "generate_noise_np() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_noise_np"]], "generate_prime_numbers() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_prime_numbers"]], "generate_sine_wave() (sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.generate_sine_wave"]], "generate_van_der_corput_sample() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_van_der_corput_sample"]], "generate_van_der_corput_samples_batch() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.generate_van_der_corput_samples_batch"]], "get_gaussian_samples() (haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.get_gaussian_samples"]], "get_ranged_halton_samples() (in module curobo.util.sample_lib)": [[81, "curobo.util.sample_lib.get_ranged_halton_samples"]], "get_samples() (basesamplelib method)": [[81, "curobo.util.sample_lib.BaseSampleLib.get_samples"]], "get_samples() (haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.get_samples"]], "get_samples() (haltonsamplelib method)": [[81, "curobo.util.sample_lib.HaltonSampleLib.get_samples"]], "get_samples() (knotsamplelib method)": [[81, "curobo.util.sample_lib.KnotSampleLib.get_samples"]], "get_samples() (randomsamplelib method)": [[81, "curobo.util.sample_lib.RandomSampleLib.get_samples"]], "get_samples() (samplelib method)": [[81, "curobo.util.sample_lib.SampleLib.get_samples"]], "get_samples() (sinesamplelib method)": [[81, "curobo.util.sample_lib.SineSampleLib.get_samples"]], "get_samples() (stompsamplelib method)": [[81, "curobo.util.sample_lib.StompSampleLib.get_samples"]], "horizon (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.horizon"]], "horizon (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.horizon"]], "horizon (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.horizon"]], "horizon (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.horizon"]], "horizon (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.horizon"]], "horizon (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.horizon"]], "horizon (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.horizon"]], "horizon (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.horizon"]], "n_knots (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.n_knots"]], "n_knots (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.n_knots"]], "n_knots (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.n_knots"]], "n_knots (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.n_knots"]], "n_knots (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.n_knots"]], "n_knots (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.n_knots"]], "n_knots (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.n_knots"]], "n_knots (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.n_knots"]], "reset() (haltongenerator method)": [[81, "curobo.util.sample_lib.HaltonGenerator.reset"]], "sample_method (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.sample_method"]], "sample_method (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.sample_method"]], "sample_method (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.sample_method"]], "sample_method (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.sample_method"]], "sample_method (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sample_method"]], "sample_method (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.sample_method"]], "sample_method (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.sample_method"]], "sample_method (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.sample_method"]], "sample_ratio (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.sample_ratio"]], "sample_ratio (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.sample_ratio"]], "sample_ratio (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.sample_ratio"]], "sample_ratio (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.sample_ratio"]], "sample_ratio (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sample_ratio"]], "sample_ratio (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.sample_ratio"]], "sample_ratio (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.sample_ratio"]], "sample_ratio (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.sample_ratio"]], "scale_tril (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.scale_tril"]], "scale_tril (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.scale_tril"]], "scale_tril (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.scale_tril"]], "scale_tril (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.scale_tril"]], "scale_tril (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.scale_tril"]], "scale_tril (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.scale_tril"]], "scale_tril (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.scale_tril"]], "scale_tril (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.scale_tril"]], "seed (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.seed"]], "seed (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.seed"]], "seed (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.seed"]], "seed (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.seed"]], "seed (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.seed"]], "seed (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.seed"]], "seed (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.seed"]], "seed (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.seed"]], "sine_period (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.sine_period"]], "sine_period (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.sine_period"]], "sine_period (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.sine_period"]], "sine_period (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.sine_period"]], "sine_period (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.sine_period"]], "sine_period (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.sine_period"]], "sine_period (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.sine_period"]], "sine_period (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.sine_period"]], "tensor_args (basesamplelib attribute)": [[81, "curobo.util.sample_lib.BaseSampleLib.tensor_args"]], "tensor_args (haltonsamplelib attribute)": [[81, "curobo.util.sample_lib.HaltonSampleLib.tensor_args"]], "tensor_args (knotsamplelib attribute)": [[81, "curobo.util.sample_lib.KnotSampleLib.tensor_args"]], "tensor_args (randomsamplelib attribute)": [[81, "curobo.util.sample_lib.RandomSampleLib.tensor_args"]], "tensor_args (sampleconfig attribute)": [[81, "curobo.util.sample_lib.SampleConfig.tensor_args"]], "tensor_args (samplelib attribute)": [[81, "curobo.util.sample_lib.SampleLib.tensor_args"]], "tensor_args (sinesamplelib attribute)": [[81, "curobo.util.sample_lib.SineSampleLib.tensor_args"]], "tensor_args (stompsamplelib attribute)": [[81, "curobo.util.sample_lib.StompSampleLib.tensor_args"]], "filterconfig (class in curobo.util.state_filter)": [[82, "curobo.util.state_filter.FilterConfig"]], "jointstatefilter (class in curobo.util.state_filter)": [[82, "curobo.util.state_filter.JointStateFilter"]], "control_space (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.control_space"]], "control_space (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.control_space"]], "curobo.util.state_filter": [[82, "module-curobo.util.state_filter"]], "dt (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.dt"]], "dt (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.dt"]], "enable (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.enable"]], "enable (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.enable"]], "filter_coeff (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.filter_coeff"]], "filter_coeff (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.filter_coeff"]], "filter_joint_state() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.filter_joint_state"]], "from_dict() (filterconfig static method)": [[82, "curobo.util.state_filter.FilterConfig.from_dict"]], "from_dict() (jointstatefilter static method)": [[82, "curobo.util.state_filter.JointStateFilter.from_dict"]], "integrate_acc() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_acc"]], "integrate_jerk() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_jerk"]], "integrate_pos() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_pos"]], "integrate_vel() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.integrate_vel"]], "reset() (jointstatefilter method)": [[82, "curobo.util.state_filter.JointStateFilter.reset"]], "teleport_mode (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.teleport_mode"]], "teleport_mode (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.teleport_mode"]], "tensor_args (filterconfig attribute)": [[82, "curobo.util.state_filter.FilterConfig.tensor_args"]], "tensor_args (jointstatefilter attribute)": [[82, "curobo.util.state_filter.JointStateFilter.tensor_args"]], "check_tensor_shapes() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.check_tensor_shapes"]], "clone_if_not_none() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.clone_if_not_none"]], "copy_if_not_none() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.copy_if_not_none"]], "copy_tensor() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.copy_tensor"]], "curobo.util.tensor_util": [[83, "module-curobo.util.tensor_util"]], "tensor_repeat_seeds() (in module curobo.util.tensor_util)": [[83, "curobo.util.tensor_util.tensor_repeat_seeds"]], "curobo.util.torch_utils": [[84, "module-curobo.util.torch_utils"]], "disable_torch_compile_global() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.disable_torch_compile_global"]], "empty_decorator() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.empty_decorator"]], "find_first_idx() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.find_first_idx"]], "find_last_idx() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.find_last_idx"]], "get_torch_compile_options() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.get_torch_compile_options"]], "get_torch_jit_decorator() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.get_torch_jit_decorator"]], "is_cuda_graph_available() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.is_cuda_graph_available"]], "is_torch_compile_available() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.is_torch_compile_available"]], "set_torch_compile_global_options() (in module curobo.util.torch_utils)": [[84, "curobo.util.torch_utils.set_torch_compile_global_options"]], "cubic (interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.CUBIC"]], "interpolatetype (class in curobo.util.trajectory)": [[85, "curobo.util.trajectory.InterpolateType"]], "kunz_stilman_optimal (interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.KUNZ_STILMAN_OPTIMAL"]], "linear (interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.LINEAR"]], "linear_cuda (interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.LINEAR_CUDA"]], "quintic (interpolatetype attribute)": [[85, "curobo.util.trajectory.InterpolateType.QUINTIC"]], "curobo.util.trajectory": [[85, "module-curobo.util.trajectory"]], "get_batch_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_batch_interpolated_trajectory"]], "get_cpu_kunz_stilman_interpolation() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_cpu_kunz_stilman_interpolation"]], "get_cpu_linear_interpolation() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_cpu_linear_interpolation"]], "get_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_interpolated_trajectory"]], "get_linear_traj() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_linear_traj"]], "get_smooth_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_smooth_trajectory"]], "get_spline_interpolated_trajectory() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.get_spline_interpolated_trajectory"]], "linear_smooth() (in module curobo.util.trajectory)": [[85, "curobo.util.trajectory.linear_smooth"]], "usdhelper (class in curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.UsdHelper"]], "add_cuboid_to_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_cuboid_to_stage"]], "add_cylinder_to_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_cylinder_to_stage"]], "add_material() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_material"]], "add_mesh_to_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_mesh_to_stage"]], "add_sphere_to_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_sphere_to_stage"]], "add_subroot() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_subroot"]], "add_world_to_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.add_world_to_stage"]], "create_animation() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_animation"]], "create_grid_usd() (usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.create_grid_usd"]], "create_linkpose_robot_animation() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_linkpose_robot_animation"]], "create_obstacle_animation() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_obstacle_animation"]], "create_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.create_stage"]], "create_stage() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.create_stage"]], "curobo.util.usd_helper": [[86, "module-curobo.util.usd_helper"]], "get_capsule_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_capsule_attrs"]], "get_cube_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_cube_attrs"]], "get_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_cylinder_attrs"]], "get_mesh_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_mesh_attrs"]], "get_obstacle_from_prim() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_obstacle_from_prim"]], "get_obstacles_from_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_obstacles_from_stage"]], "get_pose() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_pose"]], "get_position_quat() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_position_quat"]], "get_prim_from_obstacle() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_prim_from_obstacle"]], "get_prim_world_pose() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_prim_world_pose"]], "get_robot_prims() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.get_robot_prims"]], "get_sphere_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_sphere_attrs"]], "get_transform() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.get_transform"]], "load_robot() (usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.load_robot"]], "load_robot_usd() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_robot_usd"]], "load_stage() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_stage"]], "load_stage_from_file() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.load_stage_from_file"]], "save() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.save"]], "set_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_cylinder_attrs"]], "set_geom_cube_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_cube_attrs"]], "set_geom_cylinder_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_cylinder_attrs"]], "set_geom_mesh_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_mesh_attrs"]], "set_geom_sphere_attrs() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_geom_sphere_attrs"]], "set_prim_transform() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_prim_transform"]], "set_prim_translate() (in module curobo.util.usd_helper)": [[86, "curobo.util.usd_helper.set_prim_translate"]], "update_robot_joint_state() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.update_robot_joint_state"]], "write_motion_gen_log() (usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_motion_gen_log"]], "write_stage_to_file() (usdhelper method)": [[86, "curobo.util.usd_helper.UsdHelper.write_stage_to_file"]], "write_trajectory_animation() (usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation"]], "write_trajectory_animation_with_robot_usd() (usdhelper static method)": [[86, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[87, "module-curobo.util.warp"]], "init_warp() (in module curobo.util.warp)": [[87, "curobo.util.warp.init_warp"]], "curobo.util.warp_interpolation": [[88, "module-curobo.util.warp_interpolation"]], "get_cuda_linear_interpolation() (in module curobo.util.warp_interpolation)": [[88, "curobo.util.warp_interpolation.get_cuda_linear_interpolation"]], "add_cpp_path() (in module curobo.util_file)": [[89, "curobo.util_file.add_cpp_path"]], "copy_file_to_path() (in module curobo.util_file)": [[89, "curobo.util_file.copy_file_to_path"]], "curobo.util_file": [[89, "module-curobo.util_file"]], "file_exists() (in module curobo.util_file)": [[89, "curobo.util_file.file_exists"]], "get_assets_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_assets_path"]], "get_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_configs_path"]], "get_content_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_content_path"]], "get_cpp_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_cpp_path"]], "get_debug_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_debug_path"]], "get_filename() (in module curobo.util_file)": [[89, "curobo.util_file.get_filename"]], "get_files_from_dir() (in module curobo.util_file)": [[89, "curobo.util_file.get_files_from_dir"]], "get_module_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_module_path"]], "get_motion_gen_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_motion_gen_robot_list"]], "get_multi_arm_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_multi_arm_robot_list"]], "get_path_of_dir() (in module curobo.util_file)": [[89, "curobo.util_file.get_path_of_dir"]], "get_robot_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_configs_path"]], "get_robot_list() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_list"]], "get_robot_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_robot_path"]], "get_root_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_root_path"]], "get_task_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_task_configs_path"]], "get_weights_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_weights_path"]], "get_world_configs_path() (in module curobo.util_file)": [[89, "curobo.util_file.get_world_configs_path"]], "join_path() (in module curobo.util_file)": [[89, "curobo.util_file.join_path"]], "load_yaml() (in module curobo.util_file)": [[89, "curobo.util_file.load_yaml"]], "write_yaml() (in module curobo.util_file)": [[89, "curobo.util_file.write_yaml"]], "curobo.wrap": [[90, "module-curobo.wrap"]], "curobo.wrap.model": [[91, "module-curobo.wrap.model"]], "curoborobotworld (class in curobo.wrap.model.curobo_robot_world)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld"]], "curoborobotworldconfig (class in curobo.wrap.model.curobo_robot_world)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig"]], "bound_cost (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.bound_cost"]], "bound_cost (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.bound_cost"]], "bound_scale (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.bound_scale"]], "bound_scale (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.bound_scale"]], "clear_world_cache() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.clear_world_cache"]], "collision_constraint (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.collision_constraint"]], "collision_constraint (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.collision_constraint"]], "collision_cost (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.collision_cost"]], "collision_cost (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.collision_cost"]], "contact_distance (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.contact_distance"]], "contact_distance (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.contact_distance"]], "curobo.wrap.model.curobo_robot_world": [[92, "module-curobo.wrap.model.curobo_robot_world"]], "get_active_js() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_active_js"]], "get_bound() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_bound"]], "get_collision_constraint() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_collision_constraint"]], "get_collision_distance() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_collision_distance"]], "get_collision_vector() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_collision_vector"]], "get_kinematics() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_kinematics"]], "get_point_robot_distance() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_point_robot_distance"]], "get_self_collision() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_self_collision"]], "get_self_collision_distance() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_self_collision_distance"]], "get_world_self_collision_distance_from_joint_trajectory() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_world_self_collision_distance_from_joint_trajectory"]], "get_world_self_collision_distance_from_joints() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.get_world_self_collision_distance_from_joints"]], "kinematics (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.kinematics"]], "kinematics (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.kinematics"]], "load_from_config() (curoborobotworld static method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.load_from_config"]], "load_from_config() (curoborobotworldconfig static method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.load_from_config"]], "pose_cost (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.pose_cost"]], "pose_cost (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.pose_cost"]], "pose_distance() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.pose_distance"]], "rejection_ratio (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.rejection_ratio"]], "rejection_ratio (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.rejection_ratio"]], "sample() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.sample"]], "sample_trajectory() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.sample_trajectory"]], "sampler (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.sampler"]], "sampler (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.sampler"]], "self_collision_cost (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.self_collision_cost"]], "self_collision_cost (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.self_collision_cost"]], "tensor_args (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.tensor_args"]], "tensor_args (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.tensor_args"]], "update_world() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.update_world"]], "validate() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.validate"]], "validate_trajectory() (curoborobotworld method)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.validate_trajectory"]], "world_model (curoborobotworld attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld.world_model"]], "world_model (curoborobotworldconfig attribute)": [[92, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig.world_model"]], "robotsegmenter (class in curobo.wrap.model.robot_segmenter)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter"]], "_call_op() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._call_op"]], "_create_cg_graph() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._create_cg_graph"]], "_mask_op() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter._mask_op"]], "base_link (robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.base_link"]], "curobo.wrap.model.robot_segmenter": [[93, "module-curobo.wrap.model.robot_segmenter"]], "from_robot_file() (robotsegmenter static method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.from_robot_file"]], "get_pointcloud_from_depth() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_pointcloud_from_depth"]], "get_robot_mask() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask"]], "get_robot_mask_from_active_js() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask_from_active_js"]], "kinematics (robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.kinematics"]], "robot_world (robotsegmenter property)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.robot_world"]], "update_camera_projection() (robotsegmenter method)": [[93, "curobo.wrap.model.robot_segmenter.RobotSegmenter.update_camera_projection"]], "robotworld (class in curobo.wrap.model.robot_world)": [[94, "curobo.wrap.model.robot_world.RobotWorld"]], "robotworldconfig (class in curobo.wrap.model.robot_world)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig"]], "bound_cost (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.bound_cost"]], "bound_cost (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_cost"]], "bound_scale (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.bound_scale"]], "bound_scale (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_scale"]], "clear_world_cache() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.clear_world_cache"]], "collision_constraint (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.collision_constraint"]], "collision_constraint (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_constraint"]], "collision_cost (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.collision_cost"]], "collision_cost (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_cost"]], "contact_distance (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.contact_distance"]], "contact_distance (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.contact_distance"]], "curobo.wrap.model.robot_world": [[94, "module-curobo.wrap.model.robot_world"]], "get_active_js() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_active_js"]], "get_bound() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_bound"]], "get_collision_constraint() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_constraint"]], "get_collision_distance() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_distance"]], "get_collision_vector() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_collision_vector"]], "get_kinematics() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_kinematics"]], "get_point_robot_distance() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_point_robot_distance"]], "get_self_collision() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision"]], "get_self_collision_distance() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision_distance"]], "get_world_self_collision_distance_from_joint_trajectory() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joint_trajectory"]], "get_world_self_collision_distance_from_joints() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joints"]], "kinematics (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.kinematics"]], "kinematics (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.kinematics"]], "load_from_config() (robotworld static method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.load_from_config"]], "load_from_config() (robotworldconfig static method)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.load_from_config"]], "pose_cost (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.pose_cost"]], "pose_cost (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.pose_cost"]], "pose_distance() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.pose_distance"]], "rejection_ratio (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.rejection_ratio"]], "rejection_ratio (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.rejection_ratio"]], "sample() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.sample"]], "sample_trajectory() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.sample_trajectory"]], "sampler (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.sampler"]], "sampler (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.sampler"]], "self_collision_cost (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.self_collision_cost"]], "self_collision_cost (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.self_collision_cost"]], "tensor_args (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.tensor_args"]], "tensor_args (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.tensor_args"]], "update_world() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.update_world"]], "validate() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.validate"]], "validate_trajectory() (robotworld method)": [[94, "curobo.wrap.model.robot_world.RobotWorld.validate_trajectory"]], "world_model (robotworld attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorld.world_model"]], "world_model (robotworldconfig attribute)": [[94, "curobo.wrap.model.robot_world.RobotWorldConfig.world_model"]], "curobo.wrap.reacher": [[95, "module-curobo.wrap.reacher"]], "trajevaluator (class in curobo.wrap.reacher.evaluator)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator"]], "trajevaluatorconfig (class in curobo.wrap.reacher.evaluator)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig"]], "_check_smoothness() (trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator._check_smoothness"]], "_compute_path_length() (trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator._compute_path_length"]], "cost_weight (trajevaluator attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.cost_weight"]], "cost_weight (trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.cost_weight"]], "curobo.wrap.reacher.evaluator": [[96, "module-curobo.wrap.reacher.evaluator"]], "evaluate() (trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate"]], "evaluate_from_position() (trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_from_position"]], "evaluate_interpolated_smootheness() (trajevaluator method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_interpolated_smootheness"]], "from_basic() (trajevaluator static method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.from_basic"]], "from_basic() (trajevaluatorconfig static method)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.from_basic"]], "max_acc (trajevaluator attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.max_acc"]], "max_acc (trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_acc"]], "max_dt (trajevaluator attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.max_dt"]], "max_dt (trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_dt"]], "max_jerk (trajevaluator attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.max_jerk"]], "max_jerk (trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_jerk"]], "min_dt (trajevaluator attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluator.min_dt"]], "min_dt (trajevaluatorconfig attribute)": [[96, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.min_dt"]], "ikresult (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKResult"]], "iksolver (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver"]], "iksolverconfig (class in curobo.wrap.reacher.ik_solver)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig"]], "_abc_impl (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult._abc_impl"]], "_get_result() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver._get_result"]], "_get_success() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver._get_success"]], "_is_protocol (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult._is_protocol"]], "_solve_from_solve_state() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver._solve_from_solve_state"]], "_update_goal_buffer() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver._update_goal_buffer"]], "attach_object_to_robot() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.attach_object_to_robot"]], "batch_env_solve() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.batch_env_solve"]], "check_constraints() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.check_constraints"]], "count() (ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.count"]], "curobo.wrap.reacher.ik_solver": [[97, "module-curobo.wrap.reacher.ik_solver"]], "debug_info (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.debug_info"]], "detach_object_from_robot() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.detach_object_from_robot"]], "error (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.error"]], "fk() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.fk"]], "generate_seed() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.generate_seed"]], "get_active_js() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_active_js"]], "get_all_kinematics_instances() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_rollout_instances"]], "get_batch_unique_solution() (ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.get_batch_unique_solution"]], "get_full_js() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_full_js"]], "get_retract_config() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_retract_config"]], "get_seed() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.get_seed"]], "get_unique_solution() (ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.get_unique_solution"]], "goal_pose (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.goal_pose"]], "goalset_index (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.goalset_index"]], "ik_nn_seeder (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.ik_nn_seeder"]], "ik_nn_seeder (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.ik_nn_seeder"]], "index() (ikresult method)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.index"]], "joint_names (iksolver property)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.joint_names"]], "js_solution (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.js_solution"]], "kinematics (iksolver property)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.kinematics"]], "load_from_robot_config() (iksolver static method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.load_from_robot_config"]], "load_from_robot_config() (iksolverconfig static method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.load_from_robot_config"]], "num_seeds (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.num_seeds"]], "num_seeds (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.num_seeds"]], "position_error (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.position_error"]], "position_threshold (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.position_threshold"]], "position_threshold (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.position_threshold"]], "reset_cuda_graph() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_cuda_graph"]], "reset_seed() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_seed"]], "reset_shape() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.reset_shape"]], "robot_config (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.robot_config"]], "robot_config (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.robot_config"]], "rollout_fn (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.rollout_fn"]], "rollout_fn (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rollout_fn"]], "rotation_error (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.rotation_error"]], "rotation_threshold (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.rotation_threshold"]], "rotation_threshold (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rotation_threshold"]], "sample_configs() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.sample_configs"]], "sample_rejection_ratio (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.sample_rejection_ratio"]], "sample_rejection_ratio (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.sample_rejection_ratio"]], "seed (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.seed"]], "seed (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.seed"]], "seed (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.seed"]], "solution (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.solution"]], "solve() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve"]], "solve_any() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_any"]], "solve_batch() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch"]], "solve_batch_env() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env"]], "solve_batch_env_goalset() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_goalset"]], "solve_goalset() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_goalset"]], "solve_single() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solve_single"]], "solve_time (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.solve_time"]], "solver (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.solver"]], "solver (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.solver"]], "success (ikresult attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKResult.success"]], "tensor_args (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.tensor_args"]], "tensor_args (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.tensor_args"]], "update_pose_cost_metric() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.update_pose_cost_metric"]], "update_world() (iksolver method)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.update_world"]], "use_cuda_graph (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.use_cuda_graph"]], "use_cuda_graph (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.use_cuda_graph"]], "world_coll_checker (iksolver attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolver.world_coll_checker"]], "world_coll_checker (iksolverconfig attribute)": [[97, "curobo.wrap.reacher.ik_solver.IKSolverConfig.world_coll_checker"]], "finetune_trajopt_fail (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.FINETUNE_TRAJOPT_FAIL"]], "graph_fail (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.GRAPH_FAIL"]], "ik_fail (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.IK_FAIL"]], "invalid_query (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.INVALID_QUERY"]], "motiongen (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen"]], "motiongenconfig (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig"]], "motiongenplanconfig (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig"]], "motiongenresult (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult"]], "motiongenstatus (class in curobo.wrap.reacher.motion_gen)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus"]], "not_attempted (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.NOT_ATTEMPTED"]], "success (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.SUCCESS"]], "trajopt_fail (motiongenstatus attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenStatus.TRAJOPT_FAIL"]], "_check_none_and_copy_idx() (motiongenresult static method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult._check_none_and_copy_idx"]], "_get_solve_state() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._get_solve_state"]], "_plan_attempts() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_attempts"]], "_plan_batch_attempts() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_batch_attempts"]], "_plan_from_solve_state() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state"]], "_plan_from_solve_state_batch() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state_batch"]], "_plan_js_from_solve_state() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._plan_js_from_solve_state"]], "_solve_ik_from_solve_state() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._solve_ik_from_solve_state"]], "_solve_trajopt_from_solve_state() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen._solve_trajopt_from_solve_state"]], "add_camera_frame() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.add_camera_frame"]], "attach_bounding_box_from_blox_to_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_bounding_box_from_blox_to_robot"]], "attach_external_objects_to_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_external_objects_to_robot"]], "attach_new_object_to_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_new_object_to_robot"]], "attach_objects_to_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_objects_to_robot"]], "attach_spheres_to_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.attach_spheres_to_robot"]], "attempts (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.attempts"]], "batch_ik_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.batch_ik_seeds"]], "batch_ik_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_ik_seeds"]], "batch_plan() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.batch_plan"]], "batch_trajopt_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.batch_trajopt_seeds"]], "batch_trajopt_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_trajopt_seeds"]], "check_constraints() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.check_constraints"]], "clear_world_cache() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.clear_world_cache"]], "clone() (motiongenplanconfig method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.clone"]], "clone() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.clone"]], "collision_cache (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.collision_cache"]], "compute_kinematics() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.compute_kinematics"]], "copy_idx() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.copy_idx"]], "cspace_error (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.cspace_error"]], "curobo.wrap.reacher.motion_gen": [[98, "module-curobo.wrap.reacher.motion_gen"]], "debug_info (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.debug_info"]], "detach_object_from_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.detach_object_from_robot"]], "detach_spheres_from_robot() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.detach_spheres_from_robot"]], "disable_graph_attempt (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.disable_graph_attempt"]], "dof (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.dof"]], "enable_finetune_trajopt (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_finetune_trajopt"]], "enable_graph (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph"]], "enable_graph_attempt (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph_attempt"]], "enable_opt (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_opt"]], "fail_on_invalid_query (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.fail_on_invalid_query"]], "finetune_attempts (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.finetune_attempts"]], "finetune_dt_decay (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.finetune_dt_decay"]], "finetune_dt_scale (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.finetune_dt_scale"]], "finetune_dt_scale (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_dt_scale"]], "finetune_dt_scale (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.finetune_dt_scale"]], "finetune_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.finetune_time"]], "finetune_trajopt_solver (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.finetune_trajopt_solver"]], "finetune_trajopt_solver (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_trajopt_solver"]], "get_active_js() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_active_js"]], "get_all_kinematics_instances() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_kinematics_instances"]], "get_all_pose_solver_rollout_instances() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_pose_solver_rollout_instances"]], "get_all_rollout_instances() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_rollout_instances"]], "get_all_solver_rollout_instances() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_solver_rollout_instances"]], "get_full_js() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_full_js"]], "get_interpolated_plan() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_interpolated_plan"]], "get_paths() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_paths"]], "get_retract_config() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.get_retract_config"]], "get_successful_paths() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_successful_paths"]], "goalset_index (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.goalset_index"]], "graph_plan (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_plan"]], "graph_planner (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.graph_planner"]], "graph_planner (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_planner"]], "graph_search() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.graph_search"]], "graph_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.graph_seeds"]], "graph_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_seeds"]], "graph_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_time"]], "graph_trajopt_iters (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.graph_trajopt_iters"]], "graph_trajopt_iters (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_trajopt_iters"]], "ik_fail_return (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.ik_fail_return"]], "ik_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.ik_seeds"]], "ik_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_seeds"]], "ik_solver (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.ik_solver"]], "ik_solver (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_solver"]], "ik_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.ik_time"]], "interpolated_plan (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolated_plan"]], "interpolation_dt (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.interpolation_dt"]], "interpolation_dt (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_dt"]], "interpolation_dt (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolation_dt"]], "interpolation_steps (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.interpolation_steps"]], "interpolation_steps (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_steps"]], "interpolation_type (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.interpolation_type"]], "interpolation_type (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_type"]], "js_trajopt_solver (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.js_trajopt_solver"]], "js_trajopt_solver (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.js_trajopt_solver"]], "kinematics (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.kinematics"]], "load_from_robot_config() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.load_from_robot_config"]], "load_from_robot_config() (motiongenconfig method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.load_from_robot_config"]], "max_attempts (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.max_attempts"]], "motion_time (motiongenresult property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.motion_time"]], "need_graph_success (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.need_graph_success"]], "noisy_trajopt_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.noisy_trajopt_seeds"]], "noisy_trajopt_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.noisy_trajopt_seeds"]], "num_graph_seeds (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_graph_seeds"]], "num_ik_seeds (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_ik_seeds"]], "num_trajopt_seeds (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_trajopt_seeds"]], "optimize_dt (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.optimize_dt"]], "optimize_dt (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.optimize_dt"]], "optimized_dt (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_dt"]], "optimized_plan (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_plan"]], "parallel_finetune (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.parallel_finetune"]], "partial_ik_iters (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.partial_ik_iters"]], "partial_ik_iters (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.partial_ik_iters"]], "partial_ik_opt (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.partial_ik_opt"]], "path_buffer_last_tstep (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.path_buffer_last_tstep"]], "plan() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan"]], "plan_batch() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch"]], "plan_batch_env() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env"]], "plan_batch_env_goalset() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env_goalset"]], "plan_batch_goalset() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_goalset"]], "plan_goalset() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_goalset"]], "plan_single() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single"]], "plan_single_js() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single_js"]], "pose_cost_metric (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.pose_cost_metric"]], "position_error (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.position_error"]], "process_camera_frames() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.process_camera_frames"]], "project_pose_to_goal_frame (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.project_pose_to_goal_frame"]], "reset() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.reset"]], "reset_seed() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.reset_seed"]], "retime_trajectory() (motiongenresult method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.retime_trajectory"]], "robot_cfg (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.robot_cfg"]], "robot_cfg (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.robot_cfg"]], "rotation_error (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.rotation_error"]], "solve_ik() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.solve_ik"]], "solve_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.solve_time"]], "solve_trajopt() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.solve_trajopt"]], "status (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.status"]], "store_debug_in_result (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.store_debug_in_result"]], "store_debug_in_result (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.store_debug_in_result"]], "success (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.success"]], "success_ratio (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.success_ratio"]], "tensor_args (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.tensor_args"]], "tensor_args (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.tensor_args"]], "time_dilation_factor (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.time_dilation_factor"]], "timeout (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.timeout"]], "total_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.total_time"]], "trajopt_attempts (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_attempts"]], "trajopt_seeds (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.trajopt_seeds"]], "trajopt_seeds (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_seeds"]], "trajopt_solver (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.trajopt_solver"]], "trajopt_solver (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_solver"]], "trajopt_time (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_time"]], "update_batch_size() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_batch_size"]], "update_interpolation_type() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_interpolation_type"]], "update_locked_joints() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_locked_joints"]], "update_pose_cost_metric() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_pose_cost_metric"]], "update_world() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.update_world"]], "use_cuda_graph (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.use_cuda_graph"]], "use_cuda_graph (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.use_cuda_graph"]], "use_nn_ik_seed (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_nn_ik_seed"]], "use_start_state_as_retract (motiongenplanconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_start_state_as_retract"]], "used_graph (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.used_graph"]], "valid_query (motiongenresult attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenResult.valid_query"]], "warmup() (motiongen method)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.warmup"]], "world_coll_checker (motiongen attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.world_coll_checker"]], "world_coll_checker (motiongenconfig attribute)": [[98, "curobo.wrap.reacher.motion_gen.MotionGenConfig.world_coll_checker"]], "world_collision (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.world_collision"]], "world_model (motiongen property)": [[98, "curobo.wrap.reacher.motion_gen.MotionGen.world_model"]], "mpcsolver (class in curobo.wrap.reacher.mpc)": [[99, "curobo.wrap.reacher.mpc.MpcSolver"]], "mpcsolverconfig (class in curobo.wrap.reacher.mpc)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig"]], "_initialize_cuda_graph_step() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._initialize_cuda_graph_step"]], "_mpc_step() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._mpc_step"]], "_solve_from_solve_state() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._solve_from_solve_state"]], "_step_once() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._step_once"]], "_update_batch_size() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._update_batch_size"]], "_update_solve_state_and_goal_buffer() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver._update_solve_state_and_goal_buffer"]], "collision_cache (mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.collision_cache"]], "curobo.wrap.reacher.mpc": [[99, "module-curobo.wrap.reacher.mpc"]], "enable_cspace_cost() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.enable_cspace_cost"]], "enable_pose_cost() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.enable_pose_cost"]], "get_active_js() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.get_active_js"]], "get_visual_rollouts() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.get_visual_rollouts"]], "joint_names (mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.joint_names"]], "kinematics (mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.kinematics"]], "load_from_robot_config() (mpcsolver static method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.load_from_robot_config"]], "load_from_robot_config() (mpcsolverconfig static method)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.load_from_robot_config"]], "reset() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.reset"]], "reset_cuda_graph() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.reset_cuda_graph"]], "rollout_fn (mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.rollout_fn"]], "setup_solve_batch() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch"]], "setup_solve_batch_env() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env"]], "setup_solve_batch_env_goalset() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env_goalset"]], "setup_solve_batch_goalset() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_goalset"]], "setup_solve_goalset() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_goalset"]], "setup_solve_single() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_single"]], "solver (mpcsolver attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.solver"]], "solver (mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.solver"]], "step() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.step"]], "tensor_args (mpcsolver attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.tensor_args"]], "tensor_args (mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.tensor_args"]], "update_goal() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.update_goal"]], "update_world() (mpcsolver method)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.update_world"]], "use_cuda_graph_full_step (mpcsolver attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.use_cuda_graph_full_step"]], "use_cuda_graph_full_step (mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.use_cuda_graph_full_step"]], "world_coll_checker (mpcsolver attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.world_coll_checker"]], "world_coll_checker (mpcsolverconfig attribute)": [[99, "curobo.wrap.reacher.mpc.MpcSolverConfig.world_coll_checker"]], "world_collision (mpcsolver property)": [[99, "curobo.wrap.reacher.mpc.MpcSolver.world_collision"]], "trajoptresult (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult"]], "trajoptsolver (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver"]], "trajoptsolverconfig (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig"]], "trajresult (class in curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.TrajResult"]], "_abc_impl (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult._abc_impl"]], "_abc_impl (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult._abc_impl"]], "_get_result() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_result"]], "_get_seed_numbers() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_seed_numbers"]], "_is_protocol (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult._is_protocol"]], "_is_protocol (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult._is_protocol"]], "_solve_from_solve_state() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._solve_from_solve_state"]], "_update_solve_state_and_goal_buffer() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver._update_solve_state_and_goal_buffer"]], "action_horizon (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.action_horizon"]], "attach_spheres_to_robot() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.attach_spheres_to_robot"]], "batch_solve() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.batch_solve"]], "bias_node (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.bias_node"]], "bias_node (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.bias_node"]], "calculate_trajectory_dt() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.calculate_trajectory_dt"]], "count() (trajoptresult method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.count"]], "count() (trajresult method)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.count"]], "cspace_error (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.cspace_error"]], "cspace_error (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.cspace_error"]], "cspace_threshold (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.cspace_threshold"]], "cspace_threshold (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.cspace_threshold"]], "curobo.wrap.reacher.trajopt": [[100, "module-curobo.wrap.reacher.trajopt"]], "debug_info (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.debug_info"]], "debug_info (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.debug_info"]], "detach_spheres_from_robot() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.detach_spheres_from_robot"]], "dof (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.dof"]], "evaluate_interpolated_trajectory (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.evaluate_interpolated_trajectory"]], "evaluate_interpolated_trajectory (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.evaluate_interpolated_trajectory"]], "fk() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.fk"]], "get_active_js() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_active_js"]], "get_all_kinematics_instances() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_rollout_instances"]], "get_bias_seed() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_bias_seed"]], "get_full_js() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_full_js"]], "get_interpolated_trajectory() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_interpolated_trajectory"]], "get_linear_seed() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_linear_seed"]], "get_seed_set() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seed_set"]], "get_seeds() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seeds"]], "get_start_seed() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_start_seed"]], "goal (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.goal"]], "goal (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.goal"]], "goalset_index (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.goalset_index"]], "goalset_index (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.goalset_index"]], "index() (trajoptresult method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.index"]], "index() (trajresult method)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.index"]], "interpolate_rollout (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.interpolate_rollout"]], "interpolate_rollout (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolate_rollout"]], "interpolated_solution (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.interpolated_solution"]], "interpolated_solution (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.interpolated_solution"]], "interpolation_dt (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.interpolation_dt"]], "interpolation_dt (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_dt"]], "interpolation_steps (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.interpolation_steps"]], "interpolation_steps (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_steps"]], "interpolation_type (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.interpolation_type"]], "interpolation_type (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_type"]], "jit_trajopt_best_select() (in module curobo.wrap.reacher.trajopt)": [[100, "curobo.wrap.reacher.trajopt.jit_trajopt_best_select"]], "kinematics (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.kinematics"]], "load_from_robot_config() (trajoptsolver static method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.load_from_robot_config"]], "load_from_robot_config() (trajoptsolverconfig static method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.load_from_robot_config"]], "metrics (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.metrics"]], "metrics (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.metrics"]], "minimum_trajectory_dt (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.minimum_trajectory_dt"]], "newton_iters (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.newton_iters"]], "num_seeds (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.num_seeds"]], "num_seeds (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.num_seeds"]], "optimize_dt (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.optimize_dt"]], "optimize_dt (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.optimize_dt"]], "optimized_dt (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.optimized_dt"]], "optimized_dt (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.optimized_dt"]], "optimized_seeds (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.optimized_seeds"]], "optimized_seeds (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.optimized_seeds"]], "path_buffer_last_tstep (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.path_buffer_last_tstep"]], "path_buffer_last_tstep (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.path_buffer_last_tstep"]], "position_error (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.position_error"]], "position_error (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.position_error"]], "position_threshold (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.position_threshold"]], "position_threshold (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.position_threshold"]], "raw_action (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.raw_action"]], "raw_action (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.raw_action"]], "raw_solution (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.raw_solution"]], "raw_solution (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.raw_solution"]], "reset_cuda_graph() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_cuda_graph"]], "reset_seed() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_seed"]], "reset_shape() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_shape"]], "retract_config (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.retract_config"]], "robot_config (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.robot_config"]], "robot_config (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.robot_config"]], "rollout_fn (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.rollout_fn"]], "rollout_fn (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rollout_fn"]], "rotation_error (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.rotation_error"]], "rotation_error (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.rotation_error"]], "rotation_threshold (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.rotation_threshold"]], "rotation_threshold (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rotation_threshold"]], "seed (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.seed"]], "seed (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.seed"]], "seed_ratio (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.seed_ratio"]], "seed_ratio (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.seed_ratio"]], "smooth_error (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.smooth_error"]], "smooth_error (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.smooth_error"]], "smooth_label (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.smooth_label"]], "smooth_label (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.smooth_label"]], "solution (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.solution"]], "solution (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.solution"]], "solve() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve"]], "solve_any() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_any"]], "solve_batch() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch"]], "solve_batch_env() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env"]], "solve_batch_env_goalset() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_goalset"]], "solve_goalset() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_goalset"]], "solve_single() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_single"]], "solve_time (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.solve_time"]], "solve_time (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.solve_time"]], "solver (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver"]], "solver (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.solver"]], "solver_dt (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt"]], "solver_dt_tensor (trajoptsolver property)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt_tensor"]], "store_debug_in_result (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.store_debug_in_result"]], "store_debug_in_result (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.store_debug_in_result"]], "success (trajoptresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptResult.success"]], "success (trajresult attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajResult.success"]], "sync_cuda_time (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.sync_cuda_time"]], "sync_cuda_time (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.sync_cuda_time"]], "tensor_args (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.tensor_args"]], "tensor_args (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.tensor_args"]], "traj_evaluator (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.traj_evaluator"]], "traj_evaluator (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator"]], "traj_evaluator_config (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.traj_evaluator_config"]], "traj_evaluator_config (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator_config"]], "traj_tsteps (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.traj_tsteps"]], "traj_tsteps (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_tsteps"]], "trim_steps (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.trim_steps"]], "trim_steps (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.trim_steps"]], "update_pose_cost_metric() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_pose_cost_metric"]], "update_solver_dt() (trajoptsolver method)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_solver_dt"]], "use_cspace_seed (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.use_cspace_seed"]], "use_cspace_seed (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cspace_seed"]], "use_cuda_graph (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.use_cuda_graph"]], "use_cuda_graph (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph"]], "use_cuda_graph_metrics (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.use_cuda_graph_metrics"]], "use_cuda_graph_metrics (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph_metrics"]], "world_coll_checker (trajoptsolver attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolver.world_coll_checker"]], "world_coll_checker (trajoptsolverconfig attribute)": [[100, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.world_coll_checker"]], "batch (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH"]], "batch_env (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV"]], "batch_env_goalset (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV_GOALSET"]], "batch_goalset (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_GOALSET"]], "goalset (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.GOALSET"]], "motiongensolverstate (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState"]], "reachersolvestate (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.ReacherSolveState"]], "reachersolvetype (class in curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.ReacherSolveType"]], "single (reachersolvetype attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveType.SINGLE"]], "batch_env (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_env"]], "batch_mode (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_mode"]], "batch_retract (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_retract"]], "batch_size (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.batch_size"]], "clone() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.clone"]], "create_goal_buffer() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.create_goal_buffer"]], "curobo.wrap.reacher.types": [[101, "module-curobo.wrap.reacher.types"]], "get_batch_size() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.get_batch_size"]], "get_ik_batch_size() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.get_ik_batch_size"]], "get_padded_goalset() (in module curobo.wrap.reacher.types)": [[101, "curobo.wrap.reacher.types.get_padded_goalset"]], "ik_solve_state (motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.ik_solve_state"]], "n_envs (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.n_envs"]], "n_goalset (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.n_goalset"]], "num_graph_seeds (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_graph_seeds"]], "num_ik_seeds (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_ik_seeds"]], "num_mpc_seeds (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_mpc_seeds"]], "num_seeds (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_seeds"]], "num_trajopt_seeds (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.num_trajopt_seeds"]], "solve_type (motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.solve_type"]], "solve_type (reachersolvestate attribute)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.solve_type"]], "trajopt_solve_state (motiongensolverstate attribute)": [[101, "curobo.wrap.reacher.types.MotionGenSolverState.trajopt_solve_state"]], "update_goal() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.update_goal"]], "update_goal_buffer() (reachersolvestate method)": [[101, "curobo.wrap.reacher.types.ReacherSolveState.update_goal_buffer"]], "wrapbase (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapBase"]], "wrapconfig (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapConfig"]], "wrapresult (class in curobo.wrap.wrap_base)": [[102, "curobo.wrap.wrap_base.WrapResult"]], "_get_rollout_instances_from_optimizers() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase._get_rollout_instances_from_optimizers"]], "action (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.action"]], "clone() (wrapresult method)": [[102, "curobo.wrap.wrap_base.WrapResult.clone"]], "compute_metrics (wrapbase attribute)": [[102, "curobo.wrap.wrap_base.WrapBase.compute_metrics"]], "compute_metrics (wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.compute_metrics"]], "curobo.wrap.wrap_base": [[102, "module-curobo.wrap.wrap_base"]], "debug (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.debug"]], "get_all_rollout_instances() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_all_rollout_instances"]], "get_debug_cost() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_debug_cost"]], "get_debug_data() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_debug_data"]], "get_init_act() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_init_act"]], "get_metrics() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.get_metrics"]], "joint_names (wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.joint_names"]], "js_action (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.js_action"]], "metrics (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.metrics"]], "newton_optimizer (wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.newton_optimizer"]], "optimize() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.optimize"]], "optimizers (wrapbase attribute)": [[102, "curobo.wrap.wrap_base.WrapBase.optimizers"]], "optimizers (wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.optimizers"]], "particle_optimizer (wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.particle_optimizer"]], "raw_action (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.raw_action"]], "reset() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset"]], "reset_cuda_graph() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_cuda_graph"]], "reset_seed() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_seed"]], "reset_shape() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.reset_shape"]], "rollout_fn (wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.rollout_fn"]], "safety_rollout (wrapbase attribute)": [[102, "curobo.wrap.wrap_base.WrapBase.safety_rollout"]], "safety_rollout (wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.safety_rollout"]], "solve() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.solve"]], "solve_time (wrapresult attribute)": [[102, "curobo.wrap.wrap_base.WrapResult.solve_time"]], "sync_cuda_time (wrapbase attribute)": [[102, "curobo.wrap.wrap_base.WrapBase.sync_cuda_time"]], "sync_cuda_time (wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.sync_cuda_time"]], "tensor_args (wrapbase property)": [[102, "curobo.wrap.wrap_base.WrapBase.tensor_args"]], "update_nproblems() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.update_nproblems"]], "update_params() (wrapbase method)": [[102, "curobo.wrap.wrap_base.WrapBase.update_params"]], "use_cuda_graph_metrics (wrapbase attribute)": [[102, "curobo.wrap.wrap_base.WrapBase.use_cuda_graph_metrics"]], "use_cuda_graph_metrics (wrapconfig attribute)": [[102, "curobo.wrap.wrap_base.WrapConfig.use_cuda_graph_metrics"]], "wrapmpc (class in curobo.wrap.wrap_mpc)": [[103, "curobo.wrap.wrap_mpc.WrapMpc"]], "_get_rollout_instances_from_optimizers() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc._get_rollout_instances_from_optimizers"]], "_shift() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc._shift"]], "compute_metrics (wrapmpc attribute)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.compute_metrics"]], "curobo.wrap.wrap_mpc": [[103, "module-curobo.wrap.wrap_mpc"]], "get_all_rollout_instances() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_all_rollout_instances"]], "get_debug_cost() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_debug_cost"]], "get_debug_data() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_debug_data"]], "get_init_act() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_init_act"]], "get_metrics() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_metrics"]], "get_rollouts() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.get_rollouts"]], "joint_names (wrapmpc property)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.joint_names"]], "newton_optimizer (wrapmpc property)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.newton_optimizer"]], "optimize() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.optimize"]], "optimizers (wrapmpc attribute)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.optimizers"]], "particle_optimizer (wrapmpc property)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.particle_optimizer"]], "reset() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.reset"]], "reset_cuda_graph() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.reset_cuda_graph"]], "reset_seed() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.reset_seed"]], "reset_shape() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.reset_shape"]], "rollout_fn (wrapmpc property)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.rollout_fn"]], "safety_rollout (wrapmpc attribute)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.safety_rollout"]], "solve() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.solve"]], "sync_cuda_time (wrapmpc attribute)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.sync_cuda_time"]], "tensor_args (wrapmpc property)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.tensor_args"]], "update_init_seed() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.update_init_seed"]], "update_nproblems() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.update_nproblems"]], "update_params() (wrapmpc method)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.update_params"]], "use_cuda_graph_metrics (wrapmpc attribute)": [[103, "curobo.wrap.wrap_mpc.WrapMpc.use_cuda_graph_metrics"]]}})
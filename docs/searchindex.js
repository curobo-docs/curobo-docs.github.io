Search.setIndex({"docnames": ["_api/curobo", "_api/curobo.cuda_robot_model", "_api/curobo.cuda_robot_model.cuda_robot_generator", "_api/curobo.cuda_robot_model.cuda_robot_model", "_api/curobo.cuda_robot_model.kinematics_parser", "_api/curobo.cuda_robot_model.types", "_api/curobo.cuda_robot_model.urdf_kinematics_parser", "_api/curobo.cuda_robot_model.usd_kinematics_parser", "_api/curobo.curobolib", "_api/curobo.curobolib.geom", "_api/curobo.curobolib.geom_cu", "_api/curobo.curobolib.kinematics", "_api/curobo.curobolib.kinematics_fused_cu", "_api/curobo.curobolib.lbfgs_step_cu", "_api/curobo.curobolib.line_search_cu", "_api/curobo.curobolib.ls", "_api/curobo.curobolib.opt", "_api/curobo.curobolib.tensor_step", "_api/curobo.curobolib.tensor_step_cu", "_api/curobo.curobolib.util_file", "_api/curobo.geom", "_api/curobo.geom.cv", "_api/curobo.geom.sdf", "_api/curobo.geom.sdf.sdf_grid", "_api/curobo.geom.sdf.utils", "_api/curobo.geom.sdf.warp_primitives", "_api/curobo.geom.sdf.world", "_api/curobo.geom.sdf.world_blox", "_api/curobo.geom.sdf.world_mesh", "_api/curobo.geom.sphere_fit", "_api/curobo.geom.transform", "_api/curobo.geom.types", "_api/curobo.graph", "_api/curobo.graph.graph_base", "_api/curobo.graph.graph_nx", "_api/curobo.graph.prm", "_api/curobo.opt", "_api/curobo.opt.newton", "_api/curobo.opt.newton.lbfgs", "_api/curobo.opt.newton.newton_base", "_api/curobo.opt.opt_base", "_api/curobo.opt.particle", "_api/curobo.opt.particle.parallel_es", "_api/curobo.opt.particle.parallel_mppi", "_api/curobo.opt.particle.particle_opt_base", "_api/curobo.opt.particle.particle_opt_utils", "_api/curobo.rollout", "_api/curobo.rollout.arm_base", "_api/curobo.rollout.arm_reacher", "_api/curobo.rollout.cost", "_api/curobo.rollout.cost.bound_cost", "_api/curobo.rollout.cost.cost_base", "_api/curobo.rollout.cost.dist_cost", "_api/curobo.rollout.cost.manipulability_cost", "_api/curobo.rollout.cost.pose_cost", "_api/curobo.rollout.cost.primitive_collision_cost", "_api/curobo.rollout.cost.projected_dist_cost", "_api/curobo.rollout.cost.self_collision_cost", "_api/curobo.rollout.cost.stop_cost", "_api/curobo.rollout.cost.straight_line_cost", "_api/curobo.rollout.cost.zero_cost", "_api/curobo.rollout.dynamics_model", "_api/curobo.rollout.dynamics_model.integration_utils", "_api/curobo.rollout.dynamics_model.kinematic_model", "_api/curobo.rollout.dynamics_model.model_base", "_api/curobo.rollout.dynamics_model.tensor_step", "_api/curobo.rollout.rollout_base", "_api/curobo.types", "_api/curobo.types.base", "_api/curobo.types.camera", "_api/curobo.types.enum", "_api/curobo.types.math", "_api/curobo.types.robot", "_api/curobo.types.state", "_api/curobo.types.tensor", "_api/curobo.util", "_api/curobo.util.error_metrics", "_api/curobo.util.helpers", "_api/curobo.util.logger", "_api/curobo.util.metrics", "_api/curobo.util.sample_lib", "_api/curobo.util.state_filter", "_api/curobo.util.tensor_util", "_api/curobo.util.torch_utils", "_api/curobo.util.trajectory", "_api/curobo.util.usd_helper", "_api/curobo.util.warp", "_api/curobo.util.warp_interpolation", "_api/curobo.util_file", "_api/curobo.wrap", "_api/curobo.wrap.model", "_api/curobo.wrap.model.curobo_robot_world", "_api/curobo.wrap.model.robot_segmenter", "_api/curobo.wrap.model.robot_world", "_api/curobo.wrap.reacher", "_api/curobo.wrap.reacher.evaluator", "_api/curobo.wrap.reacher.ik_solver", "_api/curobo.wrap.reacher.motion_gen", "_api/curobo.wrap.reacher.mpc", "_api/curobo.wrap.reacher.trajopt", "_api/curobo.wrap.reacher.types", "_api/curobo.wrap.wrap_base", "_api/curobo.wrap.wrap_mpc", "_api/modules", "index", "news", "readme", "source/advanced_examples/1_batch_env", "source/advanced_examples/2_block_stacking_example", "source/advanced_examples/3_constrained_planning", "source/advanced_examples/4_robot_segmentation", "source/api/motion_generation", "source/api/reacher", "source/getting_started/1_install_instructions", "source/getting_started/1a_quick_overview", "source/getting_started/2a_python_examples", "source/getting_started/2b_isaacsim_examples", "source/getting_started/2c_world_collision", "source/getting_started/2d_nvblox_demo", "source/getting_started/2e_torch_layer_example", "source/getting_started/4_benchmarks", "source/getting_started/5_docker_development", "source/getting_started/6_known_issues", "source/getting_started/7_api", "source/notes/01_robot_list", "source/notes/02_numerical_optimization", "source/notes/04_cuda_kernels", "source/notes/05_usd_api", "source/research/research", "source/research/research_using_curobo", "source/snippets/citation", "source/snippets/research_list", "source/tutorials/1_robot_configuration"], "filenames": ["_api/curobo.rst", "_api/curobo.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.cuda_robot_generator.rst", "_api/curobo.cuda_robot_model.cuda_robot_model.rst", "_api/curobo.cuda_robot_model.kinematics_parser.rst", "_api/curobo.cuda_robot_model.types.rst", "_api/curobo.cuda_robot_model.urdf_kinematics_parser.rst", "_api/curobo.cuda_robot_model.usd_kinematics_parser.rst", "_api/curobo.curobolib.rst", "_api/curobo.curobolib.geom.rst", "_api/curobo.curobolib.geom_cu.rst", "_api/curobo.curobolib.kinematics.rst", "_api/curobo.curobolib.kinematics_fused_cu.rst", "_api/curobo.curobolib.lbfgs_step_cu.rst", "_api/curobo.curobolib.line_search_cu.rst", "_api/curobo.curobolib.ls.rst", "_api/curobo.curobolib.opt.rst", "_api/curobo.curobolib.tensor_step.rst", "_api/curobo.curobolib.tensor_step_cu.rst", "_api/curobo.curobolib.util_file.rst", "_api/curobo.geom.rst", "_api/curobo.geom.cv.rst", "_api/curobo.geom.sdf.rst", "_api/curobo.geom.sdf.sdf_grid.rst", "_api/curobo.geom.sdf.utils.rst", "_api/curobo.geom.sdf.warp_primitives.rst", "_api/curobo.geom.sdf.world.rst", "_api/curobo.geom.sdf.world_blox.rst", "_api/curobo.geom.sdf.world_mesh.rst", "_api/curobo.geom.sphere_fit.rst", "_api/curobo.geom.transform.rst", "_api/curobo.geom.types.rst", "_api/curobo.graph.rst", "_api/curobo.graph.graph_base.rst", "_api/curobo.graph.graph_nx.rst", "_api/curobo.graph.prm.rst", "_api/curobo.opt.rst", "_api/curobo.opt.newton.rst", "_api/curobo.opt.newton.lbfgs.rst", "_api/curobo.opt.newton.newton_base.rst", "_api/curobo.opt.opt_base.rst", "_api/curobo.opt.particle.rst", "_api/curobo.opt.particle.parallel_es.rst", "_api/curobo.opt.particle.parallel_mppi.rst", "_api/curobo.opt.particle.particle_opt_base.rst", "_api/curobo.opt.particle.particle_opt_utils.rst", "_api/curobo.rollout.rst", "_api/curobo.rollout.arm_base.rst", "_api/curobo.rollout.arm_reacher.rst", "_api/curobo.rollout.cost.rst", "_api/curobo.rollout.cost.bound_cost.rst", "_api/curobo.rollout.cost.cost_base.rst", "_api/curobo.rollout.cost.dist_cost.rst", "_api/curobo.rollout.cost.manipulability_cost.rst", "_api/curobo.rollout.cost.pose_cost.rst", "_api/curobo.rollout.cost.primitive_collision_cost.rst", "_api/curobo.rollout.cost.projected_dist_cost.rst", "_api/curobo.rollout.cost.self_collision_cost.rst", "_api/curobo.rollout.cost.stop_cost.rst", "_api/curobo.rollout.cost.straight_line_cost.rst", "_api/curobo.rollout.cost.zero_cost.rst", "_api/curobo.rollout.dynamics_model.rst", "_api/curobo.rollout.dynamics_model.integration_utils.rst", "_api/curobo.rollout.dynamics_model.kinematic_model.rst", "_api/curobo.rollout.dynamics_model.model_base.rst", "_api/curobo.rollout.dynamics_model.tensor_step.rst", "_api/curobo.rollout.rollout_base.rst", "_api/curobo.types.rst", "_api/curobo.types.base.rst", "_api/curobo.types.camera.rst", "_api/curobo.types.enum.rst", "_api/curobo.types.math.rst", "_api/curobo.types.robot.rst", "_api/curobo.types.state.rst", "_api/curobo.types.tensor.rst", "_api/curobo.util.rst", "_api/curobo.util.error_metrics.rst", "_api/curobo.util.helpers.rst", "_api/curobo.util.logger.rst", "_api/curobo.util.metrics.rst", "_api/curobo.util.sample_lib.rst", "_api/curobo.util.state_filter.rst", "_api/curobo.util.tensor_util.rst", "_api/curobo.util.torch_utils.rst", "_api/curobo.util.trajectory.rst", "_api/curobo.util.usd_helper.rst", "_api/curobo.util.warp.rst", "_api/curobo.util.warp_interpolation.rst", "_api/curobo.util_file.rst", "_api/curobo.wrap.rst", "_api/curobo.wrap.model.rst", "_api/curobo.wrap.model.curobo_robot_world.rst", "_api/curobo.wrap.model.robot_segmenter.rst", "_api/curobo.wrap.model.robot_world.rst", "_api/curobo.wrap.reacher.rst", "_api/curobo.wrap.reacher.evaluator.rst", "_api/curobo.wrap.reacher.ik_solver.rst", "_api/curobo.wrap.reacher.motion_gen.rst", "_api/curobo.wrap.reacher.mpc.rst", "_api/curobo.wrap.reacher.trajopt.rst", "_api/curobo.wrap.reacher.types.rst", "_api/curobo.wrap.wrap_base.rst", "_api/curobo.wrap.wrap_mpc.rst", "_api/modules.rst", "index.rst", "news.rst", "readme.rst", "source/advanced_examples/1_batch_env.rst", "source/advanced_examples/2_block_stacking_example.rst", "source/advanced_examples/3_constrained_planning.rst", "source/advanced_examples/4_robot_segmentation.rst", "source/api/motion_generation.rst", "source/api/reacher.rst", "source/getting_started/1_install_instructions.rst", "source/getting_started/1a_quick_overview.rst", "source/getting_started/2a_python_examples.rst", "source/getting_started/2b_isaacsim_examples.rst", "source/getting_started/2c_world_collision.rst", "source/getting_started/2d_nvblox_demo.rst", "source/getting_started/2e_torch_layer_example.rst", "source/getting_started/4_benchmarks.rst", "source/getting_started/5_docker_development.rst", "source/getting_started/6_known_issues.rst", "source/getting_started/7_api.rst", "source/notes/01_robot_list.rst", "source/notes/02_numerical_optimization.rst", "source/notes/04_cuda_kernels.rst", "source/notes/05_usd_api.rst", "source/research/research.rst", "source/research/research_using_curobo.rst", "source/snippets/citation.rst", "source/snippets/research_list.rst", "source/tutorials/1_robot_configuration.rst"], "titles": ["curobo package", "curobo.cuda_robot_model package", "curobo.cuda_robot_model.cuda_robot_generator module", "curobo.cuda_robot_model.cuda_robot_model module", "curobo.cuda_robot_model.kinematics_parser module", "curobo.cuda_robot_model.types module", "curobo.cuda_robot_model.urdf_kinematics_parser module", "curobo.cuda_robot_model.usd_kinematics_parser module", "curobo.curobolib package", "curobo.curobolib.geom module", "curobo.curobolib.geom_cu module", "curobo.curobolib.kinematics module", "curobo.curobolib.kinematics_fused_cu module", "curobo.curobolib.lbfgs_step_cu module", "curobo.curobolib.line_search_cu module", "curobo.curobolib.ls module", "curobo.curobolib.opt module", "curobo.curobolib.tensor_step module", "curobo.curobolib.tensor_step_cu module", "curobo.curobolib.util_file module", "curobo.geom package", "curobo.geom.cv module", "curobo.geom.sdf package", "curobo.geom.sdf.sdf_grid module", "curobo.geom.sdf.utils module", "curobo.geom.sdf.warp_primitives module", "curobo.geom.sdf.world module", "curobo.geom.sdf.world_blox module", "curobo.geom.sdf.world_mesh module", "curobo.geom.sphere_fit module", "curobo.geom.transform module", "curobo.geom.types module", "curobo.graph package", "curobo.graph.graph_base module", "curobo.graph.graph_nx module", "curobo.graph.prm module", "curobo.opt package", "curobo.opt.newton package", "curobo.opt.newton.lbfgs module", "curobo.opt.newton.newton_base module", "curobo.opt.opt_base module", "curobo.opt.particle package", "curobo.opt.particle.parallel_es module", "curobo.opt.particle.parallel_mppi module", "curobo.opt.particle.particle_opt_base module", "curobo.opt.particle.particle_opt_utils module", "curobo.rollout package", "curobo.rollout.arm_base module", "curobo.rollout.arm_reacher module", "curobo.rollout.cost package", "curobo.rollout.cost.bound_cost module", "curobo.rollout.cost.cost_base module", "curobo.rollout.cost.dist_cost module", "curobo.rollout.cost.manipulability_cost module", "curobo.rollout.cost.pose_cost module", "curobo.rollout.cost.primitive_collision_cost module", "curobo.rollout.cost.projected_dist_cost module", "curobo.rollout.cost.self_collision_cost module", "curobo.rollout.cost.stop_cost module", "curobo.rollout.cost.straight_line_cost module", "curobo.rollout.cost.zero_cost module", "curobo.rollout.dynamics_model package", "curobo.rollout.dynamics_model.integration_utils module", "curobo.rollout.dynamics_model.kinematic_model module", "curobo.rollout.dynamics_model.model_base module", "curobo.rollout.dynamics_model.tensor_step module", "curobo.rollout.rollout_base module", "curobo.types package", "curobo.types.base module", "curobo.types.camera module", "curobo.types.enum module", "curobo.types.math module", "curobo.types.robot module", "curobo.types.state module", "curobo.types.tensor module", "curobo.util package", "curobo.util.error_metrics module", "curobo.util.helpers module", "curobo.util.logger module", "curobo.util.metrics module", "curobo.util.sample_lib module", "curobo.util.state_filter module", "curobo.util.tensor_util module", "curobo.util.torch_utils module", "curobo.util.trajectory module", "curobo.util.usd_helper module", "curobo.util.warp module", "curobo.util.warp_interpolation module", "curobo.util_file module", "curobo.wrap package", "curobo.wrap.model package", "curobo.wrap.model.curobo_robot_world module", "curobo.wrap.model.robot_segmenter module", "curobo.wrap.model.robot_world module", "curobo.wrap.reacher package", "curobo.wrap.reacher.evaluator module", "curobo.wrap.reacher.ik_solver module", "curobo.wrap.reacher.motion_gen module", "curobo.wrap.reacher.mpc module", "curobo.wrap.reacher.trajopt module", "curobo.wrap.reacher.types module", "curobo.wrap.wrap_base module", "curobo.wrap.wrap_mpc module", "curobo", "cuRobo: CUDA Accelerated Robot Library", "Updates", "cuRobo: CUDA Accelerated Robot Library", "Batched Environments", "Block Stacking", "Constrained Planning", "Robot Segmentation", "Motion Generation", "Reacher", "Installation", "Basics", "Using in Python", "Using with Isaac Sim", "Collision World Representation", "Using with Depth Camera", "Using in a Neural Network", "Benchmarks &amp; Profiling", "Docker Development", "Known Issues", "Python API", "Supported Robots", "Numerical Optimization", "CUDA Notes", "USD for Robot and World Representation", "Technical Report", "Research using cuRobo", "&lt;no title&gt;", "&lt;no title&gt;", "Configuring a New Robot"], "terms": {"i": [0, 1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 27, 28, 30, 31, 34, 36, 38, 39, 40, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 69, 71, 87, 93, 96, 97, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 128, 132], "split": [0, 123], "sever": [0, 1, 36, 114, 117, 123], "modul": [0, 1, 8, 20, 22, 32, 36, 37, 41, 46, 49, 61, 67, 75, 89, 90, 94, 103, 119, 123, 129], "opt": [0, 8, 101, 103, 123, 125], "contain": [0, 1, 20, 22, 36, 37, 39, 40, 41, 43, 44, 46, 88, 104, 106, 113, 117, 121, 122, 123, 126], "optim": [0, 36, 38, 39, 40, 41, 42, 43, 44, 47, 55, 66, 84, 89, 97, 101, 104, 106, 109, 114, 116, 117, 119, 123, 126, 128], "solver": [0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 94, 96, 97, 98, 99, 116, 123, 125, 128], "cuda_robot_model": [0, 50, 57, 91, 93, 103, 115, 123, 132], "robot": [0, 1, 2, 3, 5, 7, 20, 22, 47, 55, 63, 67, 84, 85, 88, 92, 93, 96, 97, 99, 105, 107, 109, 114, 115, 116, 117, 118, 119, 120, 122, 123, 129, 130, 131], "kinemat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 46, 47, 67, 72, 90, 91, 93, 94, 96, 97, 98, 99, 104, 106, 110, 111, 114, 119, 122, 123, 124, 127, 132], "curobolib": [0, 103, 123], "cuda": [0, 1, 2, 3, 5, 7, 12, 13, 14, 26, 31, 33, 39, 40, 43, 44, 45, 47, 48, 54, 63, 68, 71, 72, 73, 80, 81, 84, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100, 110, 113, 114, 115, 117, 118, 119, 121, 122, 123], "kernel": [0, 1, 5, 84, 113, 114, 115, 116, 117, 118, 121, 123], "python": [0, 110, 113, 114, 117, 120, 132], "bind": [0, 123], "them": [0, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 116, 117, 123, 132], "geom": [0, 8, 47, 48, 91, 93, 96, 98, 99, 103, 115, 116, 117, 118, 119, 123], "geometri": [0, 2, 3, 7, 29, 108, 110, 114, 119, 123, 132], "process": [0, 20, 22, 31, 43, 80, 97, 109, 117, 123], "collis": [0, 2, 3, 5, 10, 20, 22, 26, 27, 28, 55, 79, 93, 97, 104, 106, 108, 114, 119, 122, 123, 124, 127, 129, 130, 131], "check": [0, 2, 20, 22, 27, 44, 55, 104, 106, 110, 113, 122, 123, 124, 125, 132], "frame": [0, 109, 110, 115, 116, 117, 123, 127], "transform": [0, 1, 2, 7, 20, 31, 85, 110, 116, 123, 127], "graph": [0, 39, 40, 47, 97, 103, 107, 108, 110, 114, 115, 116, 120, 122, 123, 125], "geometr": [0, 20, 22, 104, 106, 111, 116, 123, 128], "plan": [0, 2, 32, 33, 94, 97, 104, 105, 106, 118, 122, 123, 129, 131, 132], "search": [0, 14, 36, 40, 123, 125, 128], "method": [0, 80, 116, 117, 123, 128], "rollout": [0, 33, 40, 43, 44, 91, 93, 96, 99, 101, 103, 109, 116, 117, 123, 125], "map": [0, 4, 6, 7, 27, 40, 113, 114, 115, 116, 117, 122, 123, 126, 132], "action": [0, 42, 43, 44, 46, 47, 48, 63, 66, 89, 101, 108, 116, 123, 125], "cost": [0, 15, 38, 39, 40, 43, 44, 45, 46, 47, 48, 66, 76, 91, 93, 109, 116, 117, 118, 123, 125, 126], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 30, 37, 38, 39, 40, 41, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 71, 82, 87, 91, 93, 96, 97, 104, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132], "class": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 79, 80, 81, 84, 85, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 115, 117, 118, 119, 123, 125], "wrap": [0, 103, 109, 110, 113, 115, 116, 119, 123, 125], "instanc": [0, 1, 27, 31, 39, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 71, 97, 107, 113, 115, 117, 119, 122, 123, 132], "comput": [0, 1, 2, 3, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 30, 31, 40, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 71, 93, 96, 97, 104, 106, 108, 110, 113, 114, 115, 116, 117, 119, 120, 121, 123, 126, 127, 129, 131], "given": [0, 2, 7, 9, 11, 16, 23, 25, 30, 31, 40, 43, 44, 45, 47, 48, 50, 52, 60, 62, 71, 85, 96, 112, 115, 116, 117, 119, 123, 126], "trajectori": [0, 33, 43, 44, 46, 47, 54, 55, 63, 66, 75, 87, 97, 99, 104, 106, 109, 115, 116, 117, 123, 125, 128], "util": [0, 20, 22, 33, 42, 43, 45, 63, 91, 93, 99, 103, 113, 116, 119, 123, 132], "add": [0, 2, 3, 66, 109, 113, 115, 116, 118, 121, 123, 132], "user": [0, 109, 113, 116, 120, 121, 123], "level": [0, 78, 123, 126], "api": [0, 27, 111, 118, 127], "task": [0, 98, 104, 106, 108, 109, 112, 116, 117, 123], "program": [0, 71, 116, 123], "includ": [0, 97, 115, 116, 123], "implement": [0, 1, 7, 31, 36, 38, 39, 40, 55, 97, 104, 106, 107, 108, 109, 110, 113, 116, 118, 122, 123, 125, 126, 128, 129, 131], "free": [0, 115, 119, 120, 122, 123, 129, 130, 131, 132], "reacher": [0, 89, 109, 115, 123, 125], "batch": [0, 26, 27, 28, 33, 35, 40, 43, 44, 45, 46, 47, 48, 50, 52, 54, 66, 67, 71, 87, 92, 93, 94, 96, 97, 99, 100, 111, 115, 123, 125], "world": [0, 20, 22, 27, 28, 31, 47, 48, 85, 91, 93, 96, 97, 98, 99, 104, 106, 107, 108, 110, 114, 115, 116, 118, 119, 122, 123, 126, 132], "type": [0, 1, 2, 3, 4, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 33, 35, 40, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 65, 66, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 110, 111, 114, 115, 116, 117, 118, 119, 123, 126], "custom": [0, 84, 116, 117, 123, 126], "dataclass": [0, 5, 38, 39, 40, 42, 43, 44, 97, 123, 126], "common": [0, 40, 123], "data": [0, 1, 5, 9, 11, 16, 23, 25, 30, 40, 50, 52, 60, 62, 66, 71, 73, 88, 114, 117, 123], "state": [0, 33, 40, 43, 44, 46, 47, 48, 62, 63, 66, 67, 81, 96, 97, 99, 101, 102, 110, 112, 115, 116, 119, 123, 128], "jointstat": [0, 5, 33, 47, 50, 62, 63, 65, 66, 67, 73, 81, 84, 85, 87, 92, 93, 95, 96, 97, 98, 99, 100, 104, 105, 106, 110, 115, 116, 119, 123], "camera": [0, 67, 104, 106, 110, 117, 120, 122, 123], "cameraobserv": [0, 27, 31, 67, 69, 92, 97, 110, 123], "math": [0, 67, 96, 114, 115, 116, 117, 119, 123], "pose": [0, 2, 3, 9, 10, 20, 26, 27, 28, 31, 47, 54, 63, 66, 67, 69, 71, 85, 92, 93, 96, 97, 100, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 123, 126, 127, 132], "cuda_robot_gener": [0, 1, 5, 132], "cudarobotgeneratorconfig": [0, 1, 2, 3, 5, 132], "cudarobotgener": [0, 1, 2], "cudarobotmodelconfig": [0, 1, 3, 5, 72, 115], "cudarobotmodel": [0, 1, 3, 85, 91, 93, 96, 97, 99, 115], "kinematics_pars": [0, 1, 2, 3], "linkparam": [0, 1, 2, 4, 6, 7], "kinematicspars": [0, 1, 3, 4, 6, 7], "jointtyp": [0, 1, 4, 5], "jointlimit": [0, 1, 5, 50], "cspaceconfig": [0, 1, 2, 5, 47, 66, 72], "kinematicstensorconfig": [0, 1, 2, 3, 5], "selfcollisionkinematicsconfig": [0, 1, 3, 5, 57], "cudarobotmodelst": [0, 1, 3, 5, 93, 96, 99, 115], "urdf_kinematics_pars": [0, 1], "urdfkinematicspars": [0, 1, 6], "usd_kinematics_pars": [0, 1], "usdkinematicspars": [0, 1, 7], "get_links_for_joint": [0, 1, 7], "get_self_collision_dist": [0, 8, 9, 90, 93], "selfcollisiondist": [0, 8, 9], "selfcollisiondistanceloss": [0, 8, 9], "get_pose_dist": [0, 8, 9], "get_pose_distance_backward": [0, 8, 9], "poseerrordist": [0, 8, 9], "poseerror": [0, 8, 9], "sdfsphereobb": [0, 8, 9], "sdfsweptsphereobb": [0, 8, 9], "geom_cu": [0, 8], "closest_point": [0, 8, 10], "pose_dist": [0, 8, 10, 90, 93, 119], "pose_distance_backward": [0, 8, 10], "self_collision_dist": [0, 8, 10], "swept_closest_point": [0, 8, 10], "rotation_matrix_to_quaternion": [0, 8, 11], "kinematicsfusedfunct": [0, 8, 11], "kinematicsfusedglobalcumulfunct": [0, 8, 11], "get_cuda_kinemat": [0, 8, 11], "kinematics_fused_cu": [0, 8], "backward": [0, 2, 8, 9, 10, 11, 12, 16, 20, 22, 23, 25, 30, 49, 50, 52, 60, 61, 62, 63, 67, 71, 119], "forward": [0, 1, 3, 8, 9, 11, 12, 13, 16, 20, 22, 23, 25, 30, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 71, 80, 104, 106, 119], "matrix_to_quaternion": [0, 8, 12, 20, 30], "lbfgs_step_cu": [0, 8], "debug_reduc": [0, 8, 13], "step": [0, 8, 13, 18, 43, 44, 62, 63, 80, 87, 94, 97, 98, 109, 110, 116, 118, 119, 121, 125, 128, 132], "updat": [0, 5, 8, 13, 14, 26, 27, 28, 38, 39, 40, 43, 44, 47, 48, 66, 108, 113, 116, 117, 118, 121, 132], "line_search_cu": [0, 8], "line_search": [0, 8, 14], "update_best": [0, 8, 14, 15], "l": [0, 8, 13, 45, 104, 106, 128], "wolfe_line_search": [0, 8, 15], "lbfgscu": [0, 8, 16], "tensor_step": [0, 8, 46, 61, 63], "tensor_step_pos_clique_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_fwd": [0, 8, 17], "tensor_step_acc_fwd": [0, 8, 17], "tensor_step_acc_idx_fwd": [0, 8, 17], "tensor_step_pos_clique_bwd": [0, 8, 17], "tensor_step_cu": [0, 8], "step_acceler": [0, 8, 18], "step_acceleration_idx": [0, 8, 18], "step_idx_position2": [0, 8, 18], "step_posit": [0, 8, 18], "step_position2": [0, 8, 18], "step_position_backward": [0, 8, 18], "step_position_backward2": [0, 8, 18], "util_fil": [0, 8, 103, 115, 117, 119], "get_cpp_path": [0, 8, 19, 88, 103], "join_path": [0, 8, 19, 88, 103, 115, 117, 119], "add_cpp_path": [0, 8, 19, 88, 103], "sdf": [0, 20, 47, 48, 91, 93, 96, 98, 99, 115, 117, 118, 119], "cv": [0, 20], "sphere_fit": [0, 20, 117], "spherefittyp": [0, 20, 27, 29, 31, 97, 117], "sample_even_fit_mesh": [0, 20, 29], "get_voxel_pitch": [0, 20, 29], "voxel_fit_surface_mesh": [0, 20, 29], "get_voxelgrid_from_mesh": [0, 20, 29], "voxel_fit_mesh": [0, 20, 29], "voxel_fit_volume_sample_surface_mesh": [0, 20, 29], "voxel_fit_volume_inside_mesh": [0, 20, 29], "fit_spheres_to_mesh": [0, 20, 29], "transform_point": [0, 20, 30, 67, 71], "batch_transform_point": [0, 20, 30, 67, 71], "cuda_matrix_to_quaternion": [0, 20, 30], "quaternion_to_matrix": [0, 20, 30], "torch_quaternion_to_matrix": [0, 20, 30], "pose_to_matrix": [0, 20, 30], "pose_multipli": [0, 20, 30], "pose_invers": [0, 20, 30], "transformpoint": [0, 20, 30], "batchtransformpoint": [0, 20, 30], "batchtransformpos": [0, 20, 30], "transformpos": [0, 20, 30], "poseinvers": [0, 20, 30], "quattomatrix": [0, 20, 30], "matrixtoquaternion": [0, 20, 30], "materi": [0, 20, 31, 85], "obstacl": [0, 20, 26, 28, 31, 55, 85, 97, 104, 106, 107, 116, 117, 118, 119, 120, 122, 126, 127], "cuboid": [0, 20, 26, 27, 31, 85, 97, 104, 106, 107, 114, 115, 116, 117, 122, 127], "capsul": [0, 20, 31, 117], "cylind": [0, 20, 31, 85, 117], "sphere": [0, 1, 2, 3, 5, 20, 27, 29, 31, 55, 85, 97, 107, 108, 110, 114, 115, 116, 118, 119, 126, 132], "mesh": [0, 2, 3, 4, 20, 22, 26, 27, 28, 29, 31, 85, 93, 96, 97, 99, 104, 106, 107, 114, 115, 116, 117, 118, 119, 120, 122, 126, 127, 132], "bloxmap": [0, 20, 31], "pointcloud": [0, 20, 22, 31, 69, 93, 110], "worldconfig": [0, 20, 26, 27, 28, 31, 33, 47, 85, 93, 96, 97, 98, 99, 115, 116, 117, 119], "tensor_spher": [0, 20, 26, 27, 28, 31], "tensor_capsul": [0, 20, 31], "tensor_cub": [0, 20, 31], "batch_tensor_cub": [0, 20, 31], "graph_bas": [0, 32], "graphresult": [0, 32, 33, 97], "graphconfig": [0, 32, 33, 35], "graphplanbas": [0, 32, 33, 35, 97], "graph_nx": [0, 32], "networkxgraph": [0, 32, 34], "prm": [0, 32], "prmstar": [0, 32, 35], "newton": [0, 36, 40, 125], "particl": [0, 36, 40, 128], "opt_bas": [0, 36, 101], "optimizerconfig": [0, 36, 39, 40, 43, 44], "dynamics_model": [0, 46, 47, 48, 58], "arm_bas": [0, 46, 48, 87, 125], "armcostconfig": [0, 46, 47, 48], "armbaseconfig": [0, 46, 47, 48], "armbas": [0, 46, 47, 48, 125], "arm_reach": [0, 46, 96, 99], "armreachermetr": [0, 46, 48], "armreachercostconfig": [0, 46, 48], "armreacherconfig": [0, 46, 48], "armreach": [0, 46, 48, 96, 99], "rollout_bas": [0, 33, 40, 46, 48, 99, 101], "rolloutmetr": [0, 33, 46, 47, 48, 66, 96, 97, 99, 101], "goal": [0, 33, 35, 40, 46, 47, 48, 54, 66, 94, 96, 97, 98, 99, 100, 101, 102, 108, 109, 111, 112, 115, 116, 119, 126], "rolloutconfig": [0, 46, 47, 48, 66], "rolloutbas": [0, 33, 38, 39, 40, 42, 43, 44, 46, 47, 48, 66, 96, 97, 99, 101], "base": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 16, 20, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 79, 80, 81, 84, 85, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 110, 113, 115, 116, 117, 118, 121, 124, 127, 128, 129, 131, 132], "tensordevicetyp": [0, 2, 3, 5, 7, 26, 31, 33, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 67, 68, 71, 72, 73, 80, 81, 84, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100, 115, 117], "enum": [0, 5, 26, 29, 39, 43, 44, 45, 50, 52, 54, 56, 63, 65, 67, 81, 84, 100], "statetyp": [0, 63, 67, 70, 81], "quat_multipli": [0, 67, 71], "orientationerror": [0, 67, 71], "nnconfig": [0, 67, 72], "robotconfig": [0, 33, 47, 48, 63, 67, 72, 85, 93, 96, 97, 98, 99, 115], "filtercoeff": [0, 67, 73, 81], "tensor": [0, 1, 2, 3, 5, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 27, 28, 30, 31, 33, 35, 39, 40, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 69, 71, 73, 76, 80, 81, 82, 84, 85, 87, 91, 93, 95, 96, 97, 99, 101, 107, 114, 115, 117, 119, 122, 129, 131], "error_metr": [0, 75], "rotation_error_quaternion": [0, 75, 76], "rotation_error_matrix": [0, 75, 76], "helper": [0, 40, 43, 44, 75, 97, 117], "default_to_regular": [0, 75, 77], "list_idx_if_not_non": [0, 75, 77], "logger": [0, 75], "setup_curobo_logg": [0, 75, 78], "log_warn": [0, 75, 78], "log_info": [0, 75, 78], "log_error": [0, 75, 78], "metric": [0, 32, 33, 47, 48, 54, 55, 71, 75, 89, 94, 96, 97, 99, 101, 115, 120], "curobometr": [0, 75, 79], "curobogroupmetr": [0, 75, 79], "sample_lib": [0, 42, 43, 75, 91, 93], "sampleconfig": [0, 42, 43, 75, 80], "basesamplelib": [0, 75, 80], "haltonsamplelib": [0, 75, 80], "bspline": [0, 75, 80], "knotsamplelib": [0, 75, 80], "randomsamplelib": [0, 75, 80], "sinesamplelib": [0, 75, 80], "stompsamplelib": [0, 75, 80], "samplelib": [0, 75, 80], "get_ranged_halton_sampl": [0, 75, 80], "haltongener": [0, 75, 80, 91, 93], "generate_nois": [0, 41, 43, 75, 80], "generate_noise_np": [0, 75, 80], "generate_prime_numb": [0, 75, 80], "generate_van_der_corput_sampl": [0, 75, 80], "generate_van_der_corput_samples_batch": [0, 75, 80], "generate_halton_sampl": [0, 75, 80], "generate_gaussian_halton_sampl": [0, 75, 80], "generate_gaussian_sobol_sampl": [0, 75, 80], "state_filt": [0, 63, 75], "filterconfig": [0, 63, 75, 81], "jointstatefilt": [0, 75, 81], "tensor_util": [0, 75], "check_tensor_shap": [0, 75, 82], "copy_tensor": [0, 75, 82], "copy_if_not_non": [0, 75, 82], "clone_if_not_non": [0, 75, 82], "tensor_repeat_se": [0, 75, 82], "torch_util": [0, 75], "find_first_idx": [0, 75, 83], "find_last_idx": [0, 75, 83], "is_cuda_graph_avail": [0, 75, 83], "is_torch_compile_avail": [0, 75, 83], "interpolatetyp": [0, 33, 75, 84, 97, 99], "get_linear_traj": [0, 75, 84], "get_smooth_trajectori": [0, 75, 84], "get_spline_interpolated_trajectori": [0, 75, 84], "get_batch_interpolated_trajectori": [0, 75, 84], "get_cpu_linear_interpol": [0, 75, 84], "get_cpu_kunz_stilman_interpol": [0, 75, 84], "get_interpolated_trajectori": [0, 32, 33, 75, 84, 94, 99], "linear_smooth": [0, 75, 84], "usd_help": [0, 75, 116, 119], "set_prim_transl": [0, 75, 85], "set_prim_transform": [0, 75, 85], "get_prim_world_pos": [0, 75, 85], "get_transform": [0, 75, 85], "get_position_quat": [0, 75, 85], "set_geom_mesh_attr": [0, 75, 85], "set_geom_cube_attr": [0, 75, 85], "set_geom_cylinder_attr": [0, 75, 85], "set_geom_sphere_attr": [0, 75, 85], "set_cylinder_attr": [0, 75, 85], "get_cylinder_attr": [0, 75, 85], "get_capsule_attr": [0, 75, 85], "get_cube_attr": [0, 75, 85], "get_sphere_attr": [0, 75, 85], "get_mesh_attr": [0, 75, 85], "create_stag": [0, 75, 85], "usdhelp": [0, 75, 85, 116, 119], "warp": [0, 28, 75, 84, 87, 117, 126], "init_warp": [0, 75, 86], "warp_interpol": [0, 75], "get_cuda_linear_interpol": [0, 75, 84, 87], "model": [0, 2, 3, 48, 72, 89, 97, 98, 108, 110, 115, 117, 119, 129, 131, 132], "wrap_bas": [0, 89, 96, 99], "wrapconfig": [0, 89, 101, 102], "wrapresult": [0, 89, 96, 98, 99, 101], "wrapbas": [0, 89, 96, 99, 101, 102], "wrap_mpc": [0, 89, 98], "wrapmpc": [0, 89, 98, 102], "get_module_path": [0, 88, 103], "get_root_path": [0, 88, 103], "get_content_path": [0, 88, 103], "get_configs_path": [0, 88, 103], "get_assets_path": [0, 88, 103, 117, 119], "get_weights_path": [0, 88, 103], "load_yaml": [0, 88, 103, 115, 119], "write_yaml": [0, 88, 103], "get_robot_path": [0, 88, 103, 115], "get_task_configs_path": [0, 88, 103], "get_robot_configs_path": [0, 88, 103, 115], "get_world_configs_path": [0, 88, 103, 115, 119], "get_debug_path": [0, 88, 103], "copy_file_to_path": [0, 88, 103], "get_filenam": [0, 88, 103], "get_path_of_dir": [0, 88, 103], "get_files_from_dir": [0, 88, 103], "file_exist": [0, 88, 103], "get_motion_gen_robot_list": [0, 88, 103], "get_robot_list": [0, 88, 103], "get_multi_arm_robot_list": [0, 88, 103], "code": [1, 20, 22, 104, 105, 106, 116, 120, 121], "acceler": [1, 3, 5, 18, 47, 55, 61, 63, 65, 67, 70, 73, 81, 84, 116, 117, 128, 129, 131], "current": [1, 2, 3, 5, 7, 9, 11, 16, 23, 25, 26, 28, 30, 43, 44, 47, 50, 52, 60, 62, 63, 71, 93, 97, 104, 106, 107, 108, 109, 110, 115, 116, 117], "support": [1, 2, 3, 5, 27, 29, 40, 93, 104, 105, 106, 107, 109, 111, 113, 114, 116, 118, 120, 122], "singl": [1, 28, 40, 54, 63, 94, 99, 100, 107, 109, 111, 116, 118, 124], "axi": [1, 2, 7, 54, 109], "actuat": [1, 122], "joint": [1, 2, 7, 73, 93, 97, 110, 115, 116, 119, 122, 132], "where": [1, 33, 40, 43, 44, 107, 109, 113, 117, 118, 119, 121, 125, 126, 132], "can": [1, 2, 9, 11, 16, 20, 22, 23, 25, 26, 30, 40, 50, 52, 60, 62, 66, 71, 93, 104, 106, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132], "prismat": 1, "revolut": 1, "continu": [1, 117, 119, 122], "ar": [1, 3, 7, 9, 11, 16, 23, 25, 27, 29, 30, 33, 36, 47, 50, 52, 60, 62, 71, 107, 108, 110, 113, 114, 115, 116, 117, 120, 121, 124, 127, 132], "approxim": [1, 29, 36, 108, 114, 119], "limit": [1, 2, 115, 122, 132], "6": [1, 5, 54, 65, 104, 105, 106, 109, 113, 115, 117, 120, 122], "radian": 1, "mimic": [1, 122], "so": [1, 115, 116, 117, 118, 121, 122, 125, 126, 132], "convert": [1, 2, 30, 40, 110, 115, 116, 117, 122, 132], "independ": [1, 122], "load": [1, 2, 3, 26, 27, 28, 31, 72, 97, 109, 113, 114, 115, 116, 117, 118, 120, 122, 127, 132], "": [1, 27, 28, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 82, 91, 93, 97, 104, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 131, 132], "tree": [1, 2, 4, 6, 7, 114], "from": [1, 2, 3, 4, 5, 7, 26, 27, 28, 31, 33, 35, 38, 39, 40, 42, 43, 44, 45, 47, 55, 63, 66, 71, 73, 91, 93, 97, 104, 106, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 132], "config": [1, 2, 3, 24, 26, 27, 28, 33, 35, 38, 39, 40, 42, 43, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 91, 93, 95, 96, 97, 98, 99, 101, 102, 115, 119, 132], "gener": [1, 2, 43, 80, 84, 88, 96, 97, 104, 106, 109, 110, 113, 114, 117, 122, 124, 129, 130, 131, 132], "us": [1, 2, 4, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 30, 31, 36, 39, 40, 43, 44, 47, 50, 52, 55, 60, 62, 66, 71, 80, 84, 87, 91, 93, 97, 107, 109, 110, 114, 117, 120, 121, 122, 124, 125, 126, 127, 132], "A": [1, 7, 45, 108, 109, 116, 117, 118, 129, 131], "parser": [1, 2, 7], "kinematicspar": 1, "provid": [1, 27, 36, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 132], "help": 1, "pars": [1, 116], "standard": [1, 40, 119, 122], "format": [1, 5, 31, 69, 114], "urdf": [1, 2, 3, 7, 114, 115, 122, 132], "an": [1, 3, 5, 7, 9, 11, 16, 23, 25, 30, 36, 39, 40, 43, 44, 45, 50, 52, 54, 55, 56, 60, 62, 63, 65, 70, 71, 84, 97, 100, 108, 109, 113, 115, 116, 117, 119, 122, 124, 125, 126, 127, 128, 132], "experiment": [1, 7, 114, 116, 127], "usd": [1, 2, 7, 85, 108, 114, 119, 132], "which": [1, 28, 55, 87, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 132], "miss": [1, 87], "addit": [1, 2, 40, 113, 116, 117, 118, 124], "between": [1, 2, 20, 22, 45, 54, 55, 97, 104, 106, 108, 109, 110, 114, 115, 116, 117, 118, 119, 122, 126], "origin": 1, "link": [1, 2, 3, 4, 5, 6, 7, 71, 97, 108, 114, 115, 116, 122, 132], "might": [1, 27, 113, 115, 132], "work": [1, 29, 39, 40, 96, 113, 115, 116, 117, 118, 121, 122, 126, 129, 131], "all": [1, 3, 7, 9, 11, 16, 23, 25, 26, 27, 29, 30, 31, 40, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 96, 97, 108, 113, 114, 115, 116, 117, 118, 120, 125, 126, 127, 132], "In": [1, 27, 40, 115, 116, 117, 118, 124, 132], "file": [1, 3, 7, 31, 110, 113, 114, 115, 116, 117, 120, 121, 124], "also": [1, 9, 11, 16, 20, 22, 23, 25, 26, 30, 50, 52, 60, 62, 71, 97, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 132], "need": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 30, 38, 39, 40, 44, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 116, 117, 118, 120, 121, 126, 132], "represent": [1, 26, 27, 31, 71, 114, 115, 116, 118], "volum": [1, 2, 29, 31, 117, 128], "other": [1, 9, 11, 16, 23, 25, 27, 30, 50, 52, 60, 62, 71, 116, 117, 126], "paramet": [1, 2, 3, 4, 5, 6, 7, 9, 11, 15, 24, 26, 27, 28, 29, 30, 31, 33, 35, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 117, 119], "repres": [1, 2, 9, 11, 16, 23, 25, 26, 30, 31, 50, 52, 60, 62, 71, 104, 106, 108, 110, 114, 116, 117, 120, 122, 124, 127], "tutori": [1, 72, 116, 117], "set": [1, 2, 9, 11, 16, 23, 25, 30, 39, 40, 43, 44, 50, 52, 54, 55, 60, 62, 71, 96, 107, 109, 111, 115, 116, 117, 121, 122, 126, 132], "up": [1, 7, 9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 132], "configur": [1, 2, 3, 7, 40, 55, 72, 93, 97, 109, 110, 113, 114, 115, 116, 117, 119], "new": [1, 39, 40, 43, 44, 71, 72, 104, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 126], "onc": [1, 108, 109, 110, 113, 114, 115, 116, 118, 122, 132], "setup": [1, 26, 107, 116, 117, 121], "you": [1, 3, 9, 11, 16, 23, 25, 26, 27, 28, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 109, 110, 113, 114, 115, 116, 117, 118, 120, 121, 126, 132], "pass": [1, 5, 9, 11, 16, 23, 25, 28, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 109, 110, 113, 116, 117, 118, 119, 120, 126], "configuraiton": [1, 132], "take": [1, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 109, 113, 115, 117, 118, 119, 120, 125], "access": [1, 113, 115, 116], "creat": [1, 2, 3, 27, 31, 39, 40, 43, 44, 47, 55, 71, 85, 96, 97, 107, 113, 115, 116, 117, 118, 119, 121, 126], "memori": [1, 2, 40, 66, 71, 122, 126], "while": [1, 7, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 66, 108, 109, 113, 116, 117, 118, 120, 122, 126, 132], "onli": [1, 2, 3, 7, 27, 28, 40, 96, 97, 99, 107, 115, 116, 117, 118, 120, 121, 129, 131], "To": [1, 27, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 109, 113, 115, 116, 117, 120, 126, 127, 128, 132], "reduc": [1, 110, 117, 126, 132], "overhead": [1, 110], "one": [1, 27, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 108, 116, 117, 122, 126, 132], "mani": [1, 3, 9, 11, 16, 23, 25, 30, 40, 50, 52, 60, 62, 71, 104, 106, 116, 117, 118, 122, 128], "base_link": [1, 2, 3, 4, 5, 72, 115, 132], "ee_link": [1, 2, 3, 4, 5, 66, 71, 72, 115, 132], "tensor_arg": [1, 2, 3, 5, 7, 20, 22, 26, 31, 32, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 71, 72, 73, 75, 80, 81, 84, 85, 86, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 115, 117], "link_nam": [1, 2, 3, 4, 5, 6, 7, 54, 61, 63, 85, 96, 97, 99, 132], "collision_link_nam": [1, 2, 132], "collision_spher": [1, 2, 5, 132], "collision_sphere_buff": [1, 2, 92, 132], "compute_jacobian": [1, 2, 3], "self_collision_buff": [1, 2, 132], "self_collision_ignor": [1, 2, 132], "debug": [1, 2, 5, 13, 33, 40, 46, 66, 89, 97, 101], "use_global_cumul": [1, 2, 3, 11, 132], "asset_root_path": [1, 2, 132], "mesh_link_nam": [1, 2, 5, 132], "load_link_names_with_mesh": [1, 2], "urdf_path": [1, 2, 3, 6, 20, 31, 72, 115, 132], "usd_path": [1, 2, 3, 7, 132], "usd_robot_root": [1, 2, 3, 7, 132], "isaac_usd_path": [1, 2, 132], "use_usd_kinemat": [1, 2, 132], "usd_flip_joint": [1, 2, 132], "usd_flip_joint_limit": [1, 2, 132], "lock_joint": [1, 2, 73, 97, 132], "extra_link": [1, 2, 4, 6, 7, 132], "add_object_link": [1, 2], "use_external_asset": [1, 2], "external_asset_path": [1, 2], "external_robot_configs_path": [1, 2], "extra_collision_spher": [1, 2, 132], "cspace": [1, 2, 3, 5, 67, 72, 132], "load_mesh": [1, 2, 6], "kinematics_config": [1, 2, 3, 119], "self_collision_config": [1, 2, 3], "initialize_tensor": [1, 2], "add_link": [1, 2], "add_fixed_link": [1, 2], "_build_chain": [1, 2], "_build_kinematics_tensor": [1, 2], "_build_kinemat": [1, 2], "_build_kinematics_with_lock_joint": [1, 2], "_build_collision_model": [1, 2], "_create_self_collision_thread_data": [1, 2], "_add_body_to_tre": [1, 2], "_get_joint_link": [1, 2], "_get_link_pos": [1, 2], "get_joint_limit": [1, 2, 3], "_get_joint_position_velocity_limit": [1, 2], "_update_joint_limit": [1, 2], "generator_config": [1, 3], "from_basic_urdf": [1, 3], "from_basic_usd": [1, 3], "from_robot_yaml_fil": [1, 3], "from_data_dict": [1, 3, 5], "from_config": [1, 3], "update_batch_s": [1, 3, 49, 50, 52, 54, 57, 61, 63, 65, 94, 97], "get_stat": [1, 3, 115], "get_robot_link_mesh": [1, 3], "get_robot_as_mesh": [1, 3], "get_robot_as_spher": [1, 3], "get_link_pos": [1, 3], "_cuda_forward": [1, 3], "all_articulated_joint_nam": [1, 3], "get_self_collision_config": [1, 3], "get_link_mesh": [1, 3, 4, 6], "get_link_transform": [1, 3], "get_all_link_transform": [1, 3], "get_dof": [1, 3, 115, 119], "joint_nam": [1, 2, 3, 4, 5, 46, 47, 67, 73, 85, 89, 94, 98, 101, 132], "total_spher": [1, 3, 5], "lock_jointst": [1, 3, 5], "update_kinematics_config": [1, 3], "retract_config": [1, 3, 5, 50, 61, 63, 94, 96, 97, 99, 100, 132], "joint_typ": [1, 4, 132], "fixed_transform": [1, 4, 5, 11, 132], "parent_link_nam": [1, 2, 4, 132], "joint_limit": [1, 4, 5, 49, 50], "joint_axi": [1, 4], "joint_id": [1, 4], "joint_velocity_limit": [1, 4], "from_dict": [1, 4, 20, 31, 32, 33, 46, 47, 48, 61, 63, 67, 72, 75, 81, 115, 119], "build_link_par": [1, 4, 6, 7], "get_chain": [1, 4], "_get_from_extra_link": [1, 4], "get_link_paramet": [1, 4, 6, 7], "add_absolute_path_to_link_mesh": [1, 4, 6], "fix": [1, 2, 5, 115, 116, 118, 122, 132], "x_prism": [1, 5], "y_prism": [1, 5], "z_prism": [1, 5], "x_rot": [1, 5], "y_rot": [1, 5], "z_rot": [1, 5], "x_prism_neg": [1, 5], "y_prism_neg": [1, 5], "z_prism_neg": [1, 5], "x_rot_neg": [1, 5], "y_rot_neg": [1, 5], "z_rot_neg": [1, 5], "posit": [1, 2, 5, 18, 20, 26, 29, 30, 31, 49, 50, 61, 65, 66, 67, 70, 71, 73, 84, 93, 97, 110, 115, 116, 117, 119, 120], "veloc": [1, 5, 47, 55, 61, 65, 67, 70, 73, 84], "jerk": [1, 5, 50, 61, 65, 67, 70, 73, 75, 79, 97, 104, 106, 120, 130], "effort": [1, 5], "clone": [1, 5, 20, 22, 26, 31, 46, 48, 49, 54, 66, 67, 69, 71, 73, 82, 89, 94, 97, 100, 101, 113, 119, 121, 132], "copy_": [1, 5, 46, 66, 67, 69, 71, 73], "cspace_distance_weight": [1, 5, 49, 50, 61, 63, 95, 132], "null_space_weight": [1, 5, 49, 50, 61, 63, 132], "max_acceler": [1, 5, 61, 63, 84, 132], "max_jerk": [1, 5, 61, 63, 84, 94, 95, 99, 132], "velocity_scal": [1, 5, 97], "acceleration_scal": [1, 5, 97], "jerk_scal": [1, 5, 97], "position_limit_clip": [1, 5], "inplace_reindex": [1, 5, 67, 73], "scale_joint_limit": [1, 5], "load_from_joint_limit": [1, 5], "link_map": [1, 5, 11], "joint_map": [1, 5, 11], "joint_map_typ": [1, 5, 11], "store_link_map": [1, 5, 11], "link_chain_map": [1, 5, 11], "non_fixed_joint_nam": [1, 5], "n_dof": [1, 5, 62], "link_spher": [1, 5, 85, 119], "link_sphere_idx_map": [1, 5, 11], "link_name_to_idx_map": [1, 5], "ee_idx": [1, 5], "reference_link_spher": [1, 5], "load_cspace_cfg_from_kinemat": [1, 5], "get_sphere_index_from_link_nam": [1, 5], "update_link_spher": [1, 5], "get_link_spher": [1, 5], "get_reference_link_spher": [1, 5], "attach_object": [1, 5], "detach_object": [1, 5], "get_number_of_spher": [1, 5], "disable_link_spher": [1, 5], "enable_link_spher": [1, 5], "offset": [1, 5, 54, 62, 71, 109, 132], "distance_threshold": [1, 5, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 92], "thread_loc": [1, 5, 9], "thread_max": [1, 5], "collision_matrix": [1, 5], "experimental_kernel": [1, 5, 9], "checks_per_thread": [1, 5, 9], "ee_posit": [1, 5, 115, 119], "ee_quaternion": [1, 5, 115, 119], "lin_jacobian": [1, 5], "ang_jacobian": [1, 5], "links_posit": [1, 5], "links_quaternion": [1, 5], "link_spheres_tensor": [1, 5, 11, 119], "ee_pos": [1, 5, 61, 63, 119], "link_pos": [1, 5, 61, 63, 85, 96, 97, 100], "_find_parent_joint_of_link": [1, 6], "_get_joint_nam": [1, 6], "get_urdf_str": [1, 6], "robot_prim_root": [1, 7], "_get_joint_transform": [1, 7], "devic": [2, 3, 5, 7, 26, 31, 33, 40, 43, 44, 45, 47, 48, 54, 62, 63, 67, 68, 69, 71, 72, 73, 76, 80, 81, 84, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100, 115, 117, 126], "index": [2, 3, 5, 7, 26, 31, 33, 40, 43, 44, 45, 47, 48, 54, 63, 68, 71, 72, 73, 80, 81, 84, 85, 86, 87, 91, 92, 93, 96, 97, 98, 99, 100, 126], "0": [2, 3, 5, 7, 9, 11, 15, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 109, 113, 115, 116, 117, 119, 120, 121, 122, 126, 127, 132], "dtype": [2, 3, 5, 7, 26, 31, 33, 40, 43, 44, 45, 47, 48, 54, 62, 63, 67, 68, 71, 72, 73, 80, 81, 84, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100, 115, 117], "torch": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 16, 18, 23, 25, 26, 28, 30, 31, 33, 40, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 68, 69, 71, 72, 73, 76, 80, 81, 82, 84, 85, 86, 87, 91, 92, 93, 96, 97, 98, 99, 100, 101, 113, 115, 117, 119, 120], "float32": [2, 3, 5, 7, 26, 31, 33, 40, 43, 44, 45, 47, 48, 50, 54, 62, 63, 68, 71, 72, 73, 80, 81, 84, 85, 86, 91, 92, 93, 96, 97, 98, 99, 100], "none": [2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 30, 31, 33, 35, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 69, 71, 72, 73, 79, 80, 81, 82, 84, 85, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 115, 119], "fals": [2, 3, 4, 6, 7, 9, 16, 25, 26, 27, 28, 31, 33, 34, 35, 38, 39, 40, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 71, 79, 80, 81, 83, 85, 88, 95, 96, 97, 98, 99, 100, 101, 109, 113, 115, 117, 119, 132], "true": [2, 3, 5, 9, 11, 16, 17, 23, 25, 26, 27, 28, 30, 31, 33, 38, 44, 47, 48, 50, 52, 54, 55, 60, 62, 66, 71, 78, 79, 80, 81, 84, 85, 86, 92, 93, 96, 97, 98, 99, 113, 115, 132], "object": [2, 3, 4, 5, 9, 11, 16, 20, 23, 25, 26, 28, 30, 31, 33, 34, 40, 44, 47, 48, 50, 51, 52, 54, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 80, 81, 85, 92, 93, 95, 96, 97, 98, 99, 100, 101, 115, 116, 118], "str": [2, 3, 4, 5, 6, 7, 26, 27, 28, 29, 31, 33, 47, 50, 54, 63, 66, 68, 69, 71, 73, 78, 80, 85, 88, 92, 93, 96, 97, 98, 99, 100, 119, 132], "list": [2, 3, 4, 5, 7, 10, 12, 13, 14, 18, 26, 27, 28, 29, 31, 33, 38, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 69, 71, 73, 77, 79, 80, 84, 85, 88, 93, 96, 97, 99, 100, 101, 114, 117, 132], "dict": [2, 3, 4, 5, 6, 7, 26, 31, 33, 40, 43, 44, 47, 48, 63, 66, 80, 85, 88, 92, 93, 96, 97, 98, 99, 100, 132], "ani": [2, 3, 5, 9, 11, 16, 23, 25, 30, 31, 33, 38, 39, 40, 42, 43, 44, 50, 52, 55, 60, 62, 71, 72, 96, 97, 99, 101, 110, 114, 115, 116, 117, 122, 126], "float": [2, 4, 5, 13, 14, 15, 26, 27, 29, 31, 33, 38, 39, 40, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 65, 66, 69, 71, 73, 79, 80, 81, 84, 85, 87, 91, 92, 93, 95, 96, 97, 98, 99, 101, 132], "bool": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 26, 27, 28, 31, 33, 35, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 65, 66, 71, 79, 80, 81, 84, 85, 88, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102], "int": [2, 3, 4, 5, 9, 10, 12, 13, 14, 15, 18, 26, 27, 28, 29, 31, 33, 38, 39, 40, 42, 43, 44, 45, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 65, 66, 68, 69, 71, 73, 77, 79, 80, 84, 85, 91, 93, 96, 97, 98, 99, 100, 101, 119], "name": [2, 3, 4, 5, 7, 20, 22, 26, 27, 28, 31, 46, 66, 67, 69, 71, 73, 85, 117, 119, 121, 132], "end": [2, 3, 4, 5, 33, 99, 112, 115, 116, 117, 124, 132], "effector": [2, 3, 4, 5, 112, 115, 116, 124, 132], "fill": [2, 4, 6, 7, 132], "occupi": 2, "http": [2, 45, 113, 118, 120, 121, 126, 127, 132], "doc": [2, 127], "omnivers": [2, 122, 126, 127], "nvidia": [2, 27, 28, 104, 106, 116, 117, 126, 127, 132], "com": [2, 45, 113, 118, 120, 121, 126, 127, 132], "app_isaacsim": 2, "advanced_tutori": 2, "tutorial_motion_generation_robot_description_editor": 2, "html": [2, 127], "radiu": [2, 20, 31, 33, 85, 115, 117, 132], "buffer": [2, 26, 38, 66, 71, 115, 117, 132], "pad": 2, "jacobian": [2, 5, 56], "self": [2, 4, 5, 6, 7, 10, 20, 22, 73, 115, 116, 119], "some": [2, 40, 71, 109, 113, 115, 116, 117, 118, 120, 121, 122, 126, 127, 132], "larg": [2, 116, 117], "avoid": [2, 104, 106, 116, 117, 118, 120, 126, 127, 132], "github": [2, 45, 113, 118, 120, 121, 126, 132], "ro": [2, 45, 128, 130, 132], "panda_moveit_config": 2, "pull": 2, "35": [2, 71], "issuecom": 2, "671333863": 2, "ignor": [2, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 132], "enabl": [2, 26, 27, 28, 40, 48, 49, 51, 54, 55, 71, 75, 81, 97, 98, 107, 108, 109, 114, 115, 116, 117, 118, 121, 125, 126, 132], "flag": [2, 7, 40, 55, 71, 117, 122], "write": [2, 127], "out": [2, 40, 43, 44, 85, 110, 115, 117], "cumul": 2, "matrix": [2, 12, 26, 30, 31, 40, 45, 71, 85], "global": [2, 104, 106, 115, 122, 126, 128], "allow": [2, 40, 47, 104, 106, 115, 118, 126, 127], "reus": 2, "dure": [2, 9, 11, 16, 23, 25, 30, 40, 47, 50, 52, 60, 62, 71, 109, 114, 117, 118, 121, 132], "15": [2, 95, 99, 132], "speedup": 2, "over": [2, 115, 117, 119, 125, 128], "recomput": 2, "path": [2, 3, 33, 35, 54, 84, 88, 97, 109, 113, 115, 116, 120, 121, 127, 132], "we": [2, 3, 26, 27, 28, 40, 47, 66, 87, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 132], "visual": [2, 31, 97, 116, 117, 118, 119], "export": [2, 113, 120, 121, 126], "when": [2, 28, 31, 55, 71, 97, 108, 114, 115, 116, 117, 118, 121, 122, 125, 126, 132], "root": [2, 85], "prim": [2, 7, 85, 127], "isaac": [2, 104, 105, 106, 108, 114, 117, 118, 121, 132], "server": 2, "chain": [2, 3, 116, 122, 125, 126, 127], "flip": 2, "lock": [2, 47, 54, 104, 105, 106, 109], "activ": [2, 54, 55, 109, 117, 118], "angl": [2, 11, 119], "dictionari": [2, 40, 43, 44, 47, 48, 115, 117, 132], "deprec": [2, 31], "n": [2, 5, 26, 27, 28, 31, 33, 39, 45, 63, 66, 71, 80, 84, 93, 96, 111, 117], "properti": [2, 3, 5, 7, 31, 43, 47, 51, 54, 63, 66, 69, 71, 72, 73, 96, 97, 98, 99, 101], "link_param": 2, "other_link": 2, "chain_link_nam": 2, "_type_": [2, 26, 31, 39, 47, 66, 73, 82, 87], "_description_": [2, 5, 9, 26, 28, 29, 31, 38, 47, 63, 66, 71, 73, 82, 85, 87, 88, 93, 96, 97, 98, 99, 119], "option": [2, 3, 4, 5, 7, 26, 28, 31, 33, 35, 38, 40, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 66, 69, 72, 73, 80, 87, 96, 97, 99, 100, 102, 117, 118, 119, 120], "default": [2, 3, 5, 7, 28, 29, 31, 35, 38, 44, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 85, 87, 96, 97, 99, 109, 117, 121, 127, 132], "collision_threshold": 2, "q": [2, 3, 15, 16, 38, 39, 45, 51, 53, 71, 76, 92, 93, 96, 97, 99, 115, 119], "return": [2, 3, 4, 5, 6, 7, 9, 11, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 35, 39, 40, 43, 44, 45, 47, 48, 50, 52, 54, 60, 62, 63, 65, 66, 71, 73, 76, 82, 84, 85, 87, 88, 93, 96, 97, 98, 99, 100, 101, 102, 110, 115, 116, 117, 118, 119], "static": [3, 4, 5, 9, 11, 16, 23, 25, 26, 30, 31, 33, 40, 43, 44, 47, 48, 50, 52, 60, 62, 63, 68, 71, 72, 73, 81, 85, 92, 93, 96, 97, 98, 99, 116, 118], "doe": [3, 5, 7, 27, 39, 40, 47, 63, 93, 109, 115, 116, 117, 122, 132], "queri": [3, 26, 54, 55, 97, 107, 110, 114, 115, 116, 117, 118, 122, 124, 126, 128], "file_path": [3, 20, 31, 72, 85, 88, 115, 117, 119], "data_dict": [3, 31, 40, 43, 44, 47, 48], "note": [3, 4, 5, 6, 7, 31, 36, 47, 55, 66, 87, 93, 97, 117], "dof": [3, 17, 32, 33, 35, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 73, 80, 93, 94, 96, 97, 99, 122, 125], "e": [3, 9, 11, 16, 23, 25, 30, 40, 50, 52, 60, 62, 71, 93, 97, 109, 113, 116, 118, 119, 122, 126, 127, 132], "g": [3, 9, 11, 16, 23, 25, 30, 31, 40, 50, 52, 60, 62, 71, 93, 97, 109, 116, 117, 118, 119, 122, 126, 127, 132], "serial": 3, "get": [3, 4, 5, 7, 31, 40, 43, 44, 93, 97, 113, 116, 119, 121, 126, 127], "correct": 3, "issu": [3, 126, 132], "cover": 3, "full": [3, 45, 116], "batch_siz": [3, 9, 17, 54, 61, 63, 65, 66, 94, 98, 100, 119], "force_upd": [3, 63, 65], "reset_buff": [3, 32, 33], "calculate_jacobian": 3, "filter_valid": 3, "new_kin_config": 3, "numpi": [4, 119], "ndarrai": [4, 29, 31, 43, 44, 45, 71, 73], "factori": [4, 31, 80], "dict_data": 4, "build": [4, 6, 7, 27, 113, 115, 118, 119, 132], "parent": [4, 6, 7], "each": [4, 6, 7, 9, 11, 16, 23, 25, 30, 31, 40, 43, 44, 45, 50, 52, 60, 62, 71, 107, 108, 114, 117, 126, 127, 132], "function": [4, 6, 7, 9, 11, 16, 20, 22, 23, 25, 26, 27, 28, 30, 38, 39, 40, 43, 44, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 93, 97, 110, 113, 115, 117, 119, 126], "_parent_map": [4, 6, 7], "attach": [4, 97, 114, 117, 132], "start": [4, 33, 35, 39, 40, 54, 97, 99, 108, 109, 113, 115, 116, 117, 118, 121, 132], "mesh_dir": [4, 6], "valu": [5, 7, 9, 11, 16, 23, 25, 26, 29, 30, 33, 39, 40, 43, 44, 45, 48, 50, 52, 54, 55, 56, 60, 62, 65, 70, 71, 83, 84, 96, 97, 99, 100, 113, 115, 117, 120, 132], "enumer": [5, 39, 43, 44, 45, 50, 52, 54, 56, 65, 70, 84, 100], "1": [5, 9, 11, 16, 17, 23, 25, 26, 27, 30, 31, 33, 35, 36, 38, 39, 42, 43, 44, 45, 47, 50, 52, 54, 55, 56, 58, 60, 62, 63, 65, 66, 70, 71, 76, 79, 80, 84, 85, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 111, 113, 115, 117, 119, 120, 121, 122, 125, 126, 127, 132], "2": [5, 9, 11, 16, 23, 25, 30, 36, 43, 44, 45, 50, 52, 54, 60, 62, 63, 65, 66, 70, 71, 80, 93, 96, 97, 99, 100, 104, 105, 106, 109, 113, 115, 117, 119, 120, 121, 122, 132], "3": [5, 26, 28, 30, 43, 45, 54, 65, 70, 71, 80, 87, 93, 97, 100, 104, 105, 106, 113, 115, 117, 119, 120, 132], "4": [5, 26, 27, 28, 30, 31, 55, 62, 65, 85, 93, 100, 104, 106, 113, 115, 117, 120, 121, 125, 132], "5": [5, 33, 35, 54, 63, 65, 84, 87, 100, 104, 106, 115, 117, 119, 120, 121, 122, 132], "7": [5, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 73, 113, 117, 119, 124], "8": [5, 84, 117, 119, 121, 126], "9": [5, 97, 108, 132], "10": [5, 33, 35, 38, 62, 84, 91, 93, 97, 113, 115, 117, 119, 128], "11": [5, 113, 121], "new_jl": 5, "t_dof": [5, 73], "union": [5, 26, 31, 38, 39, 42, 43, 44, 47, 52, 54, 56, 71, 73, 97], "500": [5, 95, 99, 117, 119, 132], "new_config": 5, "joint_position_upp": 5, "joint_position_low": 5, "sphere_position_radiu": 5, "start_sph_idx": 5, "distanc": [5, 10, 20, 22, 26, 27, 28, 32, 33, 54, 55, 56, 67, 69, 71, 93, 97, 110, 114, 115, 116, 117, 118, 119, 126], "param": [5, 26, 30, 45, 48, 73], "sphere_radiu": [5, 29, 96, 97, 99], "sphere_tensor": [5, 96, 97, 99], "attached_object": [5, 96, 97, 99, 132], "_summary_": 5, "rais": [5, 31, 47, 66, 99], "valueerror": [5, 47], "detach": [5, 67, 73, 108], "number": [5, 9, 11, 16, 23, 25, 26, 30, 31, 38, 39, 40, 44, 50, 52, 60, 62, 71, 97, 117, 122, 128], "32": [5, 9, 97], "store": [5, 9, 11, 16, 23, 25, 26, 27, 30, 40, 43, 44, 50, 52, 60, 62, 71, 97, 113, 115, 117, 119, 126], "attribut": [5, 9, 11, 16, 23, 25, 30, 40, 50, 52, 60, 62, 71], "inform": [5, 44, 97, 114, 115, 124], "x": [5, 7, 26, 28, 31, 39, 40, 45, 54, 60, 71, 82, 84, 109, 124], "y": [5, 7, 26, 28, 31, 54, 71, 84, 109, 111, 113, 121, 124, 132], "z": [5, 7, 26, 28, 31, 54, 71, 109, 124, 132], "meter": [5, 31, 54, 71, 109], "b": [5, 26, 27, 28, 31, 35, 38, 71, 93, 113], "defin": [5, 9, 11, 16, 23, 25, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 112], "linear": [5, 75, 84, 87, 97, 99, 109, 119, 124], "angular": [5, 71, 109], "specifi": [5, 7, 54, 109, 115, 116, 117], "quaternion": [5, 12, 30, 66, 67, 71, 114, 115, 119], "r": [5, 9, 11, 16, 23, 25, 30, 31, 50, 52, 60, 62, 71, 76, 110, 117], "mesh_root": 6, "idx": [6, 73, 77, 80, 97], "flip_joint": 7, "flip_joint_limit": 7, "more": [7, 9, 11, 16, 23, 25, 27, 29, 30, 45, 50, 52, 60, 62, 71, 114, 115, 116, 117, 132], "complet": [7, 108], "solut": [7, 40, 87, 94, 96, 97, 99, 104, 106, 115, 116, 119, 120, 125], "avail": [7, 28, 88, 110, 113, 115, 116, 117, 118, 121, 126], "futur": [7, 116], "releas": [7, 104, 105, 106, 116, 117, 128], "account": [7, 26, 117, 118, 121], "after": [7, 108, 116, 118], "stage": [7, 85, 108, 116], "specif": [7, 26, 40, 73, 113, 116, 126, 132], "uniform": 7, "token": 7, "physic": 7, "match": [7, 132], "becaus": 7, "assum": [7, 26, 27, 28, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 92, 116, 126, 127], "obtain": [7, 97, 104, 106, 110, 115, 116, 120], "body0_rel_target": 7, "body1_rel_target": 7, "child": [7, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "tupl": [7, 9, 11, 16, 23, 25, 29, 30, 50, 52, 60, 62, 71, 73, 93], "_backward_cl": [8, 9, 11, 16, 20, 22, 23, 25, 30, 49, 50, 52, 60, 61, 62, 67, 71], "_call_cuda": [8, 11, 16], "_call_backward_cuda": [8, 11], "out_dist": 9, "out_vec": 9, "sparse_index": 9, "robot_spher": [9, 11, 57, 61, 63], "collision_offset": 9, "weight": [9, 25, 26, 27, 28, 34, 40, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 116, 117], "coll_matrix": 9, "thread_siz": 9, "b_size": 9, "nsphere": 9, "compute_grad": 9, "arg": [9, 11, 16, 23, 25, 26, 27, 28, 30, 50, 52, 60, 62, 63, 64, 71, 78, 119], "kwarg": [9, 11, 16, 23, 25, 30, 47, 50, 52, 60, 62, 71, 78, 80], "ctx": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "sparse_idx": 9, "sphere_offset": 9, "max_thread": 9, "return_loss": [9, 25, 26, 27, 28, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "overridden": [9, 11, 16, 23, 25, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71], "subclass": [9, 11, 16, 23, 25, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 119], "There": [9, 11, 16, 23, 25, 27, 30, 50, 52, 60, 62, 71, 87, 117], "two": [9, 11, 16, 23, 25, 27, 30, 36, 50, 52, 60, 62, 66, 71, 107, 109, 116, 117, 118, 124, 126, 132], "wai": [9, 11, 16, 23, 25, 27, 30, 36, 50, 52, 60, 62, 66, 71, 117], "usag": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "combin": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 104, 106, 117, 128], "staticmethod": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "def": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 119], "It": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 115], "must": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "accept": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "context": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 126], "first": [9, 11, 16, 23, 25, 26, 30, 40, 50, 52, 60, 62, 71, 109, 110, 117, 118, 119], "argument": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 118, 126], "follow": [9, 11, 16, 23, 25, 30, 43, 44, 45, 50, 52, 60, 62, 71, 84, 104, 106, 108, 110, 113, 114, 115, 116, 118, 119, 120, 121, 132], "see": [9, 11, 16, 23, 25, 29, 30, 50, 52, 55, 60, 62, 71, 104, 105, 106, 108, 109, 115, 116, 118, 120, 129, 132], "detail": [9, 11, 16, 23, 25, 29, 30, 33, 48, 50, 52, 55, 60, 62, 71, 96, 99, 104, 105, 106, 114, 115, 116, 121, 132], "separ": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "setup_context": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "input": [9, 11, 16, 23, 25, 29, 30, 40, 45, 50, 52, 60, 62, 71, 110, 117, 118, 119, 125, 126], "output": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 97, 115, 117, 119, 125], "The": [9, 11, 16, 22, 23, 25, 30, 50, 52, 55, 60, 62, 71, 97, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 125, 132], "longer": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 120], "instead": [9, 11, 16, 23, 25, 30, 31, 40, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 71, 93, 109, 116, 117, 122, 126], "overrid": [9, 11, 16, 23, 25, 30, 39, 40, 50, 52, 60, 62, 71], "autograd": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "handl": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 132], "extend": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "arbitrari": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 115], "retriev": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "should": [9, 11, 16, 23, 25, 30, 39, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 117, 126, 132], "directli": [9, 11, 16, 23, 25, 30, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 113, 115, 116, 132], "though": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "enforc": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "compat": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "save": [9, 11, 16, 23, 25, 30, 40, 50, 52, 60, 62, 71, 75, 85, 117, 120], "either": [9, 11, 16, 23, 25, 30, 45, 50, 52, 60, 62, 71, 113, 127], "save_for_backward": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "thei": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "intend": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "equival": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "vjp": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "save_for_forward": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "jvp": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "grad_out_dist": 9, "formula": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "differenti": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 91, 93, 119], "oper": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 110], "mode": [9, 11, 16, 17, 23, 25, 27, 30, 43, 44, 50, 52, 54, 60, 62, 71, 97, 107, 116, 122], "automat": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 108, 109], "alia": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 113], "non": [9, 11, 16, 23, 25, 30, 50, 52, 55, 60, 62, 71, 116], "were": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 120], "gradient": [9, 11, 16, 23, 25, 26, 27, 28, 30, 38, 39, 50, 52, 60, 62, 71, 104, 106, 116, 118, 125], "w": [9, 11, 16, 23, 25, 30, 42, 43, 50, 52, 60, 62, 71, 110, 117, 129, 131], "t": [9, 11, 16, 23, 25, 26, 27, 28, 30, 50, 52, 60, 62, 71, 76, 96, 110, 117, 118, 119], "correspond": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "If": [9, 11, 16, 23, 25, 26, 27, 28, 30, 44, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 71, 113, 114, 115, 117, 118, 121, 126, 132], "requir": [9, 11, 16, 23, 25, 26, 28, 30, 31, 50, 52, 60, 62, 71, 113, 117, 118, 121, 132], "grad": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "just": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71, 132], "ha": [9, 11, 16, 23, 25, 26, 30, 44, 50, 52, 60, 62, 71, 91, 93, 113, 116, 117, 120, 122, 124, 126, 132], "needs_input_grad": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "boolean": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "whether": [9, 11, 16, 23, 25, 30, 50, 52, 60, 62, 71], "have": [9, 11, 16, 23, 25, 30, 39, 50, 52, 55, 60, 62, 71, 107, 109, 113, 115, 116, 117, 121, 122, 126, 127, 129, 132], "selfcollisiondistancebackward": 9, "selfcollisiondistancelossbackward": 9, "out_position_dist": 9, "out_rotation_dist": 9, "out_p_vec": 9, "out_q_vec": 9, "out_idx": 9, "current_posit": 9, "goal_posit": 9, "current_quat": [9, 71], "goal_quat": [9, 71], "vec_weight": [9, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "vec_converg": [9, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "run_weight": [9, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60], "run_vec_weight": [9, 49, 54], "offset_waypoint": [9, 49, 54], "offset_tstep_fract": [9, 49, 54], "batch_pose_idx": [9, 46, 54, 66], "horizon": [9, 17, 33, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 54, 58, 61, 62, 63, 65, 66, 75, 80, 87, 93, 108, 115, 117, 125], "num_goal": [9, 54], "write_grad": 9, "write_dist": 9, "use_metr": [9, 49, 54], "project_dist": [9, 49, 54], "out_grad_p": 9, "out_grad_q": 9, "grad_dist": 9, "grad_p_dist": 9, "grad_q_dist": 9, "pose_weight": [9, 93, 119], "grad_p_vec": 9, "grad_q_vec": 9, "use_dist": 9, "out_r_vec": 9, "out_p_grad": 9, "out_q_grad": 9, "grad_g_dist": 9, "grad_r_err": 9, "grad_out_idx": 9, "poseerrordistancebackward": 9, "error": [9, 94, 96, 97, 113, 115, 120, 122], "_extended_summary_": 9, "poseerrorbackward": 9, "query_spher": [9, 25, 26, 27, 28, 117, 126], "out_buff": [9, 71], "grad_out_buff": 9, "sparsity_idx": [9, 25], "activation_dist": [9, 25, 26, 27, 28, 49, 50, 55], "box_accel": 9, "box_dim": 9, "box_pos": 9, "box_en": 9, "n_env_obb": 9, "env_query_idx": [9, 25, 26, 27, 28, 55, 93, 117], "max_nob": 9, "n_sphere": [9, 27, 29, 31, 93, 115, 117], "transform_back": 9, "compute_dist": 9, "use_batch_env": [9, 33, 47, 96], "grad_output": [9, 16, 23, 25, 30], "sdfsphereobbbackward": 9, "speed_dt": [9, 25, 26, 27, 28, 49, 55], "sweep_step": [9, 25, 26, 27, 28, 49, 55], "enable_speed_metr": [9, 25, 26, 27, 28], "sdfsweptsphereobbbackward": 9, "arg0": [10, 12, 13, 14, 18], "arg1": [10, 12, 13, 14, 18], "arg2": [10, 12, 13, 14, 18], "arg3": [10, 12, 13, 14, 18], "arg4": [10, 12, 13, 14, 18], "arg5": [10, 12, 13, 14, 18], "arg6": [10, 12, 13, 14, 18], "arg7": [10, 12, 13, 14, 18], "arg8": [10, 12, 13, 14, 18], "arg9": [10, 12, 13, 14, 18], "arg10": [10, 12, 13, 14, 18], "arg11": [10, 12, 13, 14, 18], "arg12": [10, 12, 13, 14, 18], "arg13": [10, 12, 14, 18], "arg14": [10, 12, 14], "arg15": [10, 12, 14], "arg16": [10, 12], "arg17": [10, 12], "arg18": 10, "closest": [10, 117, 122], "point": [10, 20, 30, 31, 71, 93, 110, 116, 117, 122], "obb": [10, 26, 31, 117], "arg19": 10, "arg20": 10, "arg21": 10, "arg22": 10, "arg23": 10, "arg24": 10, "arg25": 10, "swept": 10, "in_mat": [11, 30], "out_quat": [11, 30], "link_pos_out": 11, "link_quat_out": 11, "robot_sphere_out": 11, "global_cumul_mat": 11, "link_sphere_map": 11, "grad_out": [11, 71], "sparsity_opt": 11, "link_po": 11, "link_quat": 11, "b_robot_spher": 11, "joint_seq": 11, "grad_out_link_po": 11, "grad_out_link_quat": 11, "grad_out_spher": 11, "kinematicsfusedfunctionbackward": 11, "kinematicsfusedglobalcumulfunctionbackward": 11, "link_pos_seq": [11, 61, 63], "link_quat_seq": [11, 61, 63], "batch_robot_spher": 11, "q_in": [11, 119], "grad_out_q": [11, 30], "fuse": 12, "rotat": [12, 26, 30, 66, 67, 71, 96, 97, 124], "bfg": [13, 104, 106, 128], "line": [14, 36, 40, 109, 121, 125, 128], "best": [14, 29, 41, 44, 125], "best_x": 15, "best_c": 15, "best_grad": 15, "g_x": 15, "x_set": [15, 33], "sv": 15, "c": [15, 113, 128, 130], "c_idx": 15, "c_1": 15, "c_2": 15, "al": 15, "sw": 15, "aw": 15, "best_cost": 15, "best_q": 15, "best_iter": 15, "current_iter": 15, "d_opt": [15, 38], "iter": [15, 39, 40, 97, 114, 117, 118], "delta_threshold": 15, "1e": [15, 119], "05": [15, 25, 33, 84, 92, 96, 97, 99, 115, 132], "relative_threshold": 15, "999": [15, 38, 39], "step_vec": 16, "rho_buff": [16, 38], "y_buffer": [16, 38], "s_buffer": [16, 38], "grad_q": [16, 38, 39], "x_0": 16, "grad_0": 16, "epsilon": [16, 37, 38], "stable_mod": [16, 37, 38], "lbfgscubackward": 16, "out_posit": [17, 30, 62], "out_veloc": [17, 62], "out_acceler": [17, 62], "out_jerk": [17, 62], "u_posit": 17, "start_posit": [17, 62], "start_veloc": [17, 62], "start_acceler": [17, 62], "start_idx": [17, 33, 62, 73], "traj_dt": [17, 62, 95, 97], "u_acc": 17, "use_rk2": 17, "out_grad_posit": [17, 62], "grad_posit": 17, "grad_veloc": 17, "grad_acceler": 17, "grad_jerk": 17, "path1": [19, 88], "path2": [19, 88], "sourc": [19, 28, 71, 88, 104, 105, 106, 113], "analyt": [20, 22, 26, 27, 28], "sign": [20, 22, 26, 27, 28, 115, 116, 117, 118, 119], "environ": [20, 22, 26, 27, 28, 66, 93, 96, 113, 118, 122, 132], "These": [20, 22, 107, 117], "sdf_grid": [20, 22], "lookup_dist": [20, 22, 23], "compute_sdf_gradi": [20, 22, 23], "sdfgrid": [20, 22, 23], "create_collision_check": [20, 22, 24], "warp_primit": [20, 22], "sdfmeshwarppi": [20, 22, 25], "sweptsdfmeshwarppi": [20, 22, 25], "collisionbuff": [20, 22, 26, 126], "collisionquerybuff": [20, 22, 26, 27, 28, 117], "collisioncheckertyp": [20, 22, 26, 93, 96, 97, 98, 99, 115], "worldcollisionconfig": [20, 22, 24, 26, 27, 28, 117], "worldcollis": [20, 22, 26, 33, 47, 48, 55, 91, 93, 96, 97, 98, 99, 117], "worldprimitivecollis": [20, 22, 26, 28, 117], "world_blox": [20, 22, 117, 118], "worldbloxcollis": [20, 22, 27, 117, 118], "world_mesh": [20, 22, 117], "warpmeshdata": [20, 22, 28], "worldmeshcollis": [20, 22, 27, 28, 117], "sample_surfac": [20, 29, 117], "voxel_surfac": [20, 29, 117], "voxel_volum": [20, 29, 117], "voxel_volume_insid": [20, 29, 117], "voxel_volume_sample_surfac": [20, 27, 29, 31, 97, 117], "metal": [20, 31, 85], "rough": [20, 31, 85, 126], "scale": [20, 31, 55, 67, 73, 85, 97, 117, 125], "color": [20, 31, 85, 107, 116, 117, 119], "texture_id": [20, 31], "textur": [20, 31], "get_trimesh_mesh": [20, 31], "save_as_mesh": [20, 31], "get_cuboid": [20, 31], "get_mesh": [20, 31], "get_transform_matrix": [20, 31], "get_spher": [20, 31], "get_bounding_spher": [20, 22, 27, 31, 117], "dim": [20, 26, 28, 31, 71, 73, 85, 115, 117, 119], "tip": [20, 31, 117], "height": [20, 26, 31, 85, 117], "file_str": [20, 31], "vertic": [20, 22, 28, 31], "face": [20, 22, 28, 31], "vertex_color": [20, 31], "vertex_norm": [20, 31], "face_color": [20, 31], "update_materi": [20, 31], "get_mesh_data": [20, 31], "from_pointcloud": [20, 31], "map_path": [20, 31], "voxel_s": [20, 26, 31], "integrator_typ": [20, 31], "mesh_file_path": [20, 31], "mapper_inst": [20, 31], "points_featur": [20, 31], "from_camera_observ": [20, 31], "blox": [20, 22, 26, 31, 97], "create_obb_world": [20, 31, 117], "create_mesh_world": [20, 31], "create_collision_support_world": [20, 31, 117], "get_scene_graph": [20, 31], "create_merged_mesh_world": [20, 31], "get_obb_world": [20, 31], "get_mesh_world": [20, 31], "get_collision_check_world": [20, 31], "save_world_as_mesh": [20, 31, 117], "get_cache_dict": [20, 31], "add_obstacl": [20, 31, 119], "randomize_color": [20, 31, 117], "add_color": [20, 31], "add_materi": [20, 31, 75, 85], "get_obstacl": [20, 31], "remove_obstacl": [20, 31], "remove_absolute_path": [20, 31], "_abc_impl": [20, 31, 46, 48, 61, 63, 64, 66, 67, 71, 73, 94, 96, 99], "neural": [22, 115], "network": [22, 104, 106, 115, 120], "learn": [22, 115], "field": [22, 43, 44, 118], "distance_buff": [22, 26], "grad_distance_buff": [22, 26], "sparsity_index_buff": [22, 26], "shape": [22, 26, 30, 39, 40, 43, 67, 69, 71, 73, 76, 80, 114, 115, 117, 119], "initialize_from_shap": [22, 26, 117], "_update_from_shap": [22, 26], "update_buffer_shap": [22, 26], "primitive_collision_buff": [22, 26], "mesh_collision_buff": [22, 26], "blox_collision_buff": [22, 26], "create_from_shap": [22, 26], "get_gradient_buff": [22, 26, 49, 55], "primit": [22, 26, 55, 98, 116, 117, 118, 126], "world_model": [22, 26, 27, 28, 33, 85, 90, 91, 93, 94, 96, 97, 99, 117, 119], "cach": [22, 26, 85, 117], "n_env": [22, 26, 28, 93, 94, 100, 126], "checker_typ": [22, 26], "max_dist": [22, 25, 26], "load_from_dict": [22, 26], "load_collision_model": [22, 26, 27, 28], "get_sphere_dist": [22, 26, 27, 28, 117], "get_sphere_collis": [22, 26, 27, 28], "get_swept_sphere_dist": [22, 26, 27, 28], "get_swept_sphere_collis": [22, 26, 27, 28], "get_sphere_trac": [22, 26], "_init_cach": [22, 26, 28], "load_batch_collision_model": [22, 26, 28], "_load_collision_model_in_cach": [22, 26], "_create_obb_cach": [22, 26], "add_obb_from_raw": [22, 26], "add_obb": [22, 26], "update_obb_dim": [22, 26], "enable_obstacl": [22, 26, 27, 28, 117], "enable_obb": [22, 26], "update_obstacle_pos": [22, 26, 28, 117], "update_obb_pos": [22, 26], "_get_obstacle_pos": [22, 26], "get_obb_idx": [22, 26], "clear_cach": [22, 26, 27, 28], "get_voxels_in_bounding_box": [22, 26], "get_mesh_in_bounding_box": [22, 26], "clear_blox_lay": [22, 27], "_get_blox_sdf": [22, 27], "_get_blox_swept_sdf": [22, 27], "enable_blox": [22, 27], "update_blox_pos": [22, 27], "clear_bounding_box": [22, 27], "add_camera_fram": [22, 27, 94, 97], "process_camera_fram": [22, 27, 94, 97], "update_blox_hash": [22, 27], "update_blox_esdf": [22, 27], "update_blox_mesh": [22, 27], "get_mesh_from_blox_lay": [22, 27], "save_lay": [22, 27], "decay_lay": [22, 27], "m_id": [22, 28], "_load_mesh_to_warp": [22, 28], "_load_mesh_into_cach": [22, 28], "_load_batch_mesh_to_warp": [22, 28], "add_mesh": [22, 28, 117], "get_mesh_idx": [22, 28], "create_collision_cach": [22, 28, 117], "_create_mesh_cach": [22, 28], "update_mesh_pos": [22, 28], "update_all_mesh_pos": [22, 28], "update_mesh_pose_env": [22, 28], "update_mesh_from_warp": [22, 28], "enable_mesh": [22, 28], "_get_sdf": [22, 28], "_get_swept_sdf": [22, 28], "pt": [23, 31, 33], "dist_matrix_flat": 23, "num_voxel": 23, "dist": 23, "sdfgridbackward": 23, "out_cost": [25, 50, 52], "out_grad": 25, "mesh_idx": 25, "mesh_pose_invers": 25, "mesh_en": 25, "n_env_mesh": 25, "sdfmeshwarppybackward": 25, "sweptsdfmeshwarppybackward": 25, "size": [26, 40, 71, 73, 114, 115, 117, 118, 122], "classmethod": [26, 47, 54, 66, 71, 79], "three": [26, 117, 124, 132], "main": [26, 117], "initi": [26, 35, 38, 39, 40, 42, 43, 44, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 71, 97, 110, 115, 117, 119, 128, 132], "collision_typ": [26, 117], "checker": [26, 97, 115, 116, 118, 126], "nonetyp": [26, 50, 51, 52, 53, 54, 56, 57, 58], "01": [26, 29, 38, 55, 69, 95, 97, 98, 99, 115, 122, 132], "world_coll_checker_dict": [26, 47], "world_model_dict": [26, 47], "collision_query_buff": [26, 27, 28], "via": [26, 27, 28], "don": [26, 27, 28, 118], "orient": [26, 31, 54, 71, 109, 116, 117], "bound": [26, 31, 32, 33, 40, 49, 50, 80, 84, 108, 117], "box": [26, 31, 116, 117], "For": [26, 66, 104, 106, 109, 116, 117, 118, 120, 129], "speed": [26, 55, 117, 132], "maximum": [26, 97], "instanti": 26, "read": [26, 108, 114, 116], "call": [26, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 71, 97, 107, 108, 111, 114, 115, 116, 122, 126], "world_config": [26, 85, 93, 115, 117], "env_idx": [26, 27, 28, 117], "fix_cache_refer": [26, 27, 28], "world_config_list": [26, 28], "obb_cach": [26, 28], "w_obj_pos": [26, 27, 28], "obj_w_pos": [26, 27, 28], "lenght": 26, "width": 26, "3x3": [26, 71], "obj_dim": [26, 28], "env_obj_idx": [26, 28], "dimens": [26, 28, 31, 122], "give": [26, 28, 115, 116], "obj_idx": [26, 28], "grid": [26, 116, 119], "02": [26, 31, 33, 84, 85, 97], "representaiton": 27, "nvblox": [27, 31, 104, 106, 107, 114, 115, 116, 117, 118, 120], "librari": [27, 28, 108, 116, 119, 121, 122, 126, 128], "depend": [27, 113], "pytorch": [27, 40, 91, 93, 114, 118, 121, 122, 126], "wrapper": [27, 118, 119, 127], "addition": [27, 127], "disk": [27, 115, 118], "onlin": 27, "both": [27, 33, 107, 132], "than": [27, 55, 104, 106, 114, 115, 117, 118, 128, 132], "against": 27, "facilit": 27, "creation": 27, "layer_nam": 27, "bounding_box": [27, 97], "obstacle_nam": [27, 97], "surface_sphere_radiu": [27, 29, 31, 97], "002": [27, 31, 132], "fit_typ": [27, 29, 31], "voxelize_method": [27, 29, 31, 97], "rai": [27, 29, 31, 97], "pre_transform_pos": [27, 31], "clear_region": 27, "camera_observ": [27, 97], "process_aux": [27, 97], "file_nam": [27, 120], "arrai": [28, 83, 84], "int64": [28, 33, 48], "compil": [28, 113, 121, 122, 126], "load_obb_ob": 28, "mesh_list": 28, "new_mesh": [28, 117], "mesh_cach": 28, "same": [28, 66, 71, 87], "warp_mesh_idx": 28, "env_mesh_idx": 28, "fit": [29, 31, 117], "here": [29, 38, 39, 45, 109, 113, 115, 117, 129, 132], "sampl": [29, 40, 41, 43, 44, 45, 80, 90, 93, 115, 116, 117, 119], "surfac": [29, 117], "voxel": [29, 97, 117, 118, 122], "intersect": [29, 117], "ocupio": [29, 117], "insid": [29, 117, 121, 122, 125], "along": [29, 39, 40, 43, 44, 63, 109, 110, 116, 117], "trimesh": [29, 31], "n_cube": 29, "out_point": 30, "out_gp": [30, 50, 52], "out_gq": 30, "out_gpt": 30, "adj_matrix": 30, "matric": 30, "real": [30, 116], "part": [30, 109, 119], "qw": [30, 31], "qx": [30, 31], "qy": [30, 31], "qz": [30, 31], "out_mat": 30, "adj_quaternion": 30, "out_matrix": [30, 71], "position2": 30, "quaternion2": 30, "out_quaternion": 30, "adj_po": 30, "adj_quat": 30, "adj_pos2": 30, "adj_quat2": 30, "adj_posit": 30, "adj_point": 30, "transformpointbackward": 30, "batchtransformpointbackward": 30, "adj_position2": 30, "adj_quaternion2": 30, "grad_out_posit": 30, "grad_out_quaternion": 30, "batchtransformposebackward": 30, "transformposebackward": 30, "poseinversebackward": 30, "grad_out_mat": 30, "quattomatrixbackward": 30, "adj_mat": 30, "matrixtoquaternionbackward": 30, "uniqu": 31, "appli": 31, "process_color": 31, "notimplementederror": [31, 66, 99], "deriv": [31, 38, 39, 40, 47], "transform_with_pos": 31, "homogen": 31, "np": [31, 43, 44, 45, 71, 73, 119], "x_length": 31, "y_length": 31, "z_length": 31, "pitch": 31, "world_pc": 31, "filter_close_point": 31, "tsdf": 31, "occup": [31, 118], "integr": [31, 63, 117, 118, 122], "camera_ob": [31, 92], "pc_obstacl": 31, "sequenc": [31, 43, 44, 45, 47, 63, 66, 71, 73, 96, 99, 108, 109], "current_world": 31, "merge_mesh": 31, "mesh_process": 31, "save_as_scene_graph": 31, "random": [31, 41, 43, 115, 117, 125], "within": [31, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 104, 106, 110, 113, 117, 118, 128], "rang": [31, 71, 117, 119], "rgba": 31, "_abc": [31, 48, 63, 64, 66, 71, 73, 96, 99], "_abc_data": [31, 48, 63, 64, 66, 71, 73, 96, 99], "success": [32, 33, 79, 94, 96, 97, 99, 115, 120, 122], "start_q": [32, 33], "goal_q": [32, 33], "path_length": [32, 33], "solve_tim": [32, 33, 79, 89, 94, 96, 97, 99, 101], "interpolated_plan": [32, 33, 94, 97], "valid_queri": [32, 33, 94, 97], "debug_info": [32, 33, 36, 38, 39, 40, 42, 43, 44, 94, 96, 97, 99], "optimized_dt": [32, 33, 94, 97, 99, 115], "path_buffer_last_tstep": [32, 33, 94, 97, 99], "node": [32, 33], "edg": [32, 33], "connect": [32, 33], "shortest_path_length": [32, 33], "set_shortest_path_length": [32, 33], "get_node_dist": [32, 33], "max_nod": [32, 33], "steer_delta_buff": [32, 33], "sample_pt": [32, 33], "node_similarity_dist": [32, 33], "rejection_ratio": [32, 33, 90, 91, 93], "k_nn": [32, 33, 35], "c_max": [32, 33, 35], "vertex_n": [32, 33], "graph_max_attempt": [32, 33], "graph_min_attempt": [32, 33], "init_nod": [32, 33], "use_bias_nod": [32, 33], "rollout_fn": [32, 33, 36, 38, 39, 40, 42, 43, 44, 46, 47, 66, 89, 94, 96, 98, 99, 101, 115], "safety_rollout_fn": [32, 33], "max_buff": [32, 33], "max_cg_buff": [32, 33], "compute_metr": [32, 33, 89, 94, 98, 99, 101], "interpolation_typ": [32, 33, 94, 97, 99], "interpolation_step": [32, 33, 85, 94, 97, 99], "seed": [32, 33, 40, 41, 42, 43, 44, 75, 80, 94, 96, 97, 99, 101, 102, 104, 106, 122, 125, 128], "use_cuda_graph_mask_sampl": [32, 33], "distance_weight": [32, 33], "bias_nod": [32, 33, 94, 99], "interpolation_dt": [32, 33, 84, 94, 97, 99, 115], "interpolation_devi": [32, 33], "interpolation_acceleration_scal": [32, 33], "load_from_robot_config": [32, 33, 94, 96, 97, 98, 99, 109, 115], "check_feas": [32, 33], "get_feasible_sample_set": [32, 33], "mask_sampl": [32, 33], "_mask_samples_cuda_graph": [32, 33], "_mask_sampl": [32, 33], "_cuda_graph_rollout_constraint": [32, 33], "get_sampl": [32, 33, 75, 80], "_sample_pt": [32, 33], "get_biased_vertex_set": [32, 33], "_compute_rotation_fram": [32, 33], "get_new_vertex_set": [32, 33], "validate_graph": [32, 33], "get_graph_edg": [32, 33], "get_graph": [32, 33], "_validate_graph": [32, 33], "_get_graph_shortest_path": [32, 33], "batch_get_graph_shortest_path": [32, 33], "batch_shortcut_path": [32, 33], "get_node_idx": [32, 33], "get_path_length": [32, 33, 34], "get_graph_shortest_path_length": [32, 33], "path_exist": [32, 33, 34], "batch_path_exist": [32, 33], "find_path": [32, 33], "_find_path": [32, 33, 35], "compute_path_length": [32, 33], "reset_graph": [32, 33, 34], "_distanc": [32, 33], "_hybrid_nearest": [32, 33], "_nearest": [32, 33], "_k_nearest": [32, 33], "_batch_k_nearest": [32, 33], "_near": [32, 33], "_batch_steer_and_connect": [32, 33], "_batch_steer": [32, 33], "_add_batch_edges_to_graph": [32, 33], "add_nodes_to_graph": [32, 33], "_add_unique_nodes_to_graph": [32, 33], "connect_nod": [32, 33], "get_path": [32, 33, 94, 97], "get_metr": [32, 33, 46, 47, 66, 89, 101], "reset_se": [32, 33, 36, 40, 41, 43, 46, 66, 89, 94, 96, 97, 99, 101], "reset_cuda_graph": [32, 33, 36, 37, 39, 40, 46, 47, 66, 89, 94, 96, 98, 99, 101], "get_all_rollout_inst": [32, 33, 36, 40, 89, 94, 96, 97, 99, 101], "warmup": [32, 33, 35, 94, 97, 115], "add_nod": [32, 34], "add_edg": [32, 34], "update_graph": [32, 34, 97], "get_edg": [32, 34], "get_shortest_path": [32, 34], "_add_bias_graph": [32, 35], "_find_one_path": [32, 35], "_find_all_path": [32, 35], "build_graph": [32, 35], "annot": [33, 48, 50, 96, 99], "__torchtyping__": [33, 48, 50, 96, 99], "cls_name": [33, 48, 50, 96, 99], "tensortyp": [33, 48, 50, 96, 99], "graph_dict": 33, "use_cuda_graph": [33, 36, 38, 39, 40, 42, 43, 44, 92, 94, 96, 97, 98, 99, 101, 115], "robot_cfg": [33, 47, 48, 63, 94, 96, 97, 98, 99, 115, 132], "world_coll_check": [33, 46, 47, 48, 49, 55, 94, 96, 97, 98, 99], "base_cfg_fil": [33, 96, 97, 99], "base_cfg": [33, 96, 97, 98, 99], "yml": [33, 93, 96, 97, 99, 115, 116, 119, 120, 124, 132], "graph_fil": [33, 97], "self_collision_check": [33, 96, 97, 98, 99, 115], "x_sampl": 33, "n_sampl": 33, "unit_bal": 33, "123": [33, 80], "x_start": [33, 35], "x_goal": [33, 35], "c_min": [33, 35], "lazi": [33, 35], "locat": [33, 108, 117, 118, 126, 132], "start_node_idx": [33, 34], "goal_node_idx": [33, 34], "return_length": [33, 34], "start_idx_list": 33, "goal_idx_list": 33, "g_path": 33, "goal_idx": [33, 52], "goal_stat": [33, 46, 66, 97, 99, 100], "exact": [33, 54, 109, 120], "all_path": [33, 35], "x_init": [33, 35], "abstract": [33, 40, 44, 47, 64, 65, 66, 117], "x_search": 33, "c_search": 33, "batch_pt": 33, "norm": [33, 76, 119], "sample_nod": 33, "k_n": 33, "sample_point": 33, "current_graph": 33, "k": 33, "start_nod": 33, "goal_nod": 33, "add_steer_pt": 33, "add_exact_nod": 33, "descript": [33, 35, 71, 96, 121, 132], "desired_nod": 33, "steer_radiu": 33, "new_nod": 33, "skip_unique_check": 33, "connect_mod": 33, "knn": 33, "edge_set": 33, "path_list": 33, "edge_list": 34, "node_list": 34, "start_i": 34, "end_i": 34, "attribu": 34, "x_init_batch": 35, "x_goal_batch": 35, "node_set_batch": 35, "node_set": 35, "find": [35, 40, 66, 97, 104, 106, 116, 117, 125], "return_path_length": 35, "h": [35, 62, 63], "number_of_nod": 35, "bias_sampl": 35, "lazy_nod": 35, "numer": [36, 104, 106], "opim": 36, "popular": 36, "particle_opt_bas": [36, 41, 42, 43], "particleoptbas": [36, 41, 43, 44, 101], "quasi": [36, 37, 40], "newton_bas": [36, 37, 38, 125], "newtonoptbas": [36, 37, 38, 39, 101, 125], "scheme": [36, 128], "tri": [36, 116, 117], "differ": [36, 55, 66, 97, 104, 106, 109, 113, 115, 117, 118, 126, 132], "magnitud": [36, 40], "parallel": [36, 40, 41, 42, 66, 104, 106, 116, 117, 125, 130], "choos": [36, 43, 44], "largest": 36, "satisfi": [36, 97, 116], "condit": 36, "lbfg": [36, 37, 125], "compute_step_direct": [36, 37, 38], "lbfgsoptconfig": [36, 37, 38], "lbfgsopt": [36, 37, 38], "linesearchtyp": [36, 37, 38, 39], "newtonoptconfig": [36, 37, 38, 39], "parallel_": [36, 41], "parallelesconfig": [36, 41, 42], "parallel_mppi": [36, 41, 42], "baseactiontyp": [36, 41, 42, 43], "covtyp": [36, 41, 42, 43], "parallelmppiconfig": [36, 41, 42, 43], "parallelmppi": [36, 41, 42, 43], "samplemod": [36, 41, 42, 43, 44], "particleoptinfo": [36, 41, 44], "particleoptconfig": [36, 41, 43, 44], "particle_opt_util": [36, 41, 42, 43], "squashtyp": [36, 41, 42, 43, 45], "scale_ctrl": [36, 41, 45], "get_stomp_cov": [36, 41, 45], "gaussian_logprob": [36, 41, 45], "gaussian_logprobgrad": [36, 41, 45], "gaussian_entropi": [36, 41, 45], "gaussian_kl": [36, 41, 45], "cost_to_go": [36, 41, 45], "cost_to_go_np": [36, 41, 45], "matrix_choleski": [36, 41, 45], "batch_choleski": [36, 41, 45], "d_action": [36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 66, 75, 80], "action_low": [36, 38, 39, 40, 42, 43, 44, 45], "action_high": [36, 38, 39, 40, 42, 43, 44, 45], "action_horizon": [36, 38, 39, 40, 42, 43, 44, 46, 47, 61, 63, 66], "n_iter": [36, 38, 39, 40, 42, 43, 44], "cold_start_n_it": [36, 38, 39, 40, 42, 43, 44], "store_debug": [36, 38, 39, 40, 42, 43, 44, 96, 99], "n_problem": [36, 38, 39, 40, 42, 43, 44, 101], "num_particl": [36, 38, 39, 40, 42, 43, 44, 47, 80], "sync_cuda_tim": [36, 38, 39, 40, 42, 43, 44, 89, 94, 96, 97, 98, 99, 101], "use_coo_spars": [36, 38, 39, 40, 42, 43, 44], "create_data_dict": [36, 40, 41, 43, 44], "update_param": [36, 40, 46, 47, 48, 66, 89, 101], "reset": [36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 66, 75, 80, 81, 89, 94, 97, 98, 101, 102, 122], "update_nproblem": [36, 37, 38, 39, 40, 41, 44, 89, 101], "get_nproblem_tensor": [36, 40], "reset_shap": [36, 40, 46, 47, 66, 89, 94, 96, 99, 101], "_optim": [36, 37, 39, 40, 41, 44], "_shift": [36, 37, 38, 39, 40, 89, 102], "_update_problem_kernel": [36, 40], "histori": [37, 38, 118], "use_cuda_kernel": [37, 38], "init_hessian": [37, 38], "_get_step_direct": [37, 38, 39], "_update_q": [37, 38], "_update_r": [37, 38], "_update_buff": [37, 38], "_shift_buff": [37, 38], "greedi": [37, 39], "armijo": [37, 39], "wolf": [37, 39], "strong_wolf": [37, 39], "approx_wolf": [37, 39], "line_search_scal": [37, 38, 39], "cost_converg": [37, 38, 39], "cost_delta_threshold": [37, 38, 39], "fixed_it": [37, 38, 39, 99], "inner_it": [37, 38, 39], "line_search_typ": [37, 38, 39], "use_cuda_line_search_kernel": [37, 38, 39], "use_cuda_update_best_kernel": [37, 38, 39], "min_it": [37, 38, 39], "step_scal": [37, 38, 39], "last_best": [37, 38, 39], "use_temporal_smooth": [37, 38, 39], "cost_relative_threshold": [37, 38, 39], "_opt_it": [37, 39], "_opt_step": [37, 39], "clip_bound": [37, 39], "scale_step_direct": [37, 39], "project_bound": [37, 39], "_compute_cost_gradi": [37, 39], "_wolfe_line_search": [37, 39], "_greedy_line_search": [37, 39], "_armijo_line_search": [37, 39], "_approx_line_search": [37, 39], "check_converg": [37, 39, 41, 44], "_update_best": [37, 39], "_initialize_opt_iters_graph": [37, 39], "_create_box_line_search": [37, 39], "_call_opt_iters_graph": [37, 39], "_create_opt_iters_graph": [37, 39], "alpha_buff": 38, "m": [38, 113, 118, 132], "problem": [38, 39, 40, 43, 44, 97, 109, 111, 114, 115, 117, 120, 122, 126, 128], "reimplement": [38, 39], "descent": [38, 39, 104, 106, 125], "r_init": 38, "shift_step": [38, 39, 40, 44, 47, 63, 66, 98, 101, 102], "shift": [38, 39, 40, 62], "shift_d": 38, "workaround": [39, 40], "variabl": [39, 40, 63, 113, 126, 129, 131], "hotstart": [39, 40], "next": [39, 40, 44, 114, 116, 118, 119, 132], "timestep": [39, 40, 54, 55, 85, 87, 97, 109, 122], "opt_tensor": [39, 40], "mpc": [39, 40, 89, 94, 116, 118], "warm": [39, 40], "run": [39, 40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 97, 104, 106, 113, 114, 115, 116, 118, 119, 121, 125, 132], "dx": 39, "step_direct": 39, "per": [40, 97, 116, 117, 126], "lower": [40, 116, 120, 122], "higher": [40, 120], "total": 40, "like": [40, 132], "cold": 40, "few": [40, 109, 116, 125], "captur": [40, 114, 115], "replai": [40, 97, 114], "eager": 40, "execut": [40, 43, 44, 97, 116, 120], "make": [40, 87, 113, 115, 121], "10x": [40, 97, 114, 115], "faster": [40, 97, 104, 106, 114, 117, 128], "But": [40, 122], "chang": [40, 97, 107, 109, 113, 114, 115, 116, 118, 120, 122], "control": [40, 43, 44, 98, 129, 131], "flow": [40, 117], "record": [40, 97, 114, 115], "everi": [40, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 116, 118, 126], "disabl": [40, 97, 108, 126], "mppi": [40, 104, 106, 118, 125, 129, 131], "roll": [40, 43, 44], "mean": [40, 41, 43, 44, 45, 115, 119, 120], "synchron": 40, "befor": [40, 97, 113, 116, 120, 121, 125, 126, 132], "time": [40, 63, 75, 79, 84, 115, 116, 117, 120, 126], "matmul": 40, "spars": [40, 122], "version": [40, 113, 121], "do": [40, 71, 115, 116, 117, 121, 132], "coo": 40, "profil": 40, "child_dict": [40, 43, 44], "through": [40, 55, 109, 110, 113, 116, 117, 118, 119], "n_particl": 40, "reiniti": [40, 122], "learning_r": [41, 42], "_compute_mean": [41, 42, 43], "_exp_util": [41, 42, 43], "repeat": [41, 43, 67, 71, 109, 119, 126], "null": [41, 43, 56, 132], "sigma_i": [41, 43], "diag_a": [41, 43], "full_a": [41, 43], "full_ha": [41, 43], "init_mean": [41, 42, 43], "init_cov": [41, 42, 43], "base_act": [41, 42, 43], "step_size_mean": [41, 42, 43], "step_size_cov": [41, 42, 43], "null_act_frac": [41, 42, 43], "squash_fn": [41, 42, 43, 45], "cov_typ": [41, 42, 43, 45], "sample_param": [41, 42, 43], "update_cov": [41, 42, 43], "random_mean": [41, 42, 43], "beta": [41, 42, 43], "alpha": [41, 42, 43], "gamma": [41, 42, 43, 44], "kappa": [41, 42, 43], "sample_per_problem": [41, 42, 43], "get_rollout": [41, 43, 89, 102], "reset_distribut": [41, 43], "_compute_total_cost": [41, 43], "_compute_covari": [41, 43], "_update_cov_scal": [41, 43], "_update_distribut": [41, 43, 44], "sample_act": [41, 43, 44], "update_se": [41, 43, 44], "update_init_mean": [41, 43], "reset_mean": [41, 43], "reset_covari": [41, 43], "_get_action_seq": [41, 43, 44], "_calc_val": [41, 43, 44], "squashed_mean": [41, 43], "full_cov": [41, 43], "full_inv_cov": [41, 43], "full_scale_tril": [41, 43], "entropi": [41, 43, 45], "update_sampl": [41, 43], "generate_rollout": [41, 43, 44], "info": [41, 44, 45, 78, 113], "sample_mod": [41, 42, 43, 44], "calculate_valu": [41, 42, 43, 44], "store_rollout": [41, 42, 43, 44, 98], "_initialize_cuda_graph": [41, 44], "_call_cuda_opt_it": [41, 44], "_run_opt_it": [41, 44], "update_num_particles_per_problem": [41, 44], "clamp": [41, 45], "clamp_rescal": [41, 45], "tanh": [41, 45, 119], "ident": [41, 45, 49, 56], "total_cost": [42, 43], "distribut": [43, 44], "calcul": [43, 44, 45], "exponenti": 43, "observ": [43, 44], "init_act": [43, 44], "system": [43, 44, 84, 129, 131], "how": [43, 44, 113, 114, 115, 116, 117, 119], "plai": [43, 44, 109, 113, 116, 118, 132], "base_se": [43, 80], "correl": [43, 80], "noisi": [43, 80, 128], "autoregress": [43, 80], "polici": [43, 44, 104, 106, 120], "result": [43, 44, 85, 96, 97, 99, 104, 106, 107, 115, 117], "simul": [43, 44, 47, 116, 118], "converg": 44, "calc_val": 44, "estim": [44, 128], "side": 44, "num_particles_per_problem": 44, "ctrl": 45, "cov_mod": [45, 75, 80], "acc": [45, 50], "return_m": 45, "covari": 45, "stomp": 45, "motion": [45, 88, 97, 104, 106, 109, 113, 117, 124, 129, 130, 131, 132], "planner": [45, 55, 97, 104, 106, 107, 111, 128], "coeffici": 45, "en": 45, "wikipedia": 45, "org": [45, 113, 132], "wiki": [45, 132], "finite_difference_coeffici": 45, "industri": [45, 132], "stomp_ro": 45, "blob": 45, "7fe40fbe6ad446459d8d4889916c64e276dbf882": 45, "stomp_cor": 45, "src": [45, 132], "cpp": 45, "l36": 45, "cov": [45, 80], "gaussian": [45, 80], "log": [45, 85, 119, 120], "prob": 45, "num_sampl": [45, 80], "log_prob": 45, "probabl": 45, "multivari": 45, "choleski": 45, "decomposit": 45, "mean0": 45, "cov0": 45, "mean1": 45, "cov1": 45, "kl": 45, "diverg": 45, "p": [45, 113, 120], "e_": [45, 119], "cost_seq": 45, "gamma_seq": 45, "only_first": 45, "discount": 45, "go": [45, 109, 115, 118, 119], "bound_cost": [46, 47, 48, 49, 90, 91, 93], "boundcosttyp": [46, 49, 50], "boundcostconfig": [46, 47, 48, 49, 50], "boundcost": [46, 49, 50, 91, 93], "warpboundsmoothfunct": [46, 49, 50], "warpboundfunct": [46, 49, 50], "warpboundposfunct": [46, 49, 50], "warpboundposloss": [46, 49, 50], "cost_bas": [46, 48, 49], "costconfig": [46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "costbas": [46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60], "dist_cost": [46, 47, 48, 49, 56], "disttyp": [46, 49, 52, 56], "distcostconfig": [46, 47, 48, 49, 52, 56], "l2distfunct": [46, 49, 52], "distcost": [46, 48, 49, 52, 56], "manipulability_cost": [46, 47, 48, 49], "manipulabilitycostconfig": [46, 47, 48, 49, 53], "manipulabilitycost": [46, 49, 53], "pose_cost": [46, 48, 49, 90, 91, 93, 109], "poseerrortyp": [46, 49, 54], "posecostconfig": [46, 48, 49, 54], "posecostmetr": [46, 48, 49, 54, 96, 97, 99, 109], "posecost": [46, 48, 49, 54, 91, 93], "primitive_collision_cost": [46, 47, 48, 49, 91, 93, 117], "primitivecollisioncostconfig": [46, 47, 48, 49, 55, 117], "primitivecollisioncost": [46, 49, 55, 91, 93], "projected_dist_cost": [46, 49], "projtyp": [46, 49, 56], "projecteddistcostconfig": [46, 49, 56], "projecteddistcost": [46, 49, 56], "self_collision_cost": [46, 47, 48, 49, 90, 91, 93, 119], "selfcollisioncostconfig": [46, 47, 48, 49, 57], "selfcollisioncost": [46, 49, 57, 91, 93], "stop_cost": [46, 47, 48, 49], "stopcostconfig": [46, 47, 48, 49, 58], "stopcost": [46, 49, 58], "straight_line_cost": [46, 49], "straightlinecost": [46, 49, 59], "zero_cost": [46, 49], "squaredsum": [46, 49, 60], "runsquaredsum": [46, 49, 60], "zerocost": [46, 49, 60], "integration_util": [46, 61], "build_clique_matrix": [46, 61, 62], "build_fd_matrix": [46, 61, 62], "build_int_matrix": [46, 61, 62], "build_start_state_mask": [46, 61, 62], "tensor_step_jerk": [46, 61, 62], "euler_integr": [46, 61, 62], "tensor_step_acc": [46, 61, 62], "cliquetensorstep": [46, 61, 62], "cliquetensorstepkernel": [46, 61, 62], "cliquetensorstepidxkernel": [46, 61, 62], "cliquetensorstepcentraldifferencekernel": [46, 61, 62], "cliquetensorstepidxcentraldifferencekernel": [46, 61, 62], "cliquetensorstepcoalescekernel": [46, 61, 62], "accelerationtensorstepkernel": [46, 61, 62], "accelerationtensorstepidxkernel": [46, 61, 62], "tensor_step_pos_cliqu": [46, 61, 62], "step_acc_semi_eul": [46, 61, 62], "tensor_step_acc_semi_eul": [46, 61, 62], "tensor_step_vel": [46, 61, 62], "tensor_step_po": [46, 61, 62], "tensor_step_pos_ik": [46, 61, 62], "tensor_linspac": [46, 61, 62], "sum_matrix": [46, 61, 62], "interpolate_kernel": [46, 61, 62], "action_interpolate_kernel": [46, 61, 62], "kinematic_model": [46, 47, 48, 58, 61], "timetrajconfig": [46, 58, 61, 63], "kinematicmodelst": [46, 47, 48, 61, 63, 97], "kinematicmodelconfig": [46, 47, 48, 61, 63], "kinematicmodel": [46, 61, 63], "model_bas": [46, 61], "dynamicsmodelbas": [46, 61, 64], "tensorsteptyp": [46, 61, 65], "tensorstepbas": [46, 61, 65], "tensorstepacceler": [46, 61, 65], "tensorsteppositionteleport": [46, 61, 65], "tensorstepposit": [46, 61, 65], "tensorsteppositioncliqu": [46, 61, 65], "tensorstepaccelerationkernel": [46, 61, 65], "tensorsteppositioncliquekernel": [46, 61, 65], "bound_cfg": [46, 47, 48], "null_space_cfg": [46, 47, 48], "manipulability_cfg": [46, 47, 48], "stop_cfg": [46, 47, 48], "self_collision_cfg": [46, 47, 48], "primitive_collision_cfg": [46, 47, 48], "_get_base_kei": [46, 47, 48], "_get_formatted_dict": [46, 47], "model_cfg": [46, 47, 48], "cost_cfg": [46, 47, 48], "constraint_cfg": [46, 47, 48], "convergence_cfg": [46, 47, 48], "model_from_dict": [46, 47], "cost_from_dict": [46, 47, 48], "world_coll_checker_from_dict": [46, 47], "_init_after_config_load": [46, 47, 66], "cost_fn": [46, 47, 48, 66], "constraint_fn": [46, 47, 66], "get_metrics_cuda_graph": [46, 47, 66], "convergence_fn": [46, 47, 48, 66], "_get_augmented_st": [46, 47], "compute_kinemat": [46, 47, 94, 97, 115], "rollout_constraint": [46, 47, 66], "rollout_constraint_cuda_graph": [46, 47], "get_ee_pos": [46, 47], "current_cost": [46, 47, 66], "filter_robot_st": [46, 47, 61, 63, 64, 66], "get_robot_command": [46, 47, 61, 63, 64, 66], "action_bound_low": [46, 47, 61, 63, 66], "action_bound_high": [46, 47, 61, 63, 66], "state_bound": [46, 47, 66], "dt": [46, 47, 50, 51, 55, 62, 63, 64, 65, 66, 73, 75, 81, 84, 85, 97, 99, 116, 119], "get_init_action_seq": [46, 47, 66], "get_action_from_st": [46, 47, 61, 63, 66], "get_state_from_act": [46, 47, 61, 63, 66], "cspace_config": [46, 47, 66], "get_full_dof_from_solut": [46, 47, 66], "retract_st": [46, 47, 66], "update_traj_dt": [46, 47, 61, 63], "update_cost_dt": [46, 47], "cspace_error": [46, 48, 94, 97, 99], "position_error": [46, 48, 79, 94, 96, 97, 99], "rotation_error": [46, 48, 94, 96, 97, 99], "pose_error": [46, 48], "goalset_index": [46, 48, 94, 96, 97, 99], "null_space_error": [46, 48], "pose_cfg": [46, 48], "cspace_cfg": [46, 48], "straight_line_cfg": [46, 48], "zero_acc_cfg": [46, 48], "zero_vel_cfg": [46, 48], "zero_jerk_cfg": [46, 48], "link_pose_cfg": [46, 48], "enable_pose_cost": [46, 48, 94, 98], "enable_cspace_cost": [46, 48, 94, 98], "get_pose_cost": [46, 48], "update_pose_cost_metr": [46, 48, 94, 96, 97, 99], "constraint": [46, 48, 54, 66, 97, 109, 114, 116], "feasibl": [46, 48, 66], "goal_pos": [46, 54, 66, 85, 94, 96, 97, 100], "links_goal_pos": [46, 66], "current_st": [46, 47, 63, 64, 66, 80, 98], "batch_goal_state_idx": [46, 66], "batch_retract_state_idx": [46, 66], "batch_current_state_idx": [46, 66], "batch_enable_idx": [46, 66], "batch_world_idx": [46, 66], "update_batch_idx_buff": [46, 66], "n_goalset": [46, 66, 67, 71, 94, 97, 100], "_update_batch_s": [46, 66, 94, 98], "repeat_se": [46, 66, 67, 71, 73], "_tensor_repeat_se": [46, 66], "apply_kernel": [46, 66, 67, 71, 73], "_copy_buff": [46, 66], "_copy_tensor": [46, 66], "get_batch_goal_st": [46, 66], "create_index_buff": [46, 66], "create_idx": [46, 66], "action_bound": [46, 66], "update_start_st": [46, 66], "sample_random_act": [46, 66], "robot_config": [47, 61, 63, 93, 94, 96, 99], "cost_key_list": 47, "model_data_dict": 47, "cost_data_dict": [47, 48], "constraint_data_dict": 47, "convergence_data_dict": 47, "declar": 47, "reach": [47, 54, 97, 109, 112, 116, 118], "cartesian": [47, 97, 115, 132], "action_batch": [47, 48], "return_list": 47, "out_metr": [47, 48, 66], "todo": [47, 63, 82], "urdfmodelst": 47, "act_seq": [47, 63, 64, 66, 101, 102], "encount": 47, "action_seq": 47, "d_act": 47, "target": [47, 52, 66, 97, 107, 109, 113, 116, 118], "no_col": 47, "return_st": 47, "state_idx": [47, 63, 66], "start_stat": [47, 63, 64, 65, 66, 85, 97, 99, 115], "q_j": [47, 66], "q_sol": 47, "base_dt": [47, 61, 63, 99], "max_dt": [47, 61, 63, 94, 95, 99], "base_ratio": [47, 61, 63, 99], "t_bvalue_float": [48, 66], "t_bvalue_bool": [48, 66], "clone_st": [48, 66], "term": [48, 116, 125], "dynam": [48, 118], "include_link_pos": 48, "include_converg": 48, "bounds_smooth": [49, 50], "smooth_weight": [49, 50, 97, 99], "run_weight_veloc": [49, 50], "run_weight_acceler": [49, 50], "run_weight_jerk": [49, 50], "cost_typ": [49, 50, 54], "state_finite_difference_mod": [49, 50, 61, 63, 97, 99], "set_bound": [49, 50], "update_dt": [49, 50, 51, 55, 61, 63, 65], "classifi": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "termin": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 116], "max_valu": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "hinge_valu": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "threshold_valu": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "update_vec_weight": [49, 51], "_init_post_config": [49, 51, 52], "disable_cost": [49, 51], "enable_cost": [49, 51], "update_weight": [49, 51], "l1": [49, 52], "l2": [49, 52, 56, 97], "squared_l2": [49, 52], "dist_typ": [49, 52, 56], "use_null_spac": [49, 52, 56], "forward_target": [49, 52], "forward_target_idx": [49, 52], "use_joint_limit": [49, 53], "manipul": [49, 53, 108, 117, 118, 128, 129, 131], "joint_limited_manipulability_delta": [49, 53], "single_go": [49, 54], "batch_goal": [49, 54], "goalset": [49, 54, 71, 94, 97, 100], "batch_goalset": [49, 54, 94, 100], "use_projected_dist": [49, 54], "hold_partial_pos": [49, 54], "release_partial_pos": [49, 54], "hold_vec_weight": [49, 54, 109], "reach_partial_pos": [49, 54], "reach_full_pos": [49, 54], "reach_vec_weight": [49, 54], "offset_posit": [49, 54, 109], "offset_rot": [49, 54], "remove_offset_waypoint": [49, 54], "create_grasp_approach_metr": [49, 54, 109], "reset_metr": [49, 54], "update_metr": [49, 54], "update_offset_waypoint": [49, 54], "update_run_weight": [49, 54], "goalset_index_buff": [49, 54], "_forward_goal_distribut": [49, 54], "_forward_single_go": [49, 54], "_forward_pytorch": [49, 54], "_update_cost_typ": [49, 54], "forward_out_dist": [49, 54], "forward_pos": [49, 54], "use_sweep": [49, 55], "use_sweep_kernel": [49, 55], "use_speed_metr": [49, 55], "sum_dist": [49, 55], "sweep_kernel_fn": [49, 55], "sweep_fn": [49, 55], "discrete_fn": [49, 55], "pseudo_invers": [49, 56], "ep": [49, 56, 80], "proj_typ": [49, 56], "get_pinv_null_disp": [49, 56], "self_collision_kin_config": [49, 57], "max_limit": [49, 58], "max_nlimit": [49, 58], "dt_traj_param": [49, 58, 61, 63], "teleport_mod": [50, 61, 63, 75, 81], "state_batch": 50, "retract_idx": 50, "perform": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 87, 104, 106, 107, 116, 117, 128, 132], "although": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "recip": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "afterward": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "sinc": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 108, 109, 116, 117, 118], "former": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "care": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "regist": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "hook": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "latter": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "silent": [50, 51, 52, 53, 54, 56, 57, 58, 59, 60], "po": [50, 52], "vel": [50, 58, 80], "p_b": 50, "v_b": 50, "a_b": 50, "j_b": 50, "cspace_weight": 50, "run_weight_vel": 50, "run_weight_acc": 50, "out_gv": 50, "out_ga": 50, "out_gj": 50, "grad_out_cost": [50, 52, 60], "warpboundsmoothfunctionbackward": 50, "warpboundfunctionbackward": 50, "p_l": 50, "warpboundposfunctionbackward": 50, "warpboundposlossbackward": 50, "target_idx": 52, "out_cost_v": 52, "l2distfunctionbackward": 52, "disp_vec": [52, 56], "return_goal_dist": 52, "goal_vec": 52, "current_vec": 52, "jac_batch": [53, 56], "qdot": 53, "pairwis": 54, "shortest": 54, "linear_axi": [54, 109], "tstep_fract": [54, 109], "move": [54, 55, 63, 107, 108, 109, 113, 116, 118, 126, 132], "pregrasp": 54, "movement": 54, "final": [54, 97, 109, 110], "grasp": [54, 108, 117], "ad": [54, 104, 105, 106, 109, 116, 120], "try": [54, 109, 116, 118, 126], "blend": [54, 67, 73, 109], "without": [54, 109, 110, 117, 128], "stop": [54, 109, 116], "fraction": [54, 109], "75": [54, 120], "run_tstep_fract": 54, "ee_pos_batch": [54, 59], "ee_rot_batch": 54, "ee_goal_po": 54, "ee_goal_rot": 54, "query_pos": 54, "sweep": 55, "similar": [55, 116, 132], "chomp": [55, 117], "icra": [55, 128, 129, 131], "09": [55, 122], "prevent": 55, "minim": 55, "encourag": [55, 104, 106], "around": [55, 116, 118], "central": 55, "less": [55, 117, 118, 122, 132], "better": [55, 117], "lead": [55, 114, 128], "outsid": [55, 115, 117], "zero": [55, 60, 67, 73, 115, 117], "slowli": 55, "our": [55, 87, 104, 106, 116, 117, 126, 128], "post": [55, 117], "interpol": [55, 84, 87, 97, 116], "hit": [55, 122], "sum": [55, 97, 117, 118], "across": [55, 97, 104, 106, 107, 109, 117, 118, 126], "formul": [55, 109, 128], "robot_spheres_in": 55, "project": [56, 117, 129], "space": [56, 97, 119], "0001": 56, "cost_vec": 60, "squaredsumbackward": 60, "runsquaredsumbackward": 60, "goal_dist": 60, "get_dt_arrai": [61, 63], "state_seq": [61, 62, 63], "ee_pos_seq": [61, 63, 115], "ee_quat_seq": [61, 63, 115], "lin_jac_seq": [61, 63], "ang_jac_seq": [61, 63], "vel_scal": [61, 63], "state_estimation_vari": [61, 63], "control_spac": [61, 63, 75, 81], "state_filter_cfg": [61, 63], "return_full_act_buff": [61, 63], "filter_robot_command": [61, 63, 97, 99], "get_next_st": [61, 63, 64], "robot_cmd_tensor_step": [61, 63], "update_cmd_batch_s": [61, 63], "integrate_act": [61, 63], "integrate_action_step": [61, 63], "init_action_mean": [61, 63], "get_state_bound": [61, 63], "position_teleport": [61, 65], "position_clique_kernel": [61, 65], "acceleration_kernel": [61, 65], "position_cliqu": [61, 65], "filter_sign": [61, 65], "cpu": [62, 67, 68, 80, 84], "order": [62, 73], "prev_stat": 62, "full_rank": 62, "diagon": 62, "act": [62, 63, 64, 66], "dt_h": [62, 65], "integrate_matrix": 62, "fd_matrix": 62, "q_0": 62, "u": [62, 118], "diag_dt": 62, "u_act": [62, 65], "mask": [62, 110], "n_mask": 62, "fd_1": 62, "fd_2": 62, "fd_3": 62, "grad_out_p": 62, "grad_out_v": 62, "grad_out_a": 62, "grad_out_j": 62, "cliquetensorstepbackward": 62, "cliquetensorstepkernelbackward": 62, "cliquetensorstepidxkernelbackward": 62, "cliquetensorstepcentraldifferencekernelbackward": 62, "cliquetensorstepidxcentraldifferencekernelbackward": 62, "cliquetensorstepcoalescekernelbackward": 62, "accelerationtensorstepkernelbackward": 62, "accelerationtensorstepidxkernelbackward": 62, "mask_matrix": 62, "integrate_matrix_po": 62, "start_tensor": 62, "end_tensor": 62, "int_step": 62, "num_point": 63, "all_dt": 63, "data_dict_in": [63, 72], "kinematic_model_config": 63, "curr_stat": 63, "next_stat": 63, "tensorstep": 63, "start_state_idx": [63, 65], "abc": 64, "currend_st": 64, "out_state_seq": 65, "finite_difference_mod": 65, "filter_veloc": 65, "filter_acceler": 65, "filter_jerk": 65, "signal": 65, "t_bhdof_float": 66, "t_bhvalue_float": 66, "normalize_rot": [66, 67, 71], "solv": [66, 87, 89, 94, 96, 97, 99, 101, 102, 111, 116, 128], "pair": [66, 132], "case": [66, 116, 117], "address": 66, "keep": [66, 116, 117, 126, 129, 132], "num_se": [66, 71, 73, 82, 94, 96, 97, 98, 99, 100, 115], "kernel_mat": [66, 71, 73], "update_idx_buff": 66, "copi": [66, 71, 73, 132], "anoth": [66, 71, 108, 125], "ref_buff": 66, "batch_env": [66, 94, 100], "batch_retract": [66, 94, 100], "pose_batch_s": 66, "from_bas": [67, 68, 72, 115], "to_devic": [67, 68, 117], "to_int8_devic": [67, 68], "rgb_imag": [67, 69], "depth_imag": [67, 69, 110], "image_segment": [67, 69], "projection_matrix": [67, 69], "projection_rai": [67, 69], "resolut": [67, 69, 118], "intrins": [67, 69, 110], "timestamp": [67, 69], "filter_depth": [67, 69], "get_pointcloud": [67, 69], "get_image_from_pointcloud": [67, 69], "update_projection_rai": [67, 69], "from_matrix": [67, 71], "get_rot": [67, 71], "stack": [67, 71, 73], "unsqueez": [67, 71, 73, 119], "get_index": [67, 71], "from_list": [67, 71, 73, 75, 79, 117], "from_batch_list": [67, 71], "to_list": [67, 71], "tolist": [67, 71, 119], "get_matrix": [67, 71], "get_numpy_matrix": [67, 71], "invers": [67, 71, 85, 97, 104, 106, 111, 119], "get_pose_vector": [67, 71], "cat": [67, 71, 119], "angular_dist": [67, 71], "linear_dist": [67, 71], "multipli": [67, 71], "compute_offset_pos": [67, 71], "compute_local_pos": [67, 71], "geodesic_dist": [67, 71], "ik_seed": [67, 72], "write_config": [67, 72], "get_state_tensor": [67, 73], "from_numpi": [67, 73], "from_posit": [67, 73, 115], "from_state_tensor": [67, 73], "copy_at_index": [67, 73], "copy_data": [67, 73], "_same_shap": [67, 73], "squeez": [67, 73, 115], "calculate_fd_from_posit": [67, 73], "get_ordered_joint_st": [67, 73], "get_augmented_joint_st": [67, 73], "append_joint": [67, 73], "trim_trajectori": [67, 73], "dev_id": 68, "data_tensor": 68, "camera_imag": 69, "rgb": [69, 118, 129, 131], "imag": [69, 71, 92, 104, 106, 110, 114, 117, 118, 120], "bxhxwxchannel": 69, "new_data": 69, "output_imag": 69, "normal": 71, "recommend": [71, 113], "come": [71, 116], "extern": 71, "send": [71, 115, 116, 118, 125], "other_pos": 71, "q_xyzw": 71, "pose_list": 71, "use_phi3": 71, "phi_3": 71, "huynh": 71, "du": 71, "3d": 71, "comparison": [71, 104, 106], "analysi": [71, 116], "journal": 71, "mathemat": 71, "vision": [71, 129, 131], "2009": 71, "155": 71, "164": [71, 132], "gp_out": 71, "gq_out": 71, "gpt_out": 71, "world_pos": 71, "q1": 71, "q2": 71, "q_re": 71, "quat_r": 71, "orientationerrorbackward": 71, "coeff": 73, "new_stat": 73, "ndarri": 73, "state_tensor": 73, "in_joint_st": 73, "new_j": 73, "ordered_joint_nam": 73, "j": [73, 85, 95, 119], "end_idx": 73, "cspace_path_length": [75, 79], "perception_success": [75, 79], "perception_interpolated_success": [75, 79], "fixed_sampl": [75, 80], "sample_ratio": [75, 80], "filter_coeff": [75, 80, 81], "n_knot": [75, 80], "scale_tril": [75, 80], "covariance_matrix": [75, 80], "sample_method": [75, 80], "sine_period": [75, 80], "degre": [75, 80, 84], "filter_sampl": [75, 80], "filter_smooth": [75, 80], "generate_sine_wav": [75, 80], "fast_forward": [75, 80], "_get_sampl": [75, 80], "get_gaussian_sampl": [75, 80], "filter_joint_st": [75, 81], "integrate_jerk": [75, 81], "integrate_acc": [75, 81], "integrate_vel": [75, 81], "integrate_po": [75, 81], "cubic": [75, 84], "quintic": [75, 84], "linear_cuda": [75, 84, 97, 99], "kunz_stilman_optim": [75, 84], "add_subroot": [75, 85], "load_stage_from_fil": [75, 85], "load_stag": [75, 85], "get_pos": [75, 85], "get_obstacles_from_stag": [75, 85], "add_world_to_stag": [75, 85], "get_prim_from_obstacl": [75, 85], "add_cuboid_to_stag": [75, 85], "add_cylinder_to_stag": [75, 85], "add_sphere_to_stag": [75, 85], "add_mesh_to_stag": [75, 85], "get_obstacle_from_prim": [75, 85], "write_stage_to_fil": [75, 85], "create_anim": [75, 85], "create_obstacle_anim": [75, 85], "create_linkpose_robot_anim": [75, 85], "write_trajectory_anim": [75, 85], "load_robot": [75, 85], "write_trajectory_animation_with_robot_usd": [75, 85, 119], "create_grid_usd": [75, 85, 119], "load_robot_usd": [75, 85], "get_robot_prim": [75, 85], "update_robot_joint_st": [75, 85], "write_motion_gen_log": [75, 85], "q_de": [76, 81, 96], "r_de": 76, "px": 76, "py": [76, 107, 109, 110, 113, 116, 118, 119, 120, 121, 127, 132], "pz": 76, "print": [76, 113, 115, 116], "current_px": 76, "current_pi": 76, "current_pz": 76, "des_px": 76, "des_pi": 76, "des_pz": 76, "d": [77, 115, 117, 121], "d_list": 77, "txt": 78, "exc_info": 78, "stack_info": 78, "skip": [79, 113, 114, 121, 132], "joint_limit_viol": 79, "self_collis": 79, "physical_viol": 79, "inf": 79, "orientation_error": 79, "eef_position_path_length": 79, "eef_orientation_path_length": 79, "trajectory_length": 79, "attempt": [79, 94, 97], "motion_tim": [79, 94, 97], "trajectorymetr": 79, "group_siz": 79, "env_collision_r": 79, "self_collision_r": 79, "joint_violation_r": 79, "physical_violation_r": 79, "within_one_cm_r": 79, "within_five_cm_r": 79, "within_fifteen_deg_r": 79, "within_thirty_deg_r": 79, "robometr": [79, 120], "statist": 79, "solve_time_per_step": 79, "trajectorygroupmetr": 79, "group": 79, "built": [80, 91, 93, 113, 114, 115, 117, 121], "0x7f99b3f8dfe0": 80, "halton": 80, "sample_config": [80, 94, 96, 115], "sample_shap": 80, "c_arr": 80, "t_arr": 80, "100": [80, 96, 97, 117, 119, 120], "up_bound": 80, "low_bound": 80, "ndim": 80, "store_buff": 80, "2000": 80, "fast": [80, 117], "sampler": [80, 90, 91, 93], "varianc": 80, "num": 80, "idx_batch": 80, "use_scipy_halton": 80, "coeff_dict": 81, "filter_config": 81, "raw_joint_st": 81, "qddd_de": 81, "cmd_joint_stat": 81, "qdd_de": 81, "qd_de": 81, "new_tensor": 82, "mem_tensor": 82, "ref_tensor": 82, "renam": 82, "equal": 83, "scipi": 84, "lang": 84, "meth": 84, "scienc": 84, "viii": 84, "2012": 84, "kunz": 84, "stillman": 84, "durat": 84, "20": [84, 113, 115, 120], "max_traj_pt": 84, "compute_dynam": 84, "raw_traj": [84, 87], "des_horizon": 84, "max_vel": [84, 95], "max_acc": [84, 94, 95, 99], "raw_dt": [84, 87, 95], "kind": 84, "out_traj_st": 84, "max_devi": 84, "min_dt": [84, 94, 95, 99], "optimize_dt": [84, 94, 97, 99], "traj_step": 84, "opt_dt": [84, 87, 95], "max_veloc": 84, "last_step": 84, "translat": 85, "use_float": 85, "xformcach": 85, "mesh_geom": 85, "ob": 85, "cube_geom": 85, "cube": [85, 107, 108, 109, 113, 116, 118, 132], "sphere_geom": 85, "curobo_stag": 85, "base_fram": [85, 119], "sub_root": 85, "prim_path": 85, "timecod": [85, 127], "only_path": 85, "ignore_path": 85, "only_substr": 85, "ignore_substr": 85, "reference_prim_path": 85, "obstacles_fram": 85, "base_t_obstacle_pos": 85, "enable_phys": 85, "flatten": 85, "robot_world_cfg": 85, "robot_fram": 85, "anim": [85, 119, 127], "prim_nam": 85, "n_mesh": [85, 93], "robot_bas": 85, "robot_usd_path": 85, "robot_base_fram": 85, "local_asset_path": [85, 119], "asset": [85, 116], "write_robot_usd_path": 85, "robot_asset_prim_path": 85, "panda": [85, 107, 114, 115, 116, 120, 124, 132], "material_nam": 85, "object_path": 85, "obj_prim": 85, "robot_model_fil": 85, "q_start": 85, "q_traj": [85, 119], "save_path": [85, 119, 120], "kin_model": [85, 115], "visualize_robot_spher": [85, 119], "robot_color": 85, "flatten_usd": 85, "robot_usd_local_refer": 85, "usds_path": 85, "max_env": [85, 119], "max_timecod": [85, 119], "x_space": [85, 119], "y_space": [85, 119], "x_per_row": [85, 119], "prefix_str": 85, "write_asset_path": 85, "robot_base_path": 85, "joint_prim": 85, "robot_fil": [85, 92, 115, 119], "save_prefix": 85, "write_ik": 85, "write_trajopt": 85, "write_graph": 85, "goal_object": 85, "overlay_ik": 85, "overlay_trajopt": 85, "grid_spac": 85, "fp": 85, "24": 85, "motiongenresult": [85, 89, 94, 97], "quiet": 86, "traj_tstep": [87, 94, 99], "out_traj": 87, "gpu": [87, 110, 116, 117, 122, 126, 128], "bug": 87, "last": [87, 97], "affect": 87, "source_fil": 88, "destination_path": 88, "remove_extens": 88, "dir_path": 88, "extens": 88, "curobo_robot_world": [89, 90], "curoborobotworldconfig": [89, 90, 91], "curoborobotworld": [89, 90, 91], "robot_segment": [89, 90, 110], "robotsegment": [89, 90, 92, 110], "robot_world": [89, 90, 92, 115, 119], "robotworldconfig": [89, 90, 91, 93, 115, 119], "robotworld": [89, 90, 91, 92, 93, 115, 119], "evalu": [89, 94, 99, 120], "trajevaluatorconfig": [89, 94, 95, 97, 99], "trajevalu": [89, 94, 95, 97, 99], "ik_solv": [89, 94, 97, 115, 116, 125], "iksolverconfig": [89, 94, 96, 115], "ikresult": [89, 94, 96, 97, 115], "iksolv": [89, 94, 96, 97, 115, 116, 125], "motion_gen": [89, 94, 109, 115], "motiongenconfig": [89, 94, 97, 109, 115], "motiongenplanconfig": [89, 94, 97, 109, 115], "motiongen": [89, 94, 97, 115], "mpcsolverconfig": [89, 94, 98], "mpcsolver": [89, 94, 98], "trajopt": [89, 94, 97, 125], "trajoptsolverconfig": [89, 94, 99], "trajresult": [89, 94, 99], "trajoptsolv": [89, 94, 97, 99, 125], "reachersolvetyp": [89, 94, 96, 97, 99, 100], "reachersolvest": [89, 94, 96, 97, 98, 99, 100], "motiongensolverst": [89, 94, 100], "get_padded_goalset": [89, 94, 100], "safety_rollout": [89, 101], "use_cuda_graph_metr": [89, 94, 98, 99, 101], "js_action": [89, 101], "raw_act": [89, 94, 99, 101], "get_debug_data": [89, 101], "get_debug_cost": [89, 101], "get_init_act": [89, 101], "newton_optim": [89, 101], "particle_optim": [89, 101], "_get_rollout_instances_from_optim": [89, 101], "update_init_se": [89, 102], "from_robot_fil": [90, 92], "get_pointcloud_from_depth": [90, 92], "update_camera_project": [90, 92], "get_robot_mask": [90, 92], "get_robot_mask_from_active_j": [90, 92], "_create_cg_graph": [90, 92], "_call_op": [90, 92], "_mask_op": [90, 92], "bound_scal": [90, 91, 93, 119], "collision_cost": [90, 91, 93], "collision_constraint": [90, 91, 93, 119], "contact_dist": [90, 91, 93], "load_from_config": [90, 93, 115, 119], "get_kinemat": [90, 93, 115, 119], "update_world": [90, 93, 94, 96, 97, 98], "get_collision_dist": [90, 93, 115, 119], "get_collision_constraint": [90, 93], "get_self_collis": [90, 93], "get_collision_vector": [90, 93], "get_world_self_collision_distance_from_joint": [90, 93, 115], "get_world_self_collision_distance_from_joint_trajectori": [90, 93], "get_bound": [90, 93], "valid": [90, 93, 119], "sample_trajectori": [90, 93], "validate_trajectori": [90, 93], "get_point_robot_dist": [90, 93], "get_active_j": [90, 93, 94, 97, 98], "layer": [91, 93, 97, 118, 119], "core": [91, 93, 113, 115, 116], "featur": [91, 93, 104, 105, 106, 108, 109, 119], "joint_stat": [92, 97], "depth": [92, 104, 106, 110, 114, 115, 117, 120], "active_joint_st": 92, "cam_ob": 92, "franka": [93, 107, 114, 115, 116, 119, 124, 132], "50": [93, 96, 117], "n_cuboid": 93, "collision_activation_dist": [93, 96, 97, 98, 99, 115], "self_collision_activation_dist": 93, "max_collision_dist": 93, "collision_checker_typ": [93, 96, 97, 98, 99], "world_collision_check": 93, "x_sph": [93, 117], "mask_valid": [93, 115], "x_de": [93, 119], "x_current": 93, "done": [93, 125], "easili": 93, "full_j": 93, "cost_weight": [94, 95, 99], "_compute_path_length": [94, 95], "_check_smooth": [94, 95], "evaluate_interpolated_smooth": [94, 95], "evaluate_from_posit": [94, 95], "calculate_dt": [94, 95], "position_threshold": [94, 96, 97, 99, 115], "rotation_threshold": [94, 96, 97, 99, 115], "ik_nn_seed": [94, 96], "sample_rejection_ratio": [94, 96], "js_solut": [94, 96], "get_unique_solut": [94, 96], "get_batch_unique_solut": [94, 96], "update_goal_buff": [94, 96, 98, 99, 100], "solve_ani": [94, 96, 99], "solve_singl": [94, 96, 99], "solve_goalset": [94, 96, 99], "solve_batch": [94, 96, 99, 115], "solve_batch_goalset": [94, 96, 99], "solve_batch_env": [94, 96, 99], "solve_batch_env_goalset": [94, 96, 99], "solve_from_solve_st": [94, 96, 99], "get_result": [94, 96], "get_se": [94, 96, 99], "batch_env_solv": [94, 96, 111], "get_success": [94, 96], "generate_se": [94, 96], "check_constraint": [94, 96, 97], "get_all_kinematics_inst": [94, 96, 97, 99], "fk": [94, 96, 99, 115, 119], "attach_object_to_robot": [94, 96, 99], "detach_object_from_robot": [94, 96, 97, 99], "get_retract_config": [94, 96, 97, 115], "ik_se": [94, 97], "graph_se": [94, 97], "trajopt_se": [94, 97], "noisy_trajopt_se": [94, 97], "batch_ik_se": [94, 97], "batch_trajopt_se": [94, 97], "graph_plann": [94, 97], "trajopt_solv": [94, 97], "js_trajopt_solv": [94, 97], "finetune_trajopt_solv": [94, 97], "partial_ik_it": [94, 97], "graph_trajopt_it": [94, 97], "store_debug_in_result": [94, 97, 99], "finetune_dt_scal": [94, 97], "optimized_plan": [94, 97, 115], "ik_tim": [94, 97], "graph_tim": [94, 97], "trajopt_tim": [94, 97], "finetune_tim": [94, 97], "total_tim": [94, 97], "statu": [94, 97, 113], "trajopt_attempt": [94, 97], "used_graph": [94, 97], "graph_plan": [94, 97], "_check_none_and_copy_idx": [94, 97], "copy_idx": [94, 97], "get_successful_path": [94, 97], "get_interpolated_plan": [94, 97, 115], "enable_graph": [94, 97, 115], "enable_opt": [94, 97], "use_nn_ik_se": [94, 97], "need_graph_success": [94, 97], "max_attempt": [94, 97, 98, 115], "timeout": [94, 97], "enable_graph_attempt": [94, 97], "disable_graph_attempt": [94, 97], "ik_fail_return": [94, 97], "partial_ik_opt": [94, 97], "num_ik_se": [94, 97, 100], "num_graph_se": [94, 97, 100], "num_trajopt_se": [94, 97, 100], "success_ratio": [94, 97], "fail_on_invalid_queri": [94, 97], "enable_finetune_trajopt": [94, 97], "parallel_finetun": [94, 97], "use_start_state_as_retract": [94, 97], "pose_cost_metr": [94, 97, 109], "solve_ik": [94, 97], "_solve_ik_from_solve_st": [94, 97], "_solve_trajopt_from_solve_st": [94, 97], "graph_search": [94, 97], "_get_solve_st": [94, 97], "_plan_attempt": [94, 97], "_plan_batch_attempt": [94, 97], "plan_singl": [94, 97, 115], "plan_goalset": [94, 97], "plan_batch": [94, 97], "plan_batch_goalset": [94, 97], "plan_batch_env_goalset": [94, 97], "plan_batch_env": [94, 97], "_plan_from_solve_st": [94, 97], "_plan_js_from_solve_st": [94, 97], "_plan_from_solve_state_batch": [94, 97], "clear_world_cach": [94, 97], "plan_single_j": [94, 97], "batch_plan": [94, 97], "solve_trajopt": [94, 97], "get_all_solver_rollout_inst": [94, 97], "get_all_pose_solver_rollout_inst": [94, 97], "attach_objects_to_robot": [94, 97], "attach_external_objects_to_robot": [94, 97], "attach_bounding_box_from_blox_to_robot": [94, 97], "attach_new_object_to_robot": [94, 97], "attach_spheres_to_robot": [94, 97], "detach_spheres_from_robot": [94, 97], "get_full_j": [94, 97, 99], "add_running_pose_constraint": [94, 97], "remove_running_pose_constraint": [94, 97], "run_finetune_trajopt": [94, 97], "world_collis": [94, 97, 98], "project_pose_to_goal_fram": [94, 96, 97, 99, 109], "update_interpolation_typ": [94, 97], "update_locked_joint": [94, 97], "use_cuda_graph_full_step": [94, 98], "step_onc": [94, 98], "_step": [94, 98], "_initialize_cuda_graph_step": [94, 98], "setup_solve_singl": [94, 98], "setup_solve_goalset": [94, 98], "setup_solve_batch": [94, 98], "setup_solve_batch_goalset": [94, 98], "setup_solve_batch_env": [94, 98], "setup_solve_batch_env_goalset": [94, 98], "_solve_from_solve_st": [94, 98], "fn": [94, 98], "update_go": [94, 98, 100, 119], "get_visual_rollout": [94, 98], "use_cspace_se": [94, 99], "seed_ratio": [94, 99], "traj_evaluator_config": [94, 97, 99], "traj_evalu": [94, 97, 99], "evaluate_interpolated_trajectori": [94, 97, 99], "cspace_threshold": [94, 97, 99], "interpolate_rollout": [94, 99], "trim_step": [94, 97, 99], "interpolated_solut": [94, 99], "smooth_error": [94, 99], "smooth_label": [94, 99], "raw_solut": [94, 99], "_get_result": [94, 99], "batch_solv": [94, 99, 111], "get_linear_se": [94, 99], "get_start_se": [94, 99], "_get_seed_numb": [94, 99], "get_seed_set": [94, 99], "get_bias_se": [94, 99], "calculate_trajectory_dt": [94, 99], "solver_dt": [94, 99], "update_solver_dt": [94, 99], "batch_env_goalset": [94, 100], "solve_typ": [94, 96, 97, 99, 100], "batch_mod": [94, 99, 100], "num_mpc_se": [94, 100], "get_batch_s": [94, 100], "get_ik_batch_s": [94, 100], "create_goal_buff": [94, 100], "ik_solve_st": [94, 100], "trajopt_solve_st": [94, 100], "001": [95, 97, 99, 132], "skip_last_tstep": 95, "005": [96, 97, 99, 115, 132], "particle_fil": [96, 99], "particle_ik": [96, 97], "gradient_fil": [96, 99], "gradient_ik": [96, 97], "self_collision_opt": [96, 97, 99, 115], "grad_it": 96, "use_particle_opt": [96, 99], "use_gradient_desc": [96, 97, 99], "collision_cach": [96, 97, 98, 99], "n_collision_env": [96, 97, 98, 99], "ee_link_nam": [96, 97], "use_": [96, 98, 99], "es_learning_r": [96, 98, 99], "use_fixed_sampl": [96, 99], "regular": [96, 97], "high_precis": 96, "sqrt": [96, 119], "roundoff_decim": 96, "solve_st": [96, 97, 98, 99, 100], "seed_config": [96, 97], "return_se": [96, 97], "use_nn_se": [96, 97, 99], "newton_it": [96, 97, 99], "ik": [96, 97, 115, 116, 119, 120, 128], "t_bdof": [96, 100], "random_restart": 96, "share": [97, 113, 121], "fine": 97, "tune": [97, 116], "dens": 97, "waypoint": 97, "finetun": 97, "op": 97, "upto": [97, 115], "30": 97, "12": 97, "num_batch_ik_se": 97, "num_batch_trajopt_se": 97, "num_trajopt_noisy_se": 97, "particle_ik_fil": 97, "gradient_ik_fil": 97, "particle_trajopt_fil": 97, "particle_trajopt": [97, 99], "gradient_trajopt_fil": 97, "gradient_trajopt": [97, 99], "finetune_trajopt_fil": 97, "trajopt_tstep": 97, "5000": [97, 115], "grad_trajopt_it": [97, 99], "trajopt_seed_ratio": 97, "bia": [97, 99], "ik_opt_it": 97, "ik_particle_opt": 97, "trajopt_particle_opt": 97, "minimize_jerk": [97, 99], "use_es_ik": 97, "use_es_trajopt": 97, "es_ik_learning_r": 97, "es_trajopt_learning_r": 97, "use_ik_fixed_sampl": 97, "use_trajopt_fixed_sampl": 97, "fixed_iters_trajopt": 97, "store_ik_debug": 97, "store_trajopt_debug": 97, "collision_max_outside_dist": 97, "trajopt_dt": [97, 99], "js_trajopt_dt": 97, "js_trajopt_tstep": 97, "finetune_trajopt_it": 97, "finetune_smooth_weight": 97, "98": [97, 120], "maximum_trajectory_tim": 97, "maximum_trajectory_dt": 97, "id": 97, "refer": [97, 110, 113, 117, 121, 125], "q_g": 97, "second": [97, 109, 110, 116, 117], "taken": 97, "fail": 97, "wa": [97, 113, 117, 128], "current_tensor": 97, "source_tensor": 97, "source_result": 97, "60": [97, 118], "retim": 97, "low": 97, "act_se": 97, "return_all_solut": [97, 99], "seed_success": [97, 99], "trajopt_inst": 97, "num_seeds_overrid": 97, "trajoptresult": 97, "start_config": 97, "goal_config": 97, "plan_config": 97, "warmup_js_trajopt": 97, "batch_env_mod": 97, "warmup_joint_index": 97, "warmup_joint_delta": 97, "in_j": [97, 98], "object_nam": 97, "sphere_fit_typ": 97, "world_objects_pose_offset": 97, "remove_obstacles_from_world_config": 97, "external_object": 97, "blox_layer_nam": 97, "active_j": [97, 99], "lock_x": 97, "lock_i": 97, "lock_z": 97, "lock_rx": 97, "lock_ri": 97, "lock_rz": 97, "traj_solut": 97, "update_trajopt": 97, "robot_config_dict": 97, "world_cfg": [98, 115], "particle_opt_it": 98, "step_dt": 98, "use_lbfg": 98, "use_mppi": 98, "predict": [98, 129, 131], "arm": [98, 124, 129, 131], "seed_traj": [98, 99], "1000": 99, "10000": [99, 119], "aux_rollout": 99, "traj_stat": 99, "opt_trajectori": 99, "interpolated_trajectori": 99, "current_solve_st": 100, "current_goal_buff": 100, "new_goal_pos": 100, "packag": [103, 113, 119, 120, 123, 128, 132], "subpackag": 103, "submodul": 103, "research": [104, 106, 122, 131], "arxiv": [104, 106, 120, 128, 130], "pdf": [104, 106, 128], "preview": [104, 106], "highlight": [104, 106, 109], "technic": [104, 105, 106, 117, 120], "report": [104, 105, 106, 117, 120], "busi": [104, 106], "inquiri": [104, 106], "pleas": [104, 106], "submit": [104, 106], "form": [104, 106], "licens": [104, 106], "feb": [104, 105, 106], "2024": [104, 105, 106, 120], "v0": [104, 105, 106, 113, 120], "constrain": [104, 105, 106], "segment": [104, 105, 106, 118], "dec": [104, 105, 106], "2023": [104, 105, 106, 113, 121, 128, 129, 130, 131], "qualiti": [104, 105, 106, 116, 120], "improv": [104, 105, 106, 120], "nov": [104, 105, 106], "sim": [104, 105, 106, 108, 114, 117, 118, 121, 132], "x86": [104, 105, 106, 121], "aarch64": [104, 105, 106, 121], "dockerfil": [104, 105, 106, 121], "oct": [104, 105, 106], "changelog": [104, 105, 106], "suit": [104, 106, 117], "algorithm": [104, 106, 117], "significantli": [104, 106, 126], "exist": [104, 106, 121, 122, 126, 132], "leverag": [104, 106, 108, 114, 116, 117, 118, 127, 129, 131], "30m": [104, 106], "ur10": [104, 106, 116, 124], "100m": [104, 106], "jetson": [104, 106], "orin": [104, 106], "penal": [104, 106, 109], "smoother": [104, 106], "shorter": [104, 106], "left": [104, 106, 110, 117], "birrt": [104, 106], "phase": [104, 106], "pick": [104, 106, 108, 109, 116, 117], "place": [104, 106, 108, 109, 116, 117, 118], "ax": [104, 106, 109], "remain": [104, 106, 109], "exampl": [104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 121, 122, 125, 127, 132], "motionbenchmak": [104, 106], "dataset": [104, 106], "curobo": [105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 127, 130, 131, 132], "own": [107, 114], "launch": [107, 109, 116, 118, 121, 132], "omni_python": [107, 109, 113, 116, 118, 132], "isaac_sim": [107, 109, 113, 116, 121, 132], "batch_collision_check": 107, "made": 107, "fashion": 107, "batch_motion_gen_reach": 107, "trigger": [107, 116, 132], "being": [107, 108, 116, 118], "long": [108, 126], "front": [108, 118], "tower": 108, "seen": [108, 109, 110, 125], "below": [108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 125, 126, 128, 132], "kei": [108, 132], "componenet": 108, "design": [108, 118, 122], "shown": [108, 109, 110, 114, 116, 117, 118], "consist": 108, "close": [108, 109, 118, 132], "gripper": [108, 132], "top": 108, "open": [108, 118, 122, 132], "delet": 108, "placement": 108, "its": [108, 128], "reprensent": 108, "reason": 108, "about": [108, 116, 124], "similarli": 108, "constrained_reach": 109, "click": [109, 113, 116, 118, 132], "Then": [109, 110, 116, 118], "restrict": 109, "respect": [109, 116, 117], "plane": 109, "red": [109, 116, 118, 132], "well": [109, 122, 126, 132], "turn": [109, 116, 118], "green": [109, 116, 118, 125], "now": [109, 118, 126, 132], "upright": 109, "throughout": 109, "further": [109, 128], "visibl": [109, 110], "script": [109, 113, 120, 122, 132], "until": [109, 116], "By": 109, "tradition": 109, "goe": 109, "pre": [109, 118], "portion": 109, "t_step_fract": 109, "effect": [109, 117, 128], "runn": 109, "simple_stack": 109, "constrain_grasp_approach": 109, "show": [109, 117, 118, 119, 128], "behavior": [109, 132], "filter": 110, "scene": [110, 115, 116, 117, 118, 129, 131], "yellow": 110, "orang": 110, "third": [110, 115, 119], "subtract": 110, "fourth": 110, "rightmost": 110, "back": 110, "label": 110, "initialz": 110, "intern": [110, 117, 125, 128], "threshold": 110, "treat": [110, 132], "robot_image_segmentation_exampl": 110, "achiev": [110, 128], "3000hz": 110, "4090": [110, 116, 120], "480x480": 110, "middl": 110, "right": [110, 117], "No": 111, "env": 111, "goalset_solv": 111, "batch_goalset_solv": 111, "batch_goalset_env_solv": 111, "compon": [113, 115], "instruct": [113, 118, 120, 121, 132], "want": [113, 114, 115, 117, 120, 121, 126, 132], "develop": [113, 116, 118, 122, 128], "git": [113, 120, 121], "lf": 113, "sudo": [113, 121], "apt": [113, 121, 122], "repositori": [113, 121], "nvlab": [113, 118, 121], "pip": [113, 118, 120, 132], "isol": [113, 132], "minut": 113, "python3": [113, 121], "pytest": [113, 122], "verifi": 113, "unit": 113, "test": [113, 116], "look": [113, 116, 117, 121, 126, 127, 132], "2022": [113, 121], "isaac_sim_workstation_instal": 113, "cuda_instruct": 113, "your": [113, 114, 115, 116, 117, 118, 119, 122, 126, 132], "usr": [113, 121], "local": [113, 116, 117, 121, 122], "bin": [113, 121], "bashrc": 113, "echo": 113, "ov": 113, "pkg": [113, 121], "sh": [113, 121, 132], "accordingli": 113, "tomli": 113, "wheel": 113, "ninja": 113, "isaacsim": 113, "motion_gen_reach": [113, 116, 132], "stabl": 113, "instabl": 113, "been": [113, 116], "heavili": 113, "nativ": [113, 114, 121, 122], "proceed": 113, "d_glibcxx_use_cxx11_abi": 113, "ngc": [113, 121], "what": [113, 117], "import": [113, 115, 117, 119], "_c": 113, "_glibcxx_use_cxx11_abi": 113, "detect": [113, 116, 122], "glibcxx_use_cxx11_abi": 113, "dependenic": 113, "libgoogl": 113, "glog": [113, 122], "dev": 113, "libgtest": 113, "libsqlite3": 113, "curl": 113, "tcl": 113, "libbenchmark": 113, "valtsbluki": 113, "cd": [113, 120, 121], "mkdir": [113, 120, 121, 132], "cmake": [113, 122], "dpre_cxx11_abi_link": 113, "ON": 113, "dbuild_test": 113, "off": 113, "j32": 113, "nvblox_torch": [113, 118, 120], "cmake_prefix_path": 113, "opencv": 113, "pyrealsense2": [113, 118], "transforms3d": 113, "pre_cxx11_abi": 113, "shell": 113, "torch_cxx11": 113, "pkgs_path": 113, "home": [113, 121], "wget": [113, 121], "v3": 113, "27": [113, 120], "tar": 113, "gz": 113, "xvzf": 113, "essenti": 113, "checkinstal": 113, "zlib1g": 113, "libssl": 113, "bootstrap": 113, "j8": 113, "sqlite3": 113, "sqlite": 113, "39": [113, 132], "cflag": 113, "fpic": 113, "prefix": 113, "googl": [113, 129], "dcmake_position_independent_cod": 113, "dcmake_install_prefix": 113, "dwith_gflag": 113, "dwith_gtest": 113, "dbuild_shared_lib": 113, "dcmake_cxx_flag": 113, "gflag": 113, "v2": 113, "dgflags_build_static_lib": 113, "dbuild_redistribut": 113, "dsqlite3_base_path": 113, "dglog_base_path": 113, "dgflags_base_path": 113, "dcmake_cuda_flag": 113, "found": [113, 117, 122, 126, 132], "runtim": [113, 121], "ld_library_path": 113, "lib": 113, "glu": 113, "freeglut3": 113, "discuss": 114, "pipelin": [114, 115, 119, 120], "wxyz": 114, "cudagraph": [114, 115, 116, 117, 122], "subsequ": 114, "referenc": 114, "aricl": 114, "blog": 114, "One": [114, 116], "caveat": 114, "cannot": [114, 115, 122], "henc": [114, 115, 117, 122, 127], "tool": [114, 117], "crash": [114, 122], "snippet": 115, "parti": [115, 119], "conveni": 115, "config_fil": 115, "urdf_fil": 115, "rand": 115, "var": [115, 117, 121], "possibl": [115, 117, 118, 127], "explain": [115, 117], "page": [115, 117, 128, 129], "dive": [115, 117], "quick": 115, "tabl": [115, 121], "cube_1": [115, 117], "080": 115, "043": [115, 117, 132], "471": [115, 117], "284": [115, 117, 120], "834": [115, 117], "srl_ur10_bin": [115, 117], "obj": [115, 117], "world_fil": [115, 119], "curobo_fn": [115, 119], "q_sph": 115, "randn": 115, "q_": 115, "d_world": 115, "d_self": [115, 119], "penetr": 115, "howev": [115, 116, 117], "safeti": [115, 116, 132], "greater": 115, "ik_config": 115, "q_sampl": 115, "kin_stat": [115, 119], "q_solut": 115, "collision_cag": 115, "slower": 115, "collision_t": [115, 119], "motion_gen_config": 115, "retract_cfg": 115, "view": [115, 117, 119], "retract_pos": 115, "traj": 115, "item": [115, 119, 126], "abov": [115, 116, 120, 121], "yaml": [115, 132], "consum": 115, "programmat": 115, "meshe": 116, "leav": [116, 117], "even": [116, 125], "becom": 116, "awar": 116, "rate": [116, 122], "1hz": 116, "track": [116, 126, 129], "interact": [116, 118], "marker": 116, "teleport": 116, "reactiv": [116, 118], "tf": 116, "window": [116, 118], "button": 116, "drag": [116, 117, 118], "drop": [116, 117, 118], "browser": 116, "articul": [116, 132], "ycb": [116, 117], "under": [116, 127], "prop": 116, "dropdown": 116, "section": [116, 132], "tab": 116, "down": 116, "select": 116, "300": 116, "wait": 116, "command": [116, 120, 121], "collision_checker_exampl": 116, "blue": [116, 118], "vector": [116, 118, 132], "indic": [116, 118, 125], "ui": 116, "request": 116, "gif": 116, "determin": [116, 117], "With": 116, "xyz": 116, "ik_reach": 116, "demo": 116, "video": [116, 132], "framework": 116, "storm": 116, "advanc": 116, "500hz": 116, "rtx": [116, 120], "compar": [116, 122], "125hz": 116, "applic": [116, 127], "mpc_exampl": 116, "trail": 116, "stuck": 116, "minima": 116, "behind": 116, "pitcher": 116, "explor": [116, 128], "guarante": 116, "put": 116, "advis": 116, "deploi": 116, "modular": 116, "dual": 116, "multi_arm_reach": 116, "dual_ur10": [116, 124], "univers": [116, 124], "describ": [117, 119, 121], "later": [117, 121], "overview": 117, "illustr": [117, 125], "obstacle_1": 117, "mesh_fil": 117, "obstacle_2": 117, "mesh_1": 117, "obstacle_3": 117, "obstacle_4": 117, "cylinder_1": 117, "obstacle_5": 117, "sphere_1": 117, "viewer": [117, 118], "meshlab": 117, "assign": 117, "debug_mesh": 117, "five": 117, "cuboid_world": 117, "debug_collision_cuboid": 117, "visula": 117, "bottom": 117, "row": 117, "altern": 117, "accur": 117, "collision_supported_world": 117, "collision_support_world": 117, "debug_collision_mesh": 117, "4x": 117, "bvh": 117, "travers": 117, "inherit": 117, "entiti": 117, "world_ccheck": 117, "test_mesh": 117, "collision_buff": 117, "act_dist": 117, "know": 117, "recreat": 117, "therebi": 117, "break": 117, "alreadi": [117, 121], "interfac": [117, 118], "world_collision_config": 117, "new_cuboid": 117, "add_cuboid": 117, "new_pos": 117, "toggl": 117, "short": 117, "thorough": 117, "world_config_1": 117, "cube_env_1": 117, "world_config_2": 117, "cube_env_2": 117, "world_coll_config": 117, "query_buff": 117, "assert": 117, "int32": 117, "live": 117, "abl": [117, 126], "acheiv": 117, "slow": 117, "veri": [117, 122, 129, 132], "would": [117, 120], "chart": 117, "hierarchi": 117, "contribut": [117, 128], "welcom": 117, "eta": 117, "far": [117, 126], "awai": 117, "motiv": 117, "equat": 117, "neg": 117, "text": 117, "begin": 117, "leq": 117, "frac": 117, "introduc": [117, 128], "discret": 117, "thin": [117, 122], "benefit": 117, "push": 117, "itself": 117, "wall": 117, "rush": 117, "overal": 117, "incur": 117, "often": 117, "reloc": 117, "techniqu": [117, 118, 128], "complex": 117, "rather": 117, "manual": 117, "obstacle_capsul": 117, "sph": 117, "bounding_spher": 117, "euclidean": 118, "esdf": 118, "decai": 118, "ideal": 118, "high": 118, "expos": 118, "_": 118, "walk": 118, "instal": [118, 120, 121, 122, 126, 132], "precxx11_abi": 118, "collision_check": 118, "insert": 118, "basic": 118, "motion_gen_reacher_nvblox": 118, "mpc_nvblox_exampl": 118, "realsens": 118, "monitor": 118, "clip": 118, "stream": [118, 122], "render": [118, 120, 127], "realsense_collis": 118, "collid": 118, "appear": 118, "realsense_reach": 118, "hq_voxel": 118, "machin": 118, "framer": 118, "realsense_mpc": 118, "stai": 118, "As": [119, 132], "loss": 119, "train": 119, "friendli": 119, "world_config_fil": 119, "swap": 119, "200": 119, "curobo_wrapp": 119, "torch_layers_exampl": 119, "uuid": 119, "nn": 119, "tensorboard": 119, "summarywrit": 119, "tqdm": 119, "hold": 119, "curobotorch": 119, "__init__": 119, "simpl": [119, 128], "structur": 119, "q_current": 119, "q_out": 119, "super": 119, "feature_dim": 119, "q_feature_dim": 119, "final_feature_dim": 119, "output_dim": 119, "_robot_world": 119, "_feature_mlp": 119, "sequenti": 119, "512": 119, "relu6": 119, "_final_mlp": 119, "256": 119, "64": 119, "get_featur": 119, "q_sdf": 119, "q_self": 119, "append": 119, "in_featur": 119, "mlp": 119, "q_mid": 119, "q_scale": 119, "mid_featur": 119, "d_sdf": 119, "linalg": 119, "val_loss": 119, "validatin": 119, "__name__": 119, "__main__": 119, "write_usd": 119, "writer": 119, "uuid4": 119, "no_grad": 119, "q_train": 119, "q_val": 119, "2048": 119, "usd_list": 119, "adam": [119, 128, 130], "lr": 119, "weight_decai": 119, "batch_start": 119, "arang": 119, "x_des_train": 119, "x_des_val": 119, "q_debug": 119, "bar": 119, "x_train": 119, "x_des_batch": 119, "zero_grad": 119, "add_scalar": 119, "eval": 119, "q_pred": 119, "set_descript": 119, "len": 119, "gripper_mesh": 119, "target_gripp": 119, "franka_descript": [119, 132], "hand_ee_link": 119, "dae": 119, "save_nam": 119, "rand_perm": 119, "randperm": 119, "epoch_grid": 119, "paper": [120, 128, 129], "signific": 120, "length": [120, 132], "accuraci": 120, "1mm": 120, "15m": 120, "yet": 120, "februari": 120, "2600": 120, "benchmak": 120, "99": 120, "84": 120, "068": 120, "158": 120, "median": 120, "042": 120, "055": [120, 132], "246": 120, "169": 120, "360": 120, "140": 120, "381": 120, "163": 120, "rad": 120, "177": 120, "072": [120, 132], "261": 120, "804": 120, "376": [120, 132], "97": 120, "700": 120, "48": 120, "630": 120, "88": 120, "993": 120, "126": 120, "092": 120, "199": 120, "540": 120, "mm": 120, "119": 120, "341": 120, "027": [120, 132], "091": 120, "039": 120, "800": 120, "063": 120, "137": 120, "044": 120, "206": [120, 132], "429": 120, "330": 120, "392": 120, "501": 120, "473": 120, "956": 120, "783": 120, "755": 120, "352": 120, "041": 120, "67": 120, "788": 120, "61": 120, "853": 120, "83": 120, "337": 120, "143": [120, 132], "118": 120, "079": 120, "139": [120, 132], "032": 120, "077": [120, 132], "472": 120, "1800": 120, "77": 120, "117": 120, "059": 120, "243": 120, "051": 120, "306": 120, "016": 120, "226": 120, "760": 120, "829": 120, "000": 120, "837": 120, "482": 120, "905": 120, "110": 120, "610": 120, "47": 120, "586": 120, "105": 120, "271": 120, "141": 120, "517": 120, "217": 120, "122": 120, "343": 120, "024": 120, "095": 120, "114": 120, "csv": 120, "fishbot": 120, "measur": 120, "kinematics_benchmark": 120, "ik_benchmark": 120, "curobo_benchmark": 120, "pyrend": 120, "sensor": 120, "generate_nvblox_imag": 120, "curobo_nvblox_benchmark": 120, "robometrics_benchmark": 120, "who": 120, "understand": 120, "analyz": 120, "bottleneck": [120, 126], "dump": 120, "json": [120, 121], "chrome": 120, "trace": 120, "curobo_profil": 120, "curobo_nvblox_profil": 120, "curobo_python_profil": 120, "cprofil": 120, "most": 121, "tag": [121, 132], "isaac_sim_vers": 121, "vulkan": 121, "gui": 121, "headless": [121, 122], "replac": [121, 126, 132], "edit": 121, "etc": 121, "daemon": 121, "content": [121, 132], "runtimearg": 121, "bash": 121, "build_dock": 121, "column": 121, "start_dock": 121, "mount": 121, "folder": [121, 132], "build_dev_dock": 121, "start_dev_dock": 121, "pypi": 121, "anymor": 121, "ship": 121, "newer": 121, "download": 121, "repo": [121, 122], "ubuntu2004": 121, "arm64": 121, "pin": 121, "mv": 121, "prefer": 121, "600": 121, "local_instal": 121, "tegra": 121, "local_11": 121, "1_arm64": 121, "deb": 121, "dpkg": 121, "cp": [121, 132], "keyr": 121, "gpg": 121, "cuda_hom": 121, "build_lib": 121, "no_standalon": 121, "sure": 121, "toolkit": 121, "percept": 122, "increas": [122, 126], "densiti": 122, "occlus": 122, "caus": 122, "failur": 122, "conflict": 122, "typeguard": 122, "torchtyp": 122, "22": 122, "regener": 122, "redistribut": 122, "cxx11_abi": 122, "cm": 122, "quickli": 122, "mapper": 122, "clear": 122, "reliabl": 122, "client": 122, "headless_mod": 122, "websocket": 122, "webrtc": 122, "docker": 122, "ur5": 124, "tm12": 124, "techman": 124, "jaco7": 124, "kinova": 124, "jaco": 124, "kinova_gen3": 124, "gen3": 124, "iiwa": 124, "kuka": 124, "iiwa_allegro": 124, "allegro": 124, "hand": [124, 129, 131], "franka_mobil": 124, "mobil": 124, "multi": 124, "tri_ur10": 124, "quad_ur10": 124, "four": 124, "direct": [125, 128, 132], "togeth": [125, 132], "cccccc": 125, "block": 125, "mangl": 126, "templat": [126, 132], "75025": 126, "blindli": 126, "capabl": 126, "reccommend": 126, "torch_cuda_arch_list": 126, "ptx": 126, "written": 126, "batch_env_idx": 126, "n_batch": 126, "enable_obs_env": 126, "n_ob": 126, "duplic": [126, 132], "out_buffer_prim": 126, "out_buffer_mesh": 126, "usd_exampl": 127, "sub": 127, "substr": 127, "accident": 127, "coordin": 127, "xform": 127, "computelocaltoworldtransform": 127, "prod_kit": 127, "programmer_ref": 127, "w_t_o": 127, "w_t_r": 127, "rel": 127, "r_t_o": 127, "balakumar": [128, 129, 130, 131], "sundaralingam": [128, 129, 130, 131], "siva": [128, 129, 130, 131], "kumar": [128, 129, 130, 131], "sastri": [128, 129, 130, 131], "hari": [128, 129, 130, 131], "fishman": [128, 130], "caelan": [128, 130], "garrett": [128, 130], "karl": [128, 129, 130, 131], "van": [128, 129, 130, 131], "wyk": [128, 129, 130, 131], "valt": [128, 130], "bluki": [128, 130], "alexand": [128, 129, 130, 131], "millan": [128, 130], "helen": [128, 130], "oleynikova": [128, 130], "ankur": [128, 130], "handa": [128, 130], "fabio": [128, 130], "ramo": [128, 130], "nathan": [128, 130], "ratliff": [128, 130], "dieter": [128, 129, 130, 131], "fox": [128, 129, 130, 131], "demonstr": 128, "massiv": 128, "difficult": 128, "50m": 128, "averag": 128, "60x": 128, "art": 128, "sota": 128, "novel": 128, "aid": 128, "101x": 128, "rrtconnect": 128, "7000": 128, "enrich": 128, "commun": 128, "misc": [128, 130], "curobo_report23": [128, 130], "titl": [128, 130], "author": [128, 130], "year": [128, 130], "eprint": [128, 130], "2310": [128, 130], "17274": [128, 130], "archiveprefix": [128, 130], "primaryclass": [128, 130], "publish": 128, "inproceed": 128, "curobo_icra23": 128, "booktitl": 128, "ieee": 128, "confer": 128, "autom": 128, "8112": 128, "8119": 128, "doi": 128, "1109": 128, "icra48891": 128, "10160765": 128, "beyond": 129, "latest": 129, "scholar": 129, "studi": [129, 131], "aspect": [129, 131], "vapr": [129, 131], "precis": [129, 131], "yu": [129, 131], "shun": [129, 131], "hsiao": [129, 131], "jason": [129, 131], "yik": [129, 131], "thierri": [129, 131], "tamb": [129, 131], "charbel": [129, 131], "sakr": [129, 131], "stephen": [129, 131], "keckler": [129, 131], "vijai": [129, 131], "janapa": [129, 131], "reddi": [129, 131], "iro": [129, 131], "reconstruct": [129, 131], "tabletop": [129, 131], "zhenggang": [129, 131], "tang": [129, 131], "jonathan": [129, 131], "tremblai": [129, 131], "bowen": [129, 131], "wen": [129, 131], "ye": [129, 131], "yuan": [129, 131], "tyre": [129, 131], "charl": [129, 131], "loop": [129, 131], "schwing": [129, 131], "stan": [129, 131], "birchfield": [129, 131], "anyteleop": [129, 131], "dexter": [129, 131], "teleoper": [129, 131], "yuzh": [129, 131], "qin": [129, 131], "wei": [129, 131], "yang": [129, 131], "binghao": [129, 131], "huang": [129, 131], "hao": [129, 131], "su": [129, 131], "xiaolong": [129, 131], "wang": [129, 131], "chao": [129, 131], "rss": [129, 131], "minimum": 130, "displai": 132, "fill_thi": 132, "franka_panda_met": 132, "usda": 132, "panda_joint1": 132, "panda_joint2": 132, "panda_joint3": 132, "panda_joint4": 132, "panda_joint5": 132, "panda_joint6": 132, "panda_joint7": 132, "panda_finger_joint1": 132, "panda_finger_joint2": 132, "franka_panda": 132, "panda_hand": 132, "panda_link0": 132, "panda_link1": 132, "panda_link2": 132, "panda_link3": 132, "panda_link4": 132, "panda_link5": 132, "panda_link6": 132, "panda_link7": 132, "panda_leftfing": 132, "panda_rightfing": 132, "franka_mesh": 132, "003": 132, "panda_link8": 132, "04": 132, "attach_joint": 132, "ur_descript": 132, "universal_robot": 132, "catkin": 132, "workspac": 132, "xacro": 132, "rosrun": 132, "o": 132, "weigh": 132, "tool0": 132, "shoulder_pan_joint": 132, "shoulder_lift_joint": 132, "elbow_joint": 132, "wrist_1_joint": 132, "wrist_2_joint": 132, "wrist_3_joint": 132, "57": 132, "383": 132, "00": 132, "usual": 132, "isaac_sim_path": 132, "convert_urdf_to_usd": 132, "save_usd": 132, "lula": 132, "editor": 132, "remov": 132, "stand": 132, "ground": 132, "shoulder_link": 132, "upper_arm_link": 132, "forearm_link": 132, "wrist_1_link": 132, "wrist_2_link": 132, "wrist_3_link": 132, "center": 132, "416": 132, "078": 132, "015": 132, "134": 132, "14": 132, "138": 132, "062": 132, "285": 132, "061": 132, "222": 132, "008": 132, "07": 132, "076": 132, "031": 132, "387": 132, "014": 132, "057": 132, "121": 132, "006": 132, "007": 132, "312": 132, "056": 132, "065": 132, "266": 132, "397": 132, "018": 132, "052": 132, "009": 132, "047": 132, "045": 132, "046": 132, "036": 132, "03": 132, "029": 132, "consecut": 132, "suffici": 132, "neccessari": 132, "conserv": 132, "frankaemika": 132, "franka_ro": 132, "finger": 132, "fulli": 132, "visualize_spher": 132}, "objects": {"": [[0, 0, 0, "-", "curobo"]], "curobo": [[1, 0, 0, "-", "cuda_robot_model"], [8, 0, 0, "-", "curobolib"], [20, 0, 0, "-", "geom"], [32, 0, 0, "-", "graph"], [36, 0, 0, "-", "opt"], [46, 0, 0, "-", "rollout"], [67, 0, 0, "-", "types"], [75, 0, 0, "-", "util"], [88, 0, 0, "-", "util_file"], [89, 0, 0, "-", "wrap"]], "curobo.cuda_robot_model": [[2, 0, 0, "-", "cuda_robot_generator"], [3, 0, 0, "-", "cuda_robot_model"], [4, 0, 0, "-", "kinematics_parser"], [5, 0, 0, "-", "types"], [6, 0, 0, "-", "urdf_kinematics_parser"], [7, 0, 0, "-", "usd_kinematics_parser"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, 1, 1, "", "CudaRobotGenerator"], [2, 1, 1, "", "CudaRobotGeneratorConfig"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator": [[2, 2, 1, "", "_add_body_to_tree"], [2, 2, 1, "", "_build_chain"], [2, 2, 1, "", "_build_collision_model"], [2, 2, 1, "", "_build_kinematics"], [2, 2, 1, "", "_build_kinematics_tensors"], [2, 2, 1, "", "_build_kinematics_with_lock_joints"], [2, 2, 1, "", "_create_self_collision_thread_data"], [2, 2, 1, "", "_get_joint_links"], [2, 2, 1, "", "_get_joint_position_velocity_limits"], [2, 2, 1, "", "_get_link_poses"], [2, 2, 1, "", "_update_joint_limits"], [2, 2, 1, "", "add_fixed_link"], [2, 2, 1, "", "add_link"], [2, 3, 1, "", "get_joint_limits"], [2, 2, 1, "", "initialize_tensors"], [2, 3, 1, "", "kinematics_config"], [2, 3, 1, "", "kinematics_parser"], [2, 3, 1, "", "self_collision_config"]], "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig": [[2, 4, 1, "", "add_object_link"], [2, 4, 1, "", "asset_root_path"], [2, 4, 1, "", "base_link"], [2, 4, 1, "", "collision_link_names"], [2, 4, 1, "", "collision_sphere_buffer"], [2, 4, 1, "", "collision_spheres"], [2, 4, 1, "", "compute_jacobian"], [2, 4, 1, "", "cspace"], [2, 4, 1, "", "debug"], [2, 4, 1, "", "ee_link"], [2, 4, 1, "", "external_asset_path"], [2, 4, 1, "", "external_robot_configs_path"], [2, 4, 1, "", "extra_collision_spheres"], [2, 4, 1, "", "extra_links"], [2, 4, 1, "", "isaac_usd_path"], [2, 4, 1, "", "link_names"], [2, 4, 1, "", "load_link_names_with_mesh"], [2, 4, 1, "", "load_meshes"], [2, 4, 1, "", "lock_joints"], [2, 4, 1, "", "mesh_link_names"], [2, 4, 1, "", "self_collision_buffer"], [2, 4, 1, "", "self_collision_ignore"], [2, 4, 1, "", "tensor_args"], [2, 4, 1, "", "urdf_path"], [2, 4, 1, "", "usd_flip_joint_limits"], [2, 4, 1, "", "usd_flip_joints"], [2, 4, 1, "", "usd_path"], [2, 4, 1, "", "usd_robot_root"], [2, 4, 1, "", "use_external_assets"], [2, 4, 1, "", "use_global_cumul"], [2, 4, 1, "", "use_usd_kinematics"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, 1, 1, "", "CudaRobotModel"], [3, 1, 1, "", "CudaRobotModelConfig"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel": [[3, 2, 1, "", "_cuda_forward"], [3, 3, 1, "", "all_articulated_joint_names"], [3, 3, 1, "", "base_link"], [3, 3, 1, "", "ee_link"], [3, 2, 1, "", "forward"], [3, 2, 1, "", "get_all_link_transforms"], [3, 2, 1, "", "get_dof"], [3, 2, 1, "", "get_link_mesh"], [3, 2, 1, "", "get_link_poses"], [3, 2, 1, "", "get_link_transform"], [3, 2, 1, "", "get_robot_as_mesh"], [3, 2, 1, "", "get_robot_as_spheres"], [3, 2, 1, "", "get_robot_link_meshes"], [3, 2, 1, "", "get_self_collision_config"], [3, 2, 1, "", "get_state"], [3, 3, 1, "", "joint_names"], [3, 3, 1, "", "lock_jointstate"], [3, 3, 1, "", "retract_config"], [3, 3, 1, "", "total_spheres"], [3, 2, 1, "", "update_batch_size"], [3, 2, 1, "", "update_kinematics_config"]], "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig": [[3, 4, 1, "", "compute_jacobian"], [3, 3, 1, "", "cspace"], [3, 2, 1, "", "from_basic_urdf"], [3, 2, 1, "", "from_basic_usd"], [3, 2, 1, "", "from_config"], [3, 2, 1, "", "from_data_dict"], [3, 2, 1, "", "from_robot_yaml_file"], [3, 4, 1, "", "generator_config"], [3, 2, 1, "", "get_joint_limits"], [3, 4, 1, "", "kinematics_config"], [3, 4, 1, "", "kinematics_parser"], [3, 4, 1, "", "link_names"], [3, 4, 1, "", "self_collision_config"], [3, 4, 1, "", "tensor_args"], [3, 4, 1, "", "use_global_cumul"]], "curobo.cuda_robot_model.kinematics_parser": [[4, 1, 1, "", "KinematicsParser"], [4, 1, 1, "", "LinkParams"]], "curobo.cuda_robot_model.kinematics_parser.KinematicsParser": [[4, 2, 1, "", "_get_from_extra_links"], [4, 2, 1, "", "add_absolute_path_to_link_meshes"], [4, 2, 1, "", "build_link_parent"], [4, 2, 1, "", "get_chain"], [4, 2, 1, "", "get_link_mesh"], [4, 2, 1, "", "get_link_parameters"]], "curobo.cuda_robot_model.kinematics_parser.LinkParams": [[4, 4, 1, "", "fixed_transform"], [4, 2, 1, "", "from_dict"], [4, 4, 1, "", "joint_axis"], [4, 4, 1, "", "joint_id"], [4, 4, 1, "", "joint_limits"], [4, 4, 1, "", "joint_name"], [4, 4, 1, "", "joint_type"], [4, 4, 1, "", "joint_velocity_limits"], [4, 4, 1, "", "link_name"], [4, 4, 1, "", "parent_link_name"]], "curobo.cuda_robot_model.types": [[5, 1, 1, "", "CSpaceConfig"], [5, 1, 1, "", "CudaRobotModelState"], [5, 1, 1, "", "JointLimits"], [5, 1, 1, "", "JointType"], [5, 1, 1, "", "KinematicsTensorConfig"], [5, 1, 1, "", "SelfCollisionKinematicsConfig"]], "curobo.cuda_robot_model.types.CSpaceConfig": [[5, 4, 1, "", "acceleration_scale"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "cspace_distance_weight"], [5, 2, 1, "", "inplace_reindex"], [5, 4, 1, "", "jerk_scale"], [5, 4, 1, "", "joint_names"], [5, 2, 1, "", "load_from_joint_limits"], [5, 4, 1, "", "max_acceleration"], [5, 4, 1, "", "max_jerk"], [5, 4, 1, "", "null_space_weight"], [5, 4, 1, "", "position_limit_clip"], [5, 4, 1, "", "retract_config"], [5, 2, 1, "", "scale_joint_limits"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity_scale"]], "curobo.cuda_robot_model.types.CudaRobotModelState": [[5, 4, 1, "", "ang_jacobian"], [5, 3, 1, "", "ee_pose"], [5, 4, 1, "", "ee_position"], [5, 4, 1, "", "ee_quaternion"], [5, 2, 1, "", "get_link_spheres"], [5, 4, 1, "", "lin_jacobian"], [5, 4, 1, "", "link_names"], [5, 3, 1, "", "link_pose"], [5, 4, 1, "", "link_spheres_tensor"], [5, 4, 1, "", "links_position"], [5, 4, 1, "", "links_quaternion"]], "curobo.cuda_robot_model.types.JointLimits": [[5, 4, 1, "", "acceleration"], [5, 2, 1, "", "clone"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "effort"], [5, 2, 1, "", "from_data_dict"], [5, 4, 1, "", "jerk"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "position"], [5, 4, 1, "", "tensor_args"], [5, 4, 1, "", "velocity"]], "curobo.cuda_robot_model.types.JointType": [[5, 4, 1, "", "FIXED"], [5, 4, 1, "", "X_PRISM"], [5, 4, 1, "", "X_PRISM_NEG"], [5, 4, 1, "", "X_ROT"], [5, 4, 1, "", "X_ROT_NEG"], [5, 4, 1, "", "Y_PRISM"], [5, 4, 1, "", "Y_PRISM_NEG"], [5, 4, 1, "", "Y_ROT"], [5, 4, 1, "", "Y_ROT_NEG"], [5, 4, 1, "", "Z_PRISM"], [5, 4, 1, "", "Z_PRISM_NEG"], [5, 4, 1, "", "Z_ROT"], [5, 4, 1, "", "Z_ROT_NEG"]], "curobo.cuda_robot_model.types.KinematicsTensorConfig": [[5, 2, 1, "", "attach_object"], [5, 4, 1, "", "base_link"], [5, 2, 1, "", "copy_"], [5, 4, 1, "", "cspace"], [5, 4, 1, "", "debug"], [5, 2, 1, "", "detach_object"], [5, 2, 1, "", "disable_link_spheres"], [5, 4, 1, "", "ee_idx"], [5, 4, 1, "", "ee_link"], [5, 2, 1, "", "enable_link_spheres"], [5, 4, 1, "", "fixed_transforms"], [5, 2, 1, "", "get_link_spheres"], [5, 2, 1, "", "get_number_of_spheres"], [5, 2, 1, "", "get_reference_link_spheres"], [5, 2, 1, "", "get_sphere_index_from_link_name"], [5, 4, 1, "", "joint_limits"], [5, 4, 1, "", "joint_map"], [5, 4, 1, "", "joint_map_type"], [5, 4, 1, "", "joint_names"], [5, 4, 1, "", "link_chain_map"], [5, 4, 1, "", "link_map"], [5, 4, 1, "", "link_name_to_idx_map"], [5, 4, 1, "", "link_names"], [5, 4, 1, "", "link_sphere_idx_map"], [5, 4, 1, "", "link_spheres"], [5, 2, 1, "", "load_cspace_cfg_from_kinematics"], [5, 4, 1, "", "lock_jointstate"], [5, 4, 1, "", "mesh_link_names"], [5, 4, 1, "", "n_dof"], [5, 4, 1, "", "non_fixed_joint_names"], [5, 4, 1, "", "reference_link_spheres"], [5, 4, 1, "", "store_link_map"], [5, 4, 1, "", "total_spheres"], [5, 2, 1, "", "update_link_spheres"]], "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig": [[5, 4, 1, "", "checks_per_thread"], [5, 4, 1, "", "collision_matrix"], [5, 4, 1, "", "distance_threshold"], [5, 4, 1, "", "experimental_kernel"], [5, 4, 1, "", "offset"], [5, 4, 1, "", "thread_location"], [5, 4, 1, "", "thread_max"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, 1, 1, "", "UrdfKinematicsParser"]], "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser": [[6, 2, 1, "", "_find_parent_joint_of_link"], [6, 2, 1, "", "_get_joint_name"], [6, 2, 1, "", "add_absolute_path_to_link_meshes"], [6, 2, 1, "", "build_link_parent"], [6, 2, 1, "", "get_link_mesh"], [6, 2, 1, "", "get_link_parameters"], [6, 2, 1, "", "get_urdf_string"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, 1, 1, "", "UsdKinematicsParser"], [7, 5, 1, "", "get_links_for_joint"]], "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser": [[7, 2, 1, "", "_get_joint_transform"], [7, 2, 1, "", "build_link_parent"], [7, 2, 1, "", "get_link_parameters"], [7, 3, 1, "", "robot_prim_root"]], "curobo.curobolib": [[9, 0, 0, "-", "geom"], [10, 0, 0, "-", "geom_cu"], [11, 0, 0, "-", "kinematics"], [12, 0, 0, "-", "kinematics_fused_cu"], [13, 0, 0, "-", "lbfgs_step_cu"], [14, 0, 0, "-", "line_search_cu"], [15, 0, 0, "-", "ls"], [16, 0, 0, "-", "opt"], [17, 0, 0, "-", "tensor_step"], [18, 0, 0, "-", "tensor_step_cu"], [19, 0, 0, "-", "util_file"]], "curobo.curobolib.geom": [[9, 1, 1, "", "PoseError"], [9, 1, 1, "", "PoseErrorDistance"], [9, 1, 1, "", "SdfSphereOBB"], [9, 1, 1, "", "SdfSweptSphereOBB"], [9, 1, 1, "", "SelfCollisionDistance"], [9, 1, 1, "", "SelfCollisionDistanceLoss"], [9, 5, 1, "", "get_pose_distance"], [9, 5, 1, "", "get_pose_distance_backward"], [9, 5, 1, "", "get_self_collision_distance"]], "curobo.curobolib.geom.PoseError": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.PoseErrorDistance": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSphereOBB": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SdfSweptSphereOBB": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistance": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"], [9, 2, 1, "", "forward"]], "curobo.curobolib.geom.SelfCollisionDistanceLoss": [[9, 4, 1, "", "_backward_cls"], [9, 2, 1, "", "backward"]], "curobo.curobolib.geom_cu": [[10, 5, 1, "", "closest_point"], [10, 5, 1, "", "pose_distance"], [10, 5, 1, "", "pose_distance_backward"], [10, 5, 1, "", "self_collision_distance"], [10, 5, 1, "", "swept_closest_point"]], "curobo.curobolib.kinematics": [[11, 1, 1, "", "KinematicsFusedFunction"], [11, 1, 1, "", "KinematicsFusedGlobalCumulFunction"], [11, 5, 1, "", "get_cuda_kinematics"], [11, 5, 1, "", "rotation_matrix_to_quaternion"]], "curobo.curobolib.kinematics.KinematicsFusedFunction": [[11, 4, 1, "", "_backward_cls"], [11, 2, 1, "", "_call_backward_cuda"], [11, 2, 1, "", "_call_cuda"], [11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction": [[11, 4, 1, "", "_backward_cls"], [11, 2, 1, "", "_call_backward_cuda"], [11, 2, 1, "", "_call_cuda"], [11, 2, 1, "", "backward"], [11, 2, 1, "", "forward"]], "curobo.curobolib.kinematics_fused_cu": [[12, 5, 1, "", "backward"], [12, 5, 1, "", "forward"], [12, 5, 1, "", "matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, 5, 1, "", "debug_reduce"], [13, 5, 1, "", "forward"], [13, 5, 1, "", "step"], [13, 5, 1, "", "update"]], "curobo.curobolib.line_search_cu": [[14, 5, 1, "", "line_search"], [14, 5, 1, "", "update_best"]], "curobo.curobolib.ls": [[15, 5, 1, "", "update_best"], [15, 5, 1, "", "wolfe_line_search"]], "curobo.curobolib.opt": [[16, 1, 1, "", "LBFGScu"]], "curobo.curobolib.opt.LBFGScu": [[16, 4, 1, "", "_backward_cls"], [16, 2, 1, "", "_call_cuda"], [16, 2, 1, "", "backward"], [16, 2, 1, "", "forward"]], "curobo.curobolib.tensor_step": [[17, 5, 1, "", "tensor_step_acc_fwd"], [17, 5, 1, "", "tensor_step_acc_idx_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_bwd"], [17, 5, 1, "", "tensor_step_pos_clique_fwd"], [17, 5, 1, "", "tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, 5, 1, "", "step_acceleration"], [18, 5, 1, "", "step_acceleration_idx"], [18, 5, 1, "", "step_idx_position2"], [18, 5, 1, "", "step_position"], [18, 5, 1, "", "step_position2"], [18, 5, 1, "", "step_position_backward"], [18, 5, 1, "", "step_position_backward2"]], "curobo.curobolib.util_file": [[19, 5, 1, "", "add_cpp_path"], [19, 5, 1, "", "get_cpp_path"], [19, 5, 1, "", "join_path"]], "curobo.geom": [[21, 0, 0, "-", "cv"], [22, 0, 0, "-", "sdf"], [29, 0, 0, "-", "sphere_fit"], [30, 0, 0, "-", "transform"], [31, 0, 0, "-", "types"]], "curobo.geom.sdf": [[23, 0, 0, "-", "sdf_grid"], [24, 0, 0, "-", "utils"], [25, 0, 0, "-", "warp_primitives"], [26, 0, 0, "-", "world"], [27, 0, 0, "-", "world_blox"], [28, 0, 0, "-", "world_mesh"]], "curobo.geom.sdf.sdf_grid": [[23, 1, 1, "", "SDFGrid"], [23, 5, 1, "", "compute_sdf_gradient"], [23, 5, 1, "", "lookup_distance"]], "curobo.geom.sdf.sdf_grid.SDFGrid": [[23, 4, 1, "", "_backward_cls"], [23, 2, 1, "", "backward"], [23, 2, 1, "", "forward"]], "curobo.geom.sdf.utils": [[24, 5, 1, "", "create_collision_checker"]], "curobo.geom.sdf.warp_primitives": [[25, 1, 1, "", "SdfMeshWarpPy"], [25, 1, 1, "", "SweptSdfMeshWarpPy"]], "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy": [[25, 4, 1, "", "_backward_cls"], [25, 2, 1, "", "backward"], [25, 2, 1, "", "forward"]], "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy": [[25, 4, 1, "", "_backward_cls"], [25, 2, 1, "", "backward"], [25, 2, 1, "", "forward"]], "curobo.geom.sdf.world": [[26, 1, 1, "", "CollisionBuffer"], [26, 1, 1, "", "CollisionCheckerType"], [26, 1, 1, "", "CollisionQueryBuffer"], [26, 1, 1, "", "WorldCollision"], [26, 1, 1, "", "WorldCollisionConfig"], [26, 1, 1, "", "WorldPrimitiveCollision"]], "curobo.geom.sdf.world.CollisionBuffer": [[26, 2, 1, "", "_update_from_shape"], [26, 2, 1, "", "clone"], [26, 4, 1, "", "distance_buffer"], [26, 4, 1, "", "grad_distance_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 4, 1, "", "shape"], [26, 4, 1, "", "sparsity_index_buffer"], [26, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.CollisionCheckerType": [[26, 4, 1, "", "BLOX"], [26, 4, 1, "", "MESH"], [26, 4, 1, "", "PRIMITIVE"]], "curobo.geom.sdf.world.CollisionQueryBuffer": [[26, 4, 1, "", "blox_collision_buffer"], [26, 2, 1, "", "clone"], [26, 2, 1, "", "create_from_shape"], [26, 2, 1, "", "get_gradient_buffer"], [26, 2, 1, "", "initialize_from_shape"], [26, 4, 1, "", "mesh_collision_buffer"], [26, 4, 1, "", "primitive_collision_buffer"], [26, 4, 1, "", "shape"], [26, 2, 1, "", "update_buffer_shape"]], "curobo.geom.sdf.world.WorldCollision": [[26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_sphere_trace"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "load_collision_model"]], "curobo.geom.sdf.world.WorldCollisionConfig": [[26, 4, 1, "", "cache"], [26, 4, 1, "", "checker_type"], [26, 2, 1, "", "load_from_dict"], [26, 4, 1, "", "max_distance"], [26, 4, 1, "", "n_envs"], [26, 4, 1, "", "tensor_args"], [26, 4, 1, "", "world_model"]], "curobo.geom.sdf.world.WorldPrimitiveCollision": [[26, 2, 1, "", "_create_obb_cache"], [26, 2, 1, "", "_get_obstacle_poses"], [26, 2, 1, "", "_init_cache"], [26, 2, 1, "", "_load_collision_model_in_cache"], [26, 2, 1, "", "add_obb"], [26, 2, 1, "", "add_obb_from_raw"], [26, 2, 1, "", "clear_cache"], [26, 2, 1, "", "enable_obb"], [26, 2, 1, "", "enable_obstacle"], [26, 2, 1, "", "get_mesh_in_bounding_box"], [26, 2, 1, "", "get_obb_idx"], [26, 2, 1, "", "get_sphere_collision"], [26, 2, 1, "", "get_sphere_distance"], [26, 2, 1, "", "get_swept_sphere_collision"], [26, 2, 1, "", "get_swept_sphere_distance"], [26, 2, 1, "", "get_voxels_in_bounding_box"], [26, 2, 1, "", "load_batch_collision_model"], [26, 2, 1, "", "load_collision_model"], [26, 2, 1, "", "update_obb_dims"], [26, 2, 1, "", "update_obb_pose"], [26, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sdf.world_blox": [[27, 1, 1, "", "WorldBloxCollision"]], "curobo.geom.sdf.world_blox.WorldBloxCollision": [[27, 2, 1, "", "_get_blox_sdf"], [27, 2, 1, "", "_get_blox_swept_sdf"], [27, 2, 1, "", "add_camera_frame"], [27, 2, 1, "", "clear_blox_layer"], [27, 2, 1, "", "clear_bounding_box"], [27, 2, 1, "", "clear_cache"], [27, 2, 1, "", "decay_layer"], [27, 2, 1, "", "enable_blox"], [27, 2, 1, "", "enable_obstacle"], [27, 2, 1, "", "get_bounding_spheres"], [27, 2, 1, "", "get_mesh_from_blox_layer"], [27, 2, 1, "", "get_sphere_collision"], [27, 2, 1, "", "get_sphere_distance"], [27, 2, 1, "", "get_swept_sphere_collision"], [27, 2, 1, "", "get_swept_sphere_distance"], [27, 2, 1, "", "load_collision_model"], [27, 2, 1, "", "process_camera_frames"], [27, 2, 1, "", "save_layer"], [27, 2, 1, "", "update_blox_esdf"], [27, 2, 1, "", "update_blox_hashes"], [27, 2, 1, "", "update_blox_mesh"], [27, 2, 1, "", "update_blox_pose"]], "curobo.geom.sdf.world_mesh": [[28, 1, 1, "", "WarpMeshData"], [28, 1, 1, "", "WorldMeshCollision"]], "curobo.geom.sdf.world_mesh.WarpMeshData": [[28, 4, 1, "", "faces"], [28, 4, 1, "", "m_id"], [28, 4, 1, "", "mesh"], [28, 4, 1, "", "name"], [28, 4, 1, "", "vertices"]], "curobo.geom.sdf.world_mesh.WorldMeshCollision": [[28, 2, 1, "", "_create_mesh_cache"], [28, 2, 1, "", "_get_sdf"], [28, 2, 1, "", "_get_swept_sdf"], [28, 2, 1, "", "_init_cache"], [28, 2, 1, "", "_load_batch_mesh_to_warp"], [28, 2, 1, "", "_load_mesh_into_cache"], [28, 2, 1, "", "_load_mesh_to_warp"], [28, 2, 1, "", "add_mesh"], [28, 2, 1, "", "clear_cache"], [28, 2, 1, "", "create_collision_cache"], [28, 2, 1, "", "enable_mesh"], [28, 2, 1, "", "enable_obstacle"], [28, 2, 1, "", "get_mesh_idx"], [28, 2, 1, "", "get_sphere_collision"], [28, 2, 1, "", "get_sphere_distance"], [28, 2, 1, "", "get_swept_sphere_collision"], [28, 2, 1, "", "get_swept_sphere_distance"], [28, 2, 1, "", "load_batch_collision_model"], [28, 2, 1, "", "load_collision_model"], [28, 2, 1, "", "update_all_mesh_pose"], [28, 2, 1, "", "update_mesh_from_warp"], [28, 2, 1, "", "update_mesh_pose"], [28, 2, 1, "", "update_mesh_pose_env"], [28, 2, 1, "", "update_obstacle_pose"]], "curobo.geom.sphere_fit": [[29, 1, 1, "", "SphereFitType"], [29, 5, 1, "", "fit_spheres_to_mesh"], [29, 5, 1, "", "get_voxel_pitch"], [29, 5, 1, "", "get_voxelgrid_from_mesh"], [29, 5, 1, "", "sample_even_fit_mesh"], [29, 5, 1, "", "voxel_fit_mesh"], [29, 5, 1, "", "voxel_fit_surface_mesh"], [29, 5, 1, "", "voxel_fit_volume_inside_mesh"], [29, 5, 1, "", "voxel_fit_volume_sample_surface_mesh"]], "curobo.geom.sphere_fit.SphereFitType": [[29, 4, 1, "", "SAMPLE_SURFACE"], [29, 4, 1, "", "VOXEL_SURFACE"], [29, 4, 1, "", "VOXEL_VOLUME"], [29, 4, 1, "", "VOXEL_VOLUME_INSIDE"], [29, 4, 1, "", "VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.transform": [[30, 1, 1, "", "BatchTransformPoint"], [30, 1, 1, "", "BatchTransformPose"], [30, 1, 1, "", "MatrixToQuaternion"], [30, 1, 1, "", "PoseInverse"], [30, 1, 1, "", "QuatToMatrix"], [30, 1, 1, "", "TransformPoint"], [30, 1, 1, "", "TransformPose"], [30, 5, 1, "", "batch_transform_points"], [30, 5, 1, "", "cuda_matrix_to_quaternion"], [30, 5, 1, "", "matrix_to_quaternion"], [30, 5, 1, "", "pose_inverse"], [30, 5, 1, "", "pose_multiply"], [30, 5, 1, "", "pose_to_matrix"], [30, 5, 1, "", "quaternion_to_matrix"], [30, 5, 1, "", "torch_quaternion_to_matrix"], [30, 5, 1, "", "transform_points"]], "curobo.geom.transform.BatchTransformPoint": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.BatchTransformPose": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.MatrixToQuaternion": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.PoseInverse": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.QuatToMatrix": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPoint": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.transform.TransformPose": [[30, 4, 1, "", "_backward_cls"], [30, 2, 1, "", "backward"], [30, 2, 1, "", "forward"]], "curobo.geom.types": [[31, 1, 1, "", "BloxMap"], [31, 1, 1, "", "Capsule"], [31, 1, 1, "", "Cuboid"], [31, 1, 1, "", "Cylinder"], [31, 1, 1, "", "Material"], [31, 1, 1, "", "Mesh"], [31, 1, 1, "", "Obstacle"], [31, 1, 1, "", "PointCloud"], [31, 1, 1, "", "Sphere"], [31, 1, 1, "", "WorldConfig"], [31, 5, 1, "", "batch_tensor_cube"], [31, 5, 1, "", "tensor_capsule"], [31, 5, 1, "", "tensor_cube"], [31, 5, 1, "", "tensor_sphere"]], "curobo.geom.types.BloxMap": [[31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "integrator_type"], [31, 4, 1, "", "map_path"], [31, 4, 1, "", "mapper_instance"], [31, 4, 1, "", "mesh"], [31, 4, 1, "", "mesh_file_path"], [31, 4, 1, "", "voxel_size"]], "curobo.geom.types.Capsule": [[31, 4, 1, "", "base"], [31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "radius"], [31, 4, 1, "", "tip"]], "curobo.geom.types.Cuboid": [[31, 4, 1, "", "dims"], [31, 2, 1, "", "get_trimesh_mesh"]], "curobo.geom.types.Cylinder": [[31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "height"], [31, 4, 1, "", "radius"]], "curobo.geom.types.Material": [[31, 4, 1, "", "metallic"], [31, 4, 1, "", "roughness"]], "curobo.geom.types.Mesh": [[31, 4, 1, "", "face_colors"], [31, 4, 1, "", "faces"], [31, 4, 1, "", "file_path"], [31, 4, 1, "", "file_string"], [31, 2, 1, "", "from_pointcloud"], [31, 2, 1, "", "get_mesh_data"], [31, 2, 1, "", "get_trimesh_mesh"], [31, 2, 1, "", "update_material"], [31, 4, 1, "", "urdf_path"], [31, 4, 1, "", "vertex_colors"], [31, 4, 1, "", "vertex_normals"], [31, 4, 1, "", "vertices"]], "curobo.geom.types.Obstacle": [[31, 4, 1, "", "color"], [31, 2, 1, "", "get_bounding_spheres"], [31, 2, 1, "", "get_cuboid"], [31, 2, 1, "", "get_mesh"], [31, 2, 1, "", "get_sphere"], [31, 2, 1, "", "get_transform_matrix"], [31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "material"], [31, 4, 1, "", "name"], [31, 4, 1, "", "pose"], [31, 2, 1, "", "save_as_mesh"], [31, 4, 1, "", "scale"], [31, 4, 1, "", "tensor_args"], [31, 4, 1, "", "texture"], [31, 4, 1, "", "texture_id"]], "curobo.geom.types.PointCloud": [[31, 2, 1, "", "from_camera_observation"], [31, 2, 1, "", "get_bounding_spheres"], [31, 2, 1, "", "get_mesh_data"], [31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "points"], [31, 4, 1, "", "points_features"]], "curobo.geom.types.Sphere": [[31, 2, 1, "", "get_cuboid"], [31, 2, 1, "", "get_trimesh_mesh"], [31, 4, 1, "", "position"], [31, 4, 1, "", "radius"]], "curobo.geom.types.WorldConfig": [[31, 4, 1, "", "_abc_impl"], [31, 2, 1, "", "add_color"], [31, 2, 1, "", "add_material"], [31, 2, 1, "", "add_obstacle"], [31, 4, 1, "", "blox"], [31, 4, 1, "", "capsule"], [31, 2, 1, "", "clone"], [31, 2, 1, "", "create_collision_support_world"], [31, 2, 1, "", "create_merged_mesh_world"], [31, 2, 1, "", "create_mesh_world"], [31, 2, 1, "", "create_obb_world"], [31, 4, 1, "", "cuboid"], [31, 4, 1, "", "cylinder"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "get_cache_dict"], [31, 2, 1, "", "get_collision_check_world"], [31, 2, 1, "", "get_mesh_world"], [31, 2, 1, "", "get_obb_world"], [31, 2, 1, "", "get_obstacle"], [31, 2, 1, "", "get_scene_graph"], [31, 4, 1, "", "mesh"], [31, 4, 1, "", "objects"], [31, 2, 1, "", "randomize_color"], [31, 2, 1, "", "remove_absolute_paths"], [31, 2, 1, "", "remove_obstacle"], [31, 2, 1, "", "save_world_as_mesh"], [31, 4, 1, "", "sphere"]], "curobo.graph": [[33, 0, 0, "-", "graph_base"], [34, 0, 0, "-", "graph_nx"], [35, 0, 0, "-", "prm"]], "curobo.graph.graph_base": [[33, 1, 1, "", "Graph"], [33, 1, 1, "", "GraphConfig"], [33, 1, 1, "", "GraphPlanBase"], [33, 1, 1, "", "GraphResult"]], "curobo.graph.graph_base.Graph": [[33, 4, 1, "", "connectivity"], [33, 4, 1, "", "edges"], [33, 2, 1, "", "get_node_distance"], [33, 4, 1, "", "nodes"], [33, 2, 1, "", "set_shortest_path_lengths"], [33, 4, 1, "", "shortest_path_lengths"]], "curobo.graph.graph_base.GraphConfig": [[33, 4, 1, "", "bias_node"], [33, 4, 1, "", "bounds"], [33, 4, 1, "", "c_max"], [33, 4, 1, "", "compute_metrics"], [33, 4, 1, "", "distance_weight"], [33, 4, 1, "", "dof"], [33, 2, 1, "", "from_dict"], [33, 4, 1, "", "graph_max_attempts"], [33, 4, 1, "", "graph_min_attempts"], [33, 4, 1, "", "init_nodes"], [33, 4, 1, "", "interpolation_acceleration_scale"], [33, 4, 1, "", "interpolation_deviation"], [33, 4, 1, "", "interpolation_dt"], [33, 4, 1, "", "interpolation_steps"], [33, 4, 1, "", "interpolation_type"], [33, 4, 1, "", "k_nn"], [33, 2, 1, "", "load_from_robot_config"], [33, 4, 1, "", "max_buffer"], [33, 4, 1, "", "max_cg_buffer"], [33, 4, 1, "", "max_nodes"], [33, 4, 1, "", "node_similarity_distance"], [33, 4, 1, "", "rejection_ratio"], [33, 4, 1, "", "rollout_fn"], [33, 4, 1, "", "safety_rollout_fn"], [33, 4, 1, "", "sample_pts"], [33, 4, 1, "", "seed"], [33, 4, 1, "", "steer_delta_buffer"], [33, 4, 1, "", "tensor_args"], [33, 4, 1, "", "use_bias_node"], [33, 4, 1, "", "use_cuda_graph_mask_samples"], [33, 4, 1, "", "vertex_n"]], "curobo.graph.graph_base.GraphPlanBase": [[33, 2, 1, "", "_add_batch_edges_to_graph"], [33, 2, 1, "", "_add_unique_nodes_to_graph"], [33, 2, 1, "", "_batch_k_nearest"], [33, 2, 1, "", "_batch_steer"], [33, 2, 1, "", "_batch_steer_and_connect"], [33, 2, 1, "", "_compute_rotation_frame"], [33, 2, 1, "", "_cuda_graph_rollout_constraint"], [33, 2, 1, "", "_distance"], [33, 2, 1, "", "_find_paths"], [33, 2, 1, "", "_get_graph_shortest_path"], [33, 2, 1, "", "_hybrid_nearest"], [33, 2, 1, "", "_k_nearest"], [33, 2, 1, "", "_mask_samples"], [33, 2, 1, "", "_mask_samples_cuda_graph"], [33, 2, 1, "", "_near"], [33, 2, 1, "", "_nearest"], [33, 2, 1, "", "_sample_pts"], [33, 2, 1, "", "_validate_graph"], [33, 2, 1, "", "add_nodes_to_graph"], [33, 2, 1, "", "batch_get_graph_shortest_path"], [33, 2, 1, "", "batch_path_exists"], [33, 2, 1, "", "batch_shortcut_path"], [33, 2, 1, "", "check_feasibility"], [33, 2, 1, "", "compute_path_length"], [33, 2, 1, "", "connect_nodes"], [33, 2, 1, "", "distance"], [33, 2, 1, "", "find_paths"], [33, 2, 1, "", "get_all_rollout_instances"], [33, 2, 1, "", "get_biased_vertex_set"], [33, 2, 1, "", "get_feasible_sample_set"], [33, 2, 1, "", "get_graph"], [33, 2, 1, "", "get_graph_edges"], [33, 2, 1, "", "get_graph_shortest_path_lengths"], [33, 2, 1, "", "get_interpolated_trajectory"], [33, 2, 1, "", "get_metrics"], [33, 2, 1, "", "get_new_vertex_set"], [33, 2, 1, "", "get_node_idx"], [33, 2, 1, "", "get_path_lengths"], [33, 2, 1, "", "get_paths"], [33, 2, 1, "", "get_samples"], [33, 2, 1, "", "mask_samples"], [33, 2, 1, "", "path_exists"], [33, 2, 1, "", "reset_buffer"], [33, 2, 1, "", "reset_cuda_graph"], [33, 2, 1, "", "reset_graph"], [33, 2, 1, "", "reset_seed"], [33, 2, 1, "", "validate_graph"], [33, 2, 1, "", "warmup"]], "curobo.graph.graph_base.GraphResult": [[33, 4, 1, "", "debug_info"], [33, 4, 1, "", "goal_q"], [33, 4, 1, "", "interpolated_plan"], [33, 4, 1, "", "metrics"], [33, 4, 1, "", "optimized_dt"], [33, 4, 1, "", "path_buffer_last_tstep"], [33, 4, 1, "", "path_length"], [33, 4, 1, "", "plan"], [33, 4, 1, "", "solve_time"], [33, 4, 1, "", "start_q"], [33, 4, 1, "", "success"], [33, 4, 1, "", "valid_query"]], "curobo.graph.graph_nx": [[34, 1, 1, "", "NetworkxGraph"]], "curobo.graph.graph_nx.NetworkxGraph": [[34, 2, 1, "", "add_edge"], [34, 2, 1, "", "add_edges"], [34, 2, 1, "", "add_node"], [34, 2, 1, "", "add_nodes"], [34, 2, 1, "", "get_edges"], [34, 2, 1, "", "get_path_lengths"], [34, 2, 1, "", "get_shortest_path"], [34, 2, 1, "", "path_exists"], [34, 2, 1, "", "reset_graph"], [34, 2, 1, "", "update_graph"]], "curobo.graph.prm": [[35, 1, 1, "", "PRMStar"]], "curobo.graph.prm.PRMStar": [[35, 2, 1, "", "_add_bias_graph"], [35, 2, 1, "", "_find_all_path"], [35, 2, 1, "", "_find_one_path"], [35, 2, 1, "", "_find_paths"], [35, 2, 1, "", "build_graph"], [35, 2, 1, "", "warmup"]], "curobo.opt": [[37, 0, 0, "-", "newton"], [40, 0, 0, "-", "opt_base"], [41, 0, 0, "-", "particle"]], "curobo.opt.newton": [[38, 0, 0, "-", "lbfgs"], [39, 0, 0, "-", "newton_base"]], "curobo.opt.newton.lbfgs": [[38, 1, 1, "", "LBFGSOpt"], [38, 1, 1, "", "LBFGSOptConfig"], [38, 5, 1, "", "compute_step_direction"]], "curobo.opt.newton.lbfgs.LBFGSOpt": [[38, 2, 1, "", "_get_step_direction"], [38, 2, 1, "", "_shift"], [38, 2, 1, "", "_shift_buffer"], [38, 2, 1, "", "_update_buffers"], [38, 2, 1, "", "_update_q"], [38, 2, 1, "", "_update_r"], [38, 2, 1, "", "init_hessian"], [38, 2, 1, "", "reset"], [38, 2, 1, "", "update_nproblems"]], "curobo.opt.newton.lbfgs.LBFGSOptConfig": [[38, 4, 1, "", "epsilon"], [38, 4, 1, "", "history"], [38, 4, 1, "", "stable_mode"], [38, 4, 1, "", "use_cuda_kernel"]], "curobo.opt.newton.newton_base": [[39, 1, 1, "", "LineSearchType"], [39, 1, 1, "", "NewtonOptBase"], [39, 1, 1, "", "NewtonOptConfig"]], "curobo.opt.newton.newton_base.LineSearchType": [[39, 4, 1, "", "APPROX_WOLFE"], [39, 4, 1, "", "ARMIJO"], [39, 4, 1, "", "GREEDY"], [39, 4, 1, "", "STRONG_WOLFE"], [39, 4, 1, "", "WOLFE"]], "curobo.opt.newton.newton_base.NewtonOptBase": [[39, 2, 1, "", "_approx_line_search"], [39, 2, 1, "", "_armijo_line_search"], [39, 2, 1, "", "_call_opt_iters_graph"], [39, 2, 1, "", "_compute_cost_gradient"], [39, 2, 1, "", "_create_box_line_search"], [39, 2, 1, "", "_create_opt_iters_graph"], [39, 2, 1, "", "_get_step_direction"], [39, 2, 1, "", "_greedy_line_search"], [39, 2, 1, "", "_initialize_opt_iters_graph"], [39, 2, 1, "", "_opt_iters"], [39, 2, 1, "", "_opt_step"], [39, 2, 1, "", "_optimize"], [39, 2, 1, "", "_shift"], [39, 2, 1, "", "_update_best"], [39, 2, 1, "", "_wolfe_line_search"], [39, 2, 1, "", "check_convergence"], [39, 2, 1, "", "clip_bounds"], [39, 2, 1, "", "project_bounds"], [39, 2, 1, "", "reset"], [39, 2, 1, "", "reset_cuda_graph"], [39, 2, 1, "", "scale_step_direction"], [39, 2, 1, "", "update_nproblems"]], "curobo.opt.newton.newton_base.NewtonOptConfig": [[39, 4, 1, "", "cost_convergence"], [39, 4, 1, "", "cost_delta_threshold"], [39, 4, 1, "", "cost_relative_threshold"], [39, 4, 1, "", "fixed_iters"], [39, 4, 1, "", "inner_iters"], [39, 4, 1, "", "last_best"], [39, 4, 1, "", "line_search_scale"], [39, 4, 1, "", "line_search_type"], [39, 4, 1, "", "min_iters"], [39, 4, 1, "", "step_scale"], [39, 4, 1, "", "use_cuda_line_search_kernel"], [39, 4, 1, "", "use_cuda_update_best_kernel"], [39, 4, 1, "", "use_temporal_smooth"]], "curobo.opt.opt_base": [[40, 1, 1, "", "Optimizer"], [40, 1, 1, "", "OptimizerConfig"]], "curobo.opt.opt_base.Optimizer": [[40, 2, 1, "", "_optimize"], [40, 2, 1, "", "_shift"], [40, 2, 1, "", "_update_problem_kernel"], [40, 2, 1, "", "get_all_rollout_instances"], [40, 2, 1, "", "get_nproblem_tensor"], [40, 2, 1, "", "optimize"], [40, 2, 1, "", "reset"], [40, 2, 1, "", "reset_cuda_graph"], [40, 2, 1, "", "reset_seed"], [40, 2, 1, "", "reset_shape"], [40, 2, 1, "", "update_nproblems"], [40, 2, 1, "", "update_params"]], "curobo.opt.opt_base.OptimizerConfig": [[40, 4, 1, "", "action_highs"], [40, 4, 1, "", "action_horizon"], [40, 4, 1, "", "action_lows"], [40, 4, 1, "", "cold_start_n_iters"], [40, 2, 1, "", "create_data_dict"], [40, 4, 1, "", "d_action"], [40, 4, 1, "", "debug_info"], [40, 4, 1, "", "horizon"], [40, 4, 1, "", "n_iters"], [40, 4, 1, "", "n_problems"], [40, 4, 1, "", "num_particles"], [40, 4, 1, "", "rollout_fn"], [40, 4, 1, "", "store_debug"], [40, 4, 1, "", "sync_cuda_time"], [40, 4, 1, "", "tensor_args"], [40, 4, 1, "", "use_coo_sparse"], [40, 4, 1, "", "use_cuda_graph"]], "curobo.opt.particle": [[42, 0, 0, "-", "parallel_es"], [43, 0, 0, "-", "parallel_mppi"], [44, 0, 0, "-", "particle_opt_base"], [45, 0, 0, "-", "particle_opt_utils"]], "curobo.opt.particle.parallel_es": [[42, 1, 1, "", "ParallelES"], [42, 1, 1, "", "ParallelESConfig"]], "curobo.opt.particle.parallel_es.ParallelES": [[42, 2, 1, "", "_compute_mean"], [42, 2, 1, "", "_exp_util"]], "curobo.opt.particle.parallel_es.ParallelESConfig": [[42, 4, 1, "", "learning_rate"]], "curobo.opt.particle.parallel_mppi": [[43, 1, 1, "", "BaseActionType"], [43, 1, 1, "", "CovType"], [43, 1, 1, "", "ParallelMPPI"], [43, 1, 1, "", "ParallelMPPIConfig"]], "curobo.opt.particle.parallel_mppi.BaseActionType": [[43, 4, 1, "", "NULL"], [43, 4, 1, "", "RANDOM"], [43, 4, 1, "", "REPEAT"]], "curobo.opt.particle.parallel_mppi.CovType": [[43, 4, 1, "", "DIAG_A"], [43, 4, 1, "", "FULL_A"], [43, 4, 1, "", "FULL_HA"], [43, 4, 1, "", "SIGMA_I"]], "curobo.opt.particle.parallel_mppi.ParallelMPPI": [[43, 2, 1, "", "_calc_val"], [43, 2, 1, "", "_compute_covariance"], [43, 2, 1, "", "_compute_mean"], [43, 2, 1, "", "_compute_total_cost"], [43, 2, 1, "", "_exp_util"], [43, 2, 1, "", "_get_action_seq"], [43, 2, 1, "", "_update_cov_scale"], [43, 2, 1, "", "_update_distribution"], [43, 3, 1, "", "entropy"], [43, 3, 1, "", "full_cov"], [43, 3, 1, "", "full_inv_cov"], [43, 3, 1, "", "full_scale_tril"], [43, 2, 1, "", "generate_noise"], [43, 2, 1, "", "generate_rollouts"], [43, 2, 1, "", "get_rollouts"], [43, 2, 1, "", "reset"], [43, 2, 1, "", "reset_covariance"], [43, 2, 1, "", "reset_distribution"], [43, 2, 1, "", "reset_mean"], [43, 2, 1, "", "reset_seed"], [43, 2, 1, "", "sample_actions"], [43, 3, 1, "", "squashed_mean"], [43, 2, 1, "", "update_init_mean"], [43, 2, 1, "", "update_samples"], [43, 2, 1, "", "update_seed"]], "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig": [[43, 4, 1, "", "alpha"], [43, 4, 1, "", "base_action"], [43, 4, 1, "", "beta"], [43, 4, 1, "", "cov_type"], [43, 2, 1, "", "create_data_dict"], [43, 4, 1, "", "gamma"], [43, 4, 1, "", "init_cov"], [43, 4, 1, "", "init_mean"], [43, 4, 1, "", "kappa"], [43, 4, 1, "", "null_act_frac"], [43, 4, 1, "", "random_mean"], [43, 4, 1, "", "sample_params"], [43, 4, 1, "", "sample_per_problem"], [43, 4, 1, "", "squash_fn"], [43, 4, 1, "", "step_size_cov"], [43, 4, 1, "", "step_size_mean"], [43, 4, 1, "", "update_cov"]], "curobo.opt.particle.particle_opt_base": [[44, 1, 1, "", "ParticleOptBase"], [44, 1, 1, "", "ParticleOptConfig"], [44, 1, 1, "", "ParticleOptInfo"], [44, 1, 1, "", "SampleMode"]], "curobo.opt.particle.particle_opt_base.ParticleOptBase": [[44, 2, 1, "", "_calc_val"], [44, 2, 1, "", "_call_cuda_opt_iters"], [44, 2, 1, "", "_get_action_seq"], [44, 2, 1, "", "_initialize_cuda_graph"], [44, 2, 1, "", "_optimize"], [44, 2, 1, "", "_run_opt_iters"], [44, 2, 1, "", "_update_distribution"], [44, 2, 1, "", "check_convergence"], [44, 2, 1, "", "generate_rollouts"], [44, 2, 1, "", "reset"], [44, 2, 1, "", "sample_actions"], [44, 2, 1, "", "update_nproblems"], [44, 2, 1, "", "update_num_particles_per_problem"], [44, 2, 1, "", "update_seed"]], "curobo.opt.particle.particle_opt_base.ParticleOptConfig": [[44, 4, 1, "", "calculate_value"], [44, 2, 1, "", "create_data_dict"], [44, 4, 1, "", "gamma"], [44, 4, 1, "", "sample_mode"], [44, 4, 1, "", "seed"], [44, 4, 1, "", "store_rollouts"]], "curobo.opt.particle.particle_opt_base.ParticleOptInfo": [[44, 4, 1, "", "info"]], "curobo.opt.particle.particle_opt_base.SampleMode": [[44, 4, 1, "", "BEST"], [44, 4, 1, "", "MEAN"], [44, 4, 1, "", "SAMPLE"]], "curobo.opt.particle.particle_opt_utils": [[45, 1, 1, "", "SquashType"], [45, 5, 1, "", "batch_cholesky"], [45, 5, 1, "", "cost_to_go"], [45, 5, 1, "", "cost_to_go_np"], [45, 5, 1, "", "gaussian_entropy"], [45, 5, 1, "", "gaussian_kl"], [45, 5, 1, "", "gaussian_logprob"], [45, 5, 1, "", "gaussian_logprobgrad"], [45, 5, 1, "", "get_stomp_cov"], [45, 5, 1, "", "matrix_cholesky"], [45, 5, 1, "", "scale_ctrl"]], "curobo.opt.particle.particle_opt_utils.SquashType": [[45, 4, 1, "", "CLAMP"], [45, 4, 1, "", "CLAMP_RESCALE"], [45, 4, 1, "", "IDENTITY"], [45, 4, 1, "", "TANH"]], "curobo.rollout": [[47, 0, 0, "-", "arm_base"], [48, 0, 0, "-", "arm_reacher"], [49, 0, 0, "-", "cost"], [61, 0, 0, "-", "dynamics_model"], [66, 0, 0, "-", "rollout_base"]], "curobo.rollout.arm_base": [[47, 1, 1, "", "ArmBase"], [47, 1, 1, "", "ArmBaseConfig"], [47, 1, 1, "", "ArmCostConfig"]], "curobo.rollout.arm_base.ArmBase": [[47, 2, 1, "", "_get_augmented_state"], [47, 2, 1, "", "_init_after_config_load"], [47, 3, 1, "", "action_bound_highs"], [47, 3, 1, "", "action_bound_lows"], [47, 3, 1, "", "action_horizon"], [47, 2, 1, "", "compute_kinematics"], [47, 2, 1, "", "constraint_fn"], [47, 2, 1, "", "convergence_fn"], [47, 2, 1, "", "cost_fn"], [47, 3, 1, "", "cspace_config"], [47, 2, 1, "", "current_cost"], [47, 3, 1, "", "d_action"], [47, 3, 1, "", "dt"], [47, 2, 1, "", "filter_robot_state"], [47, 2, 1, "", "get_action_from_state"], [47, 2, 1, "", "get_ee_pose"], [47, 2, 1, "", "get_full_dof_from_solution"], [47, 2, 1, "", "get_init_action_seq"], [47, 2, 1, "", "get_metrics"], [47, 2, 1, "", "get_metrics_cuda_graph"], [47, 2, 1, "", "get_robot_command"], [47, 2, 1, "", "get_state_from_action"], [47, 3, 1, "", "horizon"], [47, 3, 1, "", "joint_names"], [47, 3, 1, "", "kinematics"], [47, 2, 1, "", "reset"], [47, 2, 1, "", "reset_cuda_graph"], [47, 2, 1, "", "reset_shape"], [47, 3, 1, "", "retract_state"], [47, 2, 1, "", "rollout_constraint"], [47, 2, 1, "", "rollout_constraint_cuda_graph"], [47, 2, 1, "", "rollout_fn"], [47, 3, 1, "", "state_bounds"], [47, 2, 1, "", "update_cost_dt"], [47, 2, 1, "", "update_params"], [47, 2, 1, "", "update_traj_dt"]], "curobo.rollout.arm_base.ArmBaseConfig": [[47, 4, 1, "", "constraint_cfg"], [47, 4, 1, "", "convergence_cfg"], [47, 4, 1, "", "cost_cfg"], [47, 2, 1, "", "cost_from_dict"], [47, 2, 1, "", "from_dict"], [47, 4, 1, "", "model_cfg"], [47, 2, 1, "", "model_from_dict"], [47, 4, 1, "", "world_coll_checker"], [47, 2, 1, "", "world_coll_checker_from_dict"]], "curobo.rollout.arm_base.ArmCostConfig": [[47, 2, 1, "", "_get_base_keys"], [47, 2, 1, "", "_get_formatted_dict"], [47, 4, 1, "", "bound_cfg"], [47, 2, 1, "", "from_dict"], [47, 4, 1, "", "manipulability_cfg"], [47, 4, 1, "", "null_space_cfg"], [47, 4, 1, "", "primitive_collision_cfg"], [47, 4, 1, "", "self_collision_cfg"], [47, 4, 1, "", "stop_cfg"]], "curobo.rollout.arm_reacher": [[48, 1, 1, "", "ArmReacher"], [48, 1, 1, "", "ArmReacherConfig"], [48, 1, 1, "", "ArmReacherCostConfig"], [48, 1, 1, "", "ArmReacherMetrics"]], "curobo.rollout.arm_reacher.ArmReacher": [[48, 2, 1, "", "convergence_fn"], [48, 2, 1, "", "cost_fn"], [48, 2, 1, "", "enable_cspace_cost"], [48, 2, 1, "", "enable_pose_cost"], [48, 2, 1, "", "get_pose_costs"], [48, 2, 1, "", "update_params"], [48, 2, 1, "", "update_pose_cost_metric"]], "curobo.rollout.arm_reacher.ArmReacherConfig": [[48, 4, 1, "", "constraint_cfg"], [48, 4, 1, "", "convergence_cfg"], [48, 4, 1, "", "cost_cfg"], [48, 2, 1, "", "cost_from_dict"]], "curobo.rollout.arm_reacher.ArmReacherCostConfig": [[48, 2, 1, "", "_get_base_keys"], [48, 4, 1, "", "cspace_cfg"], [48, 2, 1, "", "from_dict"], [48, 4, 1, "", "link_pose_cfg"], [48, 4, 1, "", "pose_cfg"], [48, 4, 1, "", "straight_line_cfg"], [48, 4, 1, "", "zero_acc_cfg"], [48, 4, 1, "", "zero_jerk_cfg"], [48, 4, 1, "", "zero_vel_cfg"]], "curobo.rollout.arm_reacher.ArmReacherMetrics": [[48, 4, 1, "", "_abc_impl"], [48, 2, 1, "", "clone"], [48, 4, 1, "", "cspace_error"], [48, 4, 1, "", "goalset_index"], [48, 4, 1, "", "null_space_error"], [48, 4, 1, "", "pose_error"], [48, 4, 1, "", "position_error"], [48, 4, 1, "", "rotation_error"]], "curobo.rollout.cost": [[50, 0, 0, "-", "bound_cost"], [51, 0, 0, "-", "cost_base"], [52, 0, 0, "-", "dist_cost"], [53, 0, 0, "-", "manipulability_cost"], [54, 0, 0, "-", "pose_cost"], [55, 0, 0, "-", "primitive_collision_cost"], [56, 0, 0, "-", "projected_dist_cost"], [57, 0, 0, "-", "self_collision_cost"], [58, 0, 0, "-", "stop_cost"], [59, 0, 0, "-", "straight_line_cost"], [60, 0, 0, "-", "zero_cost"]], "curobo.rollout.cost.bound_cost": [[50, 1, 1, "", "BoundCost"], [50, 1, 1, "", "BoundCostConfig"], [50, 1, 1, "", "BoundCostType"], [50, 1, 1, "", "WarpBoundFunction"], [50, 1, 1, "", "WarpBoundPosFunction"], [50, 1, 1, "", "WarpBoundPosLoss"], [50, 1, 1, "", "WarpBoundSmoothFunction"]], "curobo.rollout.cost.bound_cost.BoundCost": [[50, 2, 1, "", "forward"], [50, 2, 1, "", "update_batch_size"], [50, 2, 1, "", "update_dt"]], "curobo.rollout.cost.bound_cost.BoundCostConfig": [[50, 4, 1, "", "activation_distance"], [50, 4, 1, "", "cost_type"], [50, 4, 1, "", "cspace_distance_weight"], [50, 4, 1, "", "joint_limits"], [50, 4, 1, "", "null_space_weight"], [50, 4, 1, "", "run_weight_acceleration"], [50, 4, 1, "", "run_weight_jerk"], [50, 4, 1, "", "run_weight_velocity"], [50, 2, 1, "", "set_bounds"], [50, 4, 1, "", "smooth_weight"], [50, 4, 1, "", "state_finite_difference_mode"]], "curobo.rollout.cost.bound_cost.BoundCostType": [[50, 4, 1, "", "BOUNDS"], [50, 4, 1, "", "BOUNDS_SMOOTH"], [50, 4, 1, "", "POSITION"]], "curobo.rollout.cost.bound_cost.WarpBoundFunction": [[50, 4, 1, "", "_backward_cls"], [50, 2, 1, "", "backward"], [50, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosFunction": [[50, 4, 1, "", "_backward_cls"], [50, 2, 1, "", "backward"], [50, 2, 1, "", "forward"]], "curobo.rollout.cost.bound_cost.WarpBoundPosLoss": [[50, 4, 1, "", "_backward_cls"], [50, 2, 1, "", "backward"]], "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction": [[50, 4, 1, "", "_backward_cls"], [50, 2, 1, "", "backward"], [50, 2, 1, "", "forward"]], "curobo.rollout.cost.cost_base": [[51, 1, 1, "", "CostBase"], [51, 1, 1, "", "CostConfig"]], "curobo.rollout.cost.cost_base.CostBase": [[51, 2, 1, "", "_init_post_config"], [51, 2, 1, "", "disable_cost"], [51, 2, 1, "", "enable_cost"], [51, 3, 1, "", "enabled"], [51, 2, 1, "", "forward"], [51, 2, 1, "", "update_dt"], [51, 2, 1, "", "update_weight"]], "curobo.rollout.cost.cost_base.CostConfig": [[51, 4, 1, "", "classify"], [51, 4, 1, "", "distance_threshold"], [51, 4, 1, "", "dof"], [51, 4, 1, "", "hinge_value"], [51, 4, 1, "", "max_value"], [51, 4, 1, "", "return_loss"], [51, 4, 1, "", "run_weight"], [51, 4, 1, "", "tensor_args"], [51, 4, 1, "", "terminal"], [51, 4, 1, "", "threshold_value"], [51, 2, 1, "", "update_vec_weight"], [51, 4, 1, "", "vec_convergence"], [51, 4, 1, "", "vec_weight"], [51, 4, 1, "", "weight"]], "curobo.rollout.cost.dist_cost": [[52, 1, 1, "", "DistCost"], [52, 1, 1, "", "DistCostConfig"], [52, 1, 1, "", "DistType"], [52, 1, 1, "", "L2DistFunction"]], "curobo.rollout.cost.dist_cost.DistCost": [[52, 2, 1, "", "_init_post_config"], [52, 2, 1, "", "forward"], [52, 2, 1, "", "forward_target"], [52, 2, 1, "", "forward_target_idx"], [52, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.dist_cost.DistCostConfig": [[52, 4, 1, "", "dist_type"], [52, 4, 1, "", "use_null_space"]], "curobo.rollout.cost.dist_cost.DistType": [[52, 4, 1, "", "L1"], [52, 4, 1, "", "L2"], [52, 4, 1, "", "SQUARED_L2"]], "curobo.rollout.cost.dist_cost.L2DistFunction": [[52, 4, 1, "", "_backward_cls"], [52, 2, 1, "", "backward"], [52, 2, 1, "", "forward"]], "curobo.rollout.cost.manipulability_cost": [[53, 1, 1, "", "ManipulabilityCost"], [53, 1, 1, "", "ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCost": [[53, 2, 1, "", "forward"], [53, 2, 1, "", "joint_limited_manipulability_delta"], [53, 2, 1, "", "manipulability"]], "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig": [[53, 4, 1, "", "use_joint_limits"]], "curobo.rollout.cost.pose_cost": [[54, 1, 1, "", "PoseCost"], [54, 1, 1, "", "PoseCostConfig"], [54, 1, 1, "", "PoseCostMetric"], [54, 1, 1, "", "PoseErrorType"]], "curobo.rollout.cost.pose_cost.PoseCost": [[54, 2, 1, "", "_forward_goal_distribution"], [54, 2, 1, "", "_forward_pytorch"], [54, 2, 1, "", "_forward_single_goal"], [54, 2, 1, "", "_update_cost_type"], [54, 2, 1, "", "forward"], [54, 2, 1, "", "forward_out_distance"], [54, 2, 1, "", "forward_pose"], [54, 3, 1, "", "goalset_index_buffer"], [54, 2, 1, "", "hold_partial_pose"], [54, 2, 1, "", "reach_full_pose"], [54, 2, 1, "", "reach_partial_pose"], [54, 2, 1, "", "release_partial_pose"], [54, 2, 1, "", "remove_offset_waypoint"], [54, 2, 1, "", "update_batch_size"], [54, 2, 1, "", "update_metric"], [54, 2, 1, "", "update_offset_waypoint"], [54, 2, 1, "", "update_run_weight"]], "curobo.rollout.cost.pose_cost.PoseCostConfig": [[54, 4, 1, "", "cost_type"], [54, 4, 1, "", "offset_tstep_fraction"], [54, 4, 1, "", "offset_waypoint"], [54, 4, 1, "", "project_distance"], [54, 4, 1, "", "run_vec_weight"], [54, 4, 1, "", "use_metric"], [54, 4, 1, "", "use_projected_distance"]], "curobo.rollout.cost.pose_cost.PoseCostMetric": [[54, 2, 1, "", "clone"], [54, 2, 1, "", "create_grasp_approach_metric"], [54, 4, 1, "", "hold_partial_pose"], [54, 4, 1, "", "hold_vec_weight"], [54, 4, 1, "", "offset_position"], [54, 4, 1, "", "offset_rotation"], [54, 4, 1, "", "offset_tstep_fraction"], [54, 4, 1, "", "reach_full_pose"], [54, 4, 1, "", "reach_partial_pose"], [54, 4, 1, "", "reach_vec_weight"], [54, 4, 1, "", "release_partial_pose"], [54, 4, 1, "", "remove_offset_waypoint"], [54, 2, 1, "", "reset_metric"]], "curobo.rollout.cost.pose_cost.PoseErrorType": [[54, 4, 1, "", "BATCH_GOAL"], [54, 4, 1, "", "BATCH_GOALSET"], [54, 4, 1, "", "GOALSET"], [54, 4, 1, "", "SINGLE_GOAL"]], "curobo.rollout.cost.primitive_collision_cost": [[55, 1, 1, "", "PrimitiveCollisionCost"], [55, 1, 1, "", "PrimitiveCollisionCostConfig"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost": [[55, 2, 1, "", "discrete_fn"], [55, 2, 1, "", "get_gradient_buffer"], [55, 2, 1, "", "sweep_fn"], [55, 2, 1, "", "sweep_kernel_fn"], [55, 2, 1, "", "update_dt"]], "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig": [[55, 4, 1, "", "activation_distance"], [55, 4, 1, "", "speed_dt"], [55, 4, 1, "", "sum_distance"], [55, 4, 1, "", "sweep_steps"], [55, 4, 1, "", "use_speed_metric"], [55, 4, 1, "", "use_sweep"], [55, 4, 1, "", "use_sweep_kernel"], [55, 4, 1, "", "world_coll_checker"]], "curobo.rollout.cost.projected_dist_cost": [[56, 1, 1, "", "ProjType"], [56, 1, 1, "", "ProjectedDistCost"], [56, 1, 1, "", "ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost.ProjType": [[56, 4, 1, "", "IDENTITY"], [56, 4, 1, "", "PSEUDO_INVERSE"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "get_pinv_null_disp"]], "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig": [[56, 4, 1, "", "eps"], [56, 4, 1, "", "proj_type"]], "curobo.rollout.cost.self_collision_cost": [[57, 1, 1, "", "SelfCollisionCost"], [57, 1, 1, "", "SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCost": [[57, 2, 1, "", "forward"], [57, 2, 1, "", "update_batch_size"]], "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig": [[57, 4, 1, "", "self_collision_kin_config"]], "curobo.rollout.cost.stop_cost": [[58, 1, 1, "", "StopCost"], [58, 1, 1, "", "StopCostConfig"]], "curobo.rollout.cost.stop_cost.StopCost": [[58, 2, 1, "", "forward"]], "curobo.rollout.cost.stop_cost.StopCostConfig": [[58, 4, 1, "", "dt_traj_params"], [58, 4, 1, "", "horizon"], [58, 4, 1, "", "max_limit"], [58, 4, 1, "", "max_nlimit"]], "curobo.rollout.cost.straight_line_cost": [[59, 1, 1, "", "StraightLineCost"]], "curobo.rollout.cost.straight_line_cost.StraightLineCost": [[59, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost": [[60, 1, 1, "", "RunSquaredSum"], [60, 1, 1, "", "SquaredSum"], [60, 1, 1, "", "ZeroCost"]], "curobo.rollout.cost.zero_cost.RunSquaredSum": [[60, 4, 1, "", "_backward_cls"], [60, 2, 1, "", "backward"], [60, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.SquaredSum": [[60, 4, 1, "", "_backward_cls"], [60, 2, 1, "", "backward"], [60, 2, 1, "", "forward"]], "curobo.rollout.cost.zero_cost.ZeroCost": [[60, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model": [[62, 0, 0, "-", "integration_utils"], [63, 0, 0, "-", "kinematic_model"], [64, 0, 0, "-", "model_base"], [65, 0, 0, "-", "tensor_step"]], "curobo.rollout.dynamics_model.integration_utils": [[62, 1, 1, "", "AccelerationTensorStepIdxKernel"], [62, 1, 1, "", "AccelerationTensorStepKernel"], [62, 1, 1, "", "CliqueTensorStep"], [62, 1, 1, "", "CliqueTensorStepCentralDifferenceKernel"], [62, 1, 1, "", "CliqueTensorStepCoalesceKernel"], [62, 1, 1, "", "CliqueTensorStepIdxCentralDifferenceKernel"], [62, 1, 1, "", "CliqueTensorStepIdxKernel"], [62, 1, 1, "", "CliqueTensorStepKernel"], [62, 5, 1, "", "action_interpolate_kernel"], [62, 5, 1, "", "build_clique_matrix"], [62, 5, 1, "", "build_fd_matrix"], [62, 5, 1, "", "build_int_matrix"], [62, 5, 1, "", "build_start_state_mask"], [62, 5, 1, "", "euler_integrate"], [62, 5, 1, "", "interpolate_kernel"], [62, 5, 1, "", "step_acc_semi_euler"], [62, 5, 1, "", "sum_matrix"], [62, 5, 1, "", "tensor_linspace"], [62, 5, 1, "", "tensor_step_acc"], [62, 5, 1, "", "tensor_step_acc_semi_euler"], [62, 5, 1, "", "tensor_step_jerk"], [62, 5, 1, "", "tensor_step_pos"], [62, 5, 1, "", "tensor_step_pos_clique"], [62, 5, 1, "", "tensor_step_pos_ik"], [62, 5, 1, "", "tensor_step_vel"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel": [[62, 4, 1, "", "_backward_cls"], [62, 2, 1, "", "backward"], [62, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.kinematic_model": [[63, 1, 1, "", "KinematicModel"], [63, 1, 1, "", "KinematicModelConfig"], [63, 1, 1, "", "KinematicModelState"], [63, 1, 1, "", "TimeTrajConfig"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModel": [[63, 3, 1, "", "action_bound_highs"], [63, 3, 1, "", "action_bound_lows"], [63, 3, 1, "", "action_horizon"], [63, 3, 1, "", "cspace_distance_weight"], [63, 2, 1, "", "filter_robot_state"], [63, 2, 1, "", "forward"], [63, 2, 1, "", "get_action_from_state"], [63, 2, 1, "", "get_next_state"], [63, 2, 1, "", "get_robot_command"], [63, 2, 1, "", "get_state_bounds"], [63, 2, 1, "", "get_state_from_action"], [63, 3, 1, "", "init_action_mean"], [63, 2, 1, "", "integrate_action"], [63, 2, 1, "", "integrate_action_step"], [63, 3, 1, "", "max_acceleration"], [63, 3, 1, "", "max_jerk"], [63, 3, 1, "", "null_space_weight"], [63, 3, 1, "", "retract_config"], [63, 2, 1, "", "robot_cmd_tensor_step"], [63, 2, 1, "", "tensor_step"], [63, 2, 1, "", "update_batch_size"], [63, 2, 1, "", "update_cmd_batch_size"], [63, 2, 1, "", "update_traj_dt"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig": [[63, 4, 1, "", "batch_size"], [63, 4, 1, "", "control_space"], [63, 4, 1, "", "dt_traj_params"], [63, 4, 1, "", "filter_robot_command"], [63, 2, 1, "", "from_dict"], [63, 4, 1, "", "horizon"], [63, 4, 1, "", "return_full_act_buffer"], [63, 4, 1, "", "robot_config"], [63, 4, 1, "", "state_estimation_variance"], [63, 4, 1, "", "state_filter_cfg"], [63, 4, 1, "", "state_finite_difference_mode"], [63, 4, 1, "", "teleport_mode"], [63, 4, 1, "", "tensor_args"], [63, 4, 1, "", "vel_scale"]], "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState": [[63, 4, 1, "", "_abc_impl"], [63, 4, 1, "", "ang_jac_seq"], [63, 4, 1, "", "ee_pos_seq"], [63, 3, 1, "", "ee_pose"], [63, 4, 1, "", "ee_quat_seq"], [63, 4, 1, "", "lin_jac_seq"], [63, 4, 1, "", "link_names"], [63, 4, 1, "", "link_pos_seq"], [63, 3, 1, "", "link_pose"], [63, 4, 1, "", "link_quat_seq"], [63, 4, 1, "", "robot_spheres"], [63, 4, 1, "", "state_seq"]], "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig": [[63, 4, 1, "", "base_dt"], [63, 4, 1, "", "base_ratio"], [63, 2, 1, "", "get_dt_array"], [63, 4, 1, "", "max_dt"], [63, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.model_base": [[64, 1, 1, "", "DynamicsModelBase"]], "curobo.rollout.dynamics_model.model_base.DynamicsModelBase": [[64, 4, 1, "", "_abc_impl"], [64, 2, 1, "", "filter_robot_state"], [64, 2, 1, "", "forward"], [64, 2, 1, "", "get_next_state"], [64, 2, 1, "", "get_robot_command"]], "curobo.rollout.dynamics_model.tensor_step": [[65, 1, 1, "", "TensorStepAcceleration"], [65, 1, 1, "", "TensorStepAccelerationKernel"], [65, 1, 1, "", "TensorStepBase"], [65, 1, 1, "", "TensorStepPosition"], [65, 1, 1, "", "TensorStepPositionClique"], [65, 1, 1, "", "TensorStepPositionCliqueKernel"], [65, 1, 1, "", "TensorStepPositionTeleport"], [65, 1, 1, "", "TensorStepType"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration": [[65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel": [[65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepBase": [[65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"], [65, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition": [[65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"], [65, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique": [[65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"], [65, 2, 1, "", "update_dt"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel": [[65, 2, 1, "", "filter_signal"], [65, 2, 1, "", "forward"], [65, 2, 1, "", "update_batch_size"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport": [[65, 2, 1, "", "forward"]], "curobo.rollout.dynamics_model.tensor_step.TensorStepType": [[65, 4, 1, "", "ACCELERATION"], [65, 4, 1, "", "ACCELERATION_KERNEL"], [65, 4, 1, "", "JERK"], [65, 4, 1, "", "POSITION"], [65, 4, 1, "", "POSITION_CLIQUE"], [65, 4, 1, "", "POSITION_CLIQUE_KERNEL"], [65, 4, 1, "", "POSITION_TELEPORT"], [65, 4, 1, "", "VELOCITY"]], "curobo.rollout.rollout_base": [[66, 1, 1, "", "Goal"], [66, 1, 1, "", "RolloutBase"], [66, 1, 1, "", "RolloutConfig"], [66, 1, 1, "", "RolloutMetrics"], [66, 1, 1, "", "Trajectory"]], "curobo.rollout.rollout_base.Goal": [[66, 4, 1, "", "_abc_impl"], [66, 2, 1, "", "_copy_buffer"], [66, 2, 1, "", "_copy_tensor"], [66, 2, 1, "", "_tensor_repeat_seeds"], [66, 2, 1, "", "_update_batch_size"], [66, 2, 1, "", "apply_kernel"], [66, 4, 1, "", "batch"], [66, 4, 1, "", "batch_current_state_idx"], [66, 4, 1, "", "batch_enable_idx"], [66, 4, 1, "", "batch_goal_state_idx"], [66, 4, 1, "", "batch_pose_idx"], [66, 4, 1, "", "batch_retract_state_idx"], [66, 4, 1, "", "batch_world_idx"], [66, 2, 1, "", "clone"], [66, 2, 1, "", "copy_"], [66, 2, 1, "", "create_idx"], [66, 2, 1, "", "create_index_buffers"], [66, 4, 1, "", "current_state"], [66, 2, 1, "", "get_batch_goal_state"], [66, 4, 1, "", "goal_pose"], [66, 4, 1, "", "goal_state"], [66, 4, 1, "", "links_goal_pose"], [66, 4, 1, "", "n_goalset"], [66, 4, 1, "", "name"], [66, 2, 1, "", "repeat_seeds"], [66, 4, 1, "", "retract_state"], [66, 2, 1, "", "to"], [66, 4, 1, "", "update_batch_idx_buffers"]], "curobo.rollout.rollout_base.RolloutBase": [[66, 2, 1, "", "_init_after_config_load"], [66, 3, 1, "", "action_bound_highs"], [66, 3, 1, "", "action_bound_lows"], [66, 3, 1, "", "action_bounds"], [66, 3, 1, "", "action_horizon"], [66, 2, 1, "", "constraint_fn"], [66, 2, 1, "", "convergence_fn"], [66, 2, 1, "", "cost_fn"], [66, 3, 1, "", "cspace_config"], [66, 2, 1, "", "current_cost"], [66, 3, 1, "", "d_action"], [66, 3, 1, "", "dt"], [66, 2, 1, "", "filter_robot_state"], [66, 2, 1, "", "get_action_from_state"], [66, 2, 1, "", "get_full_dof_from_solution"], [66, 2, 1, "", "get_init_action_seq"], [66, 2, 1, "", "get_metrics"], [66, 2, 1, "", "get_metrics_cuda_graph"], [66, 2, 1, "", "get_robot_command"], [66, 2, 1, "", "get_state_from_action"], [66, 3, 1, "", "horizon"], [66, 2, 1, "", "reset"], [66, 2, 1, "", "reset_cuda_graph"], [66, 2, 1, "", "reset_seed"], [66, 2, 1, "", "reset_shape"], [66, 2, 1, "", "rollout_constraint"], [66, 2, 1, "", "rollout_fn"], [66, 2, 1, "", "sample_random_actions"], [66, 3, 1, "", "state_bounds"], [66, 2, 1, "", "update_params"], [66, 2, 1, "", "update_start_state"]], "curobo.rollout.rollout_base.RolloutConfig": [[66, 4, 1, "", "tensor_args"]], "curobo.rollout.rollout_base.RolloutMetrics": [[66, 4, 1, "", "_abc_impl"], [66, 2, 1, "", "clone"], [66, 4, 1, "", "constraint"], [66, 4, 1, "", "cost"], [66, 4, 1, "", "feasible"], [66, 4, 1, "", "state"]], "curobo.rollout.rollout_base.Trajectory": [[66, 4, 1, "", "actions"], [66, 4, 1, "", "costs"], [66, 4, 1, "", "debug"], [66, 4, 1, "", "state"]], "curobo.types": [[68, 0, 0, "-", "base"], [69, 0, 0, "-", "camera"], [70, 0, 0, "-", "enum"], [71, 0, 0, "-", "math"], [72, 0, 0, "-", "robot"], [73, 0, 0, "-", "state"], [74, 0, 0, "-", "tensor"]], "curobo.types.base": [[68, 1, 1, "", "TensorDeviceType"]], "curobo.types.base.TensorDeviceType": [[68, 2, 1, "", "cpu"], [68, 4, 1, "", "device"], [68, 4, 1, "", "dtype"], [68, 2, 1, "", "from_basic"], [68, 2, 1, "", "to_device"], [68, 2, 1, "", "to_int8_device"]], "curobo.types.camera": [[69, 1, 1, "", "CameraObservation"]], "curobo.types.camera.CameraObservation": [[69, 2, 1, "", "clone"], [69, 2, 1, "", "copy_"], [69, 4, 1, "", "depth_image"], [69, 2, 1, "", "filter_depth"], [69, 2, 1, "", "get_image_from_pointcloud"], [69, 2, 1, "", "get_pointcloud"], [69, 4, 1, "", "image_segmentation"], [69, 4, 1, "", "intrinsics"], [69, 4, 1, "", "name"], [69, 4, 1, "", "pose"], [69, 4, 1, "", "projection_matrix"], [69, 4, 1, "", "projection_rays"], [69, 4, 1, "", "resolution"], [69, 4, 1, "", "rgb_image"], [69, 3, 1, "", "shape"], [69, 4, 1, "", "timestamp"], [69, 2, 1, "", "to"], [69, 2, 1, "", "update_projection_rays"]], "curobo.types.enum": [[70, 1, 1, "", "StateType"]], "curobo.types.enum.StateType": [[70, 4, 1, "", "ACCELERATION"], [70, 4, 1, "", "JERK"], [70, 4, 1, "", "POSITION"], [70, 4, 1, "", "VELOCITY"]], "curobo.types.math": [[71, 1, 1, "", "OrientationError"], [71, 1, 1, "", "Pose"], [71, 5, 1, "", "quat_multiply"]], "curobo.types.math.OrientationError": [[71, 4, 1, "", "_backward_cls"], [71, 2, 1, "", "backward"], [71, 2, 1, "", "forward"], [71, 2, 1, "", "geodesic_distance"]], "curobo.types.math.Pose": [[71, 4, 1, "", "_abc_impl"], [71, 2, 1, "", "angular_distance"], [71, 2, 1, "", "apply_kernel"], [71, 4, 1, "", "batch"], [71, 2, 1, "", "batch_transform_points"], [71, 2, 1, "", "cat"], [71, 2, 1, "", "clone"], [71, 2, 1, "", "compute_local_pose"], [71, 2, 1, "", "compute_offset_pose"], [71, 2, 1, "", "copy_"], [71, 2, 1, "", "distance"], [71, 2, 1, "", "from_batch_list"], [71, 2, 1, "", "from_list"], [71, 2, 1, "", "from_matrix"], [71, 2, 1, "", "get_index"], [71, 2, 1, "", "get_matrix"], [71, 2, 1, "", "get_numpy_matrix"], [71, 2, 1, "", "get_pose_vector"], [71, 2, 1, "", "get_rotation"], [71, 2, 1, "", "inverse"], [71, 2, 1, "", "linear_distance"], [71, 2, 1, "", "multiply"], [71, 4, 1, "", "n_goalset"], [71, 4, 1, "", "name"], [71, 4, 1, "", "normalize_rotation"], [71, 4, 1, "", "position"], [71, 4, 1, "", "quaternion"], [71, 2, 1, "", "repeat"], [71, 2, 1, "", "repeat_seeds"], [71, 4, 1, "", "rotation"], [71, 3, 1, "", "shape"], [71, 2, 1, "", "stack"], [71, 2, 1, "", "to"], [71, 2, 1, "", "to_list"], [71, 2, 1, "", "tolist"], [71, 2, 1, "", "transform_point"], [71, 2, 1, "", "transform_points"], [71, 2, 1, "", "unsqueeze"]], "curobo.types.robot": [[72, 1, 1, "", "NNConfig"], [72, 1, 1, "", "RobotConfig"]], "curobo.types.robot.NNConfig": [[72, 4, 1, "", "ik_seeder"]], "curobo.types.robot.RobotConfig": [[72, 3, 1, "", "cspace"], [72, 2, 1, "", "from_basic"], [72, 2, 1, "", "from_dict"], [72, 4, 1, "", "kinematics"], [72, 4, 1, "", "tensor_args"], [72, 2, 1, "", "write_config"]], "curobo.types.state": [[73, 1, 1, "", "FilterCoeff"], [73, 1, 1, "", "JointState"], [73, 1, 1, "", "State"]], "curobo.types.state.FilterCoeff": [[73, 4, 1, "", "acceleration"], [73, 4, 1, "", "jerk"], [73, 4, 1, "", "position"], [73, 4, 1, "", "velocity"]], "curobo.types.state.JointState": [[73, 4, 1, "", "_abc_impl"], [73, 2, 1, "", "_same_shape"], [73, 4, 1, "", "acceleration"], [73, 2, 1, "", "append_joints"], [73, 2, 1, "", "apply_kernel"], [73, 2, 1, "", "blend"], [73, 2, 1, "", "calculate_fd_from_position"], [73, 2, 1, "", "clone"], [73, 2, 1, "", "copy_"], [73, 2, 1, "", "copy_at_index"], [73, 2, 1, "", "copy_data"], [73, 2, 1, "", "detach"], [73, 2, 1, "", "from_list"], [73, 2, 1, "", "from_numpy"], [73, 2, 1, "", "from_position"], [73, 2, 1, "", "from_state_tensor"], [73, 2, 1, "", "get_augmented_joint_state"], [73, 2, 1, "", "get_ordered_joint_state"], [73, 2, 1, "", "get_state_tensor"], [73, 2, 1, "", "inplace_reindex"], [73, 4, 1, "", "jerk"], [73, 4, 1, "", "joint_names"], [73, 4, 1, "", "position"], [73, 2, 1, "", "repeat_seeds"], [73, 2, 1, "", "scale"], [73, 3, 1, "", "shape"], [73, 2, 1, "", "squeeze"], [73, 2, 1, "", "stack"], [73, 4, 1, "", "tensor_args"], [73, 2, 1, "", "to"], [73, 2, 1, "", "trim_trajectory"], [73, 2, 1, "", "unsqueeze"], [73, 4, 1, "", "velocity"], [73, 2, 1, "", "zeros"]], "curobo.types.state.State": [[73, 4, 1, "", "_abc_impl"], [73, 2, 1, "", "apply_kernel"], [73, 2, 1, "", "blend"], [73, 2, 1, "", "clone"], [73, 2, 1, "", "get_state_tensor"], [73, 2, 1, "", "to"]], "curobo.util": [[76, 0, 0, "-", "error_metrics"], [77, 0, 0, "-", "helpers"], [78, 0, 0, "-", "logger"], [79, 0, 0, "-", "metrics"], [80, 0, 0, "-", "sample_lib"], [81, 0, 0, "-", "state_filter"], [82, 0, 0, "-", "tensor_util"], [83, 0, 0, "-", "torch_utils"], [84, 0, 0, "-", "trajectory"], [85, 0, 0, "-", "usd_helper"], [86, 0, 0, "-", "warp"], [87, 0, 0, "-", "warp_interpolation"]], "curobo.util.error_metrics": [[76, 5, 1, "", "rotation_error_matrix"], [76, 5, 1, "", "rotation_error_quaternion"]], "curobo.util.helpers": [[77, 5, 1, "", "default_to_regular"], [77, 5, 1, "", "list_idx_if_not_none"]], "curobo.util.logger": [[78, 5, 1, "", "log_error"], [78, 5, 1, "", "log_info"], [78, 5, 1, "", "log_warn"], [78, 5, 1, "", "setup_curobo_logger"]], "curobo.util.metrics": [[79, 1, 1, "", "CuroboGroupMetrics"], [79, 1, 1, "", "CuroboMetrics"]], "curobo.util.metrics.CuroboGroupMetrics": [[79, 4, 1, "", "cspace_path_length"], [79, 2, 1, "", "from_list"], [79, 4, 1, "", "jerk"], [79, 4, 1, "", "perception_interpolated_success"], [79, 4, 1, "", "perception_success"], [79, 4, 1, "", "time"]], "curobo.util.metrics.CuroboMetrics": [[79, 4, 1, "", "cspace_path_length"], [79, 4, 1, "", "jerk"], [79, 4, 1, "", "perception_interpolated_success"], [79, 4, 1, "", "perception_success"], [79, 4, 1, "", "time"]], "curobo.util.sample_lib": [[80, 1, 1, "", "BaseSampleLib"], [80, 1, 1, "", "HaltonGenerator"], [80, 1, 1, "", "HaltonSampleLib"], [80, 1, 1, "", "KnotSampleLib"], [80, 1, 1, "", "RandomSampleLib"], [80, 1, 1, "", "SampleConfig"], [80, 1, 1, "", "SampleLib"], [80, 1, 1, "", "SineSampleLib"], [80, 1, 1, "", "StompSampleLib"], [80, 5, 1, "", "bspline"], [80, 5, 1, "", "generate_gaussian_halton_samples"], [80, 5, 1, "", "generate_gaussian_sobol_samples"], [80, 5, 1, "", "generate_halton_samples"], [80, 5, 1, "", "generate_noise"], [80, 5, 1, "", "generate_noise_np"], [80, 5, 1, "", "generate_prime_numbers"], [80, 5, 1, "", "generate_van_der_corput_sample"], [80, 5, 1, "", "generate_van_der_corput_samples_batch"], [80, 5, 1, "", "get_ranged_halton_samples"]], "curobo.util.sample_lib.BaseSampleLib": [[80, 2, 1, "", "filter_samples"], [80, 2, 1, "", "filter_smooth"], [80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.HaltonGenerator": [[80, 2, 1, "", "_get_samples"], [80, 2, 1, "", "fast_forward"], [80, 2, 1, "", "get_gaussian_samples"], [80, 2, 1, "", "get_samples"], [80, 2, 1, "", "reset"]], "curobo.util.sample_lib.HaltonSampleLib": [[80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.KnotSampleLib": [[80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.RandomSampleLib": [[80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SampleConfig": [[80, 4, 1, "", "cov_mode"], [80, 4, 1, "", "covariance_matrix"], [80, 4, 1, "", "d_action"], [80, 4, 1, "", "degree"], [80, 4, 1, "", "filter_coeffs"], [80, 4, 1, "", "fixed_samples"], [80, 4, 1, "", "horizon"], [80, 4, 1, "", "n_knots"], [80, 4, 1, "", "sample_method"], [80, 4, 1, "", "sample_ratio"], [80, 4, 1, "", "scale_tril"], [80, 4, 1, "", "seed"], [80, 4, 1, "", "sine_period"], [80, 4, 1, "", "tensor_args"]], "curobo.util.sample_lib.SampleLib": [[80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.SineSampleLib": [[80, 2, 1, "", "generate_sine_wave"], [80, 2, 1, "", "get_samples"]], "curobo.util.sample_lib.StompSampleLib": [[80, 2, 1, "", "get_samples"]], "curobo.util.state_filter": [[81, 1, 1, "", "FilterConfig"], [81, 1, 1, "", "JointStateFilter"]], "curobo.util.state_filter.FilterConfig": [[81, 4, 1, "", "control_space"], [81, 4, 1, "", "dt"], [81, 4, 1, "", "enable"], [81, 4, 1, "", "filter_coeff"], [81, 2, 1, "", "from_dict"], [81, 4, 1, "", "teleport_mode"], [81, 4, 1, "", "tensor_args"]], "curobo.util.state_filter.JointStateFilter": [[81, 2, 1, "", "filter_joint_state"], [81, 2, 1, "", "integrate_acc"], [81, 2, 1, "", "integrate_jerk"], [81, 2, 1, "", "integrate_pos"], [81, 2, 1, "", "integrate_vel"], [81, 2, 1, "", "reset"]], "curobo.util.tensor_util": [[82, 5, 1, "", "check_tensor_shapes"], [82, 5, 1, "", "clone_if_not_none"], [82, 5, 1, "", "copy_if_not_none"], [82, 5, 1, "", "copy_tensor"], [82, 5, 1, "", "tensor_repeat_seeds"]], "curobo.util.torch_utils": [[83, 5, 1, "", "find_first_idx"], [83, 5, 1, "", "find_last_idx"], [83, 5, 1, "", "is_cuda_graph_available"], [83, 5, 1, "", "is_torch_compile_available"]], "curobo.util.trajectory": [[84, 1, 1, "", "InterpolateType"], [84, 5, 1, "", "get_batch_interpolated_trajectory"], [84, 5, 1, "", "get_cpu_kunz_stilman_interpolation"], [84, 5, 1, "", "get_cpu_linear_interpolation"], [84, 5, 1, "", "get_interpolated_trajectory"], [84, 5, 1, "", "get_linear_traj"], [84, 5, 1, "", "get_smooth_trajectory"], [84, 5, 1, "", "get_spline_interpolated_trajectory"], [84, 5, 1, "", "linear_smooth"]], "curobo.util.trajectory.InterpolateType": [[84, 4, 1, "", "CUBIC"], [84, 4, 1, "", "KUNZ_STILMAN_OPTIMAL"], [84, 4, 1, "", "LINEAR"], [84, 4, 1, "", "LINEAR_CUDA"], [84, 4, 1, "", "QUINTIC"]], "curobo.util.usd_helper": [[85, 1, 1, "", "UsdHelper"], [85, 5, 1, "", "create_stage"], [85, 5, 1, "", "get_capsule_attrs"], [85, 5, 1, "", "get_cube_attrs"], [85, 5, 1, "", "get_cylinder_attrs"], [85, 5, 1, "", "get_mesh_attrs"], [85, 5, 1, "", "get_position_quat"], [85, 5, 1, "", "get_prim_world_pose"], [85, 5, 1, "", "get_sphere_attrs"], [85, 5, 1, "", "get_transform"], [85, 5, 1, "", "set_cylinder_attrs"], [85, 5, 1, "", "set_geom_cube_attrs"], [85, 5, 1, "", "set_geom_cylinder_attrs"], [85, 5, 1, "", "set_geom_mesh_attrs"], [85, 5, 1, "", "set_geom_sphere_attrs"], [85, 5, 1, "", "set_prim_transform"], [85, 5, 1, "", "set_prim_translate"]], "curobo.util.usd_helper.UsdHelper": [[85, 2, 1, "", "add_cuboid_to_stage"], [85, 2, 1, "", "add_cylinder_to_stage"], [85, 2, 1, "", "add_material"], [85, 2, 1, "", "add_mesh_to_stage"], [85, 2, 1, "", "add_sphere_to_stage"], [85, 2, 1, "", "add_subroot"], [85, 2, 1, "", "add_world_to_stage"], [85, 2, 1, "", "create_animation"], [85, 2, 1, "", "create_grid_usd"], [85, 2, 1, "", "create_linkpose_robot_animation"], [85, 2, 1, "", "create_obstacle_animation"], [85, 2, 1, "", "create_stage"], [85, 2, 1, "", "get_obstacle_from_prim"], [85, 2, 1, "", "get_obstacles_from_stage"], [85, 2, 1, "", "get_pose"], [85, 2, 1, "", "get_prim_from_obstacle"], [85, 2, 1, "", "get_robot_prims"], [85, 2, 1, "", "load_robot"], [85, 2, 1, "", "load_robot_usd"], [85, 2, 1, "", "load_stage"], [85, 2, 1, "", "load_stage_from_file"], [85, 2, 1, "", "save"], [85, 2, 1, "", "update_robot_joint_state"], [85, 2, 1, "", "write_motion_gen_log"], [85, 2, 1, "", "write_stage_to_file"], [85, 2, 1, "", "write_trajectory_animation"], [85, 2, 1, "", "write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[86, 5, 1, "", "init_warp"]], "curobo.util.warp_interpolation": [[87, 5, 1, "", "get_cuda_linear_interpolation"]], "curobo.util_file": [[88, 5, 1, "", "add_cpp_path"], [88, 5, 1, "", "copy_file_to_path"], [88, 5, 1, "", "file_exists"], [88, 5, 1, "", "get_assets_path"], [88, 5, 1, "", "get_configs_path"], [88, 5, 1, "", "get_content_path"], [88, 5, 1, "", "get_cpp_path"], [88, 5, 1, "", "get_debug_path"], [88, 5, 1, "", "get_filename"], [88, 5, 1, "", "get_files_from_dir"], [88, 5, 1, "", "get_module_path"], [88, 5, 1, "", "get_motion_gen_robot_list"], [88, 5, 1, "", "get_multi_arm_robot_list"], [88, 5, 1, "", "get_path_of_dir"], [88, 5, 1, "", "get_robot_configs_path"], [88, 5, 1, "", "get_robot_list"], [88, 5, 1, "", "get_robot_path"], [88, 5, 1, "", "get_root_path"], [88, 5, 1, "", "get_task_configs_path"], [88, 5, 1, "", "get_weights_path"], [88, 5, 1, "", "get_world_configs_path"], [88, 5, 1, "", "join_path"], [88, 5, 1, "", "load_yaml"], [88, 5, 1, "", "write_yaml"]], "curobo.wrap": [[90, 0, 0, "-", "model"], [94, 0, 0, "-", "reacher"], [101, 0, 0, "-", "wrap_base"], [102, 0, 0, "-", "wrap_mpc"]], "curobo.wrap.model": [[91, 0, 0, "-", "curobo_robot_world"], [92, 0, 0, "-", "robot_segmenter"], [93, 0, 0, "-", "robot_world"]], "curobo.wrap.model.curobo_robot_world": [[91, 1, 1, "", "CuroboRobotWorld"], [91, 1, 1, "", "CuroboRobotWorldConfig"]], "curobo.wrap.model.robot_segmenter": [[92, 1, 1, "", "RobotSegmenter"]], "curobo.wrap.model.robot_segmenter.RobotSegmenter": [[92, 2, 1, "", "_call_op"], [92, 2, 1, "", "_create_cg_graph"], [92, 2, 1, "", "_mask_op"], [92, 2, 1, "", "from_robot_file"], [92, 2, 1, "", "get_pointcloud_from_depth"], [92, 2, 1, "", "get_robot_mask"], [92, 2, 1, "", "get_robot_mask_from_active_js"], [92, 2, 1, "", "update_camera_projection"]], "curobo.wrap.model.robot_world": [[93, 1, 1, "", "RobotWorld"], [93, 1, 1, "", "RobotWorldConfig"]], "curobo.wrap.model.robot_world.RobotWorld": [[93, 2, 1, "", "get_active_js"], [93, 2, 1, "", "get_bound"], [93, 2, 1, "", "get_collision_constraint"], [93, 2, 1, "", "get_collision_distance"], [93, 2, 1, "", "get_collision_vector"], [93, 2, 1, "", "get_kinematics"], [93, 2, 1, "", "get_point_robot_distance"], [93, 2, 1, "", "get_self_collision"], [93, 2, 1, "", "get_self_collision_distance"], [93, 2, 1, "", "get_world_self_collision_distance_from_joint_trajectory"], [93, 2, 1, "", "get_world_self_collision_distance_from_joints"], [93, 2, 1, "", "pose_distance"], [93, 2, 1, "", "sample"], [93, 2, 1, "", "sample_trajectory"], [93, 2, 1, "", "update_world"], [93, 2, 1, "", "validate"], [93, 2, 1, "", "validate_trajectory"]], "curobo.wrap.model.robot_world.RobotWorldConfig": [[93, 4, 1, "", "bound_cost"], [93, 4, 1, "", "bound_scale"], [93, 4, 1, "", "collision_constraint"], [93, 4, 1, "", "collision_cost"], [93, 4, 1, "", "contact_distance"], [93, 4, 1, "", "kinematics"], [93, 2, 1, "", "load_from_config"], [93, 4, 1, "", "pose_cost"], [93, 4, 1, "", "rejection_ratio"], [93, 4, 1, "", "sampler"], [93, 4, 1, "", "self_collision_cost"], [93, 4, 1, "", "tensor_args"], [93, 4, 1, "", "world_model"]], "curobo.wrap.reacher": [[95, 0, 0, "-", "evaluator"], [96, 0, 0, "-", "ik_solver"], [97, 0, 0, "-", "motion_gen"], [98, 0, 0, "-", "mpc"], [99, 0, 0, "-", "trajopt"], [100, 0, 0, "-", "types"]], "curobo.wrap.reacher.evaluator": [[95, 1, 1, "", "TrajEvaluator"], [95, 1, 1, "", "TrajEvaluatorConfig"]], "curobo.wrap.reacher.evaluator.TrajEvaluator": [[95, 2, 1, "", "_check_smoothness"], [95, 2, 1, "", "_compute_path_length"], [95, 2, 1, "", "calculate_dt"], [95, 2, 1, "", "evaluate"], [95, 2, 1, "", "evaluate_from_position"], [95, 2, 1, "", "evaluate_interpolated_smootheness"]], "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig": [[95, 4, 1, "", "cost_weight"], [95, 4, 1, "", "max_acc"], [95, 4, 1, "", "max_dt"], [95, 4, 1, "", "max_jerk"], [95, 4, 1, "", "min_dt"]], "curobo.wrap.reacher.ik_solver": [[96, 1, 1, "", "IKResult"], [96, 1, 1, "", "IKSolver"], [96, 1, 1, "", "IKSolverConfig"]], "curobo.wrap.reacher.ik_solver.IKResult": [[96, 4, 1, "", "_abc_impl"], [96, 4, 1, "", "debug_info"], [96, 4, 1, "", "error"], [96, 2, 1, "", "get_batch_unique_solution"], [96, 2, 1, "", "get_unique_solution"], [96, 4, 1, "", "goal_pose"], [96, 4, 1, "", "goalset_index"], [96, 4, 1, "", "js_solution"], [96, 4, 1, "", "position_error"], [96, 4, 1, "", "rotation_error"], [96, 4, 1, "", "seed"], [96, 4, 1, "", "solution"], [96, 4, 1, "", "solve_time"], [96, 4, 1, "", "success"]], "curobo.wrap.reacher.ik_solver.IKSolver": [[96, 2, 1, "", "attach_object_to_robot"], [96, 2, 1, "", "batch_env_solve"], [96, 2, 1, "", "check_constraints"], [96, 2, 1, "", "detach_object_from_robot"], [96, 2, 1, "", "fk"], [96, 2, 1, "", "generate_seed"], [96, 2, 1, "", "get_all_kinematics_instances"], [96, 2, 1, "", "get_all_rollout_instances"], [96, 2, 1, "", "get_result"], [96, 2, 1, "", "get_retract_config"], [96, 2, 1, "", "get_seed"], [96, 2, 1, "", "get_success"], [96, 3, 1, "", "kinematics"], [96, 2, 1, "", "reset_cuda_graph"], [96, 2, 1, "", "reset_seed"], [96, 2, 1, "", "reset_shape"], [96, 2, 1, "", "sample_configs"], [96, 2, 1, "", "solve"], [96, 2, 1, "", "solve_any"], [96, 2, 1, "", "solve_batch"], [96, 2, 1, "", "solve_batch_env"], [96, 2, 1, "", "solve_batch_env_goalset"], [96, 2, 1, "", "solve_batch_goalset"], [96, 2, 1, "", "solve_from_solve_state"], [96, 2, 1, "", "solve_goalset"], [96, 2, 1, "", "solve_single"], [96, 2, 1, "", "update_goal_buffer"], [96, 2, 1, "", "update_pose_cost_metric"], [96, 2, 1, "", "update_world"]], "curobo.wrap.reacher.ik_solver.IKSolverConfig": [[96, 4, 1, "", "ik_nn_seeder"], [96, 2, 1, "", "load_from_robot_config"], [96, 4, 1, "", "num_seeds"], [96, 4, 1, "", "position_threshold"], [96, 4, 1, "", "robot_config"], [96, 4, 1, "", "rollout_fn"], [96, 4, 1, "", "rotation_threshold"], [96, 4, 1, "", "sample_rejection_ratio"], [96, 4, 1, "", "solver"], [96, 4, 1, "", "tensor_args"], [96, 4, 1, "", "use_cuda_graph"], [96, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen": [[97, 1, 1, "", "MotionGen"], [97, 1, 1, "", "MotionGenConfig"], [97, 1, 1, "", "MotionGenPlanConfig"], [97, 1, 1, "", "MotionGenResult"]], "curobo.wrap.reacher.motion_gen.MotionGen": [[97, 2, 1, "", "_get_solve_state"], [97, 2, 1, "", "_plan_attempts"], [97, 2, 1, "", "_plan_batch_attempts"], [97, 2, 1, "", "_plan_from_solve_state"], [97, 2, 1, "", "_plan_from_solve_state_batch"], [97, 2, 1, "", "_plan_js_from_solve_state"], [97, 2, 1, "", "_solve_ik_from_solve_state"], [97, 2, 1, "", "_solve_trajopt_from_solve_state"], [97, 2, 1, "", "add_camera_frame"], [97, 2, 1, "", "add_running_pose_constraint"], [97, 2, 1, "", "attach_bounding_box_from_blox_to_robot"], [97, 2, 1, "", "attach_external_objects_to_robot"], [97, 2, 1, "", "attach_new_object_to_robot"], [97, 2, 1, "", "attach_objects_to_robot"], [97, 2, 1, "", "attach_spheres_to_robot"], [97, 2, 1, "", "batch_plan"], [97, 2, 1, "", "check_constraints"], [97, 2, 1, "", "clear_world_cache"], [97, 2, 1, "", "compute_kinematics"], [97, 2, 1, "", "detach_object_from_robot"], [97, 2, 1, "", "detach_spheres_from_robot"], [97, 3, 1, "", "dof"], [97, 2, 1, "", "get_active_js"], [97, 2, 1, "", "get_all_kinematics_instances"], [97, 2, 1, "", "get_all_pose_solver_rollout_instances"], [97, 2, 1, "", "get_all_rollout_instances"], [97, 2, 1, "", "get_all_solver_rollout_instances"], [97, 2, 1, "", "get_full_js"], [97, 2, 1, "", "get_retract_config"], [97, 2, 1, "", "graph_search"], [97, 3, 1, "", "kinematics"], [97, 2, 1, "", "plan"], [97, 2, 1, "", "plan_batch"], [97, 2, 1, "", "plan_batch_env"], [97, 2, 1, "", "plan_batch_env_goalset"], [97, 2, 1, "", "plan_batch_goalset"], [97, 2, 1, "", "plan_goalset"], [97, 2, 1, "", "plan_single"], [97, 2, 1, "", "plan_single_js"], [97, 2, 1, "", "process_camera_frames"], [97, 3, 1, "", "project_pose_to_goal_frame"], [97, 2, 1, "", "remove_running_pose_constraint"], [97, 2, 1, "", "reset"], [97, 2, 1, "", "reset_seed"], [97, 2, 1, "", "run_finetune_trajopt"], [97, 2, 1, "", "solve_ik"], [97, 2, 1, "", "solve_trajopt"], [97, 2, 1, "", "update_batch_size"], [97, 2, 1, "", "update_interpolation_type"], [97, 2, 1, "", "update_locked_joints"], [97, 2, 1, "", "update_pose_cost_metric"], [97, 2, 1, "", "update_world"], [97, 2, 1, "", "warmup"], [97, 3, 1, "", "world_collision"], [97, 3, 1, "", "world_model"]], "curobo.wrap.reacher.motion_gen.MotionGenConfig": [[97, 4, 1, "", "batch_ik_seeds"], [97, 4, 1, "", "batch_trajopt_seeds"], [97, 4, 1, "", "finetune_dt_scale"], [97, 4, 1, "", "finetune_trajopt_solver"], [97, 4, 1, "", "graph_planner"], [97, 4, 1, "", "graph_seeds"], [97, 4, 1, "", "graph_trajopt_iters"], [97, 4, 1, "", "ik_seeds"], [97, 4, 1, "", "ik_solver"], [97, 4, 1, "", "interpolation_dt"], [97, 4, 1, "", "interpolation_steps"], [97, 4, 1, "", "interpolation_type"], [97, 4, 1, "", "js_trajopt_solver"], [97, 2, 1, "", "load_from_robot_config"], [97, 4, 1, "", "noisy_trajopt_seeds"], [97, 4, 1, "", "partial_ik_iters"], [97, 4, 1, "", "robot_cfg"], [97, 4, 1, "", "store_debug_in_result"], [97, 4, 1, "", "tensor_args"], [97, 4, 1, "", "trajopt_seeds"], [97, 4, 1, "", "trajopt_solver"], [97, 4, 1, "", "use_cuda_graph"], [97, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig": [[97, 2, 1, "", "clone"], [97, 4, 1, "", "disable_graph_attempt"], [97, 4, 1, "", "enable_finetune_trajopt"], [97, 4, 1, "", "enable_graph"], [97, 4, 1, "", "enable_graph_attempt"], [97, 4, 1, "", "enable_opt"], [97, 4, 1, "", "fail_on_invalid_query"], [97, 4, 1, "", "ik_fail_return"], [97, 4, 1, "", "max_attempts"], [97, 4, 1, "", "need_graph_success"], [97, 4, 1, "", "num_graph_seeds"], [97, 4, 1, "", "num_ik_seeds"], [97, 4, 1, "", "num_trajopt_seeds"], [97, 4, 1, "", "parallel_finetune"], [97, 4, 1, "", "partial_ik_opt"], [97, 4, 1, "", "pose_cost_metric"], [97, 4, 1, "", "success_ratio"], [97, 4, 1, "", "timeout"], [97, 4, 1, "", "use_nn_ik_seed"], [97, 4, 1, "", "use_start_state_as_retract"]], "curobo.wrap.reacher.motion_gen.MotionGenResult": [[97, 2, 1, "", "_check_none_and_copy_idx"], [97, 4, 1, "", "attempts"], [97, 2, 1, "", "clone"], [97, 2, 1, "", "copy_idx"], [97, 4, 1, "", "cspace_error"], [97, 4, 1, "", "debug_info"], [97, 4, 1, "", "finetune_time"], [97, 2, 1, "", "get_interpolated_plan"], [97, 2, 1, "", "get_paths"], [97, 2, 1, "", "get_successful_paths"], [97, 4, 1, "", "goalset_index"], [97, 4, 1, "", "graph_plan"], [97, 4, 1, "", "graph_time"], [97, 4, 1, "", "ik_time"], [97, 4, 1, "", "interpolated_plan"], [97, 4, 1, "", "interpolation_dt"], [97, 3, 1, "", "motion_time"], [97, 4, 1, "", "optimized_dt"], [97, 4, 1, "", "optimized_plan"], [97, 4, 1, "", "path_buffer_last_tstep"], [97, 4, 1, "", "position_error"], [97, 4, 1, "", "rotation_error"], [97, 4, 1, "", "solve_time"], [97, 4, 1, "", "status"], [97, 4, 1, "", "success"], [97, 4, 1, "", "total_time"], [97, 4, 1, "", "trajopt_attempts"], [97, 4, 1, "", "trajopt_time"], [97, 4, 1, "", "used_graph"], [97, 4, 1, "", "valid_query"]], "curobo.wrap.reacher.mpc": [[98, 1, 1, "", "MpcSolver"], [98, 1, 1, "", "MpcSolverConfig"]], "curobo.wrap.reacher.mpc.MpcSolver": [[98, 2, 1, "", "_initialize_cuda_graph_step"], [98, 2, 1, "", "_solve_from_solve_state"], [98, 2, 1, "", "_step"], [98, 2, 1, "", "_update_batch_size"], [98, 2, 1, "", "enable_cspace_cost"], [98, 2, 1, "", "enable_pose_cost"], [98, 2, 1, "", "fn"], [98, 2, 1, "", "get_active_js"], [98, 2, 1, "", "get_visual_rollouts"], [98, 3, 1, "", "joint_names"], [98, 3, 1, "", "kinematics"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "reset_cuda_graph"], [98, 3, 1, "", "rollout_fn"], [98, 2, 1, "", "setup_solve_batch"], [98, 2, 1, "", "setup_solve_batch_env"], [98, 2, 1, "", "setup_solve_batch_env_goalset"], [98, 2, 1, "", "setup_solve_batch_goalset"], [98, 2, 1, "", "setup_solve_goalset"], [98, 2, 1, "", "setup_solve_single"], [98, 2, 1, "", "step"], [98, 2, 1, "", "step_once"], [98, 2, 1, "", "update_goal"], [98, 2, 1, "", "update_goal_buffer"], [98, 2, 1, "", "update_world"], [98, 3, 1, "", "world_collision"]], "curobo.wrap.reacher.mpc.MpcSolverConfig": [[98, 2, 1, "", "load_from_robot_config"], [98, 4, 1, "", "solver"], [98, 4, 1, "", "tensor_args"], [98, 4, 1, "", "use_cuda_graph_full_step"], [98, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt": [[99, 1, 1, "", "TrajOptSolver"], [99, 1, 1, "", "TrajOptSolverConfig"], [99, 1, 1, "", "TrajResult"]], "curobo.wrap.reacher.trajopt.TrajOptSolver": [[99, 2, 1, "", "_get_result"], [99, 2, 1, "", "_get_seed_numbers"], [99, 2, 1, "", "attach_object_to_robot"], [99, 2, 1, "", "batch_solve"], [99, 2, 1, "", "calculate_trajectory_dt"], [99, 2, 1, "", "compute_metrics"], [99, 2, 1, "", "detach_object_from_robot"], [99, 2, 1, "", "fk"], [99, 2, 1, "", "get_all_kinematics_instances"], [99, 2, 1, "", "get_all_rollout_instances"], [99, 2, 1, "", "get_bias_seed"], [99, 2, 1, "", "get_full_js"], [99, 2, 1, "", "get_interpolated_trajectory"], [99, 2, 1, "", "get_linear_seed"], [99, 2, 1, "", "get_seed_set"], [99, 2, 1, "", "get_seeds"], [99, 2, 1, "", "get_start_seed"], [99, 3, 1, "", "kinematics"], [99, 2, 1, "", "reset_cuda_graph"], [99, 2, 1, "", "reset_seed"], [99, 2, 1, "", "reset_shape"], [99, 3, 1, "", "retract_config"], [99, 2, 1, "", "solve"], [99, 2, 1, "", "solve_any"], [99, 2, 1, "", "solve_batch"], [99, 2, 1, "", "solve_batch_env"], [99, 2, 1, "", "solve_batch_env_goalset"], [99, 2, 1, "", "solve_batch_goalset"], [99, 2, 1, "", "solve_from_solve_state"], [99, 2, 1, "", "solve_goalset"], [99, 2, 1, "", "solve_single"], [99, 3, 1, "", "solver_dt"], [99, 2, 1, "", "update_goal_buffer"], [99, 2, 1, "", "update_pose_cost_metric"], [99, 2, 1, "", "update_solver_dt"]], "curobo.wrap.reacher.trajopt.TrajOptSolverConfig": [[99, 4, 1, "", "bias_node"], [99, 4, 1, "", "cspace_threshold"], [99, 4, 1, "", "evaluate_interpolated_trajectory"], [99, 4, 1, "", "interpolate_rollout"], [99, 4, 1, "", "interpolation_dt"], [99, 4, 1, "", "interpolation_steps"], [99, 4, 1, "", "interpolation_type"], [99, 2, 1, "", "load_from_robot_config"], [99, 4, 1, "", "num_seeds"], [99, 4, 1, "", "optimize_dt"], [99, 4, 1, "", "position_threshold"], [99, 4, 1, "", "robot_config"], [99, 4, 1, "", "rollout_fn"], [99, 4, 1, "", "rotation_threshold"], [99, 4, 1, "", "seed_ratio"], [99, 4, 1, "", "solver"], [99, 4, 1, "", "store_debug_in_result"], [99, 4, 1, "", "sync_cuda_time"], [99, 4, 1, "", "tensor_args"], [99, 4, 1, "", "traj_evaluator"], [99, 4, 1, "", "traj_evaluator_config"], [99, 4, 1, "", "traj_tsteps"], [99, 4, 1, "", "trim_steps"], [99, 4, 1, "", "use_cspace_seed"], [99, 4, 1, "", "use_cuda_graph"], [99, 4, 1, "", "use_cuda_graph_metrics"], [99, 4, 1, "", "world_coll_checker"]], "curobo.wrap.reacher.trajopt.TrajResult": [[99, 4, 1, "", "_abc_impl"], [99, 4, 1, "", "cspace_error"], [99, 4, 1, "", "debug_info"], [99, 4, 1, "", "goal"], [99, 4, 1, "", "goalset_index"], [99, 4, 1, "", "interpolated_solution"], [99, 4, 1, "", "metrics"], [99, 4, 1, "", "optimized_dt"], [99, 4, 1, "", "path_buffer_last_tstep"], [99, 4, 1, "", "position_error"], [99, 4, 1, "", "raw_action"], [99, 4, 1, "", "raw_solution"], [99, 4, 1, "", "rotation_error"], [99, 4, 1, "", "seed"], [99, 4, 1, "", "smooth_error"], [99, 4, 1, "", "smooth_label"], [99, 4, 1, "", "solution"], [99, 4, 1, "", "solve_time"], [99, 4, 1, "", "success"]], "curobo.wrap.reacher.types": [[100, 1, 1, "", "MotionGenSolverState"], [100, 1, 1, "", "ReacherSolveState"], [100, 1, 1, "", "ReacherSolveType"], [100, 5, 1, "", "get_padded_goalset"]], "curobo.wrap.reacher.types.MotionGenSolverState": [[100, 4, 1, "", "ik_solve_state"], [100, 4, 1, "", "solve_type"], [100, 4, 1, "", "trajopt_solve_state"]], "curobo.wrap.reacher.types.ReacherSolveState": [[100, 4, 1, "", "batch_env"], [100, 4, 1, "", "batch_mode"], [100, 4, 1, "", "batch_retract"], [100, 4, 1, "", "batch_size"], [100, 2, 1, "", "clone"], [100, 2, 1, "", "create_goal_buffer"], [100, 2, 1, "", "get_batch_size"], [100, 2, 1, "", "get_ik_batch_size"], [100, 4, 1, "", "n_envs"], [100, 4, 1, "", "n_goalset"], [100, 4, 1, "", "num_graph_seeds"], [100, 4, 1, "", "num_ik_seeds"], [100, 4, 1, "", "num_mpc_seeds"], [100, 4, 1, "", "num_seeds"], [100, 4, 1, "", "num_trajopt_seeds"], [100, 4, 1, "", "solve_type"], [100, 2, 1, "", "update_goal"], [100, 2, 1, "", "update_goal_buffer"]], "curobo.wrap.reacher.types.ReacherSolveType": [[100, 4, 1, "", "BATCH"], [100, 4, 1, "", "BATCH_ENV"], [100, 4, 1, "", "BATCH_ENV_GOALSET"], [100, 4, 1, "", "BATCH_GOALSET"], [100, 4, 1, "", "GOALSET"], [100, 4, 1, "", "SINGLE"]], "curobo.wrap.wrap_base": [[101, 1, 1, "", "WrapBase"], [101, 1, 1, "", "WrapConfig"], [101, 1, 1, "", "WrapResult"]], "curobo.wrap.wrap_base.WrapBase": [[101, 2, 1, "", "_get_rollout_instances_from_optimizers"], [101, 2, 1, "", "get_all_rollout_instances"], [101, 2, 1, "", "get_debug_cost"], [101, 2, 1, "", "get_debug_data"], [101, 2, 1, "", "get_init_act"], [101, 2, 1, "", "get_metrics"], [101, 3, 1, "", "joint_names"], [101, 3, 1, "", "newton_optimizer"], [101, 2, 1, "", "optimize"], [101, 3, 1, "", "particle_optimizer"], [101, 2, 1, "", "reset"], [101, 2, 1, "", "reset_cuda_graph"], [101, 2, 1, "", "reset_seed"], [101, 2, 1, "", "reset_shape"], [101, 3, 1, "", "rollout_fn"], [101, 2, 1, "", "solve"], [101, 2, 1, "", "update_nproblems"], [101, 2, 1, "", "update_params"]], "curobo.wrap.wrap_base.WrapConfig": [[101, 4, 1, "", "compute_metrics"], [101, 4, 1, "", "optimizers"], [101, 4, 1, "", "safety_rollout"], [101, 4, 1, "", "sync_cuda_time"], [101, 4, 1, "", "use_cuda_graph_metrics"]], "curobo.wrap.wrap_base.WrapResult": [[101, 4, 1, "", "action"], [101, 2, 1, "", "clone"], [101, 4, 1, "", "debug"], [101, 4, 1, "", "js_action"], [101, 4, 1, "", "metrics"], [101, 4, 1, "", "raw_action"], [101, 4, 1, "", "solve_time"]], "curobo.wrap.wrap_mpc": [[102, 1, 1, "", "WrapMpc"]], "curobo.wrap.wrap_mpc.WrapMpc": [[102, 2, 1, "", "_shift"], [102, 2, 1, "", "get_rollouts"], [102, 2, 1, "", "reset"], [102, 2, 1, "", "solve"], [102, 2, 1, "", "update_init_seed"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"curobo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 121, 122, 128, 129], "packag": [0, 1, 8, 20, 22, 32, 36, 37, 41, 46, 49, 61, 67, 75, 89, 90, 94], "subpackag": [0, 20, 36, 46, 89], "submodul": [0, 1, 8, 20, 22, 32, 36, 37, 41, 46, 49, 61, 67, 75, 89, 90, 94], "cuda_robot_model": [1, 2, 3, 4, 5, 6, 7], "cuda_robot_gener": 2, "modul": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102], "kinematics_pars": 4, "type": [5, 31, 67, 68, 69, 70, 71, 72, 73, 74, 100], "urdf_kinematics_pars": 6, "usd_kinematics_pars": 7, "curobolib": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "geom": [9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "geom_cu": 10, "kinemat": [11, 115, 116, 120], "kinematics_fused_cu": 12, "lbfgs_step_cu": 13, "line_search_cu": 14, "l": 15, "opt": [16, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "tensor_step": [17, 65], "tensor_step_cu": 18, "util_fil": [19, 88], "cv": 21, "sdf": [22, 23, 24, 25, 26, 27, 28], "sdf_grid": 23, "util": [24, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "warp_primit": 25, "world": [26, 117, 127], "world_blox": 27, "world_mesh": 28, "sphere_fit": 29, "transform": 30, "graph": [32, 33, 34, 35], "graph_bas": 33, "graph_nx": 34, "prm": 35, "newton": [37, 38, 39], "lbfg": 38, "newton_bas": 39, "opt_bas": 40, "particl": [41, 42, 43, 44, 45], "parallel_": 42, "parallel_mppi": 43, "particle_opt_bas": 44, "particle_opt_util": 45, "rollout": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66], "arm_bas": 47, "arm_reach": 48, "cost": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "bound_cost": 50, "cost_bas": 51, "dist_cost": 52, "manipulability_cost": 53, "pose_cost": 54, "primitive_collision_cost": 55, "projected_dist_cost": 56, "self_collision_cost": 57, "stop_cost": 58, "straight_line_cost": 59, "zero_cost": 60, "dynamics_model": [61, 62, 63, 64, 65], "integration_util": 62, "kinematic_model": 63, "model_bas": 64, "rollout_bas": 66, "base": 68, "camera": [69, 118], "enum": 70, "math": 71, "robot": [72, 104, 106, 108, 110, 124, 127, 128, 132], "state": 73, "tensor": [74, 126], "error_metr": 76, "helper": 77, "logger": 78, "metric": [79, 117], "sample_lib": 80, "state_filt": 81, "tensor_util": 82, "torch_util": 83, "trajectori": 84, "usd_help": 85, "warp": [86, 121], "warp_interpol": 87, "wrap": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "model": [90, 91, 92, 93, 116, 118], "curobo_robot_world": 91, "robot_segment": 92, "robot_world": 93, "reacher": [94, 95, 96, 97, 98, 99, 100, 112, 116], "evalu": 95, "ik_solv": 96, "motion_gen": 97, "mpc": 98, "trajopt": 99, "wrap_bas": 101, "wrap_mpc": 102, "cuda": [104, 106, 126], "acceler": [104, 106], "librari": [104, 106, 113], "updat": [104, 105, 106], "overview": [104, 106], "batch": [107, 116, 117, 126], "environ": [107, 117, 126], "collis": [107, 115, 116, 117, 118, 120, 126, 128, 132], "check": [107, 115, 116, 117, 118, 120, 126], "motion": [107, 111, 115, 116, 118, 120, 128], "gener": [107, 111, 115, 116, 118, 120, 128], "block": 108, "stack": 108, "attach": 108, "object": [108, 117], "constrain": 109, "plan": [109, 111, 120], "isaac": [109, 113, 116, 122], "sim": [109, 113, 116, 122], "demo": [109, 118], "grasp": 109, "approach": 109, "vector": 109, "segment": 110, "mode": 111, "instal": 113, "us": [113, 115, 116, 118, 119, 129], "nvblox": [113, 122], "option": 113, "cxx11_abi": 113, "pytorch": 113, "docker": [113, 121], "precxx11_abi": 113, "nvidia": [113, 121], "jetson": [113, 121], "aarch64": 113, "basic": [114, 116], "python": [115, 122, 123], "forward": 115, "invers": [115, 116, 120], "usd": [116, 127], "interfac": 116, "reachabl": 116, "free": [116, 128], "predict": [116, 118], "control": [116, 118], "mppi": 116, "multi": 116, "arm": 116, "represent": [117, 127, 132], "checker": 117, "implement": 117, "geometri": 117, "approxim": 117, "sphere": 117, "index": 117, "depth": 118, "an": 118, "exist": 118, "map": 118, "onlin": 118, "neural": 119, "network": 119, "benchmark": 120, "profil": 120, "latest": 120, "result": 120, "run": 120, "geometr": 120, "develop": [121, 126], "build": 121, "your": 121, "own": 121, "imag": 121, "deprec": 121, "known": 122, "issu": 122, "api": 123, "support": 124, "numer": 125, "optim": 125, "note": 126, "kernel": 126, "io": 126, "buffer": 126, "read": 127, "from": 127, "technic": 128, "report": 128, "parallel": 128, "minimum": 128, "jerk": 128, "citat": 128, "research": 129, "configur": 132, "new": 132, "prequisit": 132, "file": 132, "tutori": 132, "ur5": 132, "prepar": 132, "asset": 132, "creat": 132, "self": 132, "addit": 132, "test": 132}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx": 60}, "alltitles": {"curobo package": [[0, "module-curobo"]], "Subpackages": [[0, "subpackages"], [20, "subpackages"], [36, "subpackages"], [46, "subpackages"], [89, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [8, "submodules"], [20, "submodules"], [22, "submodules"], [32, "submodules"], [36, "submodules"], [37, "submodules"], [41, "submodules"], [46, "submodules"], [49, "submodules"], [61, "submodules"], [67, "submodules"], [75, "submodules"], [89, "submodules"], [90, "submodules"], [94, "submodules"]], "curobo.cuda_robot_model package": [[1, "module-curobo.cuda_robot_model"]], "curobo.cuda_robot_model.cuda_robot_generator module": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "curobo.cuda_robot_model.cuda_robot_model module": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "curobo.cuda_robot_model.kinematics_parser module": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "curobo.cuda_robot_model.types module": [[5, "module-curobo.cuda_robot_model.types"]], "curobo.cuda_robot_model.urdf_kinematics_parser module": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "curobo.cuda_robot_model.usd_kinematics_parser module": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "curobo.curobolib package": [[8, "module-curobo.curobolib"]], "curobo.curobolib.geom module": [[9, "module-curobo.curobolib.geom"]], "curobo.curobolib.geom_cu module": [[10, "module-curobo.curobolib.geom_cu"]], "curobo.curobolib.kinematics module": [[11, "module-curobo.curobolib.kinematics"]], "curobo.curobolib.kinematics_fused_cu module": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "curobo.curobolib.lbfgs_step_cu module": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "curobo.curobolib.line_search_cu module": [[14, "module-curobo.curobolib.line_search_cu"]], "curobo.curobolib.ls module": [[15, "module-curobo.curobolib.ls"]], "curobo.curobolib.opt module": [[16, "module-curobo.curobolib.opt"]], "curobo.curobolib.tensor_step module": [[17, "module-curobo.curobolib.tensor_step"]], "curobo.curobolib.tensor_step_cu module": [[18, "module-curobo.curobolib.tensor_step_cu"]], "curobo.curobolib.util_file module": [[19, "module-curobo.curobolib.util_file"]], "curobo.geom package": [[20, "module-curobo.geom"]], "curobo.geom.cv module": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf package": [[22, "module-curobo.geom.sdf"]], "curobo.geom.sdf.sdf_grid module": [[23, "module-curobo.geom.sdf.sdf_grid"]], "curobo.geom.sdf.utils module": [[24, "module-curobo.geom.sdf.utils"]], "curobo.geom.sdf.warp_primitives module": [[25, "module-curobo.geom.sdf.warp_primitives"]], "curobo.geom.sdf.world module": [[26, "module-curobo.geom.sdf.world"]], "curobo.geom.sdf.world_blox module": [[27, "module-curobo.geom.sdf.world_blox"]], "curobo.geom.sdf.world_mesh module": [[28, "module-curobo.geom.sdf.world_mesh"]], "curobo.geom.sphere_fit module": [[29, "module-curobo.geom.sphere_fit"]], "curobo.geom.transform module": [[30, "module-curobo.geom.transform"]], "curobo.geom.types module": [[31, "module-curobo.geom.types"]], "curobo.graph package": [[32, "module-curobo.graph"]], "curobo.graph.graph_base module": [[33, "module-curobo.graph.graph_base"]], "curobo.graph.graph_nx module": [[34, "module-curobo.graph.graph_nx"]], "curobo.graph.prm module": [[35, "module-curobo.graph.prm"]], "curobo.opt package": [[36, "module-curobo.opt"]], "curobo.opt.newton package": [[37, "module-curobo.opt.newton"]], "curobo.opt.newton.lbfgs module": [[38, "module-curobo.opt.newton.lbfgs"]], "curobo.opt.newton.newton_base module": [[39, "module-curobo.opt.newton.newton_base"]], "curobo.opt.opt_base module": [[40, "module-curobo.opt.opt_base"]], "curobo.opt.particle package": [[41, "module-curobo.opt.particle"]], "curobo.opt.particle.parallel_es module": [[42, "module-curobo.opt.particle.parallel_es"]], "curobo.opt.particle.parallel_mppi module": [[43, "module-curobo.opt.particle.parallel_mppi"]], "curobo.opt.particle.particle_opt_base module": [[44, "module-curobo.opt.particle.particle_opt_base"]], "curobo.opt.particle.particle_opt_utils module": [[45, "module-curobo.opt.particle.particle_opt_utils"]], "curobo.rollout package": [[46, "module-curobo.rollout"]], "curobo.rollout.arm_base module": [[47, "module-curobo.rollout.arm_base"]], "curobo.rollout.arm_reacher module": [[48, "module-curobo.rollout.arm_reacher"]], "curobo.rollout.cost package": [[49, "module-curobo.rollout.cost"]], "curobo.rollout.cost.bound_cost module": [[50, "module-curobo.rollout.cost.bound_cost"]], "curobo.rollout.cost.cost_base module": [[51, "module-curobo.rollout.cost.cost_base"]], "curobo.rollout.cost.dist_cost module": [[52, "module-curobo.rollout.cost.dist_cost"]], "curobo.rollout.cost.manipulability_cost module": [[53, "module-curobo.rollout.cost.manipulability_cost"]], "curobo.rollout.cost.pose_cost module": [[54, "module-curobo.rollout.cost.pose_cost"]], "curobo.rollout.cost.primitive_collision_cost module": [[55, "module-curobo.rollout.cost.primitive_collision_cost"]], "curobo.rollout.cost.projected_dist_cost module": [[56, "module-curobo.rollout.cost.projected_dist_cost"]], "curobo.rollout.cost.self_collision_cost module": [[57, "module-curobo.rollout.cost.self_collision_cost"]], "curobo.rollout.cost.stop_cost module": [[58, "module-curobo.rollout.cost.stop_cost"]], "curobo.rollout.cost.straight_line_cost module": [[59, "module-curobo.rollout.cost.straight_line_cost"]], "curobo.rollout.cost.zero_cost module": [[60, "module-curobo.rollout.cost.zero_cost"]], "curobo.rollout.dynamics_model package": [[61, "module-curobo.rollout.dynamics_model"]], "curobo.rollout.dynamics_model.integration_utils module": [[62, "module-curobo.rollout.dynamics_model.integration_utils"]], "curobo.rollout.dynamics_model.kinematic_model module": [[63, "module-curobo.rollout.dynamics_model.kinematic_model"]], "curobo.rollout.dynamics_model.model_base module": [[64, "module-curobo.rollout.dynamics_model.model_base"]], "curobo.rollout.dynamics_model.tensor_step module": [[65, "module-curobo.rollout.dynamics_model.tensor_step"]], "curobo.rollout.rollout_base module": [[66, "module-curobo.rollout.rollout_base"]], "curobo.types package": [[67, "module-curobo.types"]], "curobo.types.base module": [[68, "module-curobo.types.base"]], "curobo.types.camera module": [[69, "module-curobo.types.camera"]], "curobo.types.enum module": [[70, "module-curobo.types.enum"]], "curobo.types.math module": [[71, "module-curobo.types.math"]], "curobo.types.robot module": [[72, "module-curobo.types.robot"]], "curobo.types.state module": [[73, "module-curobo.types.state"]], "curobo.types.tensor module": [[74, "module-curobo.types.tensor"]], "curobo.util package": [[75, "module-curobo.util"]], "curobo.util.error_metrics module": [[76, "module-curobo.util.error_metrics"]], "curobo.util.helpers module": [[77, "module-curobo.util.helpers"]], "curobo.util.logger module": [[78, "module-curobo.util.logger"]], "curobo.util.metrics module": [[79, "module-curobo.util.metrics"]], "curobo.util.sample_lib module": [[80, "module-curobo.util.sample_lib"]], "curobo.util.state_filter module": [[81, "module-curobo.util.state_filter"]], "curobo.util.tensor_util module": [[82, "module-curobo.util.tensor_util"]], "curobo.util.torch_utils module": [[83, "module-curobo.util.torch_utils"]], "curobo.util.trajectory module": [[84, "module-curobo.util.trajectory"]], "curobo.util.usd_helper module": [[85, "module-curobo.util.usd_helper"]], "curobo.util.warp module": [[86, "module-curobo.util.warp"]], "curobo.util.warp_interpolation module": [[87, "module-curobo.util.warp_interpolation"]], "curobo.util_file module": [[88, "module-curobo.util_file"]], "curobo.wrap package": [[89, "module-curobo.wrap"]], "curobo.wrap.model package": [[90, "module-curobo.wrap.model"]], "curobo.wrap.model.curobo_robot_world module": [[91, "module-curobo.wrap.model.curobo_robot_world"]], "curobo.wrap.model.robot_segmenter module": [[92, "module-curobo.wrap.model.robot_segmenter"]], "curobo.wrap.model.robot_world module": [[93, "module-curobo.wrap.model.robot_world"]], "curobo.wrap.reacher package": [[94, "module-curobo.wrap.reacher"]], "curobo.wrap.reacher.evaluator module": [[95, "module-curobo.wrap.reacher.evaluator"]], "curobo.wrap.reacher.ik_solver module": [[96, "module-curobo.wrap.reacher.ik_solver"]], "curobo.wrap.reacher.motion_gen module": [[97, "module-curobo.wrap.reacher.motion_gen"]], "curobo.wrap.reacher.mpc module": [[98, "module-curobo.wrap.reacher.mpc"]], "curobo.wrap.reacher.trajopt module": [[99, "module-curobo.wrap.reacher.trajopt"]], "curobo.wrap.reacher.types module": [[100, "module-curobo.wrap.reacher.types"]], "curobo.wrap.wrap_base module": [[101, "module-curobo.wrap.wrap_base"]], "curobo.wrap.wrap_mpc module": [[102, "module-curobo.wrap.wrap_mpc"]], "curobo": [[103, "curobo"]], "cuRobo: CUDA Accelerated Robot Library": [[104, "curobo-cuda-accelerated-robot-library"], [106, "curobo-cuda-accelerated-robot-library"]], "Updates": [[104, "updates"], [105, "updates"], [106, "updates"]], "Overview": [[104, "overview"], [106, "overview"]], "Batched Environments": [[107, "batched-environments"], [117, "batched-environments"]], "Collision Checking": [[107, "collision-checking"], [115, "collision-checking"], [116, "collision-checking"], [118, "collision-checking"], [118, "id1"]], "Motion Generation": [[107, "motion-generation"], [111, "motion-generation"], [115, "motion-generation"], [116, "motion-generation"], [118, "motion-generation"], [118, "id2"]], "Block Stacking": [[108, "block-stacking"]], "Attaching Object to Robot": [[108, "attaching-object-to-robot"]], "Constrained Planning": [[109, "constrained-planning"]], "Isaac Sim Demo": [[109, "isaac-sim-demo"]], "Grasp Approach Vector": [[109, "grasp-approach-vector"]], "Robot Segmentation": [[110, "robot-segmentation"]], "Planning Modes": [[111, "id1"]], "Reacher": [[112, "reacher"]], "Installation": [[113, "installation"]], "Library Installation": [[113, "library-installation"]], "Install for use in Isaac Sim": [[113, "install-for-use-in-isaac-sim"]], "Install nvblox (optional)": [[113, "install-nvblox-optional"]], "Installing nvblox for CXX11_ABI and pytorch dockers": [[113, "installing-nvblox-for-cxx11-abi-and-pytorch-dockers"]], "Installing nvblox for PRECXX11_ABI and Isaac Sim": [[113, "installing-nvblox-for-precxx11-abi-and-isaac-sim"]], "Installing on NVIDIA Jetson (aarch64)": [[113, "installing-on-nvidia-jetson-aarch64"]], "Basics": [[114, "basics"]], "Using in Python": [[115, "using-in-python"]], "Forward Kinematics": [[115, "forward-kinematics"]], "Inverse Kinematics": [[115, "inverse-kinematics"], [120, "inverse-kinematics"]], "Using with Isaac Sim": [[116, "using-with-isaac-sim"]], "Usd Interface": [[116, "usd-interface"]], "Isaac Sim Basics": [[116, "isaac-sim-basics"]], "Reachability using Batched Collision-Free Inverse Kinematics": [[116, "reachability-using-batched-collision-free-inverse-kinematics"]], "Model Predictive Control with MPPI": [[116, "model-predictive-control-with-mppi"]], "Multi-Arm Reacher": [[116, "multi-arm-reacher"]], "Collision World Representation": [[117, "collision-world-representation"]], "World Representation": [[117, "world-representation"]], "World Collision Checkers": [[117, "world-collision-checkers"]], "Collision Checking Implementation": [[117, "collision-checking-implementation"]], "Collision Metric": [[117, "collision-metric"]], "Geometry Approximation to Spheres": [[117, "geometry-approximation-to-spheres"]], "Collision Object Index": [[117, "collision-object-index"]], "Using with Depth Camera": [[118, "using-with-depth-camera"]], "Demos with an existing map": [[118, "demos-with-an-existing-map"]], "Model Predictive Control": [[118, "model-predictive-control"], [118, "id3"]], "Demos with online mapping": [[118, "demos-with-online-mapping"]], "Using in a Neural Network": [[119, "using-in-a-neural-network"]], "Benchmarks & Profiling": [[120, "benchmarks-profiling"]], "Benchmarks": [[120, "benchmarks"]], "Latest Motion Generation Results": [[120, "latest-motion-generation-results"]], "Running Benchmarks": [[120, "running-benchmarks"]], "Kinematics & Collision Checking": [[120, "kinematics-collision-checking"]], "Motion Generation & Geometric Planning": [[120, "motion-generation-geometric-planning"]], "Profiling": [[120, "profiling"]], "Docker Development": [[121, "docker-development"]], "Building your own docker image with cuRobo": [[121, "building-your-own-docker-image-with-curobo"]], "Build Warp for NVIDIA Jetson (Deprecated)": [[121, "build-warp-for-nvidia-jetson-deprecated"]], "Known Issues": [[122, "known-issues"]], "cuRobo": [[122, "curobo"]], "Python": [[122, "python"]], "nvblox": [[122, "nvblox"]], "Isaac Sim": [[122, "isaac-sim"]], "Python API": [[123, "python-api"]], "Supported Robots": [[124, "supported-robots"]], "Numerical Optimization": [[125, "numerical-optimization"]], "CUDA Notes": [[126, "cuda-notes"]], "Developing CUDA kernels": [[126, "developing-cuda-kernels"]], "Tensor IO Buffers": [[126, "tensor-io-buffers"]], "Batched Environment Collision Checking": [[126, "batched-environment-collision-checking"]], "USD for Robot and World Representation": [[127, "usd-for-robot-and-world-representation"]], "Reading World from USD": [[127, "reading-world-from-usd"]], "Technical Report": [[128, "technical-report"]], "cuRobo: Parallelized Collision-Free Minimum-Jerk Robot Motion Generation": [[128, "curobo-parallelized-collision-free-minimum-jerk-robot-motion-generation"]], "Citation": [[128, "citation"]], "Research using cuRobo": [[129, "research-using-curobo"]], "Configuring a New Robot": [[132, "configuring-a-new-robot"]], "Prequisite": [[132, "prequisite"]], "Robot Configuration File": [[132, "robot-configuration-file"]], "Tutorial with a UR5e robot": [[132, "tutorial-with-a-ur5e-robot"]], "Prepare assets": [[132, "prepare-assets"]], "Create Configuration File": [[132, "create-configuration-file"]], "Robot Collision Representation": [[132, "robot-collision-representation"]], "Self Collision Configuration": [[132, "self-collision-configuration"]], "Additional Configurations": [[132, "additional-configurations"]], "Test Robot Configuration": [[132, "test-robot-configuration"]]}, "indexentries": {"curobo": [[0, "module-curobo"]], "module": [[0, "module-curobo"], [1, "module-curobo.cuda_robot_model"], [2, "module-curobo.cuda_robot_model.cuda_robot_generator"], [3, "module-curobo.cuda_robot_model.cuda_robot_model"], [4, "module-curobo.cuda_robot_model.kinematics_parser"], [5, "module-curobo.cuda_robot_model.types"], [6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"], [7, "module-curobo.cuda_robot_model.usd_kinematics_parser"], [8, "module-curobo.curobolib"], [9, "module-curobo.curobolib.geom"], [10, "module-curobo.curobolib.geom_cu"], [11, "module-curobo.curobolib.kinematics"], [12, "module-curobo.curobolib.kinematics_fused_cu"], [13, "module-curobo.curobolib.lbfgs_step_cu"], [14, "module-curobo.curobolib.line_search_cu"], [15, "module-curobo.curobolib.ls"], [16, "module-curobo.curobolib.opt"], [17, "module-curobo.curobolib.tensor_step"], [18, "module-curobo.curobolib.tensor_step_cu"], [19, "module-curobo.curobolib.util_file"], [20, "module-curobo.geom"], [21, "module-curobo.geom.cv"], [22, "module-curobo.geom.sdf"], [23, "module-curobo.geom.sdf.sdf_grid"], [24, "module-curobo.geom.sdf.utils"], [25, "module-curobo.geom.sdf.warp_primitives"], [26, "module-curobo.geom.sdf.world"], [27, "module-curobo.geom.sdf.world_blox"], [28, "module-curobo.geom.sdf.world_mesh"], [29, "module-curobo.geom.sphere_fit"], [30, "module-curobo.geom.transform"], [31, "module-curobo.geom.types"], [32, "module-curobo.graph"], [33, "module-curobo.graph.graph_base"], [34, "module-curobo.graph.graph_nx"], [35, "module-curobo.graph.prm"], [36, "module-curobo.opt"], [37, "module-curobo.opt.newton"], [38, "module-curobo.opt.newton.lbfgs"], [39, "module-curobo.opt.newton.newton_base"], [40, "module-curobo.opt.opt_base"], [41, "module-curobo.opt.particle"], [42, "module-curobo.opt.particle.parallel_es"], [43, "module-curobo.opt.particle.parallel_mppi"], [44, "module-curobo.opt.particle.particle_opt_base"], [45, "module-curobo.opt.particle.particle_opt_utils"], [46, "module-curobo.rollout"], [47, "module-curobo.rollout.arm_base"], [48, "module-curobo.rollout.arm_reacher"], [49, "module-curobo.rollout.cost"], [50, "module-curobo.rollout.cost.bound_cost"], [51, "module-curobo.rollout.cost.cost_base"], [52, "module-curobo.rollout.cost.dist_cost"], [53, "module-curobo.rollout.cost.manipulability_cost"], [54, "module-curobo.rollout.cost.pose_cost"], [55, "module-curobo.rollout.cost.primitive_collision_cost"], [56, "module-curobo.rollout.cost.projected_dist_cost"], [57, "module-curobo.rollout.cost.self_collision_cost"], [58, "module-curobo.rollout.cost.stop_cost"], [59, "module-curobo.rollout.cost.straight_line_cost"], [60, "module-curobo.rollout.cost.zero_cost"], [61, "module-curobo.rollout.dynamics_model"], [62, "module-curobo.rollout.dynamics_model.integration_utils"], [63, "module-curobo.rollout.dynamics_model.kinematic_model"], [64, "module-curobo.rollout.dynamics_model.model_base"], [65, "module-curobo.rollout.dynamics_model.tensor_step"], [66, "module-curobo.rollout.rollout_base"], [67, "module-curobo.types"], [68, "module-curobo.types.base"], [69, "module-curobo.types.camera"], [70, "module-curobo.types.enum"], [71, "module-curobo.types.math"], [72, "module-curobo.types.robot"], [73, "module-curobo.types.state"], [74, "module-curobo.types.tensor"], [75, "module-curobo.util"], [76, "module-curobo.util.error_metrics"], [77, "module-curobo.util.helpers"], [78, "module-curobo.util.logger"], [79, "module-curobo.util.metrics"], [80, "module-curobo.util.sample_lib"], [81, "module-curobo.util.state_filter"], [82, "module-curobo.util.tensor_util"], [83, "module-curobo.util.torch_utils"], [84, "module-curobo.util.trajectory"], [85, "module-curobo.util.usd_helper"], [86, "module-curobo.util.warp"], [87, "module-curobo.util.warp_interpolation"], [88, "module-curobo.util_file"], [89, "module-curobo.wrap"], [90, "module-curobo.wrap.model"], [91, "module-curobo.wrap.model.curobo_robot_world"], [92, "module-curobo.wrap.model.robot_segmenter"], [93, "module-curobo.wrap.model.robot_world"], [94, "module-curobo.wrap.reacher"], [95, "module-curobo.wrap.reacher.evaluator"], [96, "module-curobo.wrap.reacher.ik_solver"], [97, "module-curobo.wrap.reacher.motion_gen"], [98, "module-curobo.wrap.reacher.mpc"], [99, "module-curobo.wrap.reacher.trajopt"], [100, "module-curobo.wrap.reacher.types"], [101, "module-curobo.wrap.wrap_base"], [102, "module-curobo.wrap.wrap_mpc"]], "curobo.cuda_robot_model": [[1, "module-curobo.cuda_robot_model"]], "cudarobotgenerator (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator"]], "cudarobotgeneratorconfig (class in curobo.cuda_robot_model.cuda_robot_generator)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig"]], "_add_body_to_tree() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._add_body_to_tree"]], "_build_chain() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_chain"]], "_build_collision_model() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_collision_model"]], "_build_kinematics() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics"]], "_build_kinematics_tensors() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_tensors"]], "_build_kinematics_with_lock_joints() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._build_kinematics_with_lock_joints"]], "_create_self_collision_thread_data() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._create_self_collision_thread_data"]], "_get_joint_links() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_links"]], "_get_joint_position_velocity_limits() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_joint_position_velocity_limits"]], "_get_link_poses() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._get_link_poses"]], "_update_joint_limits() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator._update_joint_limits"]], "add_fixed_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_fixed_link"]], "add_link() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.add_link"]], "add_object_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.add_object_link"]], "asset_root_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.asset_root_path"]], "base_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.base_link"]], "collision_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_link_names"]], "collision_sphere_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_sphere_buffer"]], "collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.collision_spheres"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_generator": [[2, "module-curobo.cuda_robot_model.cuda_robot_generator"]], "debug (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.debug"]], "ee_link (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.ee_link"]], "external_asset_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_asset_path"]], "external_robot_configs_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.external_robot_configs_path"]], "extra_collision_spheres (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_collision_spheres"]], "extra_links (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.extra_links"]], "get_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.get_joint_limits"]], "initialize_tensors() (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator method)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.initialize_tensors"]], "isaac_usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.isaac_usd_path"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.link_names"]], "load_link_names_with_mesh (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_link_names_with_mesh"]], "load_meshes (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.load_meshes"]], "lock_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.lock_joints"]], "mesh_link_names (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.mesh_link_names"]], "self_collision_buffer (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_buffer"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgenerator property)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGenerator.self_collision_config"]], "self_collision_ignore (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.self_collision_ignore"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.tensor_args"]], "urdf_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.urdf_path"]], "usd_flip_joint_limits (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joint_limits"]], "usd_flip_joints (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_flip_joints"]], "usd_path (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_path"]], "usd_robot_root (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.usd_robot_root"]], "use_external_assets (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_external_assets"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_global_cumul"]], "use_usd_kinematics (curobo.cuda_robot_model.cuda_robot_generator.cudarobotgeneratorconfig attribute)": [[2, "curobo.cuda_robot_model.cuda_robot_generator.CudaRobotGeneratorConfig.use_usd_kinematics"]], "cudarobotmodel (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel"]], "cudarobotmodelconfig (class in curobo.cuda_robot_model.cuda_robot_model)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig"]], "_cuda_forward() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel._cuda_forward"]], "all_articulated_joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.all_articulated_joint_names"]], "base_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.base_link"]], "compute_jacobian (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.compute_jacobian"]], "cspace (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.cspace"]], "curobo.cuda_robot_model.cuda_robot_model": [[3, "module-curobo.cuda_robot_model.cuda_robot_model"]], "ee_link (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.ee_link"]], "forward() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.forward"]], "from_basic_urdf() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_urdf"]], "from_basic_usd() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_basic_usd"]], "from_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_config"]], "from_data_dict() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_data_dict"]], "from_robot_yaml_file() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig static method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.from_robot_yaml_file"]], "generator_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.generator_config"]], "get_all_link_transforms() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_all_link_transforms"]], "get_dof() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_dof"]], "get_joint_limits() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.get_joint_limits"]], "get_link_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_mesh"]], "get_link_poses() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_poses"]], "get_link_transform() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_link_transform"]], "get_robot_as_mesh() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_mesh"]], "get_robot_as_spheres() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_as_spheres"]], "get_robot_link_meshes() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_robot_link_meshes"]], "get_self_collision_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_self_collision_config"]], "get_state() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.get_state"]], "joint_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.joint_names"]], "kinematics_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_config"]], "kinematics_parser (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.kinematics_parser"]], "link_names (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.link_names"]], "lock_jointstate (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.lock_jointstate"]], "retract_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.retract_config"]], "self_collision_config (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.self_collision_config"]], "tensor_args (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.tensor_args"]], "total_spheres (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel property)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.total_spheres"]], "update_batch_size() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_batch_size"]], "update_kinematics_config() (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodel method)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModel.update_kinematics_config"]], "use_global_cumul (curobo.cuda_robot_model.cuda_robot_model.cudarobotmodelconfig attribute)": [[3, "curobo.cuda_robot_model.cuda_robot_model.CudaRobotModelConfig.use_global_cumul"]], "kinematicsparser (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser"]], "linkparams (class in curobo.cuda_robot_model.kinematics_parser)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams"]], "_get_from_extra_links() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser._get_from_extra_links"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.kinematics_parser": [[4, "module-curobo.cuda_robot_model.kinematics_parser"]], "fixed_transform (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.fixed_transform"]], "from_dict() (curobo.cuda_robot_model.kinematics_parser.linkparams static method)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.from_dict"]], "get_chain() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_chain"]], "get_link_mesh() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.kinematics_parser.kinematicsparser method)": [[4, "curobo.cuda_robot_model.kinematics_parser.KinematicsParser.get_link_parameters"]], "joint_axis (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_axis"]], "joint_id (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_id"]], "joint_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_limits"]], "joint_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_name"]], "joint_type (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_type"]], "joint_velocity_limits (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.joint_velocity_limits"]], "link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.link_name"]], "parent_link_name (curobo.cuda_robot_model.kinematics_parser.linkparams attribute)": [[4, "curobo.cuda_robot_model.kinematics_parser.LinkParams.parent_link_name"]], "cspaceconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig"]], "cudarobotmodelstate (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState"]], "fixed (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.FIXED"]], "jointlimits (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointLimits"]], "jointtype (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.JointType"]], "kinematicstensorconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig"]], "selfcollisionkinematicsconfig (class in curobo.cuda_robot_model.types)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig"]], "x_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM"]], "x_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_PRISM_NEG"]], "x_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT"]], "x_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.X_ROT_NEG"]], "y_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM"]], "y_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_PRISM_NEG"]], "y_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT"]], "y_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Y_ROT_NEG"]], "z_prism (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM"]], "z_prism_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_PRISM_NEG"]], "z_rot (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT"]], "z_rot_neg (curobo.cuda_robot_model.types.jointtype attribute)": [[5, "curobo.cuda_robot_model.types.JointType.Z_ROT_NEG"]], "acceleration (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.acceleration"]], "acceleration_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.acceleration_scale"]], "ang_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ang_jacobian"]], "attach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.attach_object"]], "base_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.base_link"]], "checks_per_thread (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.checks_per_thread"]], "clone() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.clone"]], "clone() (curobo.cuda_robot_model.types.jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.clone"]], "collision_matrix (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.collision_matrix"]], "copy_() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.copy_"]], "copy_() (curobo.cuda_robot_model.types.jointlimits method)": [[5, "curobo.cuda_robot_model.types.JointLimits.copy_"]], "copy_() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.copy_"]], "cspace (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.cspace"]], "cspace_distance_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.cspace_distance_weight"]], "curobo.cuda_robot_model.types": [[5, "module-curobo.cuda_robot_model.types"]], "debug (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.debug"]], "detach_object() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.detach_object"]], "disable_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.disable_link_spheres"]], "distance_threshold (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.distance_threshold"]], "ee_idx (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_idx"]], "ee_link (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.ee_link"]], "ee_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_pose"]], "ee_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_position"]], "ee_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.ee_quaternion"]], "effort (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.effort"]], "enable_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.enable_link_spheres"]], "experimental_kernel (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.experimental_kernel"]], "fixed_transforms (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.fixed_transforms"]], "from_data_dict() (curobo.cuda_robot_model.types.jointlimits static method)": [[5, "curobo.cuda_robot_model.types.JointLimits.from_data_dict"]], "get_link_spheres() (curobo.cuda_robot_model.types.cudarobotmodelstate method)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.get_link_spheres"]], "get_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_link_spheres"]], "get_number_of_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_number_of_spheres"]], "get_reference_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_reference_link_spheres"]], "get_sphere_index_from_link_name() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.get_sphere_index_from_link_name"]], "inplace_reindex() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.inplace_reindex"]], "jerk (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.jerk"]], "jerk_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.jerk_scale"]], "joint_limits (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_limits"]], "joint_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map"]], "joint_map_type (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_map_type"]], "joint_names (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.joint_names"]], "joint_names (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.joint_names"]], "joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.joint_names"]], "lin_jacobian (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.lin_jacobian"]], "link_chain_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_chain_map"]], "link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_map"]], "link_name_to_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_name_to_idx_map"]], "link_names (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_names"]], "link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_names"]], "link_pose (curobo.cuda_robot_model.types.cudarobotmodelstate property)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_pose"]], "link_sphere_idx_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_sphere_idx_map"]], "link_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.link_spheres"]], "link_spheres_tensor (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.link_spheres_tensor"]], "links_position (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_position"]], "links_quaternion (curobo.cuda_robot_model.types.cudarobotmodelstate attribute)": [[5, "curobo.cuda_robot_model.types.CudaRobotModelState.links_quaternion"]], "load_cspace_cfg_from_kinematics() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.load_cspace_cfg_from_kinematics"]], "load_from_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig static method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.load_from_joint_limits"]], "lock_jointstate (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.lock_jointstate"]], "max_acceleration (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_acceleration"]], "max_jerk (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.max_jerk"]], "mesh_link_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.mesh_link_names"]], "n_dof (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.n_dof"]], "non_fixed_joint_names (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.non_fixed_joint_names"]], "null_space_weight (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.null_space_weight"]], "offset (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.offset"]], "position (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.position"]], "position_limit_clip (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.position_limit_clip"]], "reference_link_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.reference_link_spheres"]], "retract_config (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.retract_config"]], "scale_joint_limits() (curobo.cuda_robot_model.types.cspaceconfig method)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.scale_joint_limits"]], "store_link_map (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.store_link_map"]], "tensor_args (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.tensor_args"]], "tensor_args (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.tensor_args"]], "thread_location (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_location"]], "thread_max (curobo.cuda_robot_model.types.selfcollisionkinematicsconfig attribute)": [[5, "curobo.cuda_robot_model.types.SelfCollisionKinematicsConfig.thread_max"]], "total_spheres (curobo.cuda_robot_model.types.kinematicstensorconfig attribute)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.total_spheres"]], "update_link_spheres() (curobo.cuda_robot_model.types.kinematicstensorconfig method)": [[5, "curobo.cuda_robot_model.types.KinematicsTensorConfig.update_link_spheres"]], "velocity (curobo.cuda_robot_model.types.jointlimits attribute)": [[5, "curobo.cuda_robot_model.types.JointLimits.velocity"]], "velocity_scale (curobo.cuda_robot_model.types.cspaceconfig attribute)": [[5, "curobo.cuda_robot_model.types.CSpaceConfig.velocity_scale"]], "urdfkinematicsparser (class in curobo.cuda_robot_model.urdf_kinematics_parser)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser"]], "_find_parent_joint_of_link() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._find_parent_joint_of_link"]], "_get_joint_name() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser._get_joint_name"]], "add_absolute_path_to_link_meshes() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.add_absolute_path_to_link_meshes"]], "build_link_parent() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.urdf_kinematics_parser": [[6, "module-curobo.cuda_robot_model.urdf_kinematics_parser"]], "get_link_mesh() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_mesh"]], "get_link_parameters() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_link_parameters"]], "get_urdf_string() (curobo.cuda_robot_model.urdf_kinematics_parser.urdfkinematicsparser method)": [[6, "curobo.cuda_robot_model.urdf_kinematics_parser.UrdfKinematicsParser.get_urdf_string"]], "usdkinematicsparser (class in curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser"]], "_get_joint_transform() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser._get_joint_transform"]], "build_link_parent() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.build_link_parent"]], "curobo.cuda_robot_model.usd_kinematics_parser": [[7, "module-curobo.cuda_robot_model.usd_kinematics_parser"]], "get_link_parameters() (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser method)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.get_link_parameters"]], "get_links_for_joint() (in module curobo.cuda_robot_model.usd_kinematics_parser)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.get_links_for_joint"]], "robot_prim_root (curobo.cuda_robot_model.usd_kinematics_parser.usdkinematicsparser property)": [[7, "curobo.cuda_robot_model.usd_kinematics_parser.UsdKinematicsParser.robot_prim_root"]], "curobo.curobolib": [[8, "module-curobo.curobolib"]], "poseerror (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseError"]], "poseerrordistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.PoseErrorDistance"]], "sdfsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSphereOBB"]], "sdfsweptsphereobb (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB"]], "selfcollisiondistance (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistance"]], "selfcollisiondistanceloss (class in curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss"]], "_backward_cls (curobo.curobolib.geom.poseerror attribute)": [[9, "curobo.curobolib.geom.PoseError._backward_cls"]], "_backward_cls (curobo.curobolib.geom.poseerrordistance attribute)": [[9, "curobo.curobolib.geom.PoseErrorDistance._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSphereOBB._backward_cls"]], "_backward_cls (curobo.curobolib.geom.sdfsweptsphereobb attribute)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB._backward_cls"]], "_backward_cls (curobo.curobolib.geom.selfcollisiondistance attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistance._backward_cls"]], "_backward_cls (curobo.curobolib.geom.selfcollisiondistanceloss attribute)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss._backward_cls"]], "backward() (curobo.curobolib.geom.poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.backward"]], "backward() (curobo.curobolib.geom.poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.backward"]], "backward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.backward"]], "backward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.backward"]], "backward() (curobo.curobolib.geom.selfcollisiondistanceloss static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistanceLoss.backward"]], "curobo.curobolib.geom": [[9, "module-curobo.curobolib.geom"]], "forward() (curobo.curobolib.geom.poseerror static method)": [[9, "curobo.curobolib.geom.PoseError.forward"]], "forward() (curobo.curobolib.geom.poseerrordistance static method)": [[9, "curobo.curobolib.geom.PoseErrorDistance.forward"]], "forward() (curobo.curobolib.geom.sdfsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSphereOBB.forward"]], "forward() (curobo.curobolib.geom.sdfsweptsphereobb static method)": [[9, "curobo.curobolib.geom.SdfSweptSphereOBB.forward"]], "forward() (curobo.curobolib.geom.selfcollisiondistance static method)": [[9, "curobo.curobolib.geom.SelfCollisionDistance.forward"]], "get_pose_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance"]], "get_pose_distance_backward() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_pose_distance_backward"]], "get_self_collision_distance() (in module curobo.curobolib.geom)": [[9, "curobo.curobolib.geom.get_self_collision_distance"]], "closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.closest_point"]], "curobo.curobolib.geom_cu": [[10, "module-curobo.curobolib.geom_cu"]], "pose_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance"]], "pose_distance_backward() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.pose_distance_backward"]], "self_collision_distance() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.self_collision_distance"]], "swept_closest_point() (in module curobo.curobolib.geom_cu)": [[10, "curobo.curobolib.geom_cu.swept_closest_point"]], "kinematicsfusedfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction"]], "kinematicsfusedglobalcumulfunction (class in curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction"]], "_backward_cls (curobo.curobolib.kinematics.kinematicsfusedfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._backward_cls"]], "_backward_cls (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction attribute)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._backward_cls"]], "_call_backward_cuda() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._call_backward_cuda"]], "_call_backward_cuda() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._call_backward_cuda"]], "_call_cuda() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction._call_cuda"]], "_call_cuda() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction._call_cuda"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.backward"]], "backward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.backward"]], "curobo.curobolib.kinematics": [[11, "module-curobo.curobolib.kinematics"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedFunction.forward"]], "forward() (curobo.curobolib.kinematics.kinematicsfusedglobalcumulfunction static method)": [[11, "curobo.curobolib.kinematics.KinematicsFusedGlobalCumulFunction.forward"]], "get_cuda_kinematics() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.get_cuda_kinematics"]], "rotation_matrix_to_quaternion() (in module curobo.curobolib.kinematics)": [[11, "curobo.curobolib.kinematics.rotation_matrix_to_quaternion"]], "backward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.backward"]], "curobo.curobolib.kinematics_fused_cu": [[12, "module-curobo.curobolib.kinematics_fused_cu"]], "forward() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.forward"]], "matrix_to_quaternion() (in module curobo.curobolib.kinematics_fused_cu)": [[12, "curobo.curobolib.kinematics_fused_cu.matrix_to_quaternion"]], "curobo.curobolib.lbfgs_step_cu": [[13, "module-curobo.curobolib.lbfgs_step_cu"]], "debug_reduce() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.debug_reduce"]], "forward() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.forward"]], "step() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.step"]], "update() (in module curobo.curobolib.lbfgs_step_cu)": [[13, "curobo.curobolib.lbfgs_step_cu.update"]], "curobo.curobolib.line_search_cu": [[14, "module-curobo.curobolib.line_search_cu"]], "line_search() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.line_search"]], "update_best() (in module curobo.curobolib.line_search_cu)": [[14, "curobo.curobolib.line_search_cu.update_best"]], "curobo.curobolib.ls": [[15, "module-curobo.curobolib.ls"]], "update_best() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.update_best"]], "wolfe_line_search() (in module curobo.curobolib.ls)": [[15, "curobo.curobolib.ls.wolfe_line_search"]], "lbfgscu (class in curobo.curobolib.opt)": [[16, "curobo.curobolib.opt.LBFGScu"]], "_backward_cls (curobo.curobolib.opt.lbfgscu attribute)": [[16, "curobo.curobolib.opt.LBFGScu._backward_cls"]], "_call_cuda() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu._call_cuda"]], "backward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.backward"]], "curobo.curobolib.opt": [[16, "module-curobo.curobolib.opt"]], "forward() (curobo.curobolib.opt.lbfgscu static method)": [[16, "curobo.curobolib.opt.LBFGScu.forward"]], "curobo.curobolib.tensor_step": [[17, "module-curobo.curobolib.tensor_step"]], "tensor_step_acc_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_fwd"]], "tensor_step_acc_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_acc_idx_fwd"]], "tensor_step_pos_clique_bwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_bwd"]], "tensor_step_pos_clique_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_fwd"]], "tensor_step_pos_clique_idx_fwd() (in module curobo.curobolib.tensor_step)": [[17, "curobo.curobolib.tensor_step.tensor_step_pos_clique_idx_fwd"]], "curobo.curobolib.tensor_step_cu": [[18, "module-curobo.curobolib.tensor_step_cu"]], "step_acceleration() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration"]], "step_acceleration_idx() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_acceleration_idx"]], "step_idx_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_idx_position2"]], "step_position() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position"]], "step_position2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position2"]], "step_position_backward() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward"]], "step_position_backward2() (in module curobo.curobolib.tensor_step_cu)": [[18, "curobo.curobolib.tensor_step_cu.step_position_backward2"]], "add_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.add_cpp_path"]], "curobo.curobolib.util_file": [[19, "module-curobo.curobolib.util_file"]], "get_cpp_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.get_cpp_path"]], "join_path() (in module curobo.curobolib.util_file)": [[19, "curobo.curobolib.util_file.join_path"]], "curobo.geom": [[20, "module-curobo.geom"]], "curobo.geom.cv": [[21, "module-curobo.geom.cv"]], "curobo.geom.sdf": [[22, "module-curobo.geom.sdf"]], "sdfgrid (class in curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid"]], "_backward_cls (curobo.geom.sdf.sdf_grid.sdfgrid attribute)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid._backward_cls"]], "backward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.backward"]], "compute_sdf_gradient() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.compute_sdf_gradient"]], "curobo.geom.sdf.sdf_grid": [[23, "module-curobo.geom.sdf.sdf_grid"]], "forward() (curobo.geom.sdf.sdf_grid.sdfgrid static method)": [[23, "curobo.geom.sdf.sdf_grid.SDFGrid.forward"]], "lookup_distance() (in module curobo.geom.sdf.sdf_grid)": [[23, "curobo.geom.sdf.sdf_grid.lookup_distance"]], "create_collision_checker() (in module curobo.geom.sdf.utils)": [[24, "curobo.geom.sdf.utils.create_collision_checker"]], "curobo.geom.sdf.utils": [[24, "module-curobo.geom.sdf.utils"]], "sdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy"]], "sweptsdfmeshwarppy (class in curobo.geom.sdf.warp_primitives)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy"]], "_backward_cls (curobo.geom.sdf.warp_primitives.sdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy._backward_cls"]], "_backward_cls (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy attribute)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy._backward_cls"]], "backward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.backward"]], "backward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.backward"]], "curobo.geom.sdf.warp_primitives": [[25, "module-curobo.geom.sdf.warp_primitives"]], "forward() (curobo.geom.sdf.warp_primitives.sdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SdfMeshWarpPy.forward"]], "forward() (curobo.geom.sdf.warp_primitives.sweptsdfmeshwarppy static method)": [[25, "curobo.geom.sdf.warp_primitives.SweptSdfMeshWarpPy.forward"]], "blox (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.BLOX"]], "collisionbuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionBuffer"]], "collisioncheckertype (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionCheckerType"]], "collisionquerybuffer (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer"]], "mesh (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.MESH"]], "primitive (curobo.geom.sdf.world.collisioncheckertype attribute)": [[26, "curobo.geom.sdf.world.CollisionCheckerType.PRIMITIVE"]], "worldcollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollision"]], "worldcollisionconfig (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig"]], "worldprimitivecollision (class in curobo.geom.sdf.world)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision"]], "_create_obb_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._create_obb_cache"]], "_get_obstacle_poses() (curobo.geom.sdf.world.worldprimitivecollision class method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._get_obstacle_poses"]], "_init_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._init_cache"]], "_load_collision_model_in_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision._load_collision_model_in_cache"]], "_update_from_shape() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer._update_from_shape"]], "add_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb"]], "add_obb_from_raw() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.add_obb_from_raw"]], "blox_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.blox_collision_buffer"]], "cache (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.cache"]], "checker_type (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.checker_type"]], "clear_cache() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.clear_cache"]], "clone() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.clone"]], "clone() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.clone"]], "create_from_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.create_from_shape"]], "curobo.geom.sdf.world": [[26, "module-curobo.geom.sdf.world"]], "distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.distance_buffer"]], "enable_obb() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obb"]], "enable_obstacle() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.enable_obstacle"]], "get_gradient_buffer() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.get_gradient_buffer"]], "get_mesh_in_bounding_box() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_mesh_in_bounding_box"]], "get_obb_idx() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_obb_idx"]], "get_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_collision"]], "get_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_distance"]], "get_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_sphere_distance"]], "get_sphere_trace() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_sphere_trace"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_collision"]], "get_swept_sphere_collision() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.get_swept_sphere_distance"]], "get_swept_sphere_distance() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_swept_sphere_distance"]], "get_voxels_in_bounding_box() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.get_voxels_in_bounding_box"]], "grad_distance_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.grad_distance_buffer"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionbuffer class method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.initialize_from_shape"]], "initialize_from_shape() (curobo.geom.sdf.world.collisionquerybuffer class method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.initialize_from_shape"]], "load_batch_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldcollision method)": [[26, "curobo.geom.sdf.world.WorldCollision.load_collision_model"]], "load_collision_model() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.load_collision_model"]], "load_from_dict() (curobo.geom.sdf.world.worldcollisionconfig static method)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.load_from_dict"]], "max_distance (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.max_distance"]], "mesh_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.mesh_collision_buffer"]], "n_envs (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.n_envs"]], "primitive_collision_buffer (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.primitive_collision_buffer"]], "shape (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.shape"]], "shape (curobo.geom.sdf.world.collisionquerybuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.shape"]], "sparsity_index_buffer (curobo.geom.sdf.world.collisionbuffer attribute)": [[26, "curobo.geom.sdf.world.CollisionBuffer.sparsity_index_buffer"]], "tensor_args (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.tensor_args"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionbuffer method)": [[26, "curobo.geom.sdf.world.CollisionBuffer.update_buffer_shape"]], "update_buffer_shape() (curobo.geom.sdf.world.collisionquerybuffer method)": [[26, "curobo.geom.sdf.world.CollisionQueryBuffer.update_buffer_shape"]], "update_obb_dims() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_dims"]], "update_obb_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obb_pose"]], "update_obstacle_pose() (curobo.geom.sdf.world.worldprimitivecollision method)": [[26, "curobo.geom.sdf.world.WorldPrimitiveCollision.update_obstacle_pose"]], "world_model (curobo.geom.sdf.world.worldcollisionconfig attribute)": [[26, "curobo.geom.sdf.world.WorldCollisionConfig.world_model"]], "worldbloxcollision (class in curobo.geom.sdf.world_blox)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision"]], "_get_blox_sdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_sdf"]], "_get_blox_swept_sdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision._get_blox_swept_sdf"]], "add_camera_frame() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.add_camera_frame"]], "clear_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_blox_layer"]], "clear_bounding_box() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_bounding_box"]], "clear_cache() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.clear_cache"]], "curobo.geom.sdf.world_blox": [[27, "module-curobo.geom.sdf.world_blox"]], "decay_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.decay_layer"]], "enable_blox() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_blox"]], "enable_obstacle() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.enable_obstacle"]], "get_bounding_spheres() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_bounding_spheres"]], "get_mesh_from_blox_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_mesh_from_blox_layer"]], "get_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.get_swept_sphere_distance"]], "load_collision_model() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.load_collision_model"]], "process_camera_frames() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.process_camera_frames"]], "save_layer() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.save_layer"]], "update_blox_esdf() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_esdf"]], "update_blox_hashes() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_hashes"]], "update_blox_mesh() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_mesh"]], "update_blox_pose() (curobo.geom.sdf.world_blox.worldbloxcollision method)": [[27, "curobo.geom.sdf.world_blox.WorldBloxCollision.update_blox_pose"]], "warpmeshdata (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData"]], "worldmeshcollision (class in curobo.geom.sdf.world_mesh)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision"]], "_create_mesh_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._create_mesh_cache"]], "_get_sdf() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_sdf"]], "_get_swept_sdf() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._get_swept_sdf"]], "_init_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._init_cache"]], "_load_batch_mesh_to_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_batch_mesh_to_warp"]], "_load_mesh_into_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_into_cache"]], "_load_mesh_to_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision._load_mesh_to_warp"]], "add_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.add_mesh"]], "clear_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.clear_cache"]], "create_collision_cache() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.create_collision_cache"]], "curobo.geom.sdf.world_mesh": [[28, "module-curobo.geom.sdf.world_mesh"]], "enable_mesh() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_mesh"]], "enable_obstacle() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.enable_obstacle"]], "faces (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.faces"]], "get_mesh_idx() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_mesh_idx"]], "get_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_collision"]], "get_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_sphere_distance"]], "get_swept_sphere_collision() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_collision"]], "get_swept_sphere_distance() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.get_swept_sphere_distance"]], "load_batch_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_batch_collision_model"]], "load_collision_model() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.load_collision_model"]], "m_id (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.m_id"]], "mesh (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.mesh"]], "name (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.name"]], "update_all_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_all_mesh_pose"]], "update_mesh_from_warp() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_from_warp"]], "update_mesh_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose"]], "update_mesh_pose_env() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_mesh_pose_env"]], "update_obstacle_pose() (curobo.geom.sdf.world_mesh.worldmeshcollision method)": [[28, "curobo.geom.sdf.world_mesh.WorldMeshCollision.update_obstacle_pose"]], "vertices (curobo.geom.sdf.world_mesh.warpmeshdata attribute)": [[28, "curobo.geom.sdf.world_mesh.WarpMeshData.vertices"]], "sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[29, "curobo.geom.sphere_fit.SphereFitType.SAMPLE_SURFACE"]], "spherefittype (class in curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.SphereFitType"]], "voxel_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[29, "curobo.geom.sphere_fit.SphereFitType.VOXEL_SURFACE"]], "voxel_volume (curobo.geom.sphere_fit.spherefittype attribute)": [[29, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME"]], "voxel_volume_inside (curobo.geom.sphere_fit.spherefittype attribute)": [[29, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_INSIDE"]], "voxel_volume_sample_surface (curobo.geom.sphere_fit.spherefittype attribute)": [[29, "curobo.geom.sphere_fit.SphereFitType.VOXEL_VOLUME_SAMPLE_SURFACE"]], "curobo.geom.sphere_fit": [[29, "module-curobo.geom.sphere_fit"]], "fit_spheres_to_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.fit_spheres_to_mesh"]], "get_voxel_pitch() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.get_voxel_pitch"]], "get_voxelgrid_from_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.get_voxelgrid_from_mesh"]], "sample_even_fit_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.sample_even_fit_mesh"]], "voxel_fit_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.voxel_fit_mesh"]], "voxel_fit_surface_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.voxel_fit_surface_mesh"]], "voxel_fit_volume_inside_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.voxel_fit_volume_inside_mesh"]], "voxel_fit_volume_sample_surface_mesh() (in module curobo.geom.sphere_fit)": [[29, "curobo.geom.sphere_fit.voxel_fit_volume_sample_surface_mesh"]], "batchtransformpoint (class in curobo.geom.transform)": [[30, "curobo.geom.transform.BatchTransformPoint"]], "batchtransformpose (class in curobo.geom.transform)": [[30, "curobo.geom.transform.BatchTransformPose"]], "matrixtoquaternion (class in curobo.geom.transform)": [[30, "curobo.geom.transform.MatrixToQuaternion"]], "poseinverse (class in curobo.geom.transform)": [[30, "curobo.geom.transform.PoseInverse"]], "quattomatrix (class in curobo.geom.transform)": [[30, "curobo.geom.transform.QuatToMatrix"]], "transformpoint (class in curobo.geom.transform)": [[30, "curobo.geom.transform.TransformPoint"]], "transformpose (class in curobo.geom.transform)": [[30, "curobo.geom.transform.TransformPose"]], "_backward_cls (curobo.geom.transform.batchtransformpoint attribute)": [[30, "curobo.geom.transform.BatchTransformPoint._backward_cls"]], "_backward_cls (curobo.geom.transform.batchtransformpose attribute)": [[30, "curobo.geom.transform.BatchTransformPose._backward_cls"]], "_backward_cls (curobo.geom.transform.matrixtoquaternion attribute)": [[30, "curobo.geom.transform.MatrixToQuaternion._backward_cls"]], "_backward_cls (curobo.geom.transform.poseinverse attribute)": [[30, "curobo.geom.transform.PoseInverse._backward_cls"]], "_backward_cls (curobo.geom.transform.quattomatrix attribute)": [[30, "curobo.geom.transform.QuatToMatrix._backward_cls"]], "_backward_cls (curobo.geom.transform.transformpoint attribute)": [[30, "curobo.geom.transform.TransformPoint._backward_cls"]], "_backward_cls (curobo.geom.transform.transformpose attribute)": [[30, "curobo.geom.transform.TransformPose._backward_cls"]], "backward() (curobo.geom.transform.batchtransformpoint static method)": [[30, "curobo.geom.transform.BatchTransformPoint.backward"]], "backward() (curobo.geom.transform.batchtransformpose static method)": [[30, "curobo.geom.transform.BatchTransformPose.backward"]], "backward() (curobo.geom.transform.matrixtoquaternion static method)": [[30, "curobo.geom.transform.MatrixToQuaternion.backward"]], "backward() (curobo.geom.transform.poseinverse static method)": [[30, "curobo.geom.transform.PoseInverse.backward"]], "backward() (curobo.geom.transform.quattomatrix static method)": [[30, "curobo.geom.transform.QuatToMatrix.backward"]], "backward() (curobo.geom.transform.transformpoint static method)": [[30, "curobo.geom.transform.TransformPoint.backward"]], "backward() (curobo.geom.transform.transformpose static method)": [[30, "curobo.geom.transform.TransformPose.backward"]], "batch_transform_points() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.batch_transform_points"]], "cuda_matrix_to_quaternion() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.cuda_matrix_to_quaternion"]], "curobo.geom.transform": [[30, "module-curobo.geom.transform"]], "forward() (curobo.geom.transform.batchtransformpoint static method)": [[30, "curobo.geom.transform.BatchTransformPoint.forward"]], "forward() (curobo.geom.transform.batchtransformpose static method)": [[30, "curobo.geom.transform.BatchTransformPose.forward"]], "forward() (curobo.geom.transform.matrixtoquaternion static method)": [[30, "curobo.geom.transform.MatrixToQuaternion.forward"]], "forward() (curobo.geom.transform.poseinverse static method)": [[30, "curobo.geom.transform.PoseInverse.forward"]], "forward() (curobo.geom.transform.quattomatrix static method)": [[30, "curobo.geom.transform.QuatToMatrix.forward"]], "forward() (curobo.geom.transform.transformpoint static method)": [[30, "curobo.geom.transform.TransformPoint.forward"]], "forward() (curobo.geom.transform.transformpose static method)": [[30, "curobo.geom.transform.TransformPose.forward"]], "matrix_to_quaternion() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.matrix_to_quaternion"]], "pose_inverse() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.pose_inverse"]], "pose_multiply() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.pose_multiply"]], "pose_to_matrix() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.pose_to_matrix"]], "quaternion_to_matrix() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.quaternion_to_matrix"]], "torch_quaternion_to_matrix() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.torch_quaternion_to_matrix"]], "transform_points() (in module curobo.geom.transform)": [[30, "curobo.geom.transform.transform_points"]], "bloxmap (class in curobo.geom.types)": [[31, "curobo.geom.types.BloxMap"]], "capsule (class in curobo.geom.types)": [[31, "curobo.geom.types.Capsule"]], "cuboid (class in curobo.geom.types)": [[31, "curobo.geom.types.Cuboid"]], "cylinder (class in curobo.geom.types)": [[31, "curobo.geom.types.Cylinder"]], "material (class in curobo.geom.types)": [[31, "curobo.geom.types.Material"]], "mesh (class in curobo.geom.types)": [[31, "curobo.geom.types.Mesh"]], "obstacle (class in curobo.geom.types)": [[31, "curobo.geom.types.Obstacle"]], "pointcloud (class in curobo.geom.types)": [[31, "curobo.geom.types.PointCloud"]], "sphere (class in curobo.geom.types)": [[31, "curobo.geom.types.Sphere"]], "worldconfig (class in curobo.geom.types)": [[31, "curobo.geom.types.WorldConfig"]], "_abc_impl (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig._abc_impl"]], "add_color() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.add_color"]], "add_material() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.add_material"]], "add_obstacle() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.add_obstacle"]], "base (curobo.geom.types.capsule attribute)": [[31, "curobo.geom.types.Capsule.base"]], "batch_tensor_cube() (in module curobo.geom.types)": [[31, "curobo.geom.types.batch_tensor_cube"]], "blox (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.blox"]], "capsule (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.capsule"]], "clone() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.clone"]], "color (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.color"]], "create_collision_support_world() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.create_collision_support_world"]], "create_merged_mesh_world() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.create_merged_mesh_world"]], "create_mesh_world() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.create_mesh_world"]], "create_obb_world() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.create_obb_world"]], "cuboid (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.cuboid"]], "curobo.geom.types": [[31, "module-curobo.geom.types"]], "cylinder (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.cylinder"]], "dims (curobo.geom.types.cuboid attribute)": [[31, "curobo.geom.types.Cuboid.dims"]], "face_colors (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.face_colors"]], "faces (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.faces"]], "file_path (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.file_path"]], "file_string (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.file_string"]], "from_camera_observation() (curobo.geom.types.pointcloud static method)": [[31, "curobo.geom.types.PointCloud.from_camera_observation"]], "from_dict() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.from_dict"]], "from_pointcloud() (curobo.geom.types.mesh static method)": [[31, "curobo.geom.types.Mesh.from_pointcloud"]], "get_bounding_spheres() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_bounding_spheres"]], "get_bounding_spheres() (curobo.geom.types.pointcloud method)": [[31, "curobo.geom.types.PointCloud.get_bounding_spheres"]], "get_cache_dict() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.get_cache_dict"]], "get_collision_check_world() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.get_collision_check_world"]], "get_cuboid() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_cuboid"]], "get_cuboid() (curobo.geom.types.sphere method)": [[31, "curobo.geom.types.Sphere.get_cuboid"]], "get_mesh() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_mesh"]], "get_mesh_data() (curobo.geom.types.mesh method)": [[31, "curobo.geom.types.Mesh.get_mesh_data"]], "get_mesh_data() (curobo.geom.types.pointcloud method)": [[31, "curobo.geom.types.PointCloud.get_mesh_data"]], "get_mesh_world() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.get_mesh_world"]], "get_obb_world() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.get_obb_world"]], "get_obstacle() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.get_obstacle"]], "get_scene_graph() (curobo.geom.types.worldconfig static method)": [[31, "curobo.geom.types.WorldConfig.get_scene_graph"]], "get_sphere() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_sphere"]], "get_transform_matrix() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_transform_matrix"]], "get_trimesh_mesh() (curobo.geom.types.bloxmap method)": [[31, "curobo.geom.types.BloxMap.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.capsule method)": [[31, "curobo.geom.types.Capsule.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cuboid method)": [[31, "curobo.geom.types.Cuboid.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.cylinder method)": [[31, "curobo.geom.types.Cylinder.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.mesh method)": [[31, "curobo.geom.types.Mesh.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.pointcloud method)": [[31, "curobo.geom.types.PointCloud.get_trimesh_mesh"]], "get_trimesh_mesh() (curobo.geom.types.sphere method)": [[31, "curobo.geom.types.Sphere.get_trimesh_mesh"]], "height (curobo.geom.types.cylinder attribute)": [[31, "curobo.geom.types.Cylinder.height"]], "integrator_type (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.integrator_type"]], "map_path (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.map_path"]], "mapper_instance (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.mapper_instance"]], "material (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.material"]], "mesh (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.mesh"]], "mesh (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.mesh"]], "mesh_file_path (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.mesh_file_path"]], "metallic (curobo.geom.types.material attribute)": [[31, "curobo.geom.types.Material.metallic"]], "name (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.name"]], "objects (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.objects"]], "points (curobo.geom.types.pointcloud attribute)": [[31, "curobo.geom.types.PointCloud.points"]], "points_features (curobo.geom.types.pointcloud attribute)": [[31, "curobo.geom.types.PointCloud.points_features"]], "pose (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.pose"]], "position (curobo.geom.types.sphere attribute)": [[31, "curobo.geom.types.Sphere.position"]], "radius (curobo.geom.types.capsule attribute)": [[31, "curobo.geom.types.Capsule.radius"]], "radius (curobo.geom.types.cylinder attribute)": [[31, "curobo.geom.types.Cylinder.radius"]], "radius (curobo.geom.types.sphere attribute)": [[31, "curobo.geom.types.Sphere.radius"]], "randomize_color() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.randomize_color"]], "remove_absolute_paths() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.remove_absolute_paths"]], "remove_obstacle() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.remove_obstacle"]], "roughness (curobo.geom.types.material attribute)": [[31, "curobo.geom.types.Material.roughness"]], "save_as_mesh() (curobo.geom.types.obstacle method)": [[31, "curobo.geom.types.Obstacle.save_as_mesh"]], "save_world_as_mesh() (curobo.geom.types.worldconfig method)": [[31, "curobo.geom.types.WorldConfig.save_world_as_mesh"]], "scale (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.scale"]], "sphere (curobo.geom.types.worldconfig attribute)": [[31, "curobo.geom.types.WorldConfig.sphere"]], "tensor_args (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.tensor_args"]], "tensor_capsule() (in module curobo.geom.types)": [[31, "curobo.geom.types.tensor_capsule"]], "tensor_cube() (in module curobo.geom.types)": [[31, "curobo.geom.types.tensor_cube"]], "tensor_sphere() (in module curobo.geom.types)": [[31, "curobo.geom.types.tensor_sphere"]], "texture (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.texture"]], "texture_id (curobo.geom.types.obstacle attribute)": [[31, "curobo.geom.types.Obstacle.texture_id"]], "tip (curobo.geom.types.capsule attribute)": [[31, "curobo.geom.types.Capsule.tip"]], "update_material() (curobo.geom.types.mesh method)": [[31, "curobo.geom.types.Mesh.update_material"]], "urdf_path (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.urdf_path"]], "vertex_colors (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.vertex_colors"]], "vertex_normals (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.vertex_normals"]], "vertices (curobo.geom.types.mesh attribute)": [[31, "curobo.geom.types.Mesh.vertices"]], "voxel_size (curobo.geom.types.bloxmap attribute)": [[31, "curobo.geom.types.BloxMap.voxel_size"]], "curobo.graph": [[32, "module-curobo.graph"]], "graph (class in curobo.graph.graph_base)": [[33, "curobo.graph.graph_base.Graph"]], "graphconfig (class in curobo.graph.graph_base)": [[33, "curobo.graph.graph_base.GraphConfig"]], "graphplanbase (class in curobo.graph.graph_base)": [[33, "curobo.graph.graph_base.GraphPlanBase"]], "graphresult (class in curobo.graph.graph_base)": [[33, "curobo.graph.graph_base.GraphResult"]], "_add_batch_edges_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._add_batch_edges_to_graph"]], "_add_unique_nodes_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._add_unique_nodes_to_graph"]], "_batch_k_nearest() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._batch_k_nearest"]], "_batch_steer() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._batch_steer"]], "_batch_steer_and_connect() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._batch_steer_and_connect"]], "_compute_rotation_frame() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._compute_rotation_frame"]], "_cuda_graph_rollout_constraint() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._cuda_graph_rollout_constraint"]], "_distance() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._distance"]], "_find_paths() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._find_paths"]], "_get_graph_shortest_path() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._get_graph_shortest_path"]], "_hybrid_nearest() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._hybrid_nearest"]], "_k_nearest() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._k_nearest"]], "_mask_samples() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._mask_samples"]], "_mask_samples_cuda_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._mask_samples_cuda_graph"]], "_near() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._near"]], "_nearest() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._nearest"]], "_sample_pts() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._sample_pts"]], "_validate_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase._validate_graph"]], "add_nodes_to_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.add_nodes_to_graph"]], "batch_get_graph_shortest_path() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.batch_get_graph_shortest_path"]], "batch_path_exists() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.batch_path_exists"]], "batch_shortcut_path() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.batch_shortcut_path"]], "bias_node (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.bias_node"]], "bounds (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.bounds"]], "c_max (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.c_max"]], "check_feasibility() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.check_feasibility"]], "compute_metrics (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.compute_metrics"]], "compute_path_length() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.compute_path_length"]], "connect_nodes() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.connect_nodes"]], "connectivity (curobo.graph.graph_base.graph attribute)": [[33, "curobo.graph.graph_base.Graph.connectivity"]], "curobo.graph.graph_base": [[33, "module-curobo.graph.graph_base"]], "debug_info (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.debug_info"]], "distance() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.distance"]], "distance_weight (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.distance_weight"]], "dof (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.dof"]], "edges (curobo.graph.graph_base.graph attribute)": [[33, "curobo.graph.graph_base.Graph.edges"]], "find_paths() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.find_paths"]], "from_dict() (curobo.graph.graph_base.graphconfig static method)": [[33, "curobo.graph.graph_base.GraphConfig.from_dict"]], "get_all_rollout_instances() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_all_rollout_instances"]], "get_biased_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_biased_vertex_set"]], "get_feasible_sample_set() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_feasible_sample_set"]], "get_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_graph"]], "get_graph_edges() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_graph_edges"]], "get_graph_shortest_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_graph_shortest_path_lengths"]], "get_interpolated_trajectory() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_interpolated_trajectory"]], "get_metrics() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_metrics"]], "get_new_vertex_set() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_new_vertex_set"]], "get_node_distance() (curobo.graph.graph_base.graph method)": [[33, "curobo.graph.graph_base.Graph.get_node_distance"]], "get_node_idx() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_node_idx"]], "get_path_lengths() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_path_lengths"]], "get_paths() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_paths"]], "get_samples() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.get_samples"]], "goal_q (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.goal_q"]], "graph_max_attempts (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.graph_max_attempts"]], "graph_min_attempts (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.graph_min_attempts"]], "init_nodes (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.init_nodes"]], "interpolated_plan (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.interpolated_plan"]], "interpolation_acceleration_scale (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.interpolation_acceleration_scale"]], "interpolation_deviation (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.interpolation_deviation"]], "interpolation_dt (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.interpolation_dt"]], "interpolation_steps (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.interpolation_steps"]], "interpolation_type (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.interpolation_type"]], "k_nn (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.k_nn"]], "load_from_robot_config() (curobo.graph.graph_base.graphconfig static method)": [[33, "curobo.graph.graph_base.GraphConfig.load_from_robot_config"]], "mask_samples() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.mask_samples"]], "max_buffer (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.max_buffer"]], "max_cg_buffer (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.max_cg_buffer"]], "max_nodes (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.max_nodes"]], "metrics (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.metrics"]], "node_similarity_distance (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.node_similarity_distance"]], "nodes (curobo.graph.graph_base.graph attribute)": [[33, "curobo.graph.graph_base.Graph.nodes"]], "optimized_dt (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.optimized_dt"]], "path_buffer_last_tstep (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.path_buffer_last_tstep"]], "path_exists() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.path_exists"]], "path_length (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.path_length"]], "plan (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.plan"]], "rejection_ratio (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.rejection_ratio"]], "reset_buffer() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.reset_buffer"]], "reset_cuda_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.reset_cuda_graph"]], "reset_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.reset_graph"]], "reset_seed() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.reset_seed"]], "rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.rollout_fn"]], "safety_rollout_fn (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.safety_rollout_fn"]], "sample_pts (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.sample_pts"]], "seed (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.seed"]], "set_shortest_path_lengths() (curobo.graph.graph_base.graph method)": [[33, "curobo.graph.graph_base.Graph.set_shortest_path_lengths"]], "shortest_path_lengths (curobo.graph.graph_base.graph attribute)": [[33, "curobo.graph.graph_base.Graph.shortest_path_lengths"]], "solve_time (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.solve_time"]], "start_q (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.start_q"]], "steer_delta_buffer (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.steer_delta_buffer"]], "success (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.success"]], "tensor_args (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.tensor_args"]], "use_bias_node (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.use_bias_node"]], "use_cuda_graph_mask_samples (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.use_cuda_graph_mask_samples"]], "valid_query (curobo.graph.graph_base.graphresult attribute)": [[33, "curobo.graph.graph_base.GraphResult.valid_query"]], "validate_graph() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.validate_graph"]], "vertex_n (curobo.graph.graph_base.graphconfig attribute)": [[33, "curobo.graph.graph_base.GraphConfig.vertex_n"]], "warmup() (curobo.graph.graph_base.graphplanbase method)": [[33, "curobo.graph.graph_base.GraphPlanBase.warmup"]], "networkxgraph (class in curobo.graph.graph_nx)": [[34, "curobo.graph.graph_nx.NetworkxGraph"]], "add_edge() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.add_edge"]], "add_edges() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.add_edges"]], "add_node() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.add_node"]], "add_nodes() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.add_nodes"]], "curobo.graph.graph_nx": [[34, "module-curobo.graph.graph_nx"]], "get_edges() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.get_edges"]], "get_path_lengths() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.get_path_lengths"]], "get_shortest_path() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.get_shortest_path"]], "path_exists() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.path_exists"]], "reset_graph() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.reset_graph"]], "update_graph() (curobo.graph.graph_nx.networkxgraph method)": [[34, "curobo.graph.graph_nx.NetworkxGraph.update_graph"]], "prmstar (class in curobo.graph.prm)": [[35, "curobo.graph.prm.PRMStar"]], "_add_bias_graph() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar._add_bias_graph"]], "_find_all_path() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar._find_all_path"]], "_find_one_path() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar._find_one_path"]], "_find_paths() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar._find_paths"]], "build_graph() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar.build_graph"]], "curobo.graph.prm": [[35, "module-curobo.graph.prm"]], "warmup() (curobo.graph.prm.prmstar method)": [[35, "curobo.graph.prm.PRMStar.warmup"]], "curobo.opt": [[36, "module-curobo.opt"]], "curobo.opt.newton": [[37, "module-curobo.opt.newton"]], "lbfgsopt (class in curobo.opt.newton.lbfgs)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt"]], "lbfgsoptconfig (class in curobo.opt.newton.lbfgs)": [[38, "curobo.opt.newton.lbfgs.LBFGSOptConfig"]], "_get_step_direction() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._get_step_direction"]], "_shift() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._shift"]], "_shift_buffer() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._shift_buffer"]], "_update_buffers() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._update_buffers"]], "_update_q() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._update_q"]], "_update_r() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt._update_r"]], "compute_step_direction() (in module curobo.opt.newton.lbfgs)": [[38, "curobo.opt.newton.lbfgs.compute_step_direction"]], "curobo.opt.newton.lbfgs": [[38, "module-curobo.opt.newton.lbfgs"]], "epsilon (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[38, "curobo.opt.newton.lbfgs.LBFGSOptConfig.epsilon"]], "history (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[38, "curobo.opt.newton.lbfgs.LBFGSOptConfig.history"]], "init_hessian() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt.init_hessian"]], "reset() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt.reset"]], "stable_mode (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[38, "curobo.opt.newton.lbfgs.LBFGSOptConfig.stable_mode"]], "update_nproblems() (curobo.opt.newton.lbfgs.lbfgsopt method)": [[38, "curobo.opt.newton.lbfgs.LBFGSOpt.update_nproblems"]], "use_cuda_kernel (curobo.opt.newton.lbfgs.lbfgsoptconfig attribute)": [[38, "curobo.opt.newton.lbfgs.LBFGSOptConfig.use_cuda_kernel"]], "approx_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[39, "curobo.opt.newton.newton_base.LineSearchType.APPROX_WOLFE"]], "armijo (curobo.opt.newton.newton_base.linesearchtype attribute)": [[39, "curobo.opt.newton.newton_base.LineSearchType.ARMIJO"]], "greedy (curobo.opt.newton.newton_base.linesearchtype attribute)": [[39, "curobo.opt.newton.newton_base.LineSearchType.GREEDY"]], "linesearchtype (class in curobo.opt.newton.newton_base)": [[39, "curobo.opt.newton.newton_base.LineSearchType"]], "newtonoptbase (class in curobo.opt.newton.newton_base)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase"]], "newtonoptconfig (class in curobo.opt.newton.newton_base)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig"]], "strong_wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[39, "curobo.opt.newton.newton_base.LineSearchType.STRONG_WOLFE"]], "wolfe (curobo.opt.newton.newton_base.linesearchtype attribute)": [[39, "curobo.opt.newton.newton_base.LineSearchType.WOLFE"]], "_approx_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._approx_line_search"]], "_armijo_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._armijo_line_search"]], "_call_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._call_opt_iters_graph"]], "_compute_cost_gradient() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._compute_cost_gradient"]], "_create_box_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._create_box_line_search"]], "_create_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._create_opt_iters_graph"]], "_get_step_direction() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._get_step_direction"]], "_greedy_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._greedy_line_search"]], "_initialize_opt_iters_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._initialize_opt_iters_graph"]], "_opt_iters() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._opt_iters"]], "_opt_step() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._opt_step"]], "_optimize() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._optimize"]], "_shift() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._shift"]], "_update_best() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._update_best"]], "_wolfe_line_search() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase._wolfe_line_search"]], "check_convergence() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.check_convergence"]], "clip_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.clip_bounds"]], "cost_convergence (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_convergence"]], "cost_delta_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_delta_threshold"]], "cost_relative_threshold (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.cost_relative_threshold"]], "curobo.opt.newton.newton_base": [[39, "module-curobo.opt.newton.newton_base"]], "fixed_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.fixed_iters"]], "inner_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.inner_iters"]], "last_best (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.last_best"]], "line_search_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_scale"]], "line_search_type (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.line_search_type"]], "min_iters (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.min_iters"]], "project_bounds() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.project_bounds"]], "reset() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.reset"]], "reset_cuda_graph() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.reset_cuda_graph"]], "scale_step_direction() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.scale_step_direction"]], "step_scale (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.step_scale"]], "update_nproblems() (curobo.opt.newton.newton_base.newtonoptbase method)": [[39, "curobo.opt.newton.newton_base.NewtonOptBase.update_nproblems"]], "use_cuda_line_search_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_line_search_kernel"]], "use_cuda_update_best_kernel (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.use_cuda_update_best_kernel"]], "use_temporal_smooth (curobo.opt.newton.newton_base.newtonoptconfig attribute)": [[39, "curobo.opt.newton.newton_base.NewtonOptConfig.use_temporal_smooth"]], "optimizer (class in curobo.opt.opt_base)": [[40, "curobo.opt.opt_base.Optimizer"]], "optimizerconfig (class in curobo.opt.opt_base)": [[40, "curobo.opt.opt_base.OptimizerConfig"]], "_optimize() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer._optimize"]], "_shift() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer._shift"]], "_update_problem_kernel() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer._update_problem_kernel"]], "action_highs (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.action_highs"]], "action_horizon (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.action_horizon"]], "action_lows (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.action_lows"]], "cold_start_n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.cold_start_n_iters"]], "create_data_dict() (curobo.opt.opt_base.optimizerconfig static method)": [[40, "curobo.opt.opt_base.OptimizerConfig.create_data_dict"]], "curobo.opt.opt_base": [[40, "module-curobo.opt.opt_base"]], "d_action (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.d_action"]], "debug_info (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.debug_info"]], "get_all_rollout_instances() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.get_all_rollout_instances"]], "get_nproblem_tensor() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.get_nproblem_tensor"]], "horizon (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.horizon"]], "n_iters (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.n_iters"]], "n_problems (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.n_problems"]], "num_particles (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.num_particles"]], "optimize() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.optimize"]], "reset() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.reset"]], "reset_cuda_graph() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.reset_cuda_graph"]], "reset_seed() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.reset_seed"]], "reset_shape() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.reset_shape"]], "rollout_fn (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.rollout_fn"]], "store_debug (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.store_debug"]], "sync_cuda_time (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.sync_cuda_time"]], "tensor_args (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.tensor_args"]], "update_nproblems() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.update_nproblems"]], "update_params() (curobo.opt.opt_base.optimizer method)": [[40, "curobo.opt.opt_base.Optimizer.update_params"]], "use_coo_sparse (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.use_coo_sparse"]], "use_cuda_graph (curobo.opt.opt_base.optimizerconfig attribute)": [[40, "curobo.opt.opt_base.OptimizerConfig.use_cuda_graph"]], "curobo.opt.particle": [[41, "module-curobo.opt.particle"]], "paralleles (class in curobo.opt.particle.parallel_es)": [[42, "curobo.opt.particle.parallel_es.ParallelES"]], "parallelesconfig (class in curobo.opt.particle.parallel_es)": [[42, "curobo.opt.particle.parallel_es.ParallelESConfig"]], "_compute_mean() (curobo.opt.particle.parallel_es.paralleles method)": [[42, "curobo.opt.particle.parallel_es.ParallelES._compute_mean"]], "_exp_util() (curobo.opt.particle.parallel_es.paralleles method)": [[42, "curobo.opt.particle.parallel_es.ParallelES._exp_util"]], "curobo.opt.particle.parallel_es": [[42, "module-curobo.opt.particle.parallel_es"]], "learning_rate (curobo.opt.particle.parallel_es.parallelesconfig attribute)": [[42, "curobo.opt.particle.parallel_es.ParallelESConfig.learning_rate"]], "baseactiontype (class in curobo.opt.particle.parallel_mppi)": [[43, "curobo.opt.particle.parallel_mppi.BaseActionType"]], "covtype (class in curobo.opt.particle.parallel_mppi)": [[43, "curobo.opt.particle.parallel_mppi.CovType"]], "diag_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[43, "curobo.opt.particle.parallel_mppi.CovType.DIAG_A"]], "full_a (curobo.opt.particle.parallel_mppi.covtype attribute)": [[43, "curobo.opt.particle.parallel_mppi.CovType.FULL_A"]], "full_ha (curobo.opt.particle.parallel_mppi.covtype attribute)": [[43, "curobo.opt.particle.parallel_mppi.CovType.FULL_HA"]], "null (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[43, "curobo.opt.particle.parallel_mppi.BaseActionType.NULL"]], "parallelmppi (class in curobo.opt.particle.parallel_mppi)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI"]], "parallelmppiconfig (class in curobo.opt.particle.parallel_mppi)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig"]], "random (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[43, "curobo.opt.particle.parallel_mppi.BaseActionType.RANDOM"]], "repeat (curobo.opt.particle.parallel_mppi.baseactiontype attribute)": [[43, "curobo.opt.particle.parallel_mppi.BaseActionType.REPEAT"]], "sigma_i (curobo.opt.particle.parallel_mppi.covtype attribute)": [[43, "curobo.opt.particle.parallel_mppi.CovType.SIGMA_I"]], "_calc_val() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._calc_val"]], "_compute_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_covariance"]], "_compute_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_mean"]], "_compute_total_cost() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._compute_total_cost"]], "_exp_util() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._exp_util"]], "_get_action_seq() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._get_action_seq"]], "_update_cov_scale() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_cov_scale"]], "_update_distribution() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI._update_distribution"]], "alpha (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.alpha"]], "base_action (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.base_action"]], "beta (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.beta"]], "cov_type (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.cov_type"]], "create_data_dict() (curobo.opt.particle.parallel_mppi.parallelmppiconfig static method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.create_data_dict"]], "curobo.opt.particle.parallel_mppi": [[43, "module-curobo.opt.particle.parallel_mppi"]], "entropy (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.entropy"]], "full_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_cov"]], "full_inv_cov (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_inv_cov"]], "full_scale_tril (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.full_scale_tril"]], "gamma (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.gamma"]], "generate_noise() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_noise"]], "generate_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.generate_rollouts"]], "get_rollouts() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.get_rollouts"]], "init_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_cov"]], "init_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.init_mean"]], "kappa (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.kappa"]], "null_act_frac (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.null_act_frac"]], "random_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.random_mean"]], "reset() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset"]], "reset_covariance() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_covariance"]], "reset_distribution() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_distribution"]], "reset_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_mean"]], "reset_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.reset_seed"]], "sample_actions() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.sample_actions"]], "sample_params (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_params"]], "sample_per_problem (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.sample_per_problem"]], "squash_fn (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.squash_fn"]], "squashed_mean (curobo.opt.particle.parallel_mppi.parallelmppi property)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.squashed_mean"]], "step_size_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_cov"]], "step_size_mean (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.step_size_mean"]], "update_cov (curobo.opt.particle.parallel_mppi.parallelmppiconfig attribute)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPIConfig.update_cov"]], "update_init_mean() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_init_mean"]], "update_samples() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_samples"]], "update_seed() (curobo.opt.particle.parallel_mppi.parallelmppi method)": [[43, "curobo.opt.particle.parallel_mppi.ParallelMPPI.update_seed"]], "best (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[44, "curobo.opt.particle.particle_opt_base.SampleMode.BEST"]], "mean (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[44, "curobo.opt.particle.particle_opt_base.SampleMode.MEAN"]], "particleoptbase (class in curobo.opt.particle.particle_opt_base)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase"]], "particleoptconfig (class in curobo.opt.particle.particle_opt_base)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig"]], "particleoptinfo (class in curobo.opt.particle.particle_opt_base)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptInfo"]], "sample (curobo.opt.particle.particle_opt_base.samplemode attribute)": [[44, "curobo.opt.particle.particle_opt_base.SampleMode.SAMPLE"]], "samplemode (class in curobo.opt.particle.particle_opt_base)": [[44, "curobo.opt.particle.particle_opt_base.SampleMode"]], "_calc_val() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._calc_val"]], "_call_cuda_opt_iters() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._call_cuda_opt_iters"]], "_get_action_seq() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._get_action_seq"]], "_initialize_cuda_graph() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._initialize_cuda_graph"]], "_optimize() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._optimize"]], "_run_opt_iters() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._run_opt_iters"]], "_update_distribution() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase._update_distribution"]], "calculate_value (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.calculate_value"]], "check_convergence() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.check_convergence"]], "create_data_dict() (curobo.opt.particle.particle_opt_base.particleoptconfig static method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.create_data_dict"]], "curobo.opt.particle.particle_opt_base": [[44, "module-curobo.opt.particle.particle_opt_base"]], "gamma (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.gamma"]], "generate_rollouts() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.generate_rollouts"]], "info (curobo.opt.particle.particle_opt_base.particleoptinfo attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptInfo.info"]], "reset() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.reset"]], "sample_actions() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.sample_actions"]], "sample_mode (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.sample_mode"]], "seed (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.seed"]], "store_rollouts (curobo.opt.particle.particle_opt_base.particleoptconfig attribute)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptConfig.store_rollouts"]], "update_nproblems() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_nproblems"]], "update_num_particles_per_problem() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_num_particles_per_problem"]], "update_seed() (curobo.opt.particle.particle_opt_base.particleoptbase method)": [[44, "curobo.opt.particle.particle_opt_base.ParticleOptBase.update_seed"]], "clamp (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[45, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP"]], "clamp_rescale (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[45, "curobo.opt.particle.particle_opt_utils.SquashType.CLAMP_RESCALE"]], "identity (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[45, "curobo.opt.particle.particle_opt_utils.SquashType.IDENTITY"]], "squashtype (class in curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.SquashType"]], "tanh (curobo.opt.particle.particle_opt_utils.squashtype attribute)": [[45, "curobo.opt.particle.particle_opt_utils.SquashType.TANH"]], "batch_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.batch_cholesky"]], "cost_to_go() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.cost_to_go"]], "cost_to_go_np() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.cost_to_go_np"]], "curobo.opt.particle.particle_opt_utils": [[45, "module-curobo.opt.particle.particle_opt_utils"]], "gaussian_entropy() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.gaussian_entropy"]], "gaussian_kl() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.gaussian_kl"]], "gaussian_logprob() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.gaussian_logprob"]], "gaussian_logprobgrad() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.gaussian_logprobgrad"]], "get_stomp_cov() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.get_stomp_cov"]], "matrix_cholesky() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.matrix_cholesky"]], "scale_ctrl() (in module curobo.opt.particle.particle_opt_utils)": [[45, "curobo.opt.particle.particle_opt_utils.scale_ctrl"]], "curobo.rollout": [[46, "module-curobo.rollout"]], "armbase (class in curobo.rollout.arm_base)": [[47, "curobo.rollout.arm_base.ArmBase"]], "armbaseconfig (class in curobo.rollout.arm_base)": [[47, "curobo.rollout.arm_base.ArmBaseConfig"]], "armcostconfig (class in curobo.rollout.arm_base)": [[47, "curobo.rollout.arm_base.ArmCostConfig"]], "_get_augmented_state() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase._get_augmented_state"]], "_get_base_keys() (curobo.rollout.arm_base.armcostconfig static method)": [[47, "curobo.rollout.arm_base.ArmCostConfig._get_base_keys"]], "_get_formatted_dict() (curobo.rollout.arm_base.armcostconfig static method)": [[47, "curobo.rollout.arm_base.ArmCostConfig._get_formatted_dict"]], "_init_after_config_load() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase._init_after_config_load"]], "action_bound_highs (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.action_bound_lows"]], "action_horizon (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.action_horizon"]], "bound_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.bound_cfg"]], "compute_kinematics() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.compute_kinematics"]], "constraint_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.constraint_cfg"]], "constraint_fn() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.constraint_fn"]], "convergence_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.convergence_cfg"]], "convergence_fn() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.convergence_fn"]], "cost_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.cost_cfg"]], "cost_fn() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.cost_from_dict"]], "cspace_config (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.cspace_config"]], "curobo.rollout.arm_base": [[47, "module-curobo.rollout.arm_base"]], "current_cost() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.current_cost"]], "d_action (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.d_action"]], "dt (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.dt"]], "filter_robot_state() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.filter_robot_state"]], "from_dict() (curobo.rollout.arm_base.armbaseconfig class method)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.from_dict"]], "from_dict() (curobo.rollout.arm_base.armcostconfig static method)": [[47, "curobo.rollout.arm_base.ArmCostConfig.from_dict"]], "get_action_from_state() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_action_from_state"]], "get_ee_pose() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_ee_pose"]], "get_full_dof_from_solution() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.get_state_from_action"]], "horizon (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.horizon"]], "joint_names (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.joint_names"]], "kinematics (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.kinematics"]], "manipulability_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.manipulability_cfg"]], "model_cfg (curobo.rollout.arm_base.armbaseconfig attribute)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.model_cfg"]], "model_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.model_from_dict"]], "null_space_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.null_space_cfg"]], "primitive_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.primitive_collision_cfg"]], "reset() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.reset"]], "reset_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.reset_cuda_graph"]], "reset_shape() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.reset_shape"]], "retract_state (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.retract_state"]], "rollout_constraint() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.rollout_constraint"]], "rollout_constraint_cuda_graph() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.rollout_constraint_cuda_graph"]], "rollout_fn() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.rollout_fn"]], "self_collision_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.self_collision_cfg"]], "state_bounds (curobo.rollout.arm_base.armbase property)": [[47, "curobo.rollout.arm_base.ArmBase.state_bounds"]], "stop_cfg (curobo.rollout.arm_base.armcostconfig attribute)": [[47, "curobo.rollout.arm_base.ArmCostConfig.stop_cfg"]], "update_cost_dt() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.update_cost_dt"]], "update_params() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.update_params"]], "update_traj_dt() (curobo.rollout.arm_base.armbase method)": [[47, "curobo.rollout.arm_base.ArmBase.update_traj_dt"]], "world_coll_checker (curobo.rollout.arm_base.armbaseconfig attribute)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker"]], "world_coll_checker_from_dict() (curobo.rollout.arm_base.armbaseconfig static method)": [[47, "curobo.rollout.arm_base.ArmBaseConfig.world_coll_checker_from_dict"]], "armreacher (class in curobo.rollout.arm_reacher)": [[48, "curobo.rollout.arm_reacher.ArmReacher"]], "armreacherconfig (class in curobo.rollout.arm_reacher)": [[48, "curobo.rollout.arm_reacher.ArmReacherConfig"]], "armreachercostconfig (class in curobo.rollout.arm_reacher)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig"]], "armreachermetrics (class in curobo.rollout.arm_reacher)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics"]], "_abc_impl (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics._abc_impl"]], "_get_base_keys() (curobo.rollout.arm_reacher.armreachercostconfig static method)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig._get_base_keys"]], "clone() (curobo.rollout.arm_reacher.armreachermetrics method)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.clone"]], "constraint_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherConfig.constraint_cfg"]], "convergence_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherConfig.convergence_cfg"]], "convergence_fn() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.convergence_fn"]], "cost_cfg (curobo.rollout.arm_reacher.armreacherconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_cfg"]], "cost_fn() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.cost_fn"]], "cost_from_dict() (curobo.rollout.arm_reacher.armreacherconfig static method)": [[48, "curobo.rollout.arm_reacher.ArmReacherConfig.cost_from_dict"]], "cspace_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.cspace_cfg"]], "cspace_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.cspace_error"]], "curobo.rollout.arm_reacher": [[48, "module-curobo.rollout.arm_reacher"]], "enable_cspace_cost() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.enable_cspace_cost"]], "enable_pose_cost() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.enable_pose_cost"]], "from_dict() (curobo.rollout.arm_reacher.armreachercostconfig static method)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.from_dict"]], "get_pose_costs() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.get_pose_costs"]], "goalset_index (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.goalset_index"]], "link_pose_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.link_pose_cfg"]], "null_space_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.null_space_error"]], "pose_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.pose_cfg"]], "pose_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.pose_error"]], "position_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.position_error"]], "rotation_error (curobo.rollout.arm_reacher.armreachermetrics attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherMetrics.rotation_error"]], "straight_line_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.straight_line_cfg"]], "update_params() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.update_params"]], "update_pose_cost_metric() (curobo.rollout.arm_reacher.armreacher method)": [[48, "curobo.rollout.arm_reacher.ArmReacher.update_pose_cost_metric"]], "zero_acc_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_acc_cfg"]], "zero_jerk_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_jerk_cfg"]], "zero_vel_cfg (curobo.rollout.arm_reacher.armreachercostconfig attribute)": [[48, "curobo.rollout.arm_reacher.ArmReacherCostConfig.zero_vel_cfg"]], "curobo.rollout.cost": [[49, "module-curobo.rollout.cost"]], "bounds (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS"]], "bounds_smooth (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostType.BOUNDS_SMOOTH"]], "boundcost (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.BoundCost"]], "boundcostconfig (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig"]], "boundcosttype (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.BoundCostType"]], "position (curobo.rollout.cost.bound_cost.boundcosttype attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostType.POSITION"]], "warpboundfunction (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundFunction"]], "warpboundposfunction (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction"]], "warpboundposloss (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss"]], "warpboundsmoothfunction (class in curobo.rollout.cost.bound_cost)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundfunction attribute)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundFunction._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundposfunction attribute)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundposloss attribute)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss._backward_cls"]], "_backward_cls (curobo.rollout.cost.bound_cost.warpboundsmoothfunction attribute)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction._backward_cls"]], "activation_distance (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.activation_distance"]], "backward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundposloss static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosLoss.backward"]], "backward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.backward"]], "cost_type (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.cost_type"]], "cspace_distance_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.cspace_distance_weight"]], "curobo.rollout.cost.bound_cost": [[50, "module-curobo.rollout.cost.bound_cost"]], "forward() (curobo.rollout.cost.bound_cost.boundcost method)": [[50, "curobo.rollout.cost.bound_cost.BoundCost.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundposfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundPosFunction.forward"]], "forward() (curobo.rollout.cost.bound_cost.warpboundsmoothfunction static method)": [[50, "curobo.rollout.cost.bound_cost.WarpBoundSmoothFunction.forward"]], "joint_limits (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.joint_limits"]], "null_space_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.null_space_weight"]], "run_weight_acceleration (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_acceleration"]], "run_weight_jerk (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_jerk"]], "run_weight_velocity (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.run_weight_velocity"]], "set_bounds() (curobo.rollout.cost.bound_cost.boundcostconfig method)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.set_bounds"]], "smooth_weight (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.smooth_weight"]], "state_finite_difference_mode (curobo.rollout.cost.bound_cost.boundcostconfig attribute)": [[50, "curobo.rollout.cost.bound_cost.BoundCostConfig.state_finite_difference_mode"]], "update_batch_size() (curobo.rollout.cost.bound_cost.boundcost method)": [[50, "curobo.rollout.cost.bound_cost.BoundCost.update_batch_size"]], "update_dt() (curobo.rollout.cost.bound_cost.boundcost method)": [[50, "curobo.rollout.cost.bound_cost.BoundCost.update_dt"]], "costbase (class in curobo.rollout.cost.cost_base)": [[51, "curobo.rollout.cost.cost_base.CostBase"]], "costconfig (class in curobo.rollout.cost.cost_base)": [[51, "curobo.rollout.cost.cost_base.CostConfig"]], "_init_post_config() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase._init_post_config"]], "classify (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.classify"]], "curobo.rollout.cost.cost_base": [[51, "module-curobo.rollout.cost.cost_base"]], "disable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase.disable_cost"]], "distance_threshold (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.distance_threshold"]], "dof (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.dof"]], "enable_cost() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase.enable_cost"]], "enabled (curobo.rollout.cost.cost_base.costbase property)": [[51, "curobo.rollout.cost.cost_base.CostBase.enabled"]], "forward() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase.forward"]], "hinge_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.hinge_value"]], "max_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.max_value"]], "return_loss (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.return_loss"]], "run_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.run_weight"]], "tensor_args (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.tensor_args"]], "terminal (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.terminal"]], "threshold_value (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.threshold_value"]], "update_dt() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase.update_dt"]], "update_vec_weight() (curobo.rollout.cost.cost_base.costconfig method)": [[51, "curobo.rollout.cost.cost_base.CostConfig.update_vec_weight"]], "update_weight() (curobo.rollout.cost.cost_base.costbase method)": [[51, "curobo.rollout.cost.cost_base.CostBase.update_weight"]], "vec_convergence (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.vec_convergence"]], "vec_weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.vec_weight"]], "weight (curobo.rollout.cost.cost_base.costconfig attribute)": [[51, "curobo.rollout.cost.cost_base.CostConfig.weight"]], "distcost (class in curobo.rollout.cost.dist_cost)": [[52, "curobo.rollout.cost.dist_cost.DistCost"]], "distcostconfig (class in curobo.rollout.cost.dist_cost)": [[52, "curobo.rollout.cost.dist_cost.DistCostConfig"]], "disttype (class in curobo.rollout.cost.dist_cost)": [[52, "curobo.rollout.cost.dist_cost.DistType"]], "l1 (curobo.rollout.cost.dist_cost.disttype attribute)": [[52, "curobo.rollout.cost.dist_cost.DistType.L1"]], "l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[52, "curobo.rollout.cost.dist_cost.DistType.L2"]], "l2distfunction (class in curobo.rollout.cost.dist_cost)": [[52, "curobo.rollout.cost.dist_cost.L2DistFunction"]], "squared_l2 (curobo.rollout.cost.dist_cost.disttype attribute)": [[52, "curobo.rollout.cost.dist_cost.DistType.SQUARED_L2"]], "_backward_cls (curobo.rollout.cost.dist_cost.l2distfunction attribute)": [[52, "curobo.rollout.cost.dist_cost.L2DistFunction._backward_cls"]], "_init_post_config() (curobo.rollout.cost.dist_cost.distcost method)": [[52, "curobo.rollout.cost.dist_cost.DistCost._init_post_config"]], "backward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[52, "curobo.rollout.cost.dist_cost.L2DistFunction.backward"]], "curobo.rollout.cost.dist_cost": [[52, "module-curobo.rollout.cost.dist_cost"]], "dist_type (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[52, "curobo.rollout.cost.dist_cost.DistCostConfig.dist_type"]], "forward() (curobo.rollout.cost.dist_cost.distcost method)": [[52, "curobo.rollout.cost.dist_cost.DistCost.forward"]], "forward() (curobo.rollout.cost.dist_cost.l2distfunction static method)": [[52, "curobo.rollout.cost.dist_cost.L2DistFunction.forward"]], "forward_target() (curobo.rollout.cost.dist_cost.distcost method)": [[52, "curobo.rollout.cost.dist_cost.DistCost.forward_target"]], "forward_target_idx() (curobo.rollout.cost.dist_cost.distcost method)": [[52, "curobo.rollout.cost.dist_cost.DistCost.forward_target_idx"]], "update_batch_size() (curobo.rollout.cost.dist_cost.distcost method)": [[52, "curobo.rollout.cost.dist_cost.DistCost.update_batch_size"]], "use_null_space (curobo.rollout.cost.dist_cost.distcostconfig attribute)": [[52, "curobo.rollout.cost.dist_cost.DistCostConfig.use_null_space"]], "manipulabilitycost (class in curobo.rollout.cost.manipulability_cost)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost"]], "manipulabilitycostconfig (class in curobo.rollout.cost.manipulability_cost)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig"]], "curobo.rollout.cost.manipulability_cost": [[53, "module-curobo.rollout.cost.manipulability_cost"]], "forward() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.forward"]], "joint_limited_manipulability_delta() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.joint_limited_manipulability_delta"]], "manipulability() (curobo.rollout.cost.manipulability_cost.manipulabilitycost method)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCost.manipulability"]], "use_joint_limits (curobo.rollout.cost.manipulability_cost.manipulabilitycostconfig attribute)": [[53, "curobo.rollout.cost.manipulability_cost.ManipulabilityCostConfig.use_joint_limits"]], "batch_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOAL"]], "batch_goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseErrorType.BATCH_GOALSET"]], "goalset (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseErrorType.GOALSET"]], "posecost (class in curobo.rollout.cost.pose_cost)": [[54, "curobo.rollout.cost.pose_cost.PoseCost"]], "posecostconfig (class in curobo.rollout.cost.pose_cost)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig"]], "posecostmetric (class in curobo.rollout.cost.pose_cost)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric"]], "poseerrortype (class in curobo.rollout.cost.pose_cost)": [[54, "curobo.rollout.cost.pose_cost.PoseErrorType"]], "single_goal (curobo.rollout.cost.pose_cost.poseerrortype attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseErrorType.SINGLE_GOAL"]], "_forward_goal_distribution() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost._forward_goal_distribution"]], "_forward_pytorch() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost._forward_pytorch"]], "_forward_single_goal() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost._forward_single_goal"]], "_update_cost_type() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost._update_cost_type"]], "clone() (curobo.rollout.cost.pose_cost.posecostmetric method)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.clone"]], "cost_type (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.cost_type"]], "create_grasp_approach_metric() (curobo.rollout.cost.pose_cost.posecostmetric class method)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.create_grasp_approach_metric"]], "curobo.rollout.cost.pose_cost": [[54, "module-curobo.rollout.cost.pose_cost"]], "forward() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.forward"]], "forward_out_distance() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.forward_out_distance"]], "forward_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.forward_pose"]], "goalset_index_buffer (curobo.rollout.cost.pose_cost.posecost property)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.goalset_index_buffer"]], "hold_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_partial_pose"]], "hold_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.hold_partial_pose"]], "hold_vec_weight (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.hold_vec_weight"]], "offset_position (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_position"]], "offset_rotation (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_rotation"]], "offset_tstep_fraction (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_tstep_fraction"]], "offset_tstep_fraction (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.offset_tstep_fraction"]], "offset_waypoint (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.offset_waypoint"]], "project_distance (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.project_distance"]], "reach_full_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_full_pose"]], "reach_full_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.reach_full_pose"]], "reach_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_partial_pose"]], "reach_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.reach_partial_pose"]], "reach_vec_weight (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.reach_vec_weight"]], "release_partial_pose (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.release_partial_pose"]], "release_partial_pose() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.release_partial_pose"]], "remove_offset_waypoint (curobo.rollout.cost.pose_cost.posecostmetric attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.remove_offset_waypoint"]], "remove_offset_waypoint() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.remove_offset_waypoint"]], "reset_metric() (curobo.rollout.cost.pose_cost.posecostmetric class method)": [[54, "curobo.rollout.cost.pose_cost.PoseCostMetric.reset_metric"]], "run_vec_weight (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.run_vec_weight"]], "update_batch_size() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.update_batch_size"]], "update_metric() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.update_metric"]], "update_offset_waypoint() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.update_offset_waypoint"]], "update_run_weight() (curobo.rollout.cost.pose_cost.posecost method)": [[54, "curobo.rollout.cost.pose_cost.PoseCost.update_run_weight"]], "use_metric (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_metric"]], "use_projected_distance (curobo.rollout.cost.pose_cost.posecostconfig attribute)": [[54, "curobo.rollout.cost.pose_cost.PoseCostConfig.use_projected_distance"]], "primitivecollisioncost (class in curobo.rollout.cost.primitive_collision_cost)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost"]], "primitivecollisioncostconfig (class in curobo.rollout.cost.primitive_collision_cost)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig"]], "activation_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.activation_distance"]], "curobo.rollout.cost.primitive_collision_cost": [[55, "module-curobo.rollout.cost.primitive_collision_cost"]], "discrete_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.discrete_fn"]], "get_gradient_buffer() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.get_gradient_buffer"]], "speed_dt (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.speed_dt"]], "sum_distance (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sum_distance"]], "sweep_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_fn"]], "sweep_kernel_fn() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.sweep_kernel_fn"]], "sweep_steps (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.sweep_steps"]], "update_dt() (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncost method)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCost.update_dt"]], "use_speed_metric (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_speed_metric"]], "use_sweep (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep"]], "use_sweep_kernel (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.use_sweep_kernel"]], "world_coll_checker (curobo.rollout.cost.primitive_collision_cost.primitivecollisioncostconfig attribute)": [[55, "curobo.rollout.cost.primitive_collision_cost.PrimitiveCollisionCostConfig.world_coll_checker"]], "identity (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjType.IDENTITY"]], "pseudo_inverse (curobo.rollout.cost.projected_dist_cost.projtype attribute)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjType.PSEUDO_INVERSE"]], "projtype (class in curobo.rollout.cost.projected_dist_cost)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjType"]], "projecteddistcost (class in curobo.rollout.cost.projected_dist_cost)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost"]], "projecteddistcostconfig (class in curobo.rollout.cost.projected_dist_cost)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig"]], "curobo.rollout.cost.projected_dist_cost": [[56, "module-curobo.rollout.cost.projected_dist_cost"]], "eps (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.eps"]], "forward() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.forward"]], "get_pinv_null_disp() (curobo.rollout.cost.projected_dist_cost.projecteddistcost method)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCost.get_pinv_null_disp"]], "proj_type (curobo.rollout.cost.projected_dist_cost.projecteddistcostconfig attribute)": [[56, "curobo.rollout.cost.projected_dist_cost.ProjectedDistCostConfig.proj_type"]], "selfcollisioncost (class in curobo.rollout.cost.self_collision_cost)": [[57, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost"]], "selfcollisioncostconfig (class in curobo.rollout.cost.self_collision_cost)": [[57, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig"]], "curobo.rollout.cost.self_collision_cost": [[57, "module-curobo.rollout.cost.self_collision_cost"]], "forward() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[57, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.forward"]], "self_collision_kin_config (curobo.rollout.cost.self_collision_cost.selfcollisioncostconfig attribute)": [[57, "curobo.rollout.cost.self_collision_cost.SelfCollisionCostConfig.self_collision_kin_config"]], "update_batch_size() (curobo.rollout.cost.self_collision_cost.selfcollisioncost method)": [[57, "curobo.rollout.cost.self_collision_cost.SelfCollisionCost.update_batch_size"]], "stopcost (class in curobo.rollout.cost.stop_cost)": [[58, "curobo.rollout.cost.stop_cost.StopCost"]], "stopcostconfig (class in curobo.rollout.cost.stop_cost)": [[58, "curobo.rollout.cost.stop_cost.StopCostConfig"]], "curobo.rollout.cost.stop_cost": [[58, "module-curobo.rollout.cost.stop_cost"]], "dt_traj_params (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[58, "curobo.rollout.cost.stop_cost.StopCostConfig.dt_traj_params"]], "forward() (curobo.rollout.cost.stop_cost.stopcost method)": [[58, "curobo.rollout.cost.stop_cost.StopCost.forward"]], "horizon (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[58, "curobo.rollout.cost.stop_cost.StopCostConfig.horizon"]], "max_limit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[58, "curobo.rollout.cost.stop_cost.StopCostConfig.max_limit"]], "max_nlimit (curobo.rollout.cost.stop_cost.stopcostconfig attribute)": [[58, "curobo.rollout.cost.stop_cost.StopCostConfig.max_nlimit"]], "straightlinecost (class in curobo.rollout.cost.straight_line_cost)": [[59, "curobo.rollout.cost.straight_line_cost.StraightLineCost"]], "curobo.rollout.cost.straight_line_cost": [[59, "module-curobo.rollout.cost.straight_line_cost"]], "forward() (curobo.rollout.cost.straight_line_cost.straightlinecost method)": [[59, "curobo.rollout.cost.straight_line_cost.StraightLineCost.forward"]], "runsquaredsum (class in curobo.rollout.cost.zero_cost)": [[60, "curobo.rollout.cost.zero_cost.RunSquaredSum"]], "squaredsum (class in curobo.rollout.cost.zero_cost)": [[60, "curobo.rollout.cost.zero_cost.SquaredSum"]], "zerocost (class in curobo.rollout.cost.zero_cost)": [[60, "curobo.rollout.cost.zero_cost.ZeroCost"]], "_backward_cls (curobo.rollout.cost.zero_cost.runsquaredsum attribute)": [[60, "curobo.rollout.cost.zero_cost.RunSquaredSum._backward_cls"]], "_backward_cls (curobo.rollout.cost.zero_cost.squaredsum attribute)": [[60, "curobo.rollout.cost.zero_cost.SquaredSum._backward_cls"]], "backward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[60, "curobo.rollout.cost.zero_cost.RunSquaredSum.backward"]], "backward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[60, "curobo.rollout.cost.zero_cost.SquaredSum.backward"]], "curobo.rollout.cost.zero_cost": [[60, "module-curobo.rollout.cost.zero_cost"]], "forward() (curobo.rollout.cost.zero_cost.runsquaredsum static method)": [[60, "curobo.rollout.cost.zero_cost.RunSquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.squaredsum static method)": [[60, "curobo.rollout.cost.zero_cost.SquaredSum.forward"]], "forward() (curobo.rollout.cost.zero_cost.zerocost method)": [[60, "curobo.rollout.cost.zero_cost.ZeroCost.forward"]], "curobo.rollout.dynamics_model": [[61, "module-curobo.rollout.dynamics_model"]], "accelerationtensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel"]], "accelerationtensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel"]], "cliquetensorstep (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep"]], "cliquetensorstepcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel"]], "cliquetensorstepcoalescekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel"]], "cliquetensorstepidxcentraldifferencekernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel"]], "cliquetensorstepidxkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel"]], "cliquetensorstepkernel (class in curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel._backward_cls"]], "_backward_cls (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel attribute)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel._backward_cls"]], "action_interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.action_interpolate_kernel"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.backward"]], "backward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.backward"]], "build_clique_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.build_clique_matrix"]], "build_fd_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.build_fd_matrix"]], "build_int_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.build_int_matrix"]], "build_start_state_mask() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.build_start_state_mask"]], "curobo.rollout.dynamics_model.integration_utils": [[62, "module-curobo.rollout.dynamics_model.integration_utils"]], "euler_integrate() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.euler_integrate"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepidxkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.accelerationtensorstepkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.AccelerationTensorStepKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstep static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStep.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcentraldifferencekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepcoalescekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepCoalesceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxcentraldifferencekernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxCentralDifferenceKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepidxkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepIdxKernel.forward"]], "forward() (curobo.rollout.dynamics_model.integration_utils.cliquetensorstepkernel static method)": [[62, "curobo.rollout.dynamics_model.integration_utils.CliqueTensorStepKernel.forward"]], "interpolate_kernel() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.interpolate_kernel"]], "step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.step_acc_semi_euler"]], "sum_matrix() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.sum_matrix"]], "tensor_linspace() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_linspace"]], "tensor_step_acc() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc"]], "tensor_step_acc_semi_euler() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_acc_semi_euler"]], "tensor_step_jerk() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_jerk"]], "tensor_step_pos() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos"]], "tensor_step_pos_clique() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_clique"]], "tensor_step_pos_ik() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_pos_ik"]], "tensor_step_vel() (in module curobo.rollout.dynamics_model.integration_utils)": [[62, "curobo.rollout.dynamics_model.integration_utils.tensor_step_vel"]], "kinematicmodel (class in curobo.rollout.dynamics_model.kinematic_model)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel"]], "kinematicmodelconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig"]], "kinematicmodelstate (class in curobo.rollout.dynamics_model.kinematic_model)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState"]], "timetrajconfig (class in curobo.rollout.dynamics_model.kinematic_model)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig"]], "_abc_impl (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState._abc_impl"]], "action_bound_highs (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_highs"]], "action_bound_lows (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_bound_lows"]], "action_horizon (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.action_horizon"]], "ang_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ang_jac_seq"]], "base_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_dt"]], "base_ratio (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.base_ratio"]], "batch_size (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.batch_size"]], "control_space (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.control_space"]], "cspace_distance_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.cspace_distance_weight"]], "curobo.rollout.dynamics_model.kinematic_model": [[63, "module-curobo.rollout.dynamics_model.kinematic_model"]], "dt_traj_params (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.dt_traj_params"]], "ee_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pos_seq"]], "ee_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_pose"]], "ee_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.ee_quat_seq"]], "filter_robot_command (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.filter_robot_command"]], "filter_robot_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.forward"]], "from_dict() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig static method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.from_dict"]], "get_action_from_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_action_from_state"]], "get_dt_array() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.get_dt_array"]], "get_next_state() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_robot_command"]], "get_state_bounds() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_bounds"]], "get_state_from_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.get_state_from_action"]], "horizon (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.horizon"]], "init_action_mean (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.init_action_mean"]], "integrate_action() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action"]], "integrate_action_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.integrate_action_step"]], "lin_jac_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.lin_jac_seq"]], "link_names (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_names"]], "link_pos_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pos_seq"]], "link_pose (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_pose"]], "link_quat_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.link_quat_seq"]], "max_acceleration (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_acceleration"]], "max_dt (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.max_dt"]], "max_jerk (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.max_jerk"]], "null_space_weight (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.null_space_weight"]], "retract_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel property)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.retract_config"]], "return_full_act_buffer (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.return_full_act_buffer"]], "robot_cmd_tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.robot_cmd_tensor_step"]], "robot_config (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.robot_config"]], "robot_spheres (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.robot_spheres"]], "state_estimation_variance (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_estimation_variance"]], "state_filter_cfg (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_filter_cfg"]], "state_finite_difference_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.state_finite_difference_mode"]], "state_seq (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelstate attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelState.state_seq"]], "teleport_mode (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.teleport_mode"]], "tensor_args (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.tensor_args"]], "tensor_step() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.tensor_step"]], "update_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_batch_size"]], "update_cmd_batch_size() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_cmd_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.kinematic_model.timetrajconfig method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.TimeTrajConfig.update_dt"]], "update_traj_dt() (curobo.rollout.dynamics_model.kinematic_model.kinematicmodel method)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModel.update_traj_dt"]], "vel_scale (curobo.rollout.dynamics_model.kinematic_model.kinematicmodelconfig attribute)": [[63, "curobo.rollout.dynamics_model.kinematic_model.KinematicModelConfig.vel_scale"]], "dynamicsmodelbase (class in curobo.rollout.dynamics_model.model_base)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase"]], "_abc_impl (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase attribute)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase._abc_impl"]], "curobo.rollout.dynamics_model.model_base": [[64, "module-curobo.rollout.dynamics_model.model_base"]], "filter_robot_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.filter_robot_state"]], "forward() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.forward"]], "get_next_state() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_next_state"]], "get_robot_command() (curobo.rollout.dynamics_model.model_base.dynamicsmodelbase method)": [[64, "curobo.rollout.dynamics_model.model_base.DynamicsModelBase.get_robot_command"]], "acceleration (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION"]], "acceleration_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.ACCELERATION_KERNEL"]], "jerk (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.JERK"]], "position (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION"]], "position_clique (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE"]], "position_clique_kernel (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_CLIQUE_KERNEL"]], "position_teleport (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.POSITION_TELEPORT"]], "tensorstepacceleration (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration"]], "tensorstepaccelerationkernel (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel"]], "tensorstepbase (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase"]], "tensorstepposition (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition"]], "tensorsteppositionclique (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique"]], "tensorsteppositioncliquekernel (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel"]], "tensorsteppositionteleport (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport"]], "tensorsteptype (class in curobo.rollout.dynamics_model.tensor_step)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType"]], "velocity (curobo.rollout.dynamics_model.tensor_step.tensorsteptype attribute)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepType.VELOCITY"]], "curobo.rollout.dynamics_model.tensor_step": [[65, "module-curobo.rollout.dynamics_model.tensor_step"]], "filter_signal() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.filter_signal"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.forward"]], "forward() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionteleport method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionTeleport.forward"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepacceleration method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAcceleration.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepaccelerationkernel method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepAccelerationKernel.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_batch_size"]], "update_batch_size() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositioncliquekernel method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionCliqueKernel.update_batch_size"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepbase method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepBase.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorstepposition method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPosition.update_dt"]], "update_dt() (curobo.rollout.dynamics_model.tensor_step.tensorsteppositionclique method)": [[65, "curobo.rollout.dynamics_model.tensor_step.TensorStepPositionClique.update_dt"]], "goal (class in curobo.rollout.rollout_base)": [[66, "curobo.rollout.rollout_base.Goal"]], "rolloutbase (class in curobo.rollout.rollout_base)": [[66, "curobo.rollout.rollout_base.RolloutBase"]], "rolloutconfig (class in curobo.rollout.rollout_base)": [[66, "curobo.rollout.rollout_base.RolloutConfig"]], "rolloutmetrics (class in curobo.rollout.rollout_base)": [[66, "curobo.rollout.rollout_base.RolloutMetrics"]], "trajectory (class in curobo.rollout.rollout_base)": [[66, "curobo.rollout.rollout_base.Trajectory"]], "_abc_impl (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal._abc_impl"]], "_abc_impl (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[66, "curobo.rollout.rollout_base.RolloutMetrics._abc_impl"]], "_copy_buffer() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal._copy_buffer"]], "_copy_tensor() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal._copy_tensor"]], "_init_after_config_load() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase._init_after_config_load"]], "_tensor_repeat_seeds() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal._tensor_repeat_seeds"]], "_update_batch_size() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal._update_batch_size"]], "action_bound_highs (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.action_bound_highs"]], "action_bound_lows (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.action_bound_lows"]], "action_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.action_bounds"]], "action_horizon (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.action_horizon"]], "actions (curobo.rollout.rollout_base.trajectory attribute)": [[66, "curobo.rollout.rollout_base.Trajectory.actions"]], "apply_kernel() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.apply_kernel"]], "batch (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch"]], "batch_current_state_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_current_state_idx"]], "batch_enable_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_enable_idx"]], "batch_goal_state_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_goal_state_idx"]], "batch_pose_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_pose_idx"]], "batch_retract_state_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_retract_state_idx"]], "batch_world_idx (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.batch_world_idx"]], "clone() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.clone"]], "clone() (curobo.rollout.rollout_base.rolloutmetrics method)": [[66, "curobo.rollout.rollout_base.RolloutMetrics.clone"]], "constraint (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[66, "curobo.rollout.rollout_base.RolloutMetrics.constraint"]], "constraint_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.constraint_fn"]], "convergence_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.convergence_fn"]], "copy_() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.copy_"]], "cost (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[66, "curobo.rollout.rollout_base.RolloutMetrics.cost"]], "cost_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.cost_fn"]], "costs (curobo.rollout.rollout_base.trajectory attribute)": [[66, "curobo.rollout.rollout_base.Trajectory.costs"]], "create_idx() (curobo.rollout.rollout_base.goal class method)": [[66, "curobo.rollout.rollout_base.Goal.create_idx"]], "create_index_buffers() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.create_index_buffers"]], "cspace_config (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.cspace_config"]], "curobo.rollout.rollout_base": [[66, "module-curobo.rollout.rollout_base"]], "current_cost() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.current_cost"]], "current_state (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.current_state"]], "d_action (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.d_action"]], "debug (curobo.rollout.rollout_base.trajectory attribute)": [[66, "curobo.rollout.rollout_base.Trajectory.debug"]], "dt (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.dt"]], "feasible (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[66, "curobo.rollout.rollout_base.RolloutMetrics.feasible"]], "filter_robot_state() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.filter_robot_state"]], "get_action_from_state() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_action_from_state"]], "get_batch_goal_state() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.get_batch_goal_state"]], "get_full_dof_from_solution() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_full_dof_from_solution"]], "get_init_action_seq() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_init_action_seq"]], "get_metrics() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_metrics"]], "get_metrics_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_metrics_cuda_graph"]], "get_robot_command() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_robot_command"]], "get_state_from_action() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.get_state_from_action"]], "goal_pose (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.goal_pose"]], "goal_state (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.goal_state"]], "horizon (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.horizon"]], "links_goal_pose (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.links_goal_pose"]], "n_goalset (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.n_goalset"]], "name (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.name"]], "repeat_seeds() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.repeat_seeds"]], "reset() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.reset"]], "reset_cuda_graph() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.reset_cuda_graph"]], "reset_seed() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.reset_seed"]], "reset_shape() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.reset_shape"]], "retract_state (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.retract_state"]], "rollout_constraint() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.rollout_constraint"]], "rollout_fn() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.rollout_fn"]], "sample_random_actions() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.sample_random_actions"]], "state (curobo.rollout.rollout_base.rolloutmetrics attribute)": [[66, "curobo.rollout.rollout_base.RolloutMetrics.state"]], "state (curobo.rollout.rollout_base.trajectory attribute)": [[66, "curobo.rollout.rollout_base.Trajectory.state"]], "state_bounds (curobo.rollout.rollout_base.rolloutbase property)": [[66, "curobo.rollout.rollout_base.RolloutBase.state_bounds"]], "tensor_args (curobo.rollout.rollout_base.rolloutconfig attribute)": [[66, "curobo.rollout.rollout_base.RolloutConfig.tensor_args"]], "to() (curobo.rollout.rollout_base.goal method)": [[66, "curobo.rollout.rollout_base.Goal.to"]], "update_batch_idx_buffers (curobo.rollout.rollout_base.goal attribute)": [[66, "curobo.rollout.rollout_base.Goal.update_batch_idx_buffers"]], "update_params() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.update_params"]], "update_start_state() (curobo.rollout.rollout_base.rolloutbase method)": [[66, "curobo.rollout.rollout_base.RolloutBase.update_start_state"]], "curobo.types": [[67, "module-curobo.types"]], "tensordevicetype (class in curobo.types.base)": [[68, "curobo.types.base.TensorDeviceType"]], "cpu() (curobo.types.base.tensordevicetype method)": [[68, "curobo.types.base.TensorDeviceType.cpu"]], "curobo.types.base": [[68, "module-curobo.types.base"]], "device (curobo.types.base.tensordevicetype attribute)": [[68, "curobo.types.base.TensorDeviceType.device"]], "dtype (curobo.types.base.tensordevicetype attribute)": [[68, "curobo.types.base.TensorDeviceType.dtype"]], "from_basic() (curobo.types.base.tensordevicetype static method)": [[68, "curobo.types.base.TensorDeviceType.from_basic"]], "to_device() (curobo.types.base.tensordevicetype method)": [[68, "curobo.types.base.TensorDeviceType.to_device"]], "to_int8_device() (curobo.types.base.tensordevicetype method)": [[68, "curobo.types.base.TensorDeviceType.to_int8_device"]], "cameraobservation (class in curobo.types.camera)": [[69, "curobo.types.camera.CameraObservation"]], "clone() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.clone"]], "copy_() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.copy_"]], "curobo.types.camera": [[69, "module-curobo.types.camera"]], "depth_image (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.depth_image"]], "filter_depth() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.filter_depth"]], "get_image_from_pointcloud() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.get_image_from_pointcloud"]], "get_pointcloud() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.get_pointcloud"]], "image_segmentation (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.image_segmentation"]], "intrinsics (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.intrinsics"]], "name (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.name"]], "pose (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.pose"]], "projection_matrix (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.projection_matrix"]], "projection_rays (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.projection_rays"]], "resolution (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.resolution"]], "rgb_image (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.rgb_image"]], "shape (curobo.types.camera.cameraobservation property)": [[69, "curobo.types.camera.CameraObservation.shape"]], "timestamp (curobo.types.camera.cameraobservation attribute)": [[69, "curobo.types.camera.CameraObservation.timestamp"]], "to() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.to"]], "update_projection_rays() (curobo.types.camera.cameraobservation method)": [[69, "curobo.types.camera.CameraObservation.update_projection_rays"]], "acceleration (curobo.types.enum.statetype attribute)": [[70, "curobo.types.enum.StateType.ACCELERATION"]], "jerk (curobo.types.enum.statetype attribute)": [[70, "curobo.types.enum.StateType.JERK"]], "position (curobo.types.enum.statetype attribute)": [[70, "curobo.types.enum.StateType.POSITION"]], "statetype (class in curobo.types.enum)": [[70, "curobo.types.enum.StateType"]], "velocity (curobo.types.enum.statetype attribute)": [[70, "curobo.types.enum.StateType.VELOCITY"]], "curobo.types.enum": [[70, "module-curobo.types.enum"]], "orientationerror (class in curobo.types.math)": [[71, "curobo.types.math.OrientationError"]], "pose (class in curobo.types.math)": [[71, "curobo.types.math.Pose"]], "_abc_impl (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose._abc_impl"]], "_backward_cls (curobo.types.math.orientationerror attribute)": [[71, "curobo.types.math.OrientationError._backward_cls"]], "angular_distance() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.angular_distance"]], "apply_kernel() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.apply_kernel"]], "backward() (curobo.types.math.orientationerror static method)": [[71, "curobo.types.math.OrientationError.backward"]], "batch (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.batch"]], "batch_transform_points() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.batch_transform_points"]], "cat() (curobo.types.math.pose static method)": [[71, "curobo.types.math.Pose.cat"]], "clone() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.clone"]], "compute_local_pose() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.compute_local_pose"]], "compute_offset_pose() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.compute_offset_pose"]], "copy_() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.copy_"]], "curobo.types.math": [[71, "module-curobo.types.math"]], "distance() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.distance"]], "forward() (curobo.types.math.orientationerror static method)": [[71, "curobo.types.math.OrientationError.forward"]], "from_batch_list() (curobo.types.math.pose class method)": [[71, "curobo.types.math.Pose.from_batch_list"]], "from_list() (curobo.types.math.pose class method)": [[71, "curobo.types.math.Pose.from_list"]], "from_matrix() (curobo.types.math.pose static method)": [[71, "curobo.types.math.Pose.from_matrix"]], "geodesic_distance() (curobo.types.math.orientationerror static method)": [[71, "curobo.types.math.OrientationError.geodesic_distance"]], "get_index() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.get_index"]], "get_matrix() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.get_matrix"]], "get_numpy_matrix() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.get_numpy_matrix"]], "get_pose_vector() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.get_pose_vector"]], "get_rotation() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.get_rotation"]], "inverse() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.inverse"]], "linear_distance() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.linear_distance"]], "multiply() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.multiply"]], "n_goalset (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.n_goalset"]], "name (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.name"]], "normalize_rotation (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.normalize_rotation"]], "position (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.position"]], "quat_multiply() (in module curobo.types.math)": [[71, "curobo.types.math.quat_multiply"]], "quaternion (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.quaternion"]], "repeat() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.repeat"]], "repeat_seeds() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.repeat_seeds"]], "rotation (curobo.types.math.pose attribute)": [[71, "curobo.types.math.Pose.rotation"]], "shape (curobo.types.math.pose property)": [[71, "curobo.types.math.Pose.shape"]], "stack() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.stack"]], "to() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.to"]], "to_list() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.to_list"]], "tolist() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.tolist"]], "transform_point() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.transform_point"]], "transform_points() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.transform_points"]], "unsqueeze() (curobo.types.math.pose method)": [[71, "curobo.types.math.Pose.unsqueeze"]], "nnconfig (class in curobo.types.robot)": [[72, "curobo.types.robot.NNConfig"]], "robotconfig (class in curobo.types.robot)": [[72, "curobo.types.robot.RobotConfig"]], "cspace (curobo.types.robot.robotconfig property)": [[72, "curobo.types.robot.RobotConfig.cspace"]], "curobo.types.robot": [[72, "module-curobo.types.robot"]], "from_basic() (curobo.types.robot.robotconfig static method)": [[72, "curobo.types.robot.RobotConfig.from_basic"]], "from_dict() (curobo.types.robot.robotconfig static method)": [[72, "curobo.types.robot.RobotConfig.from_dict"]], "ik_seeder (curobo.types.robot.nnconfig attribute)": [[72, "curobo.types.robot.NNConfig.ik_seeder"]], "kinematics (curobo.types.robot.robotconfig attribute)": [[72, "curobo.types.robot.RobotConfig.kinematics"]], "tensor_args (curobo.types.robot.robotconfig attribute)": [[72, "curobo.types.robot.RobotConfig.tensor_args"]], "write_config() (curobo.types.robot.robotconfig method)": [[72, "curobo.types.robot.RobotConfig.write_config"]], "filtercoeff (class in curobo.types.state)": [[73, "curobo.types.state.FilterCoeff"]], "jointstate (class in curobo.types.state)": [[73, "curobo.types.state.JointState"]], "state (class in curobo.types.state)": [[73, "curobo.types.state.State"]], "_abc_impl (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState._abc_impl"]], "_abc_impl (curobo.types.state.state attribute)": [[73, "curobo.types.state.State._abc_impl"]], "_same_shape() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState._same_shape"]], "acceleration (curobo.types.state.filtercoeff attribute)": [[73, "curobo.types.state.FilterCoeff.acceleration"]], "acceleration (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.acceleration"]], "append_joints() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.append_joints"]], "apply_kernel() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.apply_kernel"]], "apply_kernel() (curobo.types.state.state method)": [[73, "curobo.types.state.State.apply_kernel"]], "blend() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.blend"]], "blend() (curobo.types.state.state method)": [[73, "curobo.types.state.State.blend"]], "calculate_fd_from_position() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.calculate_fd_from_position"]], "clone() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.clone"]], "clone() (curobo.types.state.state method)": [[73, "curobo.types.state.State.clone"]], "copy_() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.copy_"]], "copy_at_index() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.copy_at_index"]], "copy_data() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.copy_data"]], "curobo.types.state": [[73, "module-curobo.types.state"]], "detach() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.detach"]], "from_list() (curobo.types.state.jointstate static method)": [[73, "curobo.types.state.JointState.from_list"]], "from_numpy() (curobo.types.state.jointstate static method)": [[73, "curobo.types.state.JointState.from_numpy"]], "from_position() (curobo.types.state.jointstate static method)": [[73, "curobo.types.state.JointState.from_position"]], "from_state_tensor() (curobo.types.state.jointstate static method)": [[73, "curobo.types.state.JointState.from_state_tensor"]], "get_augmented_joint_state() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.get_augmented_joint_state"]], "get_ordered_joint_state() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.get_ordered_joint_state"]], "get_state_tensor() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.get_state_tensor"]], "get_state_tensor() (curobo.types.state.state method)": [[73, "curobo.types.state.State.get_state_tensor"]], "inplace_reindex() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.inplace_reindex"]], "jerk (curobo.types.state.filtercoeff attribute)": [[73, "curobo.types.state.FilterCoeff.jerk"]], "jerk (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.jerk"]], "joint_names (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.joint_names"]], "position (curobo.types.state.filtercoeff attribute)": [[73, "curobo.types.state.FilterCoeff.position"]], "position (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.position"]], "repeat_seeds() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.repeat_seeds"]], "scale() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.scale"]], "shape (curobo.types.state.jointstate property)": [[73, "curobo.types.state.JointState.shape"]], "squeeze() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.squeeze"]], "stack() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.stack"]], "tensor_args (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.tensor_args"]], "to() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.to"]], "to() (curobo.types.state.state method)": [[73, "curobo.types.state.State.to"]], "trim_trajectory() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.trim_trajectory"]], "unsqueeze() (curobo.types.state.jointstate method)": [[73, "curobo.types.state.JointState.unsqueeze"]], "velocity (curobo.types.state.filtercoeff attribute)": [[73, "curobo.types.state.FilterCoeff.velocity"]], "velocity (curobo.types.state.jointstate attribute)": [[73, "curobo.types.state.JointState.velocity"]], "zeros() (curobo.types.state.jointstate static method)": [[73, "curobo.types.state.JointState.zeros"]], "curobo.types.tensor": [[74, "module-curobo.types.tensor"]], "curobo.util": [[75, "module-curobo.util"]], "curobo.util.error_metrics": [[76, "module-curobo.util.error_metrics"]], "rotation_error_matrix() (in module curobo.util.error_metrics)": [[76, "curobo.util.error_metrics.rotation_error_matrix"]], "rotation_error_quaternion() (in module curobo.util.error_metrics)": [[76, "curobo.util.error_metrics.rotation_error_quaternion"]], "curobo.util.helpers": [[77, "module-curobo.util.helpers"]], "default_to_regular() (in module curobo.util.helpers)": [[77, "curobo.util.helpers.default_to_regular"]], "list_idx_if_not_none() (in module curobo.util.helpers)": [[77, "curobo.util.helpers.list_idx_if_not_none"]], "curobo.util.logger": [[78, "module-curobo.util.logger"]], "log_error() (in module curobo.util.logger)": [[78, "curobo.util.logger.log_error"]], "log_info() (in module curobo.util.logger)": [[78, "curobo.util.logger.log_info"]], "log_warn() (in module curobo.util.logger)": [[78, "curobo.util.logger.log_warn"]], "setup_curobo_logger() (in module curobo.util.logger)": [[78, "curobo.util.logger.setup_curobo_logger"]], "curobogroupmetrics (class in curobo.util.metrics)": [[79, "curobo.util.metrics.CuroboGroupMetrics"]], "curobometrics (class in curobo.util.metrics)": [[79, "curobo.util.metrics.CuroboMetrics"]], "cspace_path_length (curobo.util.metrics.curobogroupmetrics attribute)": [[79, "curobo.util.metrics.CuroboGroupMetrics.cspace_path_length"]], "cspace_path_length (curobo.util.metrics.curobometrics attribute)": [[79, "curobo.util.metrics.CuroboMetrics.cspace_path_length"]], "curobo.util.metrics": [[79, "module-curobo.util.metrics"]], "from_list() (curobo.util.metrics.curobogroupmetrics class method)": [[79, "curobo.util.metrics.CuroboGroupMetrics.from_list"]], "jerk (curobo.util.metrics.curobogroupmetrics attribute)": [[79, "curobo.util.metrics.CuroboGroupMetrics.jerk"]], "jerk (curobo.util.metrics.curobometrics attribute)": [[79, "curobo.util.metrics.CuroboMetrics.jerk"]], "perception_interpolated_success (curobo.util.metrics.curobogroupmetrics attribute)": [[79, "curobo.util.metrics.CuroboGroupMetrics.perception_interpolated_success"]], "perception_interpolated_success (curobo.util.metrics.curobometrics attribute)": [[79, "curobo.util.metrics.CuroboMetrics.perception_interpolated_success"]], "perception_success (curobo.util.metrics.curobogroupmetrics attribute)": [[79, "curobo.util.metrics.CuroboGroupMetrics.perception_success"]], "perception_success (curobo.util.metrics.curobometrics attribute)": [[79, "curobo.util.metrics.CuroboMetrics.perception_success"]], "time (curobo.util.metrics.curobogroupmetrics attribute)": [[79, "curobo.util.metrics.CuroboGroupMetrics.time"]], "time (curobo.util.metrics.curobometrics attribute)": [[79, "curobo.util.metrics.CuroboMetrics.time"]], "basesamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.BaseSampleLib"]], "haltongenerator (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.HaltonGenerator"]], "haltonsamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.HaltonSampleLib"]], "knotsamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.KnotSampleLib"]], "randomsamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.RandomSampleLib"]], "sampleconfig (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.SampleConfig"]], "samplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.SampleLib"]], "sinesamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.SineSampleLib"]], "stompsamplelib (class in curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.StompSampleLib"]], "_get_samples() (curobo.util.sample_lib.haltongenerator method)": [[80, "curobo.util.sample_lib.HaltonGenerator._get_samples"]], "bspline() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.bspline"]], "cov_mode (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.cov_mode"]], "covariance_matrix (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.covariance_matrix"]], "curobo.util.sample_lib": [[80, "module-curobo.util.sample_lib"]], "d_action (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.d_action"]], "degree (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.degree"]], "fast_forward() (curobo.util.sample_lib.haltongenerator method)": [[80, "curobo.util.sample_lib.HaltonGenerator.fast_forward"]], "filter_coeffs (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.filter_coeffs"]], "filter_samples() (curobo.util.sample_lib.basesamplelib method)": [[80, "curobo.util.sample_lib.BaseSampleLib.filter_samples"]], "filter_smooth() (curobo.util.sample_lib.basesamplelib method)": [[80, "curobo.util.sample_lib.BaseSampleLib.filter_smooth"]], "fixed_samples (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.fixed_samples"]], "generate_gaussian_halton_samples() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_gaussian_halton_samples"]], "generate_gaussian_sobol_samples() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_gaussian_sobol_samples"]], "generate_halton_samples() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_halton_samples"]], "generate_noise() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_noise"]], "generate_noise_np() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_noise_np"]], "generate_prime_numbers() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_prime_numbers"]], "generate_sine_wave() (curobo.util.sample_lib.sinesamplelib method)": [[80, "curobo.util.sample_lib.SineSampleLib.generate_sine_wave"]], "generate_van_der_corput_sample() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_van_der_corput_sample"]], "generate_van_der_corput_samples_batch() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.generate_van_der_corput_samples_batch"]], "get_gaussian_samples() (curobo.util.sample_lib.haltongenerator method)": [[80, "curobo.util.sample_lib.HaltonGenerator.get_gaussian_samples"]], "get_ranged_halton_samples() (in module curobo.util.sample_lib)": [[80, "curobo.util.sample_lib.get_ranged_halton_samples"]], "get_samples() (curobo.util.sample_lib.basesamplelib method)": [[80, "curobo.util.sample_lib.BaseSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.haltongenerator method)": [[80, "curobo.util.sample_lib.HaltonGenerator.get_samples"]], "get_samples() (curobo.util.sample_lib.haltonsamplelib method)": [[80, "curobo.util.sample_lib.HaltonSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.knotsamplelib method)": [[80, "curobo.util.sample_lib.KnotSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.randomsamplelib method)": [[80, "curobo.util.sample_lib.RandomSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.samplelib method)": [[80, "curobo.util.sample_lib.SampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.sinesamplelib method)": [[80, "curobo.util.sample_lib.SineSampleLib.get_samples"]], "get_samples() (curobo.util.sample_lib.stompsamplelib method)": [[80, "curobo.util.sample_lib.StompSampleLib.get_samples"]], "horizon (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.horizon"]], "n_knots (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.n_knots"]], "reset() (curobo.util.sample_lib.haltongenerator method)": [[80, "curobo.util.sample_lib.HaltonGenerator.reset"]], "sample_method (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.sample_method"]], "sample_ratio (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.sample_ratio"]], "scale_tril (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.scale_tril"]], "seed (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.seed"]], "sine_period (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.sine_period"]], "tensor_args (curobo.util.sample_lib.sampleconfig attribute)": [[80, "curobo.util.sample_lib.SampleConfig.tensor_args"]], "filterconfig (class in curobo.util.state_filter)": [[81, "curobo.util.state_filter.FilterConfig"]], "jointstatefilter (class in curobo.util.state_filter)": [[81, "curobo.util.state_filter.JointStateFilter"]], "control_space (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.control_space"]], "curobo.util.state_filter": [[81, "module-curobo.util.state_filter"]], "dt (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.dt"]], "enable (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.enable"]], "filter_coeff (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.filter_coeff"]], "filter_joint_state() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.filter_joint_state"]], "from_dict() (curobo.util.state_filter.filterconfig static method)": [[81, "curobo.util.state_filter.FilterConfig.from_dict"]], "integrate_acc() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.integrate_acc"]], "integrate_jerk() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.integrate_jerk"]], "integrate_pos() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.integrate_pos"]], "integrate_vel() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.integrate_vel"]], "reset() (curobo.util.state_filter.jointstatefilter method)": [[81, "curobo.util.state_filter.JointStateFilter.reset"]], "teleport_mode (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.teleport_mode"]], "tensor_args (curobo.util.state_filter.filterconfig attribute)": [[81, "curobo.util.state_filter.FilterConfig.tensor_args"]], "check_tensor_shapes() (in module curobo.util.tensor_util)": [[82, "curobo.util.tensor_util.check_tensor_shapes"]], "clone_if_not_none() (in module curobo.util.tensor_util)": [[82, "curobo.util.tensor_util.clone_if_not_none"]], "copy_if_not_none() (in module curobo.util.tensor_util)": [[82, "curobo.util.tensor_util.copy_if_not_none"]], "copy_tensor() (in module curobo.util.tensor_util)": [[82, "curobo.util.tensor_util.copy_tensor"]], "curobo.util.tensor_util": [[82, "module-curobo.util.tensor_util"]], "tensor_repeat_seeds() (in module curobo.util.tensor_util)": [[82, "curobo.util.tensor_util.tensor_repeat_seeds"]], "curobo.util.torch_utils": [[83, "module-curobo.util.torch_utils"]], "find_first_idx() (in module curobo.util.torch_utils)": [[83, "curobo.util.torch_utils.find_first_idx"]], "find_last_idx() (in module curobo.util.torch_utils)": [[83, "curobo.util.torch_utils.find_last_idx"]], "is_cuda_graph_available() (in module curobo.util.torch_utils)": [[83, "curobo.util.torch_utils.is_cuda_graph_available"]], "is_torch_compile_available() (in module curobo.util.torch_utils)": [[83, "curobo.util.torch_utils.is_torch_compile_available"]], "cubic (curobo.util.trajectory.interpolatetype attribute)": [[84, "curobo.util.trajectory.InterpolateType.CUBIC"]], "interpolatetype (class in curobo.util.trajectory)": [[84, "curobo.util.trajectory.InterpolateType"]], "kunz_stilman_optimal (curobo.util.trajectory.interpolatetype attribute)": [[84, "curobo.util.trajectory.InterpolateType.KUNZ_STILMAN_OPTIMAL"]], "linear (curobo.util.trajectory.interpolatetype attribute)": [[84, "curobo.util.trajectory.InterpolateType.LINEAR"]], "linear_cuda (curobo.util.trajectory.interpolatetype attribute)": [[84, "curobo.util.trajectory.InterpolateType.LINEAR_CUDA"]], "quintic (curobo.util.trajectory.interpolatetype attribute)": [[84, "curobo.util.trajectory.InterpolateType.QUINTIC"]], "curobo.util.trajectory": [[84, "module-curobo.util.trajectory"]], "get_batch_interpolated_trajectory() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_batch_interpolated_trajectory"]], "get_cpu_kunz_stilman_interpolation() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_cpu_kunz_stilman_interpolation"]], "get_cpu_linear_interpolation() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_cpu_linear_interpolation"]], "get_interpolated_trajectory() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_interpolated_trajectory"]], "get_linear_traj() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_linear_traj"]], "get_smooth_trajectory() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_smooth_trajectory"]], "get_spline_interpolated_trajectory() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.get_spline_interpolated_trajectory"]], "linear_smooth() (in module curobo.util.trajectory)": [[84, "curobo.util.trajectory.linear_smooth"]], "usdhelper (class in curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.UsdHelper"]], "add_cuboid_to_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_cuboid_to_stage"]], "add_cylinder_to_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_cylinder_to_stage"]], "add_material() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_material"]], "add_mesh_to_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_mesh_to_stage"]], "add_sphere_to_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_sphere_to_stage"]], "add_subroot() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_subroot"]], "add_world_to_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.add_world_to_stage"]], "create_animation() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.create_animation"]], "create_grid_usd() (curobo.util.usd_helper.usdhelper static method)": [[85, "curobo.util.usd_helper.UsdHelper.create_grid_usd"]], "create_linkpose_robot_animation() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.create_linkpose_robot_animation"]], "create_obstacle_animation() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.create_obstacle_animation"]], "create_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.create_stage"]], "create_stage() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.create_stage"]], "curobo.util.usd_helper": [[85, "module-curobo.util.usd_helper"]], "get_capsule_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_capsule_attrs"]], "get_cube_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_cube_attrs"]], "get_cylinder_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_cylinder_attrs"]], "get_mesh_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_mesh_attrs"]], "get_obstacle_from_prim() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.get_obstacle_from_prim"]], "get_obstacles_from_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.get_obstacles_from_stage"]], "get_pose() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.get_pose"]], "get_position_quat() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_position_quat"]], "get_prim_from_obstacle() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.get_prim_from_obstacle"]], "get_prim_world_pose() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_prim_world_pose"]], "get_robot_prims() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.get_robot_prims"]], "get_sphere_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_sphere_attrs"]], "get_transform() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.get_transform"]], "load_robot() (curobo.util.usd_helper.usdhelper static method)": [[85, "curobo.util.usd_helper.UsdHelper.load_robot"]], "load_robot_usd() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.load_robot_usd"]], "load_stage() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.load_stage"]], "load_stage_from_file() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.load_stage_from_file"]], "save() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.save"]], "set_cylinder_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_cylinder_attrs"]], "set_geom_cube_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_geom_cube_attrs"]], "set_geom_cylinder_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_geom_cylinder_attrs"]], "set_geom_mesh_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_geom_mesh_attrs"]], "set_geom_sphere_attrs() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_geom_sphere_attrs"]], "set_prim_transform() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_prim_transform"]], "set_prim_translate() (in module curobo.util.usd_helper)": [[85, "curobo.util.usd_helper.set_prim_translate"]], "update_robot_joint_state() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.update_robot_joint_state"]], "write_motion_gen_log() (curobo.util.usd_helper.usdhelper static method)": [[85, "curobo.util.usd_helper.UsdHelper.write_motion_gen_log"]], "write_stage_to_file() (curobo.util.usd_helper.usdhelper method)": [[85, "curobo.util.usd_helper.UsdHelper.write_stage_to_file"]], "write_trajectory_animation() (curobo.util.usd_helper.usdhelper static method)": [[85, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation"]], "write_trajectory_animation_with_robot_usd() (curobo.util.usd_helper.usdhelper static method)": [[85, "curobo.util.usd_helper.UsdHelper.write_trajectory_animation_with_robot_usd"]], "curobo.util.warp": [[86, "module-curobo.util.warp"]], "init_warp() (in module curobo.util.warp)": [[86, "curobo.util.warp.init_warp"]], "curobo.util.warp_interpolation": [[87, "module-curobo.util.warp_interpolation"]], "get_cuda_linear_interpolation() (in module curobo.util.warp_interpolation)": [[87, "curobo.util.warp_interpolation.get_cuda_linear_interpolation"]], "add_cpp_path() (in module curobo.util_file)": [[88, "curobo.util_file.add_cpp_path"]], "copy_file_to_path() (in module curobo.util_file)": [[88, "curobo.util_file.copy_file_to_path"]], "curobo.util_file": [[88, "module-curobo.util_file"]], "file_exists() (in module curobo.util_file)": [[88, "curobo.util_file.file_exists"]], "get_assets_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_assets_path"]], "get_configs_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_configs_path"]], "get_content_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_content_path"]], "get_cpp_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_cpp_path"]], "get_debug_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_debug_path"]], "get_filename() (in module curobo.util_file)": [[88, "curobo.util_file.get_filename"]], "get_files_from_dir() (in module curobo.util_file)": [[88, "curobo.util_file.get_files_from_dir"]], "get_module_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_module_path"]], "get_motion_gen_robot_list() (in module curobo.util_file)": [[88, "curobo.util_file.get_motion_gen_robot_list"]], "get_multi_arm_robot_list() (in module curobo.util_file)": [[88, "curobo.util_file.get_multi_arm_robot_list"]], "get_path_of_dir() (in module curobo.util_file)": [[88, "curobo.util_file.get_path_of_dir"]], "get_robot_configs_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_robot_configs_path"]], "get_robot_list() (in module curobo.util_file)": [[88, "curobo.util_file.get_robot_list"]], "get_robot_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_robot_path"]], "get_root_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_root_path"]], "get_task_configs_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_task_configs_path"]], "get_weights_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_weights_path"]], "get_world_configs_path() (in module curobo.util_file)": [[88, "curobo.util_file.get_world_configs_path"]], "join_path() (in module curobo.util_file)": [[88, "curobo.util_file.join_path"]], "load_yaml() (in module curobo.util_file)": [[88, "curobo.util_file.load_yaml"]], "write_yaml() (in module curobo.util_file)": [[88, "curobo.util_file.write_yaml"]], "curobo.wrap": [[89, "module-curobo.wrap"]], "curobo.wrap.model": [[90, "module-curobo.wrap.model"]], "curoborobotworld (class in curobo.wrap.model.curobo_robot_world)": [[91, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorld"]], "curoborobotworldconfig (class in curobo.wrap.model.curobo_robot_world)": [[91, "curobo.wrap.model.curobo_robot_world.CuroboRobotWorldConfig"]], "curobo.wrap.model.curobo_robot_world": [[91, "module-curobo.wrap.model.curobo_robot_world"]], "robotsegmenter (class in curobo.wrap.model.robot_segmenter)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter"]], "_call_op() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter._call_op"]], "_create_cg_graph() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter._create_cg_graph"]], "_mask_op() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter._mask_op"]], "curobo.wrap.model.robot_segmenter": [[92, "module-curobo.wrap.model.robot_segmenter"]], "from_robot_file() (curobo.wrap.model.robot_segmenter.robotsegmenter static method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter.from_robot_file"]], "get_pointcloud_from_depth() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_pointcloud_from_depth"]], "get_robot_mask() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask"]], "get_robot_mask_from_active_js() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter.get_robot_mask_from_active_js"]], "update_camera_projection() (curobo.wrap.model.robot_segmenter.robotsegmenter method)": [[92, "curobo.wrap.model.robot_segmenter.RobotSegmenter.update_camera_projection"]], "robotworld (class in curobo.wrap.model.robot_world)": [[93, "curobo.wrap.model.robot_world.RobotWorld"]], "robotworldconfig (class in curobo.wrap.model.robot_world)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig"]], "bound_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_cost"]], "bound_scale (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.bound_scale"]], "collision_constraint (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_constraint"]], "collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.collision_cost"]], "contact_distance (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.contact_distance"]], "curobo.wrap.model.robot_world": [[93, "module-curobo.wrap.model.robot_world"]], "get_active_js() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_active_js"]], "get_bound() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_bound"]], "get_collision_constraint() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_collision_constraint"]], "get_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_collision_distance"]], "get_collision_vector() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_collision_vector"]], "get_kinematics() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_kinematics"]], "get_point_robot_distance() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_point_robot_distance"]], "get_self_collision() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision"]], "get_self_collision_distance() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_self_collision_distance"]], "get_world_self_collision_distance_from_joint_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joint_trajectory"]], "get_world_self_collision_distance_from_joints() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.get_world_self_collision_distance_from_joints"]], "kinematics (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.kinematics"]], "load_from_config() (curobo.wrap.model.robot_world.robotworldconfig static method)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.load_from_config"]], "pose_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.pose_cost"]], "pose_distance() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.pose_distance"]], "rejection_ratio (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.rejection_ratio"]], "sample() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.sample"]], "sample_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.sample_trajectory"]], "sampler (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.sampler"]], "self_collision_cost (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.self_collision_cost"]], "tensor_args (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.tensor_args"]], "update_world() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.update_world"]], "validate() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.validate"]], "validate_trajectory() (curobo.wrap.model.robot_world.robotworld method)": [[93, "curobo.wrap.model.robot_world.RobotWorld.validate_trajectory"]], "world_model (curobo.wrap.model.robot_world.robotworldconfig attribute)": [[93, "curobo.wrap.model.robot_world.RobotWorldConfig.world_model"]], "curobo.wrap.reacher": [[94, "module-curobo.wrap.reacher"]], "trajevaluator (class in curobo.wrap.reacher.evaluator)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator"]], "trajevaluatorconfig (class in curobo.wrap.reacher.evaluator)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig"]], "_check_smoothness() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator._check_smoothness"]], "_compute_path_length() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator._compute_path_length"]], "calculate_dt() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator.calculate_dt"]], "cost_weight (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.cost_weight"]], "curobo.wrap.reacher.evaluator": [[95, "module-curobo.wrap.reacher.evaluator"]], "evaluate() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate"]], "evaluate_from_position() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_from_position"]], "evaluate_interpolated_smootheness() (curobo.wrap.reacher.evaluator.trajevaluator method)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluator.evaluate_interpolated_smootheness"]], "max_acc (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_acc"]], "max_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_dt"]], "max_jerk (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.max_jerk"]], "min_dt (curobo.wrap.reacher.evaluator.trajevaluatorconfig attribute)": [[95, "curobo.wrap.reacher.evaluator.TrajEvaluatorConfig.min_dt"]], "ikresult (class in curobo.wrap.reacher.ik_solver)": [[96, "curobo.wrap.reacher.ik_solver.IKResult"]], "iksolver (class in curobo.wrap.reacher.ik_solver)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver"]], "iksolverconfig (class in curobo.wrap.reacher.ik_solver)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig"]], "_abc_impl (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult._abc_impl"]], "attach_object_to_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.attach_object_to_robot"]], "batch_env_solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.batch_env_solve"]], "check_constraints() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.check_constraints"]], "curobo.wrap.reacher.ik_solver": [[96, "module-curobo.wrap.reacher.ik_solver"]], "debug_info (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.detach_object_from_robot"]], "error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.error"]], "fk() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.fk"]], "generate_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.generate_seed"]], "get_all_kinematics_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_all_rollout_instances"]], "get_batch_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.get_batch_unique_solution"]], "get_result() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_result"]], "get_retract_config() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_retract_config"]], "get_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_seed"]], "get_success() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.get_success"]], "get_unique_solution() (curobo.wrap.reacher.ik_solver.ikresult method)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.get_unique_solution"]], "goal_pose (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.goal_pose"]], "goalset_index (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.goalset_index"]], "ik_nn_seeder (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.ik_nn_seeder"]], "js_solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.js_solution"]], "kinematics (curobo.wrap.reacher.ik_solver.iksolver property)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.ik_solver.iksolverconfig static method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.load_from_robot_config"]], "num_seeds (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.num_seeds"]], "position_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.position_error"]], "position_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.position_threshold"]], "reset_cuda_graph() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.reset_seed"]], "reset_shape() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.reset_shape"]], "robot_config (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.rotation_threshold"]], "sample_configs() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.sample_configs"]], "sample_rejection_ratio (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.sample_rejection_ratio"]], "seed (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.seed"]], "solution (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.solution"]], "solve() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve"]], "solve_any() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.solve_single"]], "solve_time (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.solve_time"]], "solver (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.solver"]], "success (curobo.wrap.reacher.ik_solver.ikresult attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKResult.success"]], "tensor_args (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.tensor_args"]], "update_goal_buffer() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.update_goal_buffer"]], "update_pose_cost_metric() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.update_pose_cost_metric"]], "update_world() (curobo.wrap.reacher.ik_solver.iksolver method)": [[96, "curobo.wrap.reacher.ik_solver.IKSolver.update_world"]], "use_cuda_graph (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.use_cuda_graph"]], "world_coll_checker (curobo.wrap.reacher.ik_solver.iksolverconfig attribute)": [[96, "curobo.wrap.reacher.ik_solver.IKSolverConfig.world_coll_checker"]], "motiongen (class in curobo.wrap.reacher.motion_gen)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen"]], "motiongenconfig (class in curobo.wrap.reacher.motion_gen)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig"]], "motiongenplanconfig (class in curobo.wrap.reacher.motion_gen)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig"]], "motiongenresult (class in curobo.wrap.reacher.motion_gen)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult"]], "_check_none_and_copy_idx() (curobo.wrap.reacher.motion_gen.motiongenresult static method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult._check_none_and_copy_idx"]], "_get_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._get_solve_state"]], "_plan_attempts() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._plan_attempts"]], "_plan_batch_attempts() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._plan_batch_attempts"]], "_plan_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state"]], "_plan_from_solve_state_batch() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._plan_from_solve_state_batch"]], "_plan_js_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._plan_js_from_solve_state"]], "_solve_ik_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._solve_ik_from_solve_state"]], "_solve_trajopt_from_solve_state() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen._solve_trajopt_from_solve_state"]], "add_camera_frame() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.add_camera_frame"]], "add_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.add_running_pose_constraint"]], "attach_bounding_box_from_blox_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.attach_bounding_box_from_blox_to_robot"]], "attach_external_objects_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.attach_external_objects_to_robot"]], "attach_new_object_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.attach_new_object_to_robot"]], "attach_objects_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.attach_objects_to_robot"]], "attach_spheres_to_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.attach_spheres_to_robot"]], "attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.attempts"]], "batch_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_ik_seeds"]], "batch_plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.batch_plan"]], "batch_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.batch_trajopt_seeds"]], "check_constraints() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.check_constraints"]], "clear_world_cache() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.clear_world_cache"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenplanconfig method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.clone"]], "clone() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.clone"]], "compute_kinematics() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.compute_kinematics"]], "copy_idx() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.copy_idx"]], "cspace_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.cspace_error"]], "curobo.wrap.reacher.motion_gen": [[97, "module-curobo.wrap.reacher.motion_gen"]], "debug_info (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.detach_object_from_robot"]], "detach_spheres_from_robot() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.detach_spheres_from_robot"]], "disable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.disable_graph_attempt"]], "dof (curobo.wrap.reacher.motion_gen.motiongen property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.dof"]], "enable_finetune_trajopt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_finetune_trajopt"]], "enable_graph (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph"]], "enable_graph_attempt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_graph_attempt"]], "enable_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.enable_opt"]], "fail_on_invalid_query (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.fail_on_invalid_query"]], "finetune_dt_scale (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_dt_scale"]], "finetune_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.finetune_time"]], "finetune_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.finetune_trajopt_solver"]], "get_active_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_active_js"]], "get_all_kinematics_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_kinematics_instances"]], "get_all_pose_solver_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_pose_solver_rollout_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_rollout_instances"]], "get_all_solver_rollout_instances() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_all_solver_rollout_instances"]], "get_full_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_full_js"]], "get_interpolated_plan() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_interpolated_plan"]], "get_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_paths"]], "get_retract_config() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.get_retract_config"]], "get_successful_paths() (curobo.wrap.reacher.motion_gen.motiongenresult method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.get_successful_paths"]], "goalset_index (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.goalset_index"]], "graph_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_plan"]], "graph_planner (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_planner"]], "graph_search() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.graph_search"]], "graph_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_seeds"]], "graph_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.graph_time"]], "graph_trajopt_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.graph_trajopt_iters"]], "ik_fail_return (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.ik_fail_return"]], "ik_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_seeds"]], "ik_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.ik_solver"]], "ik_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.ik_time"]], "interpolated_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolated_plan"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_dt"]], "interpolation_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.interpolation_type"]], "js_trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.js_trajopt_solver"]], "kinematics (curobo.wrap.reacher.motion_gen.motiongen property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.motion_gen.motiongenconfig static method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.load_from_robot_config"]], "max_attempts (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.max_attempts"]], "motion_time (curobo.wrap.reacher.motion_gen.motiongenresult property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.motion_time"]], "need_graph_success (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.need_graph_success"]], "noisy_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.noisy_trajopt_seeds"]], "num_graph_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_ik_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.num_trajopt_seeds"]], "optimized_dt (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_dt"]], "optimized_plan (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.optimized_plan"]], "parallel_finetune (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.parallel_finetune"]], "partial_ik_iters (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.partial_ik_iters"]], "partial_ik_opt (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.partial_ik_opt"]], "path_buffer_last_tstep (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.path_buffer_last_tstep"]], "plan() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan"]], "plan_batch() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch"]], "plan_batch_env() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env"]], "plan_batch_env_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_env_goalset"]], "plan_batch_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_batch_goalset"]], "plan_goalset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_goalset"]], "plan_single() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single"]], "plan_single_js() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.plan_single_js"]], "pose_cost_metric (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.pose_cost_metric"]], "position_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.position_error"]], "process_camera_frames() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.process_camera_frames"]], "project_pose_to_goal_frame (curobo.wrap.reacher.motion_gen.motiongen property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.project_pose_to_goal_frame"]], "remove_running_pose_constraint() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.remove_running_pose_constraint"]], "reset() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.reset"]], "reset_seed() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.reset_seed"]], "robot_cfg (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.robot_cfg"]], "rotation_error (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.rotation_error"]], "run_finetune_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.run_finetune_trajopt"]], "solve_ik() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.solve_ik"]], "solve_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.solve_time"]], "solve_trajopt() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.solve_trajopt"]], "status (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.status"]], "store_debug_in_result (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.success"]], "success_ratio (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.success_ratio"]], "tensor_args (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.tensor_args"]], "timeout (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.timeout"]], "total_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.total_time"]], "trajopt_attempts (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_attempts"]], "trajopt_seeds (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_seeds"]], "trajopt_solver (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.trajopt_solver"]], "trajopt_time (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.trajopt_time"]], "update_batch_size() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.update_batch_size"]], "update_interpolation_type() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.update_interpolation_type"]], "update_locked_joints() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.update_locked_joints"]], "update_pose_cost_metric() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.update_pose_cost_metric"]], "update_world() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.update_world"]], "use_cuda_graph (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.use_cuda_graph"]], "use_nn_ik_seed (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_nn_ik_seed"]], "use_start_state_as_retract (curobo.wrap.reacher.motion_gen.motiongenplanconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenPlanConfig.use_start_state_as_retract"]], "used_graph (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.used_graph"]], "valid_query (curobo.wrap.reacher.motion_gen.motiongenresult attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenResult.valid_query"]], "warmup() (curobo.wrap.reacher.motion_gen.motiongen method)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.warmup"]], "world_coll_checker (curobo.wrap.reacher.motion_gen.motiongenconfig attribute)": [[97, "curobo.wrap.reacher.motion_gen.MotionGenConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.motion_gen.motiongen property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.world_collision"]], "world_model (curobo.wrap.reacher.motion_gen.motiongen property)": [[97, "curobo.wrap.reacher.motion_gen.MotionGen.world_model"]], "mpcsolver (class in curobo.wrap.reacher.mpc)": [[98, "curobo.wrap.reacher.mpc.MpcSolver"]], "mpcsolverconfig (class in curobo.wrap.reacher.mpc)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig"]], "_initialize_cuda_graph_step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver._initialize_cuda_graph_step"]], "_solve_from_solve_state() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver._solve_from_solve_state"]], "_step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver._step"]], "_update_batch_size() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver._update_batch_size"]], "curobo.wrap.reacher.mpc": [[98, "module-curobo.wrap.reacher.mpc"]], "enable_cspace_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.enable_cspace_cost"]], "enable_pose_cost() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.enable_pose_cost"]], "fn() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.fn"]], "get_active_js() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.get_active_js"]], "get_visual_rollouts() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.get_visual_rollouts"]], "joint_names (curobo.wrap.reacher.mpc.mpcsolver property)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.joint_names"]], "kinematics (curobo.wrap.reacher.mpc.mpcsolver property)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.mpc.mpcsolverconfig static method)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig.load_from_robot_config"]], "reset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.reset"]], "reset_cuda_graph() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.reset_cuda_graph"]], "rollout_fn (curobo.wrap.reacher.mpc.mpcsolver property)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.rollout_fn"]], "setup_solve_batch() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch"]], "setup_solve_batch_env() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env"]], "setup_solve_batch_env_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_env_goalset"]], "setup_solve_batch_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_batch_goalset"]], "setup_solve_goalset() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_goalset"]], "setup_solve_single() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.setup_solve_single"]], "solver (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig.solver"]], "step() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.step"]], "step_once() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.step_once"]], "tensor_args (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig.tensor_args"]], "update_goal() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.update_goal_buffer"]], "update_world() (curobo.wrap.reacher.mpc.mpcsolver method)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.update_world"]], "use_cuda_graph_full_step (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig.use_cuda_graph_full_step"]], "world_coll_checker (curobo.wrap.reacher.mpc.mpcsolverconfig attribute)": [[98, "curobo.wrap.reacher.mpc.MpcSolverConfig.world_coll_checker"]], "world_collision (curobo.wrap.reacher.mpc.mpcsolver property)": [[98, "curobo.wrap.reacher.mpc.MpcSolver.world_collision"]], "trajoptsolver (class in curobo.wrap.reacher.trajopt)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver"]], "trajoptsolverconfig (class in curobo.wrap.reacher.trajopt)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig"]], "trajresult (class in curobo.wrap.reacher.trajopt)": [[99, "curobo.wrap.reacher.trajopt.TrajResult"]], "_abc_impl (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult._abc_impl"]], "_get_result() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_result"]], "_get_seed_numbers() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver._get_seed_numbers"]], "attach_object_to_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.attach_object_to_robot"]], "batch_solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.batch_solve"]], "bias_node (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.bias_node"]], "calculate_trajectory_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.calculate_trajectory_dt"]], "compute_metrics() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.compute_metrics"]], "cspace_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.cspace_error"]], "cspace_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.cspace_threshold"]], "curobo.wrap.reacher.trajopt": [[99, "module-curobo.wrap.reacher.trajopt"]], "debug_info (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.debug_info"]], "detach_object_from_robot() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.detach_object_from_robot"]], "evaluate_interpolated_trajectory (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.evaluate_interpolated_trajectory"]], "fk() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.fk"]], "get_all_kinematics_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_kinematics_instances"]], "get_all_rollout_instances() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_all_rollout_instances"]], "get_bias_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_bias_seed"]], "get_full_js() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_full_js"]], "get_interpolated_trajectory() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_interpolated_trajectory"]], "get_linear_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_linear_seed"]], "get_seed_set() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seed_set"]], "get_seeds() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_seeds"]], "get_start_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.get_start_seed"]], "goal (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.goal"]], "goalset_index (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.goalset_index"]], "interpolate_rollout (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolate_rollout"]], "interpolated_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.interpolated_solution"]], "interpolation_dt (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_dt"]], "interpolation_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_steps"]], "interpolation_type (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.interpolation_type"]], "kinematics (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.kinematics"]], "load_from_robot_config() (curobo.wrap.reacher.trajopt.trajoptsolverconfig static method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.load_from_robot_config"]], "metrics (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.metrics"]], "num_seeds (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.num_seeds"]], "optimize_dt (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.optimize_dt"]], "optimized_dt (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.optimized_dt"]], "path_buffer_last_tstep (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.path_buffer_last_tstep"]], "position_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.position_error"]], "position_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.position_threshold"]], "raw_action (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.raw_action"]], "raw_solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.raw_solution"]], "reset_cuda_graph() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_cuda_graph"]], "reset_seed() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_seed"]], "reset_shape() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.reset_shape"]], "retract_config (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.retract_config"]], "robot_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.robot_config"]], "rollout_fn (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rollout_fn"]], "rotation_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.rotation_error"]], "rotation_threshold (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.rotation_threshold"]], "seed (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.seed"]], "seed_ratio (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.seed_ratio"]], "smooth_error (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.smooth_error"]], "smooth_label (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.smooth_label"]], "solution (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.solution"]], "solve() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve"]], "solve_any() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_any"]], "solve_batch() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch"]], "solve_batch_env() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env"]], "solve_batch_env_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_env_goalset"]], "solve_batch_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_batch_goalset"]], "solve_from_solve_state() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_from_solve_state"]], "solve_goalset() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_goalset"]], "solve_single() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solve_single"]], "solve_time (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.solve_time"]], "solver (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.solver"]], "solver_dt (curobo.wrap.reacher.trajopt.trajoptsolver property)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.solver_dt"]], "store_debug_in_result (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.store_debug_in_result"]], "success (curobo.wrap.reacher.trajopt.trajresult attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajResult.success"]], "sync_cuda_time (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.sync_cuda_time"]], "tensor_args (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.tensor_args"]], "traj_evaluator (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator"]], "traj_evaluator_config (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_evaluator_config"]], "traj_tsteps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.traj_tsteps"]], "trim_steps (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.trim_steps"]], "update_goal_buffer() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_goal_buffer"]], "update_pose_cost_metric() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_pose_cost_metric"]], "update_solver_dt() (curobo.wrap.reacher.trajopt.trajoptsolver method)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolver.update_solver_dt"]], "use_cspace_seed (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cspace_seed"]], "use_cuda_graph (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph"]], "use_cuda_graph_metrics (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.use_cuda_graph_metrics"]], "world_coll_checker (curobo.wrap.reacher.trajopt.trajoptsolverconfig attribute)": [[99, "curobo.wrap.reacher.trajopt.TrajOptSolverConfig.world_coll_checker"]], "batch (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.BATCH"]], "batch_env (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV"]], "batch_env_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_ENV_GOALSET"]], "batch_goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.BATCH_GOALSET"]], "goalset (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.GOALSET"]], "motiongensolverstate (class in curobo.wrap.reacher.types)": [[100, "curobo.wrap.reacher.types.MotionGenSolverState"]], "reachersolvestate (class in curobo.wrap.reacher.types)": [[100, "curobo.wrap.reacher.types.ReacherSolveState"]], "reachersolvetype (class in curobo.wrap.reacher.types)": [[100, "curobo.wrap.reacher.types.ReacherSolveType"]], "single (curobo.wrap.reacher.types.reachersolvetype attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveType.SINGLE"]], "batch_env (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.batch_env"]], "batch_mode (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.batch_mode"]], "batch_retract (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.batch_retract"]], "batch_size (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.batch_size"]], "clone() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.clone"]], "create_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.create_goal_buffer"]], "curobo.wrap.reacher.types": [[100, "module-curobo.wrap.reacher.types"]], "get_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.get_batch_size"]], "get_ik_batch_size() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.get_ik_batch_size"]], "get_padded_goalset() (in module curobo.wrap.reacher.types)": [[100, "curobo.wrap.reacher.types.get_padded_goalset"]], "ik_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[100, "curobo.wrap.reacher.types.MotionGenSolverState.ik_solve_state"]], "n_envs (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.n_envs"]], "n_goalset (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.n_goalset"]], "num_graph_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.num_graph_seeds"]], "num_ik_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.num_ik_seeds"]], "num_mpc_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.num_mpc_seeds"]], "num_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.num_seeds"]], "num_trajopt_seeds (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.num_trajopt_seeds"]], "solve_type (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[100, "curobo.wrap.reacher.types.MotionGenSolverState.solve_type"]], "solve_type (curobo.wrap.reacher.types.reachersolvestate attribute)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.solve_type"]], "trajopt_solve_state (curobo.wrap.reacher.types.motiongensolverstate attribute)": [[100, "curobo.wrap.reacher.types.MotionGenSolverState.trajopt_solve_state"]], "update_goal() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.update_goal"]], "update_goal_buffer() (curobo.wrap.reacher.types.reachersolvestate method)": [[100, "curobo.wrap.reacher.types.ReacherSolveState.update_goal_buffer"]], "wrapbase (class in curobo.wrap.wrap_base)": [[101, "curobo.wrap.wrap_base.WrapBase"]], "wrapconfig (class in curobo.wrap.wrap_base)": [[101, "curobo.wrap.wrap_base.WrapConfig"]], "wrapresult (class in curobo.wrap.wrap_base)": [[101, "curobo.wrap.wrap_base.WrapResult"]], "_get_rollout_instances_from_optimizers() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase._get_rollout_instances_from_optimizers"]], "action (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.action"]], "clone() (curobo.wrap.wrap_base.wrapresult method)": [[101, "curobo.wrap.wrap_base.WrapResult.clone"]], "compute_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[101, "curobo.wrap.wrap_base.WrapConfig.compute_metrics"]], "curobo.wrap.wrap_base": [[101, "module-curobo.wrap.wrap_base"]], "debug (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.debug"]], "get_all_rollout_instances() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.get_all_rollout_instances"]], "get_debug_cost() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.get_debug_cost"]], "get_debug_data() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.get_debug_data"]], "get_init_act() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.get_init_act"]], "get_metrics() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.get_metrics"]], "joint_names (curobo.wrap.wrap_base.wrapbase property)": [[101, "curobo.wrap.wrap_base.WrapBase.joint_names"]], "js_action (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.js_action"]], "metrics (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.metrics"]], "newton_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[101, "curobo.wrap.wrap_base.WrapBase.newton_optimizer"]], "optimize() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.optimize"]], "optimizers (curobo.wrap.wrap_base.wrapconfig attribute)": [[101, "curobo.wrap.wrap_base.WrapConfig.optimizers"]], "particle_optimizer (curobo.wrap.wrap_base.wrapbase property)": [[101, "curobo.wrap.wrap_base.WrapBase.particle_optimizer"]], "raw_action (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.raw_action"]], "reset() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.reset"]], "reset_cuda_graph() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.reset_cuda_graph"]], "reset_seed() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.reset_seed"]], "reset_shape() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.reset_shape"]], "rollout_fn (curobo.wrap.wrap_base.wrapbase property)": [[101, "curobo.wrap.wrap_base.WrapBase.rollout_fn"]], "safety_rollout (curobo.wrap.wrap_base.wrapconfig attribute)": [[101, "curobo.wrap.wrap_base.WrapConfig.safety_rollout"]], "solve() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.solve"]], "solve_time (curobo.wrap.wrap_base.wrapresult attribute)": [[101, "curobo.wrap.wrap_base.WrapResult.solve_time"]], "sync_cuda_time (curobo.wrap.wrap_base.wrapconfig attribute)": [[101, "curobo.wrap.wrap_base.WrapConfig.sync_cuda_time"]], "update_nproblems() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.update_nproblems"]], "update_params() (curobo.wrap.wrap_base.wrapbase method)": [[101, "curobo.wrap.wrap_base.WrapBase.update_params"]], "use_cuda_graph_metrics (curobo.wrap.wrap_base.wrapconfig attribute)": [[101, "curobo.wrap.wrap_base.WrapConfig.use_cuda_graph_metrics"]], "wrapmpc (class in curobo.wrap.wrap_mpc)": [[102, "curobo.wrap.wrap_mpc.WrapMpc"]], "_shift() (curobo.wrap.wrap_mpc.wrapmpc method)": [[102, "curobo.wrap.wrap_mpc.WrapMpc._shift"]], "curobo.wrap.wrap_mpc": [[102, "module-curobo.wrap.wrap_mpc"]], "get_rollouts() (curobo.wrap.wrap_mpc.wrapmpc method)": [[102, "curobo.wrap.wrap_mpc.WrapMpc.get_rollouts"]], "reset() (curobo.wrap.wrap_mpc.wrapmpc method)": [[102, "curobo.wrap.wrap_mpc.WrapMpc.reset"]], "solve() (curobo.wrap.wrap_mpc.wrapmpc method)": [[102, "curobo.wrap.wrap_mpc.WrapMpc.solve"]], "update_init_seed() (curobo.wrap.wrap_mpc.wrapmpc method)": [[102, "curobo.wrap.wrap_mpc.WrapMpc.update_init_seed"]]}})